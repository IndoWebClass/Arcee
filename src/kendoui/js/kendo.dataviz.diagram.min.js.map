{"version":3,"file":"kendo.dataviz.diagram.min.js","sources":["kendo.dataviz.diagram.js"],"sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function(f, define){\n    define('dataviz/diagram/utils',[ \"../../kendo.core\" ], f);\n})(function(){\n\n(function ($, undefined) {\n    var kendo = window.kendo,\n        diagram = kendo.dataviz.diagram = {},\n        deepExtend = kendo.deepExtend,\n        isArray = Array.isArray,\n        EPSILON = 1e-06;\n\n    /*-------------------Diverse utilities----------------------------*/\n    var Utils = {\n    };\n\n    deepExtend(Utils, {\n        isNearZero: function (num) {\n            return Math.abs(num) < EPSILON;\n        },\n        isDefined: function (obj) {\n            return typeof obj !== 'undefined';\n        },\n\n        isUndefined: function (obj) {\n            return (typeof obj === 'undefined') || obj === null;\n        },\n        /**\n         * Returns whether the given object is an object or a value.\n         */\n        isObject: function (obj) {\n            return obj === Object(obj);\n        },\n        /**\n         * Returns whether the object has a property with the given name.\n         */\n        has: function (obj, key) {\n            return Object.hasOwnProperty.call(obj, key);\n        },\n        /**\n         * Returns whether the given object is a string.\n         */\n        isString: function (obj) {\n            return Object.prototype.toString.call(obj) == '[object String]';\n        },\n        isBoolean: function (obj) {\n            return Object.prototype.toString.call(obj) == '[object Boolean]';\n        },\n        isType: function (obj, type) {\n            return Object.prototype.toString.call(obj) == '[object ' + type + ']';\n        },\n        /**\n         * Returns whether the given object is a number.\n         */\n        isNumber: function (obj) {\n            return !isNaN(parseFloat(obj)) && isFinite(obj);\n        },\n        /**\n         * Return whether the given object (array or dictionary).\n         */\n        isEmpty: function (obj) {\n            if (obj === null) {\n                return true;\n            }\n            if (isArray(obj) || Utils.isString(obj)) {\n                return obj.length === 0;\n            }\n            for (var key in obj) {\n                if (Utils.has(obj, key)) {\n                    return false;\n                }\n            }\n            return true;\n        },\n        simpleExtend: function(destination, source) {\n            if(!Utils.isObject(source)) {\n                return;\n            }\n\n            for(var name in source) {\n                destination[name] = source[name];\n            }\n        },\n        /**\n         * Returns an array of the specified size and with each entry set to the given value.\n         * @param size\n         * @param value\n         * @returns {Array}\n         */\n        initArray: function createIdArray(size, value) {\n            var array = [];\n            for (var i = 0; i < size; ++i) {\n                array[i] = value;\n            }\n            return array;\n        },\n        serializePoints: function (points) {\n            var res = [];\n            for (var i = 0; i < points.length; i++) {\n                var p = points[i];\n                res.push(p.x + \";\" + p.y);\n            }\n            return res.join(\";\");\n        },\n        deserializePoints: function (s) {\n            var v = s.split(\";\"), points = [];\n            if (v.length % 2 !== 0) {\n                throw \"Not an array of points.\";\n            }\n            for (var i = 0; i < v.length; i += 2) {\n                points.push(new diagram.Point(\n                    parseInt(v[i], 10),\n                    parseInt(v[i + 1], 10)\n                ));\n            }\n            return points;\n        },\n        /**\n         * Returns an integer within the given bounds.\n         * @param lower The inclusive lower bound.\n         * @param upper The exclusive upper bound.\n         * @returns {number}\n         */\n        randomInteger: function (lower, upper) {\n            return parseInt(Math.floor(Math.random() * upper) + lower, 10);\n        } ,\n        /*\n         Depth-first traversal of the given node.\n         */\n        DFT: function (el, func) {\n            func(el);\n            if (el.childNodes) {\n                for (var i = 0; i < el.childNodes.length; i++) {\n                    var item = el.childNodes[i];\n                    this.DFT(item, func);\n                }\n            }\n        },\n        /*\n         Returns the angle in degrees for the given matrix\n         */\n        getMatrixAngle: function (m) {\n            if (m === null || m.d === 0) {\n                return 0;\n            }\n            return Math.atan2(m.b, m.d) * 180 / Math.PI;\n        },\n\n        /*\n         Returns the scaling factors for the given matrix.\n         */\n        getMatrixScaling: function (m) {\n            var sX = Math.sqrt(m.a * m.a + m.c * m.c);\n            var sY = Math.sqrt(m.b * m.b + m.d * m.d);\n            return [sX, sY];\n        }\n\n    });\n\n    /**\n     * The Range defines an array of equally separated numbers.\n     * @param start The start-value of the Range.\n     * @param stop The end-value of the Range.\n     * @param step The separation between the values (default:1).\n     * @returns {Array}\n     */\n    function Range(start, stop, step) {\n        if (typeof start == 'undefined' || typeof stop == 'undefined') {\n            return [];\n        }\n        if (step && Utils.sign(stop - start) != Utils.sign(step)) {\n            throw \"The sign of the increment should allow to reach the stop-value.\";\n        }\n        step = step || 1;\n        start = start || 0;\n        stop = stop || start;\n        if ((stop - start) / step === Infinity) {\n            throw \"Infinite range defined.\";\n        }\n        var range = [], i = -1, j;\n\n        function rangeIntegerScale(x) {\n            var k = 1;\n            while (x * k % 1) {\n                k *= 10;\n            }\n            return k;\n        }\n\n        var k = rangeIntegerScale(Math.abs(step));\n        start *= k;\n        stop *= k;\n        step *= k;\n        if (start > stop && step > 0) {\n            step = -step;\n        }\n        if (step < 0) {\n            while ((j = start + step * ++i) >= stop) {\n                range.push(j / k);\n            }\n        }\n        else {\n            while ((j = start + step * ++i) <= stop) {\n                range.push(j / k);\n            }\n        }\n        return range;\n    }\n\n    /*-------------------Diverse math functions----------------------------*/\n\n    function findRadian(start, end) {\n        if (start == end) {\n            return 0;\n        }\n        var sngXComp = end.x - start.x,\n            sngYComp = start.y - end.y,\n            atan = Math.atan(sngXComp / sngYComp);\n        if (sngYComp >= 0) {\n            return sngXComp < 0 ? atan + (2 * Math.PI) : atan;\n        }\n        return atan + Math.PI;\n    }\n\n    Utils.sign = function(number) {\n        return number ? number < 0 ? -1 : 1 : 0;\n    };\n\n    Utils.findAngle = function(center, end) {\n        return findRadian(center, end) * 180 / Math.PI;\n    };\n\n    /*-------------------Array Helpers ----------------------------*/\n\n    Utils.forEach = function(arr, iterator, thisRef) {\n        for (var i = 0; i < arr.length; i++) {\n            iterator.call(thisRef, arr[i], i, arr);\n        }\n    };\n\n    Utils.any = function(arr, predicate) {\n        for (var i = 0; i < arr.length; ++i) {\n            if (predicate(arr[i])) {\n                return arr[i];\n            }\n        }\n        return null;\n    };\n\n    Utils.remove = function (arr, what) {\n        var ax;\n        while ((ax = Utils.indexOf(arr, what)) !== -1) {\n            arr.splice(ax, 1);\n        }\n        return arr;\n    };\n\n    Utils.contains = function (arr, obj) {\n        return Utils.indexOf(arr, obj) !== -1;\n    };\n\n    Utils.indexOf = function(arr, what) {\n        return $.inArray(what, arr);\n    };\n\n    Utils.fold = function (list, iterator, acc, context) {\n        var initial = arguments.length > 2;\n\n        for (var i = 0; i < list.length; i++) {\n            var value = list[i];\n            if (!initial) {\n                acc = value;\n                initial = true;\n            }\n            else {\n                acc = iterator.call(context, acc, value, i, list);\n            }\n        }\n\n        if (!initial) {\n            throw 'Reduce of empty array with no initial value';\n        }\n\n        return acc;\n    };\n\n    Utils.find = function (arr, iterator, context) {\n        var result;\n        Utils.any(arr, function (value, index, list) {\n            if (iterator.call(context, value, index, list)) {\n                result = value;\n                return true;\n            }\n            return false;\n        });\n        return result;\n    };\n\n    Utils.first = function (arr, constraint, context) {\n        if (arr.length === 0) {\n            return null;\n        }\n        if (Utils.isUndefined(constraint)) {\n            return arr[0];\n        }\n\n        return Utils.find(arr, constraint, context);\n    };\n\n    /**\n     * Inserts the given element at the specified position and returns the result.\n     */\n    Utils.insert = function (arr, element, position) {\n        arr.splice(position, 0, element);\n        return arr;\n    };\n\n    Utils.all = function (arr, iterator, context) {\n        var result = true;\n        var value;\n\n        for (var i = 0; i < arr.length; i++) {\n            value = arr[i];\n            result = result && iterator.call(context, value, i, arr);\n\n            if (!result) {\n                break;\n            }\n        }\n\n        return result;\n    };\n\n    Utils.clear = function (arr) {\n        arr.splice(0, arr.length);\n    };\n\n    /**\n     * Sort the arrays on the basis of the first one (considered as keys and the other array as values).\n     * @param a\n     * @param b\n     * @param sortfunc (optiona) sorting function for the values in the first array\n     */\n    Utils.bisort = function (a, b, sortfunc) {\n        if (Utils.isUndefined(a)) {\n            throw \"First array is not specified.\";\n        }\n        if (Utils.isUndefined(b)) {\n            throw \"Second array is not specified.\";\n        }\n        if (a.length != b.length) {\n            throw \"The two arrays should have equal length\";\n        }\n\n        var all = [], i;\n\n        for (i = 0; i < a.length; i++) {\n            all.push({ 'x': a[i], 'y': b[i] });\n        }\n        if (Utils.isUndefined(sortfunc)) {\n            all.sort(function (m, n) {\n                return m.x - n.x;\n            });\n        }\n        else {\n            all.sort(function (m, n) {\n                return sortfunc(m.x, n.x);\n            });\n        }\n\n        Utils.clear(a);\n        Utils.clear(b);\n\n        for (i = 0; i < all.length; i++) {\n            a.push(all[i].x);\n            b.push(all[i].y);\n        }\n    };\n\n    Utils.addRange = function (arr, range) {\n        arr.push.apply(arr, range);\n    };\n\n    var Easing = {\n        easeInOut: function (pos) {\n            return ((-Math.cos(pos * Math.PI) / 2) + 0.5);\n        }\n    };\n\n    /**\n     * An animation ticker driving an adapter which sets a particular\n     * property in function of the tick.\n     * @type {*}\n     */\n    var Ticker = kendo.Class.extend({\n        init: function () {\n            this.adapters = [];\n            this.target = 0;\n            this.tick = 0;\n            this.interval = 20;\n            this.duration = 800;\n            this.lastTime = null;\n            this.handlers = [];\n            var _this = this;\n            this.transition = Easing.easeInOut;\n            this.timerDelegate = function () {\n                _this.onTimerEvent();\n            };\n        },\n        addAdapter: function (a) {\n            this.adapters.push(a);\n        },\n        onComplete: function (handler) {\n            this.handlers.push(handler);\n        },\n        removeHandler: function (handler) {\n            this.handlers = $.grep(this.handlers, function (h) {\n                return h !== handler;\n            });\n        },\n        trigger: function () {\n            var _this = this;\n            if (this.handlers) {\n                Utils.forEach(this.handlers, function (h) {\n                    return h.call(_this.caller !== null ? _this.caller : _this);\n                });\n            }\n        },\n        onStep: function () {\n        },\n        seekTo: function (to) {\n            this.seekFromTo(this.tick, to);\n        },\n        seekFromTo: function (from, to) {\n            this.target = Math.max(0, Math.min(1, to));\n            this.tick = Math.max(0, Math.min(1, from));\n            this.lastTime = new Date().getTime();\n            if (!this.intervalId) {\n                this.intervalId = window.setInterval(this.timerDelegate, this.interval);\n            }\n        },\n        stop: function () {\n            if (this.intervalId) {\n                window.clearInterval(this.intervalId);\n                this.intervalId = null;\n\n                //this.trigger.call(this);\n                this.trigger();\n                // this.next();\n            }\n        },\n        play: function (origin) {\n            if (this.adapters.length === 0) {\n                return;\n            }\n            if (origin !== null) {\n                this.caller = origin;\n            }\n            this.initState();\n            this.seekFromTo(0, 1);\n        },\n        reverse: function () {\n            this.seekFromTo(1, 0);\n        },\n        initState: function () {\n            if (this.adapters.length === 0) {\n                return;\n            }\n            for (var i = 0; i < this.adapters.length; i++) {\n                this.adapters[i].initState();\n            }\n        },\n        propagate: function () {\n            var value = this.transition(this.tick);\n\n            for (var i = 0; i < this.adapters.length; i++) {\n                this.adapters[i].update(value);\n            }\n        },\n        onTimerEvent: function () {\n            var now = new Date().getTime();\n            var timePassed = now - this.lastTime;\n            this.lastTime = now;\n            var movement = (timePassed / this.duration) * (this.tick < this.target ? 1 : -1);\n            if (Math.abs(movement) >= Math.abs(this.tick - this.target)) {\n                this.tick = this.target;\n            } else {\n                this.tick += movement;\n            }\n\n            try {\n                this.propagate();\n            } finally {\n                this.onStep.call(this);\n                if (this.target == this.tick) {\n                    this.stop();\n                }\n            }\n        }\n    });\n\n    kendo.deepExtend(diagram, {\n        init: function (element) {\n            kendo.init(element, diagram.ui);\n        },\n\n        Utils: Utils,\n        Range: Range,\n        Ticker: Ticker\n    });\n})(window.kendo.jQuery);\n\n}, typeof define == 'function' && define.amd ? define : function(a1, a2, a3){ (a3 || a2)(); });\n\n(function(f, define){\n    define('dataviz/diagram/math',[ \"./utils\", \"../../kendo.dataviz.core\" ], f);\n})(function(){\n\n(function ($, undefined) {\n    // Imports ================================================================\n    var kendo = window.kendo,\n        diagram = kendo.dataviz.diagram,\n        Class = kendo.Class,\n        deepExtend = kendo.deepExtend,\n        dataviz = kendo.dataviz,\n        Utils = diagram.Utils,\n        Point = dataviz.Point2D,\n        isFunction = kendo.isFunction,\n        contains = Utils.contains,\n        map = $.map;\n\n    // Constants ==============================================================\n    var HITTESTAREA = 3,\n        EPSILON = 1e-06;\n\n    deepExtend(Point.fn, {\n        plus: function (p) {\n            return new Point(this.x + p.x, this.y + p.y);\n        },\n        minus: function (p) {\n            return new Point(this.x - p.x, this.y - p.y);\n        },\n        offset: function (value) {\n            return new Point(this.x - value, this.y - value);\n        },\n        times: function (s) {\n            return new Point(this.x * s, this.y * s);\n        },\n        normalize: function () {\n            if (this.length() === 0) {\n                return new Point();\n            }\n            return this.times(1 / this.length());\n        },\n        length: function () {\n            return Math.sqrt(this.x * this.x + this.y * this.y);\n        },\n        toString: function () {\n            return \"(\" + this.x + \",\" + this.y + \")\";\n        },\n        lengthSquared: function () {\n            return (this.x * this.x + this.y * this.y);\n        },\n        middleOf: function MiddleOf(p, q) {\n            return new Point(q.x - p.x, q.y - p.y).times(0.5).plus(p);\n        },\n        toPolar: function (useDegrees) {\n            var factor = 1;\n            if (useDegrees) {\n                factor = 180 / Math.PI;\n            }\n            var a = Math.atan2(Math.abs(this.y), Math.abs(this.x));\n            var halfpi = Math.PI / 2;\n            var len = this.length();\n            if (this.x === 0) {\n                // note that the angle goes down and not the usual mathematical convention\n\n                if (this.y === 0) {\n                    return new Polar(0, 0);\n                }\n                if (this.y > 0) {\n                    return new Polar(len, factor * halfpi);\n                }\n                if (this.y < 0) {\n                    return new Polar(len, factor * 3 * halfpi);\n                }\n            }\n            else if (this.x > 0) {\n                if (this.y === 0) {\n                    return new Polar(len, 0);\n                }\n                if (this.y > 0) {\n                    return new Polar(len, factor * a);\n                }\n                if (this.y < 0) {\n                    return new Polar(len, factor * (4 * halfpi - a));\n                }\n            }\n            else {\n                if (this.y === 0) {\n                    return new Polar(len, 2 * halfpi);\n                }\n                if (this.y > 0) {\n                    return new Polar(len, factor * (2 * halfpi - a));\n                }\n                if (this.y < 0) {\n                    return new Polar(len, factor * (2 * halfpi + a));\n                }\n            }\n        },\n        isOnLine: function (from, to) {\n            if (from.x > to.x) { // from must be the leftmost point\n                var temp = to;\n                to = from;\n                from = temp;\n            }\n            var r1 = new Rect(from.x, from.y).inflate(HITTESTAREA, HITTESTAREA),\n                r2 = new Rect(to.x, to.y).inflate(HITTESTAREA, HITTESTAREA), o1, u1;\n            if (r1.union(r2).contains(this)) {\n                if (from.x === to.x || from.y === to.y) {\n                    return true;\n                }\n                else if (from.y < to.y) {\n                    o1 = r1.x + (((r2.x - r1.x) * (this.y - (r1.y + r1.height))) / ((r2.y + r2.height) - (r1.y + r1.height)));\n                    u1 = (r1.x + r1.width) + ((((r2.x + r2.width) - (r1.x + r1.width)) * (this.y - r1.y)) / (r2.y - r1.y));\n                }\n                else {\n                    o1 = r1.x + (((r2.x - r1.x) * (this.y - r1.y)) / (r2.y - r1.y));\n                    u1 = (r1.x + r1.width) + ((((r2.x + r2.width) - (r1.x + r1.width)) * (this.y - (r1.y + r1.height))) / ((r2.y + r2.height) - (r1.y + r1.height)));\n                }\n                return (this.x > o1 && this.x < u1);\n            }\n            return false;\n        }\n    });\n\n    deepExtend(Point, {\n        parse: function (str) {\n            var tempStr = str.slice(1, str.length - 1),\n                xy = tempStr.split(\",\"),\n                x = parseInt(xy[0], 10),\n                y = parseInt(xy[1], 10);\n            if (!isNaN(x) && !isNaN(y)) {\n                return new Point(x, y);\n            }\n        }\n    });\n\n    /**\n     * Structure combining a Point with two additional points representing the handles or tangents attached to the first point.\n     * If the additional points are null or equal to the first point the path will be sharp.\n     * Left and right correspond to the direction of the underlying path.\n     */\n    var PathDefiner = Class.extend(\n        {\n            init: function (p, left, right) {\n                this.point = p;\n                this.left = left;\n                this.right = right;\n            }\n        }\n    );\n\n    /**\n     * Defines a rectangular region.\n     */\n    var Rect = Class.extend({\n        init: function (x, y, width, height) {\n            this.x = x || 0;\n            this.y = y || 0;\n            this.width = width || 0;\n            this.height = height || 0;\n        },\n        contains: function (point) {\n            return ((point.x >= this.x) && (point.x <= (this.x + this.width)) && (point.y >= this.y) && (point.y <= (this.y + this.height)));\n        },\n        inflate: function (dx, dy) {\n            if (dy === undefined) {\n                dy = dx;\n            }\n\n            this.x -= dx;\n            this.y -= dy;\n            this.width += 2 * dx + 1;\n            this.height += 2 * dy + 1;\n            return this;\n        },\n        offset: function (dx, dy) {\n            var x = dx, y = dy;\n            if (dx instanceof Point) {\n                x = dx.x;\n                y = dx.y;\n            }\n            this.x += x;\n            this.y += y;\n            return this;\n        },\n        union: function (r) {\n            var x1 = Math.min(this.x, r.x);\n            var y1 = Math.min(this.y, r.y);\n            var x2 = Math.max((this.x + this.width), (r.x + r.width));\n            var y2 = Math.max((this.y + this.height), (r.y + r.height));\n            return new Rect(x1, y1, x2 - x1, y2 - y1);\n        },\n        center: function () {\n            return new Point(this.x + this.width / 2, this.y + this.height / 2);\n        },\n        top: function () {\n            return new Point(this.x + this.width / 2, this.y);\n        },\n        right: function () {\n            return new Point(this.x + this.width, this.y + this.height / 2);\n        },\n        bottom: function () {\n            return new Point(this.x + this.width / 2, this.y + this.height);\n        },\n        left: function () {\n            return new Point(this.x, this.y + this.height / 2);\n        },\n        topLeft: function () {\n            return new Point(this.x, this.y);\n        },\n        topRight: function () {\n            return new Point(this.x + this.width, this.y);\n        },\n        bottomLeft: function () {\n            return new Point(this.x, this.y + this.height);\n        },\n        bottomRight: function () {\n            return new Point(this.x + this.width, this.y + this.height);\n        },\n        clone: function () {\n            return new Rect(this.x, this.y, this.width, this.height);\n        },\n        isEmpty: function () {\n            return !this.width && !this.height;\n        },\n        equals: function (rect) {\n            return this.x === rect.x && this.y === rect.y && this.width === rect.width && this.height === rect.height;\n        },\n        rotatedBounds: function (angle) {\n            var rect = this.clone(),\n                points = this.rotatedPoints(angle),\n                tl = points[0],\n                tr = points[1],\n                br = points[2],\n                bl = points[3];\n\n            rect.x = Math.min(br.x, tl.x, tr.x, bl.x);\n            rect.y = Math.min(br.y, tl.y, tr.y, bl.y);\n            rect.width = Math.max(br.x, tl.x, tr.x, bl.x) - rect.x;\n            rect.height = Math.max(br.y, tl.y, tr.y, bl.y) - rect.y;\n\n            return rect;\n        },\n        rotatedPoints: function (angle) {\n            var rect = this,\n                c = rect.center(),\n                br = rect.bottomRight().rotate(c, 360 - angle),\n                tl = rect.topLeft().rotate(c, 360 - angle),\n                tr = rect.topRight().rotate(c, 360 - angle),\n                bl = rect.bottomLeft().rotate(c, 360 - angle);\n\n            return [tl, tr, br, bl];\n        },\n        toString: function (delimiter) {\n            delimiter = delimiter || \" \";\n\n            return this.x + delimiter + this.y + delimiter + this.width + delimiter + this.height;\n        },\n        scale: function (scaleX, scaleY, staicPoint, adornerCenter, angle) {\n            var tl = this.topLeft();\n            var thisCenter = this.center();\n            tl.rotate(thisCenter, 360 - angle).rotate(adornerCenter, angle);\n\n            var delta = staicPoint.minus(tl);\n            var scaled = new Point(delta.x * scaleX, delta.y * scaleY);\n            var position = delta.minus(scaled);\n            tl = tl.plus(position);\n            tl.rotate(adornerCenter, 360 - angle).rotate(thisCenter, angle);\n\n            this.x = tl.x;\n            this.y = tl.y;\n\n            this.width *= scaleX;\n            this.height *= scaleY;\n        },\n\n        zoom: function(zoom) {\n            this.x *= zoom;\n            this.y *= zoom;\n            this.width *= zoom;\n            this.height *= zoom;\n            return this;\n        },\n\n        overlaps: function(rect) {\n            var bottomRight = this.bottomRight();\n            var rectBottomRight = rect.bottomRight();\n            var overlaps = !(bottomRight.x < rect.x || bottomRight.y < rect.y ||\n                rectBottomRight.x < this.x || rectBottomRight.y < this.y);\n            return overlaps;\n        }\n    });\n\n    var Size = Class.extend({\n        init: function (width, height) {\n            this.width = width;\n            this.height = height;\n        }\n    });\n\n    Size.prototype.Empty = new Size(0, 0);\n\n    Rect.toRect = function (rect) {\n        if (!(rect instanceof Rect)) {\n            rect = new Rect(rect.x, rect.y, rect.width, rect.height);\n        }\n\n        return rect;\n    };\n\n    Rect.empty = function () {\n        return new Rect(0, 0, 0, 0);\n    };\n\n    Rect.fromPoints = function (p, q) {\n        if (isNaN(p.x) || isNaN(p.y) || isNaN(q.x) || isNaN(q.y)) {\n            throw \"Some values are NaN.\";\n        }\n        return new Rect(Math.min(p.x, q.x), Math.min(p.y, q.y), Math.abs(p.x - q.x), Math.abs(p.y - q.y));\n    };\n\n    function isNearZero(num) {\n        return Math.abs(num) < EPSILON;\n    }\n\n    function intersectLine(start1, end1, start2, end2, isSegment) {\n        var tangensdiff = ((end1.x - start1.x) * (end2.y - start2.y)) - ((end1.y - start1.y) * (end2.x - start2.x));\n        if (isNearZero(tangensdiff)) {\n            //parallel lines\n            return;\n        }\n\n        var num1 = ((start1.y - start2.y) * (end2.x - start2.x)) - ((start1.x - start2.x) * (end2.y - start2.y));\n        var num2 = ((start1.y - start2.y) * (end1.x - start1.x)) - ((start1.x - start2.x) * (end1.y - start1.y));\n        var r = num1 / tangensdiff;\n        var s = num2 / tangensdiff;\n\n        if (isSegment && (r < 0 || r > 1 || s < 0 || s > 1)) {\n            //r < 0 => line 1 is below line 2\n            //r > 1 => line 1 is above line 2\n            //s < 0 => line 2 is below line 1\n            //s > 1 => line 2 is above line 1\n            return;\n        }\n\n        return new Point(start1.x + (r * (end1.x - start1.x)), start1.y + (r * (end1.y - start1.y)));\n    }\n\n    var Intersect = {\n        lines: function (start1, end1, start2, end2) {\n            return intersectLine(start1, end1, start2, end2);\n        },\n        segments: function (start1, end1, start2, end2) {\n            return intersectLine(start1, end1, start2, end2, true);\n        },\n        rectWithLine: function (rect, start, end) {\n            return  Intersect.segments(start, end, rect.topLeft(), rect.topRight()) ||\n                Intersect.segments(start, end, rect.topRight(), rect.bottomRight()) ||\n                Intersect.segments(start, end, rect.bottomLeft(), rect.bottomRight()) ||\n                Intersect.segments(start, end, rect.topLeft(), rect.bottomLeft());\n        },\n        rects: function (rect1, rect2, angle) {\n            var tl = rect2.topLeft(),\n                tr = rect2.topRight(),\n                bl = rect2.bottomLeft(),\n                br = rect2.bottomRight();\n            var center = rect2.center();\n            if (angle) {\n                tl = tl.rotate(center, angle);\n                tr = tr.rotate(center, angle);\n                bl = bl.rotate(center, angle);\n                br = br.rotate(center, angle);\n            }\n\n            var intersect = rect1.contains(tl) ||\n                rect1.contains(tr) ||\n                rect1.contains(bl) ||\n                rect1.contains(br) ||\n                Intersect.rectWithLine(rect1, tl, tr) ||\n                Intersect.rectWithLine(rect1, tl, bl) ||\n                Intersect.rectWithLine(rect1, tr, br) ||\n                Intersect.rectWithLine(rect1, bl, br);\n\n            if (!intersect) {//last possible case is rect1 to be completely within rect2\n                tl = rect1.topLeft();\n                tr = rect1.topRight();\n                bl = rect1.bottomLeft();\n                br = rect1.bottomRight();\n\n                if (angle) {\n                    var reverseAngle = 360 - angle;\n                    tl = tl.rotate(center, reverseAngle);\n                    tr = tr.rotate(center, reverseAngle);\n                    bl = bl.rotate(center, reverseAngle);\n                    br = br.rotate(center, reverseAngle);\n                }\n\n                intersect = rect2.contains(tl) ||\n                    rect2.contains(tr) ||\n                    rect2.contains(bl) ||\n                    rect2.contains(br);\n            }\n\n            return intersect;\n        }\n    };\n\n    /**\n     * Aligns two rectangles, where one is the container and the other is content.\n     */\n    var RectAlign = Class.extend({\n        init: function (container) {\n            this.container = Rect.toRect(container);\n        },\n\n        align: function (content, alignment) {\n            var alignValues = alignment.toLowerCase().split(\" \");\n\n            for (var i = 0; i < alignValues.length; i++) {\n                content = this._singleAlign(content, alignValues[i]);\n            }\n\n            return content;\n        },\n        _singleAlign: function (content, alignment) {\n            if (isFunction(this[alignment])) {\n                return this[alignment](content);\n            }\n            else {\n                return content;\n            }\n        },\n\n        left: function (content) {\n            return this._align(content, this._left);\n        },\n        center: function (content) {\n            return this._align(content, this._center);\n        },\n        right: function (content) {\n            return this._align(content, this._right);\n        },\n        stretch: function (content) {\n            return this._align(content, this._stretch);\n        },\n        top: function (content) {\n            return this._align(content, this._top);\n        },\n        middle: function (content) {\n            return this._align(content, this._middle);\n        },\n        bottom: function (content) {\n            return this._align(content, this._bottom);\n        },\n\n        _left: function (container, content) {\n            content.x = container.x;\n        },\n        _center: function (container, content) {\n            content.x = ((container.width - content.width) / 2) || 0;\n        },\n        _right: function (container, content) {\n            content.x = container.width - content.width;\n        },\n        _top: function (container, content) {\n            content.y = container.y;\n        },\n        _middle: function (container, content) {\n            content.y = ((container.height - content.height) / 2) || 0;\n        },\n        _bottom: function (container, content) {\n            content.y = container.height - content.height;\n        },\n        _stretch: function (container, content) {\n            content.x = 0;\n            content.y = 0;\n            content.height = container.height;\n            content.width = container.width;\n        },\n        _align: function (content, alignCalc) {\n            content = Rect.toRect(content);\n            alignCalc(this.container, content);\n\n            return content;\n        }\n    });\n\n    var Polar = Class.extend({\n        init: function (r, a) {\n            this.r = r;\n            this.angle = a;\n        }\n    });\n\n    /**\n     * SVG transformation matrix.\n     */\n    var Matrix = Class.extend({\n        init: function (a, b, c, d, e, f) {\n            this.a = a || 0;\n            this.b = b || 0;\n            this.c = c || 0;\n            this.d = d || 0;\n            this.e = e || 0;\n            this.f = f || 0;\n        },\n        plus: function (m) {\n            this.a += m.a;\n            this.b += m.b;\n            this.c += m.c;\n            this.d += m.d;\n            this.e += m.e;\n            this.f += m.f;\n        },\n        minus: function (m) {\n            this.a -= m.a;\n            this.b -= m.b;\n            this.c -= m.c;\n            this.d -= m.d;\n            this.e -= m.e;\n            this.f -= m.f;\n        },\n        times: function (m) {\n            return new Matrix(\n                this.a * m.a + this.c * m.b,\n                this.b * m.a + this.d * m.b,\n                this.a * m.c + this.c * m.d,\n                this.b * m.c + this.d * m.d,\n                this.a * m.e + this.c * m.f + this.e,\n                this.b * m.e + this.d * m.f + this.f\n            );\n        },\n        apply: function (p) {\n            return new Point(this.a * p.x + this.c * p.y + this.e, this.b * p.x + this.d * p.y + this.f);\n        },\n        applyRect: function (r) {\n            return Rect.fromPoints(this.apply(r.topLeft()), this.apply(r.bottomRight()));\n        },\n        toString: function () {\n            return \"matrix(\" + this.a + \" \" + this.b + \" \" + this.c + \" \" + this.d + \" \" + this.e + \" \" + this.f + \")\";\n        }\n    });\n\n    deepExtend(Matrix, {\n        fromSVGMatrix: function (vm) {\n            var m = new Matrix();\n            m.a = vm.a;\n            m.b = vm.b;\n            m.c = vm.c;\n            m.d = vm.d;\n            m.e = vm.e;\n            m.f = vm.f;\n            return m;\n        },\n        fromMatrixVector: function (v) {\n            var m = new Matrix();\n            m.a = v.a;\n            m.b = v.b;\n            m.c = v.c;\n            m.d = v.d;\n            m.e = v.e;\n            m.f = v.f;\n            return m;\n        },\n        fromList: function (v) {\n            if (v.length !== 6) {\n                throw \"The given list should consist of six elements.\";\n            }\n            var m = new Matrix();\n            m.a = v[0];\n            m.b = v[1];\n            m.c = v[2];\n            m.d = v[3];\n            m.e = v[4];\n            m.f = v[5];\n            return m;\n        },\n        translation: function (x, y) {\n            var m = new Matrix();\n            m.a = 1;\n            m.b = 0;\n            m.c = 0;\n            m.d = 1;\n            m.e = x;\n            m.f = y;\n            return m;\n        },\n        unit: function () {\n            return new Matrix(1, 0, 0, 1, 0, 0);\n        },\n        rotation: function (angle, x, y) {\n            var m = new Matrix();\n            m.a = Math.cos(angle * Math.PI / 180);\n            m.b = Math.sin(angle * Math.PI / 180);\n            m.c = -m.b;\n            m.d = m.a;\n            m.e = (x - x * m.a + y * m.b) || 0;\n            m.f = (y - y * m.a - x * m.b) || 0;\n            return m;\n        },\n        scaling: function (scaleX, scaleY) {\n            var m = new Matrix();\n            m.a = scaleX;\n            m.b = 0;\n            m.c = 0;\n            m.d = scaleY;\n            m.e = 0;\n            m.f = 0;\n            return m;\n        },\n        parse: function (v) {\n            var parts, nums;\n            if (v) {\n                v = v.trim();\n                // of the form \"matrix(...)\"\n                if (v.slice(0, 6).toLowerCase() === \"matrix\") {\n                    nums = v.slice(7, v.length - 1).trim();\n                    parts = nums.split(\",\");\n                    if (parts.length === 6) {\n                        return Matrix.fromList(map(parts, function (p) {\n                            return parseFloat(p);\n                        }));\n                    }\n                    parts = nums.split(\" \");\n                    if (parts.length === 6) {\n                        return Matrix.fromList(map(parts, function (p) {\n                            return parseFloat(p);\n                        }));\n                    }\n                }\n                // of the form \"(...)\"\n                if (v.slice(0, 1) === \"(\" && v.slice(v.length - 1) === \")\") {\n                    v = v.substr(1, v.length - 1);\n                }\n                if (v.indexOf(\",\") > 0) {\n                    parts = v.split(\",\");\n                    if (parts.length === 6) {\n                        return Matrix.fromList(map(parts, function (p) {\n                            return parseFloat(p);\n                        }));\n                    }\n                }\n                if (v.indexOf(\" \") > 0) {\n                    parts = v.split(\" \");\n                    if (parts.length === 6) {\n                        return Matrix.fromList(map(parts, function (p) {\n                            return parseFloat(p);\n                        }));\n                    }\n                }\n            }\n            return parts;\n        }\n    });\n\n    /**\n     * SVG transformation represented as a vector.\n     */\n    var MatrixVector = Class.extend({\n        init: function (a, b, c, d, e, f) {\n            this.a = a || 0;\n            this.b = b || 0;\n            this.c = c || 0;\n            this.d = d || 0;\n            this.e = e || 0;\n            this.f = f || 0;\n        },\n        fromMatrix: function FromMatrix(m) {\n            var v = new MatrixVector();\n            v.a = m.a;\n            v.b = m.b;\n            v.c = m.c;\n            v.d = m.d;\n            v.e = m.e;\n            v.f = m.f;\n            return v;\n        }\n    });\n\n    /**\n     * Returns a value with Gaussian (normal) distribution.\n     * @param mean The mean value of the distribution.\n     * @param deviation The deviation (spreading at half-height) of the distribution.\n     * @returns {number}\n     */\n    function normalVariable(mean, deviation) {\n        var x, y, r;\n        do {\n            x = Math.random() * 2 - 1;\n            y = Math.random() * 2 - 1;\n            r = x * x + y * y;\n        }\n        while (!r || r > 1);\n        return mean + deviation * x * Math.sqrt(-2 * Math.log(r) / r);\n    }\n\n    /**\n     * Returns a random identifier which can be used as an ID of objects, eventually augmented with a prefix.\n     * @returns {string}\n     */\n    function randomId(length) {\n        if (Utils.isUndefined(length)) {\n            length = 10;\n        }\n        // old version return Math.floor((1 + Math.random()) * 0x1000000).toString(16).substring(1);\n        var result = '';\n        var chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        for (var i = length; i > 0; --i) {\n            result += chars.charAt(Math.round(Math.random() * (chars.length - 1)));\n        }\n        return result;\n    }\n\n    var Geometry = {\n\n        /**\n         * Returns the squared distance to the line defined by the two given Points.\n         * @param p An arbitrary Point.\n         * @param a An endpoint of the line or segment.\n         * @param b The complementary endpoint of the line or segment.\n         */\n        _distanceToLineSquared: function (p, a, b) {\n            function d2(pt1, pt2) {\n                return (pt1.x - pt2.x) * (pt1.x - pt2.x) + (pt1.y - pt2.y) * (pt1.y - pt2.y);\n            }\n\n            if (a === b) { // returns the distance of p to a\n                return d2(p, a);\n            }\n\n            var vx = b.x - a.x,\n                vy = b.y - a.y,\n                dot = (p.x - a.x) * vx + (p.y - a.y) * vy;\n            if (dot < 0) {\n                return d2(a, p); // sits on side of a\n            }\n\n            dot = (b.x - p.x) * vx + (b.y - p.y) * vy;\n            if (dot < 0) {\n                return d2(b, p); // sits on side of b\n            }\n            // regular case, use crossproduct to get the sine out\n            dot = (b.x - p.x) * vy - (b.y - p.y) * vx;\n            return dot * dot / (vx * vx + vy * vy);\n        },\n\n        /**\n         * Returns the distance to the line defined by the two given Points.\n         * @param p An arbitrary Point.\n         * @param a An endpoint of the line or segment.\n         * @param b The complementary endpoint of the line or segment.\n         */\n        distanceToLine: function (p, a, b) {\n            return Math.sqrt(this._distanceToLineSquared(p, a, b));\n        },\n\n        /**\n         * Returns the distance of the given points to the polyline defined by the points.\n         * @param p An arbitrary point.\n         * @param points The points defining the polyline.\n         * @returns {Number}\n         */\n        distanceToPolyline: function (p, points) {\n            var minimum = Number.MAX_VALUE;\n            if (Utils.isUndefined(points) || points.length === 0) {\n                return Number.MAX_VALUE;\n            }\n            for (var s = 0; s < points.length - 1; s++) {\n                var p1 = points[s];\n                var p2 = points[s + 1];\n\n                var d = this._distanceToLineSquared(p, p1, p2);\n                if (d < minimum) {\n                    minimum = d;\n                }\n            }\n            return Math.sqrt(minimum);\n        }\n    };\n\n    /*---------------The HashTable structure--------------------------------*/\n\n    /**\n     * Represents a collection of key-value pairs that are organized based on the hash code of the key.\n     * _buckets[hashId] = {key: key, value:...}\n     * Important: do not use the standard Array access method, use the get/set methods instead.\n     * See http://en.wikipedia.org/wiki/Hash_table\n     */\n    var HashTable = kendo.Class.extend({\n        init: function () {\n            this._buckets = [];\n            this.length = 0;\n        },\n\n        /**\n         * Adds the literal object with the given key (of the form {key: key,....}).\n         */\n        add: function (key, value) {\n\n            var obj = this._createGetBucket(key);\n            if (Utils.isDefined(value)) {\n                obj.value = value;\n            }\n            return obj;\n        },\n\n        /**\n         * Gets the literal object with the given key.\n         */\n        get: function (key) {\n            if (this._bucketExists(key)) {\n                return this._createGetBucket(key);\n            }\n            return null;\n        },\n\n        /**\n         * Set the key-value pair.\n         * @param key The key of the entry.\n         * @param value The value to set. If the key already exists the value will be overwritten.\n         */\n        set: function (key, value) {\n            this.add(key, value);\n        },\n\n        /**\n         * Determines whether the HashTable contains a specific key.\n         */\n        containsKey: function (key) {\n            return this._bucketExists(key);\n        },\n\n        /**\n         * Removes the element with the specified key from the hashtable.\n         * Returns the removed bucket.\n         */\n        remove: function (key) {\n            if (this._bucketExists(key)) {\n                var hashId = this._hash(key);\n                delete this._buckets[hashId];\n                this.length--;\n                return key;\n            }\n        },\n\n        /**\n         * Foreach with an iterator working on the key-value pairs.\n         * @param func\n         */\n        forEach: function (func) {\n            var hashes = this._hashes();\n            for (var i = 0, len = hashes.length; i < len; i++) {\n                var hash = hashes[i];\n                var bucket = this._buckets[hash];\n                if (Utils.isUndefined(bucket)) {\n                    continue;\n                }\n                func(bucket);\n            }\n        },\n\n        /**\n         * Returns a (shallow) clone of the current HashTable.\n         * @returns {HashTable}\n         */\n        clone: function () {\n            var ht = new HashTable();\n            var hashes = this._hashes();\n            for (var i = 0, len = hashes.length; i < len; i++) {\n                var hash = hashes[i];\n                var bucket = this._buckets[hash];\n                if (Utils.isUndefined(bucket)) {\n                    continue;\n                }\n                ht.add(bucket.key, bucket.value);\n            }\n            return ht;\n        },\n\n        /**\n         * Returns the hashes of the buckets.\n         * @returns {Array}\n         * @private\n         */\n        _hashes: function () {\n            var hashes = [];\n            for (var hash in this._buckets) {\n                if (this._buckets.hasOwnProperty(hash)) {\n                    hashes.push(hash);\n                }\n            }\n            return hashes;\n        },\n\n        _bucketExists: function (key) {\n            var hashId = this._hash(key);\n            return Utils.isDefined(this._buckets[hashId]);\n        },\n\n        /**\n         * Returns-adds the createGetBucket with the given key. If not present it will\n         * be created and returned.\n         * A createGetBucket is a literal object of the form {key: key, ...}.\n         */\n        _createGetBucket: function (key) {\n            var hashId = this._hash(key);\n            var bucket = this._buckets[hashId];\n            if (Utils.isUndefined(bucket)) {\n                bucket = { key: key };\n                this._buckets[hashId] = bucket;\n                this.length++;\n            }\n            return bucket;\n        },\n\n        /**\n         * Hashing of the given key.\n         */\n        _hash: function (key) {\n            if (Utils.isNumber(key)) {\n                return key;\n            }\n            if (Utils.isString(key)) {\n                return this._hashString(key);\n            }\n            if (Utils.isObject(key)) {\n                return this._objectHashId(key);\n            }\n            throw \"Unsupported key type.\";\n        },\n\n        /**\n         * Hashing of a string.\n         */\n        _hashString: function (s) {\n            // see for example http://stackoverflow.com/questions/7616461/generate-a-hash-from-string-in-javascript-jquery\n            var result = 0;\n            if (s.length === 0) {\n                return result;\n            }\n            for (var i = 0; i < s.length; i++) {\n                var ch = s.charCodeAt(i);\n                result = ((result * 32) - result) + ch;\n            }\n            return result;\n        },\n\n        /**\n         * Returns the unique identifier for an object. This is automatically assigned and add on the object.\n         */\n        _objectHashId: function (key) {\n            var id = key._hashId;\n            if (Utils.isUndefined(id)) {\n                id = randomId();\n                key._hashId = id;\n            }\n            return id;\n        }\n    });\n\n    /*---------------The Dictionary structure--------------------------------*/\n\n    /**\n     * Represents a collection of key-value pairs.\n     * Important: do not use the standard Array access method, use the get/Set methods instead.\n     */\n    var Dictionary = kendo.Observable.extend({\n        /**\n         * Initializes a new instance of the Dictionary class.\n         * @param dictionary Loads the content of the given dictionary into this new one.\n         */\n        init: function (dictionary) {\n            var that = this;\n            kendo.Observable.fn.init.call(that);\n            this._hashTable = new HashTable();\n            this.length = 0;\n            if (Utils.isDefined(dictionary)) {\n                if (Array.isArray(dictionary)) {\n                    for (var i = 0; i < dictionary.length; i++) {\n                        this.add(dictionary[i]);\n                    }\n                } else {\n                    dictionary.forEach(function (k, v) {\n                        this.add(k, v);\n                    }, this);\n                }\n            }\n        },\n\n        /**\n         * Adds a key-value to the dictionary.\n         * If the key already exists this will assign the given value to the existing entry.\n         */\n        add: function (key, value) {\n            var entry = this._hashTable.get(key);\n            if (!entry) {\n                entry = this._hashTable.add(key);\n                this.length++;\n                this.trigger('changed');\n            }\n            entry.value = value;\n        },\n\n        /**\n         * Set the key-value pair.\n         * @param key The key of the entry.\n         * @param value The value to set. If the key already exists the value will be overwritten.\n         */\n        set: function (key, value) {\n            this.add(key, value);\n        },\n\n        /**\n         * Gets the value associated with the given key in the dictionary.\n         */\n        get: function (key) {\n            var entry = this._hashTable.get(key);\n            if (entry) {\n                return entry.value;\n            }\n            throw new Error(\"Cannot find key \" + key);\n        },\n\n        /**\n         * Returns whether the dictionary contains the given key.\n         */\n        containsKey: function (key) {\n            return this._hashTable.containsKey(key);\n        },\n\n        /**\n         * Removes the element with the specified key from the dictionary.\n         */\n        remove: function (key) {\n            if (this.containsKey(key)) {\n                this.trigger(\"changed\");\n                this.length--;\n                return this._hashTable.remove(key);\n            }\n        },\n\n        /**\n         * The functional gets the key and value as parameters.\n         */\n        forEach: function (func, thisRef) {\n            this._hashTable.forEach(function (entry) {\n                func.call(thisRef, entry.key, entry.value);\n            });\n        },\n\n        /**\n         * Same as forEach except that only the value is passed to the functional.\n         */\n        forEachValue: function (func, thisRef) {\n            this._hashTable.forEach(function (entry) {\n                func.call(thisRef, entry.value);\n            });\n        },\n\n        /**\n         * Calls a defined callback function for each key in the dictionary.\n         */\n        forEachKey: function (func, thisRef) {\n            this._hashTable.forEach(function (entry) {\n                func.call(thisRef, entry.key);\n            });\n        },\n\n        /**\n         * Gets an array with all keys in the dictionary.\n         */\n        keys: function () {\n            var keys = [];\n            this.forEachKey(function (key) {\n                keys.push(key);\n            });\n            return keys;\n        }\n    });\n\n    /*---------------Queue structure--------------------------------*/\n\n    var Queue = kendo.Class.extend({\n\n        init: function () {\n            this._tail = null;\n            this._head = null;\n            this.length = 0;\n        },\n\n        /**\n         * Enqueues an object to the end of the queue.\n         */\n        enqueue: function (value) {\n            var entry = { value: value, next: null };\n            if (!this._head) {\n                this._head = entry;\n                this._tail = this._head;\n            }\n            else {\n                this._tail.next = entry;\n                this._tail = this._tail.next;\n            }\n            this.length++;\n        },\n\n        /**\n         * Removes and returns the object at top of the queue.\n         */\n        dequeue: function () {\n            if (this.length < 1) {\n                throw new Error(\"The queue is empty.\");\n            }\n            var value = this._head.value;\n            this._head = this._head.next;\n            this.length--;\n            return value;\n        },\n\n        contains: function (item) {\n            var current = this._head;\n            while (current) {\n                if (current.value === item) {\n                    return true;\n                }\n                current = current.next;\n            }\n            return false;\n        }\n    });\n\n\n    /**\n     * While other data structures can have multiple times the same item a Set owns only\n     * once a particular item.\n     * @type {*}\n     */\n    var Set = kendo.Observable.extend({\n        init: function (resource) {\n            var that = this;\n            kendo.Observable.fn.init.call(that);\n            this._hashTable = new HashTable();\n            this.length = 0;\n            if (Utils.isDefined(resource)) {\n                if (resource instanceof HashTable) {\n                    resource.forEach(function (d) {\n                        this.add(d);\n                    });\n                }\n                else if (resource instanceof Dictionary) {\n                    resource.forEach(function (k, v) {\n                        this.add({key: k, value: v});\n                    }, this);\n                }\n            }\n        },\n\n        contains: function (item) {\n            return this._hashTable.containsKey(item);\n        },\n\n        add: function (item) {\n            var entry = this._hashTable.get(item);\n            if (!entry) {\n                this._hashTable.add(item, item);\n                this.length++;\n                this.trigger('changed');\n            }\n        },\n\n        get: function (item) {\n            if (this.contains(item)) {\n                return this._hashTable.get(item).value;\n            }\n            else {\n                return null;\n            }\n        },\n\n        /**\n         * Returns the hash of the item.\n         * @param item\n         * @returns {*}\n         */\n        hash: function (item) {\n            return this._hashTable._hash(item);\n        },\n\n        /**\n         * Removes the given item from the set. No exception is thrown if the item is not in the Set.\n         * @param item\n         */\n        remove: function (item) {\n            if (this.contains(item)) {\n                this._hashTable.remove(item);\n                this.length--;\n                this.trigger('changed');\n            }\n        },\n        /**\n         * Foreach with an iterator working on the key-value pairs.\n         * @param func\n         */\n        forEach: function (func, context) {\n            this._hashTable.forEach(function (kv) {\n                func(kv.value);\n            }, context);\n        },\n        toArray: function () {\n            var r = [];\n            this.forEach(function (d) {\n                r.push(d);\n            });\n            return r;\n        }\n    });\n\n    /*----------------Node-------------------------------*/\n\n    /**\n     * Defines the node (vertex) of a Graph.\n     */\n    var Node = kendo.Class.extend({\n\n        init: function (id, shape) {\n\n            /**\n             * Holds all the links incident with the current node.\n             * Do not use this property to manage the incoming links, use the appropriate add/remove methods instead.\n             */\n            this.links = [];\n\n            /**\n             * Holds the links from the current one to another Node .\n             * Do not use this property to manage the incoming links, use the appropriate add/remove methods instead.\n             */\n            this.outgoing = [];\n\n            /**\n             * Holds the links from another Node to the current one.\n             * Do not use this property to manage the incoming links, use the appropriate add/remove methods instead.\n             */\n            this.incoming = [];\n\n            /**\n             * Holds the weight of this Node.\n             */\n            this.weight = 1;\n\n            if (Utils.isDefined(id)) {\n                this.id = id;\n            }\n            else {\n                this.id = randomId();\n            }\n            if (Utils.isDefined(shape)) {\n                this.associatedShape = shape;\n                // transfer the shape's bounds to the runtime props\n                var b = shape.bounds();\n                this.width = b.width;\n                this.height = b.height;\n                this.x = b.x;\n                this.y = b.y;\n            }\n            else {\n                this.associatedShape = null;\n            }\n            /**\n             * The payload of the node.\n             * @type {null}\n             */\n            this.data = null;\n            this.type = \"Node\";\n            this.shortForm = \"Node '\" + this.id + \"'\";\n            /**\n             * Whether this is an injected node during the analysis or layout process.\n             * @type {boolean}\n             */\n            this.isVirtual = false;\n        },\n\n        /**\n         * Returns whether this node has no links attached.\n         */\n        isIsolated: function () {\n            return Utils.isEmpty(this.links);\n        },\n\n        /**\n         * Gets or sets the bounding rectangle of this node.\n         * This should be considered as runtime data, the property is not hotlinked to a SVG item.\n         */\n        bounds: function (r) {\n            if (!Utils.isDefined(r)) {\n                return new diagram.Rect(this.x, this.y, this.width, this.height);\n            }\n\n            this.x = r.x;\n            this.y = r.y;\n            this.width = r.width;\n            this.height = r.height;\n        },\n\n        /**\n         * Returns whether there is at least one link with the given (complementary) node. This can be either an\n         * incoming or outgoing link.\n         */\n        isLinkedTo: function (node) {\n            var that = this;\n            return Utils.any(that.links, function (link) {\n                return link.getComplement(that) === node;\n            });\n        },\n\n        /**\n         * Gets the children of this node, defined as the adjacent nodes with a link from this node to the adjacent one.\n         * @returns {Array}\n         */\n        getChildren: function () {\n            if (this.outgoing.length === 0) {\n                return [];\n            }\n            var children = [];\n            for (var i = 0, len = this.outgoing.length; i < len; i++) {\n                var link = this.outgoing[i];\n                children.push(link.getComplement(this));\n            }\n            return children;\n        },\n\n        /**\n         * Gets the parents of this node, defined as the adjacent nodes with a link from the adjacent node to this one.\n         * @returns {Array}\n         */\n        getParents: function () {\n            if (this.incoming.length === 0) {\n                return [];\n            }\n            var parents = [];\n            for (var i = 0, len = this.incoming.length; i < len; i++) {\n                var link = this.incoming[i];\n                parents.push(link.getComplement(this));\n            }\n            return parents;\n        },\n\n        /**\n         * Returns a clone of the Node. Note that the identifier is not cloned since it's a different Node instance.\n         * @returns {Node}\n         */\n        clone: function () {\n            var copy = new Node();\n            if (Utils.isDefined(this.weight)) {\n                copy.weight = this.weight;\n            }\n            if (Utils.isDefined(this.balance)) {\n                copy.balance = this.balance;\n            }\n            if (Utils.isDefined(this.owner)) {\n                copy.owner = this.owner;\n            }\n            copy.associatedShape = this.associatedShape;\n            copy.x = this.x;\n            copy.y = this.y;\n            copy.width = this.width;\n            copy.height = this.height;\n            return copy;\n        },\n\n        /**\n         * Returns whether there is a link from the current node to the given node.\n         */\n        adjacentTo: function (node) {\n            return this.isLinkedTo(node) !== null;\n        },\n\n        /**\n         * Removes the given link from the link collection this node owns.\n         * @param link\n         */\n        removeLink: function (link) {\n            if (link.source === this) {\n                Utils.remove(this.links, link);\n                Utils.remove(this.outgoing, link);\n                link.source = null;\n            }\n\n            if (link.target === this) {\n                Utils.remove(this.links, link);\n                Utils.remove(this.incoming, link);\n                link.target = null;\n            }\n        },\n\n        /**\n         * Returns whether there is a (outgoing) link from the current node to the given one.\n         */\n        hasLinkTo: function (node) {\n            return Utils.any(this.outgoing, function (link) {\n                return link.target === node;\n            });\n        },\n\n        /**\n         * Returns the degree of this node, i.e. the sum of incoming and outgoing links.\n         */\n        degree: function () {\n            return this.links.length;\n        },\n\n        /**\n         * Returns whether this node is either the source or the target of the given link.\n         */\n        incidentWith: function (link) {\n            return contains(this.links, link);\n        },\n\n        /**\n         * Returns the links between this node and the given one.\n         */\n        getLinksWith: function (node) {\n            return Utils.all(this.links, function (link) {\n                return link.getComplement(this) === node;\n            }, this);\n        },\n\n        /**\n         * Returns the nodes (either parent or child) which are linked to the current one.\n         */\n        getNeighbors: function () {\n            var neighbors = [];\n            Utils.forEach(this.incoming, function (e) {\n                neighbors.push(e.getComplement(this));\n            }, this);\n            Utils.forEach(this.outgoing, function (e) {\n                neighbors.push(e.getComplement(this));\n            }, this);\n            return neighbors;\n        }\n    });\n\n    /**\n     * Defines a directed link (edge, connection) of a Graph.\n     */\n    var Link = kendo.Class.extend({\n\n        init: function (source, target, id, connection) {\n            if (Utils.isUndefined(source)) {\n                throw \"The source of the new link is not set.\";\n            }\n            if (Utils.isUndefined(target)) {\n                throw \"The target of the new link is not set.\";\n            }\n            var sourceFound, targetFound;\n            if (Utils.isString(source)) {\n                sourceFound = new Node(source);\n            }\n            else {\n                sourceFound = source;\n            }\n            if (Utils.isString(target)) {\n                targetFound = new Node(target);\n            }\n            else {\n                targetFound = target;\n            }\n\n            this.source = sourceFound;\n            this.target = targetFound;\n            this.source.links.push(this);\n            this.target.links.push(this);\n            this.source.outgoing.push(this);\n            this.target.incoming.push(this);\n            if (Utils.isDefined(id)) {\n                this.id = id;\n            }\n            else {\n                this.id = randomId();\n            }\n            if (Utils.isDefined(connection)) {\n                this.associatedConnection = connection;\n            }\n            else {\n                this.associatedConnection = null;\n            }\n            this.type = \"Link\";\n            this.shortForm = \"Link '\" + this.source.id + \"->\" + this.target.id + \"'\";\n        },\n\n        /**\n         * Returns the complementary node of the given one, if any.\n         */\n        getComplement: function (node) {\n            if (this.source !== node && this.target !== node) {\n                throw \"The given node is not incident with this link.\";\n            }\n            return this.source === node ? this.target : this.source;\n        },\n\n        /**\n         * Returns the overlap of the current link with the given one, if any.\n         */\n        getCommonNode: function (link) {\n            if (this.source === link.source || this.source === link.target) {\n                return this.source;\n            }\n            if (this.target === link.source || this.target === link.target) {\n                return this.target;\n            }\n            return null;\n        },\n\n        /**\n         * Returns whether the current link is bridging the given nodes.\n         */\n        isBridging: function (v1, v2) {\n            return this.source === v1 && this.target === v2 || this.source === v2 && this.target === v1;\n        },\n\n        /**\n         * Returns the source and target of this link as a tuple.\n         */\n        getNodes: function () {\n            return [this.source, this.target];\n        },\n\n        /**\n         * Returns whether the given node is either the source or the target of the current link.\n         */\n        incidentWith: function (node) {\n            return this.source === node || this.target === node;\n        },\n\n        /**\n         * Returns whether the given link is a continuation of the current one. This can be both\n         * via an incoming or outgoing link.\n         */\n        adjacentTo: function (link) {\n            return contains(this.source.links, link) || contains(this.target.links, link);\n        },\n\n        /**\n         * Changes the source-node of this link.\n         */\n        changeSource: function (node) {\n            Utils.remove(this.source.links, this);\n            Utils.remove(this.source.outgoing, this);\n\n            node.links.push(this);\n            node.outgoing.push(this);\n\n            this.source = node;\n        },\n\n        /**\n         * Changes the target-node of this link.\n         * @param node\n         */\n        changeTarget: function (node) {\n            Utils.remove(this.target.links, this);\n            Utils.remove(this.target.incoming, this);\n\n            node.links.push(this);\n            node.incoming.push(this);\n\n            this.target = node;\n        },\n\n        /**\n         * Changes both the source and the target nodes of this link.\n         */\n        changesNodes: function (v, w) {\n            if (this.source === v) {\n                this.changeSource(w);\n            }\n            else if (this.target === v) {\n                this.changeTarget(w);\n            }\n        },\n\n        /**\n         * Reverses the direction of this link.\n         */\n        reverse: function () {\n            var oldSource = this.source;\n            var oldTarget = this.target;\n\n            this.source = oldTarget;\n            Utils.remove(oldSource.outgoing, this);\n            this.source.outgoing.push(this);\n\n            this.target = oldSource;\n            Utils.remove(oldTarget.incoming, this);\n            this.target.incoming.push(this);\n            return this;\n        },\n\n        /**\n         * Ensures that the given target defines the endpoint of this link.\n         */\n        directTo: function (target) {\n            if (this.source !== target && this.target !== target) {\n                throw \"The given node is not incident with this link.\";\n            }\n            if (this.target !== target) {\n                this.reverse();\n            }\n        },\n\n        /**\n         * Returns a reversed clone of this link.\n         */\n        createReverseEdge: function () {\n            var r = this.clone();\n            r.reverse();\n            r.reversed = true;\n            return r;\n        },\n\n        /**\n         * Returns a clone of this link.\n         */\n        clone: function () {\n            var clone = new Link(this.source, this.target);\n            return clone;\n        }\n    });\n\n    /*--------------Graph structure---------------------------------*/\n    /**\n     * Defines a directed graph structure.\n     * Note that the incidence structure resides in the nodes through the incoming and outgoing links collection, rahter than\n     * inside the Graph.\n     */\n    var Graph = kendo.Class.extend({\n        init: function (idOrDiagram) {\n            /**\n             * The links or edge collection of this Graph.\n             * @type {Array}\n             */\n            this.links = [];\n            /**\n             * The node or vertex collection of this Graph.\n             * @type {Array}\n             */\n            this.nodes = [];\n\n            this._nodeMap = new Dictionary();\n            /**\n             * The optional reference to the Diagram on which this Graph is based.\n             * @type {null}\n             */\n            this.diagram = null;\n\n            /**\n             * The root of this Graph. If not set explicitly the first Node with zero incoming links will be taken.\n             * @type {null}\n             * @private\n             */\n            this._root = null;\n            if (Utils.isDefined(idOrDiagram)) {\n                if (Utils.isString(idOrDiagram)) {\n                    this.id = idOrDiagram;\n                }\n                else {\n                    this.diagram = idOrDiagram;\n                    this.id = idOrDiagram.id;\n                }\n            }\n            else {\n                this.id = randomId();\n            }\n\n            /**\n             * The bounds of this graph if the nodes have spatial extension defined.\n             * @type {Rect}\n             */\n            this.bounds = new Rect();\n            // keeps track whether the children & parents have been created\n            this._hasCachedRelationships = false;\n            this.type = \"Graph\";\n        },\n        /**\n         * Caches the relational information of parents and children in the 'parents' and 'children'\n         * properties.\n         * @param forceRebuild If set to true the relational info will be rebuild even if already present.\n         */\n        cacheRelationships: function (forceRebuild) {\n            if (Utils.isUndefined(forceRebuild)) {\n                forceRebuild = false;\n            }\n            if (this._hasCachedRelationships && !forceRebuild) {\n                return;\n            }\n            for (var i = 0, len = this.nodes.length; i < len; i++) {\n                var node = this.nodes[i];\n                node.children = this.getChildren(node);\n                node.parents = this.getParents(node);\n            }\n            this._hasCachedRelationships = true;\n        },\n\n        /**\n         * Assigns tree-levels to the nodes assuming this is a tree graph.\n         * If not connected or not a tree the process will succeed but\n         * will have little meaning.\n         * @param startNode The node from where the level numbering starts, usually the root of the tree.\n         * @param visited The collection of visited nodes.\n         * @param offset The offset or starting counter of the level info.\n         */\n        assignLevels: function (startNode, offset, visited) {\n            if (!startNode) {\n                throw \"Start node not specified.\";\n            }\n            if (Utils.isUndefined(offset)) {\n                offset = 0;\n            }\n            // if not done before, cache the parents and children\n            this.cacheRelationships();\n            if (Utils.isUndefined(visited)) {\n                visited = new Dictionary();\n                Utils.forEach(this.nodes, function (n) {\n                    visited.add(n, false);\n                });\n            }\n            visited.set(startNode, true);\n            startNode.level = offset;\n            var children = startNode.children;\n            for (var i = 0, len = children.length; i < len; i++) {\n                var child = children[i];\n                if (!child || visited.get(child)) {\n                    continue;\n                }\n                this.assignLevels(child, offset + 1, visited);\n            }\n        },\n\n        /**\n         * Gets or set the root of this graph.\n         * If not set explicitly the first Node with zero incoming links will be taken.\n         * @param value\n         * @returns {*}\n         */\n        root: function (value) {\n            if (Utils.isUndefined(value)) {\n                if (!this._root) {\n                    // TODO: better to use the longest path for the most probable root?\n                    var found = Utils.first(this.nodes, function (n) {\n                        return n.incoming.length === 0;\n                    });\n                    if (found) {\n                        return found;\n                    }\n                    return Utils.first(this.nodes);\n                }\n                else {\n                    return this._root;\n                }\n            }\n            else {\n                this._root = value;\n            }\n        },\n\n        /**\n         * Returns the connected components of this graph.\n         * Note that the returned graphs are made up of the nodes and links of this graph, i.e. a pointer to the items of this graph.\n         * If you alter the items of the components you'll alter the original graph and vice versa.\n         * @returns {Array}\n         */\n        getConnectedComponents: function () {\n            this.componentIndex = 0;\n            this.setItemIndices();\n            var componentId = Utils.initArray(this.nodes.length, -1);\n\n            for (var v = 0; v < this.nodes.length; v++) {\n                if (componentId[v] === -1) {\n                    this._collectConnectedNodes(componentId, v);\n                    this.componentIndex++;\n                }\n            }\n\n            var components = [], i;\n            for (i = 0; i < this.componentIndex; ++i) {\n                components[i] = new Graph();\n            }\n            for (i = 0; i < componentId.length; ++i) {\n                var graph = components[componentId[i]];\n                graph.addNodeAndOutgoings(this.nodes[i]);\n            }\n            // sorting the components in decreasing order of node count\n            components.sort(function (a, b) {\n                return b.nodes.length - a.nodes.length;\n            });\n            return components;\n        },\n\n        _collectConnectedNodes: function (setIds, nodeIndex) {\n            setIds[nodeIndex] = this.componentIndex; // part of the current component\n            var node = this.nodes[nodeIndex];\n            Utils.forEach(node.links,\n                function (link) {\n                    var next = link.getComplement(node);\n                    var nextId = next.index;\n                    if (setIds[nextId] === -1) {\n                        this._collectConnectedNodes(setIds, nextId);\n                    }\n                }, this);\n        },\n\n        /**\n         * Calculates the bounds of this Graph if the Nodes have spatial dimensions defined.\n         * @returns {Rect}\n         */\n        calcBounds: function () {\n            if (this.isEmpty()) {\n                this.bounds = new Rect();\n                return this.bounds;\n            }\n            var b = null;\n            for (var i = 0, len = this.nodes.length; i < len; i++) {\n                var node = this.nodes[i];\n                if (!b) {\n                    b = node.bounds();\n                }\n                else {\n                    b = b.union(node.bounds());\n                }\n            }\n            this.bounds = b;\n            return this.bounds;\n        },\n\n        /**\n         * Creates a spanning tree for the current graph.\n         * Important: this will not return a spanning forest if the graph is disconnected.\n         * Prim's algorithm  finds a minimum-cost spanning tree of an edge-weighted, connected, undirected graph;\n         * see http://en.wikipedia.org/wiki/Prim%27s_algorithm .\n         * @param root The root of the spanning tree.\n         * @returns {Graph}\n         */\n        getSpanningTree: function (root) {\n            var tree = new Graph();\n            var map = new Dictionary(), source, target;\n            tree.root = root.clone();\n            tree.root.level = 0;\n            tree.root.id = root.id;\n            map.add(root, tree.root);\n            root.level = 0;\n\n            var visited = [];\n            var remaining = [];\n            tree._addNode(tree.root);\n            visited.push(root);\n            remaining.push(root);\n\n            var levelCount = 1;\n            while (remaining.length > 0) {\n                var next = remaining.pop();\n                for (var ni = 0; ni < next.links.length; ni++) {\n                    var link = next.links[ni];\n                    var cn = link.getComplement(next);\n                    if (contains(visited, cn)) {\n                        continue;\n                    }\n\n                    cn.level = next.level + 1;\n                    if (levelCount < cn.level + 1) {\n                        levelCount = cn.level + 1;\n                    }\n                    if (!contains(remaining, cn)) {\n                        remaining.push(cn);\n                    }\n                    if (!contains(visited, cn)) {\n                        visited.push(cn);\n                    }\n                    if (map.containsKey(next)) {\n                        source = map.get(next);\n                    }\n                    else {\n                        source = next.clone();\n                        source.level = next.level;\n                        source.id = next.id;\n                        map.add(next, source);\n                    }\n                    if (map.containsKey(cn)) {\n                        target = map.get(cn);\n                    }\n                    else {\n                        target = cn.clone();\n                        target.level = cn.level;\n                        target.id = cn.id;\n                        map.add(cn, target);\n                    }\n                    var newLink = new Link(source, target);\n                    tree.addLink(newLink);\n                }\n\n            }\n\n            var treeLevels = [];\n            for (var i = 0; i < levelCount; i++) {\n                treeLevels.push([]);\n            }\n\n            Utils.forEach(tree.nodes, function (node) {\n                treeLevels[node.level].push(node);\n            });\n\n            tree.treeLevels = treeLevels;\n            tree.cacheRelationships();\n            return tree;\n        },\n\n        /**\n         * Returns a random node in this graph.\n         * @param excludedNodes The collection of nodes which should not be considered.\n         * @param incidenceLessThan The maximum degree or incidence the random node should have.\n         * @returns {*}\n         */\n        takeRandomNode: function (excludedNodes, incidenceLessThan) {\n            if (Utils.isUndefined(excludedNodes)) {\n                excludedNodes = [];\n            }\n            if (Utils.isUndefined(incidenceLessThan)) {\n                incidenceLessThan = 4;\n            }\n            if (this.nodes.length === 0) {\n                return null;\n            }\n            if (this.nodes.length === 1) {\n                return contains(excludedNodes, this.nodes[0]) ? null : this.nodes[0];\n            }\n            var pool = $.grep(this.nodes, function (node) {\n                return !contains(excludedNodes, node) && node.degree() <= incidenceLessThan;\n            });\n            if (Utils.isEmpty(pool)) {\n                return null;\n            }\n            return pool[Utils.randomInteger(0, pool.length)];\n        },\n\n        /**\n         * Returns whether this is an empty graph.\n         */\n        isEmpty: function () {\n            return Utils.isEmpty(this.nodes);\n        },\n\n        /**\n         * Checks whether the endpoints of the links are all in the nodes collection.\n         */\n        isHealthy: function () {\n            return Utils.all(this.links, function (link) {\n                return contains(this.nodes, link.source) && contains(this.nodes, link.target);\n            }, this);\n        },\n\n        /**\n         * Gets the parents of this node, defined as the adjacent nodes with a link from the adjacent node to this one.\n         * @returns {Array}\n         */\n        getParents: function (n) {\n            if (!this.hasNode(n)) {\n                throw \"The given node is not part of this graph.\";\n            }\n            return n.getParents();\n        },\n\n        /**\n         * Gets the children of this node, defined as the adjacent nodes with a link from this node to the adjacent one.\n         * @returns {Array}\n         */\n        getChildren: function (n) {\n            if (!this.hasNode(n)) {\n                throw \"The given node is not part of this graph.\";\n            }\n            return n.getChildren();\n        },\n\n        /**\n         * Adds a new link to the graph between the given nodes.\n         */\n        addLink: function (sourceOrLink, target, owner) {\n\n            if (Utils.isUndefined(sourceOrLink)) {\n                throw \"The source of the link is not defined.\";\n            }\n            if (Utils.isUndefined(target)) {\n                // can only be undefined if the first one is a Link\n                if (Utils.isDefined(sourceOrLink.type) && sourceOrLink.type === \"Link\") {\n                    this.addExistingLink(sourceOrLink);\n                    return;\n                }\n                else {\n                    throw \"The target of the link is not defined.\";\n                }\n            }\n\n            var foundSource = this.getNode(sourceOrLink);\n            if (Utils.isUndefined(foundSource)) {\n                foundSource = this.addNode(sourceOrLink);\n            }\n            var foundTarget = this.getNode(target);\n            if (Utils.isUndefined(foundTarget)) {\n                foundTarget = this.addNode(target);\n            }\n\n            var newLink = new Link(foundSource, foundTarget);\n\n            if (Utils.isDefined(owner)) {\n                newLink.owner = owner;\n            }\n\n            /*newLink.source.outgoing.push(newLink);\n             newLink.source.links.push(newLink);\n             newLink.target.incoming.push(newLink);\n             newLink.target.links.push(newLink);*/\n\n            this.links.push(newLink);\n\n            return newLink;\n        },\n\n        /**\n         * Removes all the links in this graph.\n         */\n        removeAllLinks: function () {\n            while (this.links.length > 0) {\n                var link = this.links[0];\n                this.removeLink(link);\n            }\n        },\n\n        /**\n         * Adds the given link to the current graph.\n         */\n        addExistingLink: function (link) {\n\n            if (this.hasLink(link)) {\n                return;\n            }\n            this.links.push(link);\n            if (this.hasNode(link.source.id)) {\n                // priority to the existing node with the id even if other props are different\n                var s = this.getNode(link.source.id);\n                link.changeSource(s);\n            }\n            else {\n                this.addNode(link.source);\n            }\n\n            if (this.hasNode(link.target.id)) {\n                var t = this.getNode(link.target.id);\n                link.changeTarget(t);\n            }\n            else {\n                this.addNode(link.target);\n            }\n\n            /*  if (!link.source.outgoing.contains(link)) {\n             link.source.outgoing.push(link);\n             }\n             if (!link.source.links.contains(link)) {\n             link.source.links.push(link);\n             }\n             if (!link.target.incoming.contains(link)) {\n             link.target.incoming.push(link);\n             }\n             if (!link.target.links.contains(link)) {\n             link.target.links.push(link);\n             }*/\n        },\n\n        /**\n         * Returns whether the given identifier or Link is part of this graph.\n         * @param linkOrId An identifier or a Link object.\n         * @returns {*}\n         */\n        hasLink: function (linkOrId) {\n            if (Utils.isString(linkOrId)) {\n                return Utils.any(this.links, function (link) {\n                    return link.id === linkOrId;\n                });\n            }\n            if (linkOrId.type === \"Link\") {\n                return contains(this.links, linkOrId);\n            }\n            throw \"The given object is neither an identifier nor a Link.\";\n        },\n        /**\n         * Gets the node with the specified Id or null if not part of this graph.\n         */\n        getNode: function (nodeOrId) {\n            var id = nodeOrId.id || nodeOrId;\n            if (this._nodeMap.containsKey(id)) {\n                return this._nodeMap.get(id);\n            }\n        },\n\n        /**\n         * Returns whether the given node or node Id is part of this graph.\n         */\n        hasNode: function (nodeOrId) {\n            var id = nodeOrId.id || nodeOrId;\n            return this._nodeMap.containsKey(id);\n        },\n\n        _addNode: function(node) {\n            this.nodes.push(node);\n            this._nodeMap.add(node.id, node);\n        },\n\n        _removeNode: function(node) {\n            Utils.remove(this.nodes, node);\n            this._nodeMap.remove(node.id);\n        },\n\n        /**\n         * Removes the given node from this graph.\n         * The node can be specified as an object or as an identifier (string).\n         */\n        removeNode: function (nodeOrId) {\n            var n = nodeOrId;\n            if (Utils.isString(nodeOrId)) {\n                n = this.getNode(nodeOrId);\n            }\n\n            if (Utils.isDefined(n)) {\n                var links = n.links;\n                n.links = [];\n                for (var i = 0, len = links.length; i < len; i++) {\n                    var link = links[i];\n                    this.removeLink(link);\n                }\n                this._removeNode(n);\n            }\n            else {\n                throw \"The identifier should be a Node or the Id (string) of a node.\";\n            }\n        },\n\n        /**\n         * Returns whether the given nodes are connected with a least one link independently of the direction.\n         */\n        areConnected: function (n1, n2) {\n            return Utils.any(this.links, function (link) {\n                return link.source == n1 && link.target == n2 || link.source == n2 && link.target == n1;\n            });\n        },\n\n        /**\n         * Removes the given link from this graph.\n         */\n        removeLink: function (link) {\n            /*    if (!this.links.contains(link)) {\n             throw \"The given link is not part of the Graph.\";\n             }\n             */\n            Utils.remove(this.links, link);\n\n            Utils.remove(link.source.outgoing, link);\n            Utils.remove(link.source.links, link);\n            Utils.remove(link.target.incoming, link);\n            Utils.remove(link.target.links, link);\n        },\n\n        /**\n         * Adds a new node to this graph, if not already present.\n         * The node can be an existing Node or the identifier of a new node.\n         * No error is thrown if the node is already there and the existing one is returned.\n         */\n        addNode: function (nodeOrId, layoutRect, owner) {\n\n            var newNode = null;\n\n            if (!Utils.isDefined(nodeOrId)) {\n                throw \"No Node or identifier for a new Node is given.\";\n            }\n\n            if (Utils.isString(nodeOrId)) {\n                if (this.hasNode(nodeOrId)) {\n                    return this.getNode(nodeOrId);\n                }\n                newNode = new Node(nodeOrId);\n            }\n            else {\n                if (this.hasNode(nodeOrId)) {\n                    return this.getNode(nodeOrId);\n                }\n                // todo: ensure that the param is a Node?\n                newNode = nodeOrId;\n            }\n\n            if (Utils.isDefined(layoutRect)) {\n                newNode.bounds(layoutRect);\n            }\n\n            if (Utils.isDefined(owner)) {\n                newNode.owner = owner;\n            }\n            this._addNode(newNode);\n            return newNode;\n        },\n\n        /**\n         * Adds the given Node and its outgoing links.\n         */\n        addNodeAndOutgoings: function (node) {\n            if (!this.hasNode(node)) {\n                this._addNode(node);\n            }\n\n            var newLinks = node.outgoing;\n            node.outgoing = [];\n            Utils.forEach(newLinks, function (link) {\n                this.addExistingLink(link);\n            }, this);\n        },\n\n        /**\n         * Sets the 'index' property on the links and nodes of this graph.\n         */\n        setItemIndices: function () {\n            var i;\n            for (i = 0; i < this.nodes.length; ++i) {\n                this.nodes[i].index = i;\n            }\n\n            for (i = 0; i < this.links.length; ++i) {\n                this.links[i].index = i;\n            }\n        },\n\n        /**\n         * Returns a clone of this graph.\n         */\n        clone: function (saveMapping) {\n            var copy = new Graph();\n            var save = Utils.isDefined(saveMapping) && saveMapping === true;\n            if (save) {\n                copy.nodeMap = new Dictionary();\n                copy.linkMap = new Dictionary();\n            }\n            // we need a map even if the saveMapping is not set\n            var map = new Dictionary();\n            Utils.forEach(this.nodes, function (nOriginal) {\n                var nCopy = nOriginal.clone();\n                map.set(nOriginal, nCopy);\n                copy._addNode(nCopy);\n\n                if (save) {\n                    copy.nodeMap.set(nCopy, nOriginal);\n                }\n            });\n\n            Utils.forEach(this.links, function (linkOriginal) {\n                if (map.containsKey(linkOriginal.source) && map.containsKey(linkOriginal.target)) {\n                    var linkCopy = copy.addLink(map.get(linkOriginal.source), map.get(linkOriginal.target));\n                    if (save) {\n                        copy.linkMap.set(linkCopy, linkOriginal);\n                    }\n                }\n            });\n\n            return copy;\n        },\n\n        /**\n         * The parsing allows a quick way to create graphs.\n         *  - [\"n1->n2\", \"n2->n3\"]: creates the three nodes and adds the links\n         *  - [\"n1->n2\", {id: \"QSDF\"}, \"n2->n3\"]: same as previous but also performs a deep extend of the link between n1 and n2 with the given object.\n         */\n        linearize: function (addIds) {\n            return Graph.Utils.linearize(this, addIds);\n        },\n\n        /**\n         * Performs a depth-first traversal starting at the given node.\n         * @param startNode a node or id of a node in this graph\n         * @param action\n         */\n        depthFirstTraversal: function (startNode, action) {\n            if (Utils.isUndefined(startNode)) {\n                throw \"You need to supply a starting node.\";\n            }\n            if (Utils.isUndefined(action)) {\n                throw \"You need to supply an action.\";\n            }\n            if (!this.hasNode(startNode)) {\n                throw \"The given start-node is not part of this graph\";\n            }\n            var foundNode = this.getNode(startNode);// case the given one is an Id\n            var visited = [];\n            this._dftIterator(foundNode, action, visited);\n        },\n\n        _dftIterator: function (node, action, visited) {\n\n            action(node);\n            visited.push(node);\n            var children = node.getChildren();\n            for (var i = 0, len = children.length; i < len; i++) {\n                var child = children[i];\n                if (contains(visited, child)) {\n                    continue;\n                }\n                this._dftIterator(child, action, visited);\n            }\n        },\n\n        /**\n         * Performs a breadth-first traversal starting at the given node.\n         * @param startNode a node or id of a node in this graph\n         * @param action\n         */\n        breadthFirstTraversal: function (startNode, action) {\n\n            if (Utils.isUndefined(startNode)) {\n                throw \"You need to supply a starting node.\";\n            }\n            if (Utils.isUndefined(action)) {\n                throw \"You need to supply an action.\";\n            }\n\n            if (!this.hasNode(startNode)) {\n                throw \"The given start-node is not part of this graph\";\n            }\n            var foundNode = this.getNode(startNode);// case the given one is an Id\n            var queue = new Queue();\n            var visited = [];\n            queue.enqueue(foundNode);\n\n            while (queue.length > 0) {\n                var node = queue.dequeue();\n                action(node);\n                visited.push(node);\n                var children = node.getChildren();\n                for (var i = 0, len = children.length; i < len; i++) {\n                    var child = children[i];\n                    if (contains(visited, child) || contains(queue, child)) {\n                        continue;\n                    }\n                    queue.enqueue(child);\n                }\n            }\n        },\n\n        /**\n         * This is the classic Tarjan algorithm for strongly connected components.\n         * See e.g. http://en.wikipedia.org/wiki/Tarjan's_strongly_connected_components_algorithm\n         * @param excludeSingleItems Whether isolated nodes should be excluded from the analysis.\n         * @param node The start node from which the analysis starts.\n         * @param indices  Numbers the nodes consecutively in the order in which they are discovered.\n         * @param lowLinks The smallest index of any node known to be reachable from the node, including the node itself\n         * @param connected The current component.\n         * @param stack The bookkeeping stack of things to visit.\n         * @param index The counter of visited nodes used to assign the indices.\n         * @private\n         */\n        _stronglyConnectedComponents: function (excludeSingleItems, node, indices, lowLinks, connected, stack, index) {\n            indices.add(node, index);\n            lowLinks.add(node, index);\n            index++;\n\n            stack.push(node);\n\n            var children = node.getChildren(), next;\n            for (var i = 0, len = children.length; i < len; i++) {\n                next = children[i];\n                if (!indices.containsKey(next)) {\n                    this._stronglyConnectedComponents(excludeSingleItems, next, indices, lowLinks, connected, stack, index);\n                    lowLinks.add(node, Math.min(lowLinks.get(node), lowLinks.get(next)));\n                }\n                else if (contains(stack, next)) {\n                    lowLinks.add(node, Math.min(lowLinks.get(node), indices.get(next)));\n                }\n            }\n            // If v is a root node, pop the stack and generate a strong component\n            if (lowLinks.get(node) === indices.get(node)) {\n                var component = [];\n                do {\n                    next = stack.pop();\n                    component.push(next);\n                }\n                while (next !== node);\n                if (!excludeSingleItems || (component.length > 1)) {\n                    connected.push(component);\n                }\n            }\n        },\n\n        /**\n         * Returns the cycles found in this graph.\n         * The returned arrays consist of the nodes which are strongly coupled.\n         * @param excludeSingleItems Whether isolated nodes should be excluded.\n         * @returns {Array} The array of cycles found.\n         */\n        findCycles: function (excludeSingleItems) {\n            if (Utils.isUndefined(excludeSingleItems)) {\n                excludeSingleItems = true;\n            }\n            var indices = new Dictionary();\n            var lowLinks = new Dictionary();\n            var connected = [];\n            var stack = [];\n            for (var i = 0, len = this.nodes.length; i < len; i++) {\n                var node = this.nodes[i];\n                if (indices.containsKey(node)) {\n                    continue;\n                }\n                this._stronglyConnectedComponents(excludeSingleItems, node, indices, lowLinks, connected, stack, 0);\n            }\n            return connected;\n        },\n\n        /**\n         * Returns whether this graph is acyclic.\n         * @returns {*}\n         */\n        isAcyclic: function () {\n            return Utils.isEmpty(this.findCycles());\n        },\n\n        /**\n         * Returns whether the given graph is a subgraph of this one.\n         * @param other Another graph instance.\n         */\n        isSubGraph: function (other) {\n            var otherArray = other.linearize();\n            var thisArray = this.linearize();\n            return Utils.all(otherArray, function (s) {\n                return contains(thisArray, s);\n            });\n        },\n\n        /**\n         *  Makes an acyclic graph from the current (connected) one.\n         * * @returns {Array} The reversed links.\n         */\n        makeAcyclic: function () {\n            // if empty or almost empty\n            if (this.isEmpty() || this.nodes.length <= 1 || this.links.length <= 1) {\n                return [];\n            }\n            // singular case of just two nodes\n            if (this.nodes.length == 2) {\n                var result = [];\n                if (this.links.length > 1) {\n                    var oneLink = this.links[0];\n                    var oneNode = oneLink.source;\n                    for (var i = 0, len = this.links.length; i < len; i++) {\n                        var link = this.links[i];\n                        if (link.source == oneNode) {\n                            continue;\n                        }\n                        var rev = link.reverse();\n                        result.push(rev);\n                    }\n                }\n                return result;\n            }\n\n            var copy = this.clone(true); // copy.nodeMap tells you the mapping\n            var N = this.nodes.length;\n\n            var intensityCatalog = new Dictionary();\n\n            /**\n             * If there are both incoming and outgoing links this will return the flow intensity (out-in).\n             * Otherwise the node acts as a flow source with N specifying the (equal) intensity.\n             * @param node\n             * @returns {number}\n             */\n            var flowIntensity = function (node) {\n                if (node.outgoing.length === 0) {\n                    return (2 - N);\n                }\n                else if (node.incoming.length === 0) {\n                    return (N - 2);\n                }\n                else {\n                    return node.outgoing.length - node.incoming.length;\n                }\n            };\n\n            /**\n             * Collects the nodes with the same intensity.\n             * @param node\n             * @param intensityCatalog\n             */\n            var catalogEqualIntensity = function (node, intensityCatalog) {\n                var intensity = flowIntensity(node, N);\n                if (!intensityCatalog.containsKey(intensity)) {\n                    intensityCatalog.set(intensity, []);\n                }\n                intensityCatalog.get(intensity).push(node);\n            };\n\n            Utils.forEach(copy.nodes, function (v) {\n                catalogEqualIntensity(v, intensityCatalog);\n            });\n\n            var sourceStack = [];\n            var targetStack = [];\n\n            while (copy.nodes.length > 0) {\n                var source, target, intensity;\n                if (intensityCatalog.containsKey(2 - N)) {\n                    var targets = intensityCatalog.get(2 - N); // nodes without outgoings\n                    while (targets.length > 0) {\n                        target = targets.pop();\n                        for (var li = 0; li < target.links.length; li++) {\n                            var targetLink = target.links[li];\n                            source = targetLink.getComplement(target);\n                            intensity = flowIntensity(source, N);\n                            Utils.remove(intensityCatalog.get(intensity), source);\n                            source.removeLink(targetLink);\n                            catalogEqualIntensity(source, intensityCatalog);\n                        }\n                        copy._removeNode(target);\n                        targetStack.unshift(target);\n                    }\n                }\n\n                // move sources to sourceStack\n                if (intensityCatalog.containsKey(N - 2)) {\n                    var sources = intensityCatalog.get(N - 2); // nodes without incomings\n                    while (sources.length > 0) {\n                        source = sources.pop();\n                        for (var si = 0; si < source.links.length; si++) {\n                            var sourceLink = source.links[si];\n                            target = sourceLink.getComplement(source);\n                            intensity = flowIntensity(target, N);\n                            Utils.remove(intensityCatalog.get(intensity), target);\n                            target.removeLink(sourceLink);\n                            catalogEqualIntensity(target, intensityCatalog);\n                        }\n                        sourceStack.push(source);\n                        copy._removeNode(source);\n                    }\n                }\n\n                if (copy.nodes.length > 0) {\n                    for (var k = N - 3; k > 2 - N; k--) {\n                        if (intensityCatalog.containsKey(k) &&\n                            intensityCatalog.get(k).length > 0) {\n                            var maxdiff = intensityCatalog.get(k);\n                            var v = maxdiff.pop();\n                            for (var ri = 0; ri < v.links.length; ri++) {\n                                var ril = v.links[ri];\n                                var u = ril.getComplement(v);\n                                intensity = flowIntensity(u, N);\n                                Utils.remove(intensityCatalog.get(intensity), u);\n                                u.removeLink(ril);\n                                catalogEqualIntensity(u, intensityCatalog);\n                            }\n                            sourceStack.push(v);\n                            copy._removeNode(v);\n                            break;\n                        }\n                    }\n                }\n            }\n\n            sourceStack = sourceStack.concat(targetStack);\n\n            var vertexOrder = new Dictionary();\n            for (var kk = 0; kk < this.nodes.length; kk++) {\n                vertexOrder.set(copy.nodeMap.get(sourceStack[kk]), kk);\n            }\n\n            var reversedEdges = [];\n            Utils.forEach(this.links, function (link) {\n                if (vertexOrder.get(link.source) > vertexOrder.get(link.target)) {\n                    link.reverse();\n                    reversedEdges.push(link);\n                }\n            });\n            return reversedEdges;\n        }\n    });\n\n    /**\n     * A collection of predefined graphs for demo and testing purposes.\n     */\n    Graph.Predefined = {\n        /**\n         * Eight-shapes graph all connected in a cycle.\n         * @returns {*}\n         * @constructor\n         */\n        EightGraph: function () {\n            return Graph.Utils.parse([ \"1->2\", \"2->3\", \"3->4\", \"4->1\", \"3->5\", \"5->6\", \"6->7\", \"7->3\"]);\n        },\n\n        /**\n         * Creates a typical mindmap diagram.\n         * @returns {*}\n         * @constructor\n         */\n        Mindmap: function () {\n            return Graph.Utils.parse([\"0->1\", \"0->2\", \"0->3\", \"0->4\", \"0->5\", \"1->6\", \"1->7\", \"7->8\", \"2->9\", \"9->10\", \"9->11\", \"3->12\",\n                \"12->13\", \"13->14\", \"4->15\", \"4->16\", \"15->17\", \"15->18\", \"18->19\", \"18->20\", \"14->21\", \"14->22\", \"5->23\", \"23->24\", \"23->25\", \"6->26\"]);\n        },\n\n        /**\n         * Three nodes connected in a cycle.\n         * @returns {*}\n         * @constructor\n         */\n        ThreeGraph: function () {\n            return Graph.Utils.parse([ \"1->2\", \"2->3\", \"3->1\"]);\n        },\n\n        /**\n         * A tree with each node having two children.\n         * @param levels How many levels the binary tree should have.\n         * @returns {diagram.Graph}\n         * @constructor\n         */\n        BinaryTree: function (levels) {\n            if (Utils.isUndefined(levels)) {\n                levels = 5;\n            }\n            return Graph.Utils.createBalancedTree(levels, 2);\n        },\n\n        /**\n         * A linear graph (discrete line segment).\n         * @param length How many segments (the node count is hence (length+1)).\n         * @returns {diagram.Graph}\n         * @constructor\n         */\n        Linear: function (length) {\n            if (Utils.isUndefined(length)) {\n                length = 10;\n            }\n            return Graph.Utils.createBalancedTree(length, 1);\n        },\n\n        /**\n         * A standard tree-graph with the specified levels and children (siblings) count.\n         * Note that for a balanced tree of level N and sibling count s, counting the root as level zero:\n         *  - NodeCount = (1-s^(N+1))/(1-s)]\n         *  - LinkCount = s.(1-s^N)/(1-s)\n         * @param levels How many levels the tree should have.\n         * @param siblingsCount How many siblings each level should have.\n         * @returns {diagram.Graph}\n         * @constructor\n         */\n        Tree: function (levels, siblingsCount) {\n            return Graph.Utils.createBalancedTree(levels, siblingsCount);\n        },\n\n        /**\n         * Creates a forest.\n         * Note that for a balanced forest of level N, sibling count s and tree count t, counting the root as level zero:\n         *  - NodeCount = t.(1-s^(N+1))/(1-s)]\n         *  - LinkCount = t.s.(1-s^N)/(1-s)\n         * @param levels How many levels the tree should have.\n         * @param siblingsCount How many siblings each level should have.\n         * @param trees The amount of trees the forest should have.\n         * @returns {diagram.Graph}\n         * @constructor\n         */\n        Forest: function (levels, siblingsCount, trees) {\n            return Graph.Utils.createBalancedForest(levels, siblingsCount, trees);\n        },\n\n        /**\n         * A workflow-like graph with cycles.\n         * @returns {*}\n         * @constructor\n         */\n        Workflow: function () {\n            return Graph.Utils.parse(\n                [\"0->1\", \"1->2\", \"2->3\", \"1->4\", \"4->3\", \"3->5\", \"5->6\", \"6->3\", \"6->7\", \"5->4\"]\n            );\n        },\n\n        /**\n         * A grid graph with the direction of the links avoiding cycles.\n         * Node count: (n+1).(m+1)\n         * Link count: n.(m+1) + m.(n+1)\n         * @param n Horizontal count of grid cells. If zero this will result in a linear graph.\n         * @param m Vertical count of grid cells. If zero this will result in a linear graph.\n         * @constructor\n         */\n        Grid: function (n, m) {\n            var g = new diagram.Graph();\n            if (n <= 0 && m <= 0) {\n                return g;\n            }\n\n            for (var i = 0; i < n + 1; i++) {\n                var previous = null;\n                for (var j = 0; j < m + 1; j++) {\n                    // using x-y coordinates to name the nodes\n                    var node = new Node(i.toString() + \".\" + j.toString());\n                    g.addNode(node);\n                    if (previous) {\n                        g.addLink(previous, node);\n                    }\n                    if (i > 0) {\n                        var left = g.getNode((i - 1).toString() + \".\" + j.toString());\n                        g.addLink(left, node);\n                    }\n                    previous = node;\n                }\n            }\n            return g;\n        }\n\n    };\n\n    /**\n     * Graph generation and other utilities.\n     */\n    Graph.Utils = {\n        /**\n         * The parsing allows a quick way to create graphs.\n         *  - [\"n1->n2\", \"n2->n3\"]: creates the three nodes and adds the links\n         *  - [\"n1->n2\", {id: \"id177\"}, \"n2->n3\"]: same as previous but also performs a deep extend of the link between n1 and n2 with the given object.\n         */\n        parse: function (graphString) {\n\n            var previousLink, graph = new diagram.Graph(), parts = graphString.slice();\n            for (var i = 0, len = parts.length; i < len; i++) {\n                var part = parts[i];\n                if (Utils.isString(part)) // link spec\n                {\n                    if (part.indexOf(\"->\") < 0) {\n                        throw \"The link should be specified as 'a->b'.\";\n                    }\n                    var p = part.split(\"->\");\n                    if (p.length != 2) {\n                        throw \"The link should be specified as 'a->b'.\";\n                    }\n                    previousLink = new Link(p[0], p[1]);\n                    graph.addLink(previousLink);\n                }\n                if (Utils.isObject(part)) {\n                    if (!previousLink) {\n                        throw \"Specification found before Link definition.\";\n                    }\n                    kendo.deepExtend(previousLink, part);\n                }\n            }\n            return graph;\n        },\n\n        /**\n         * Returns a linearized representation of the given Graph.\n         * See also the Graph.Utils.parse method for the inverse operation.\n         */\n        linearize: function (graph, addIds) {\n            if (Utils.isUndefined(graph)) {\n                throw \"Expected an instance of a Graph object in slot one.\";\n            }\n            if (Utils.isUndefined(addIds)) {\n                addIds = false;\n            }\n            var lin = [];\n            for (var i = 0, len = graph.links.length; i < len; i++) {\n                var link = graph.links[i];\n                lin.push(link.source.id + \"->\" + link.target.id);\n                if (addIds) {\n                    lin.push({id: link.id});\n                }\n            }\n            return lin;\n        },\n\n        /**\n         * The method used by the diagram creation to instantiate a shape.\n         * @param kendoDiagram The Kendo diagram where the diagram will be created.\n         * @param p The position at which to place the shape.\n         * @param shapeDefaults Optional Shape options.\n         * @param id Optional identifier of the shape.\n         * @returns {*}\n         * @private\n         */\n        _addShape: function (kendoDiagram, p, id, shapeDefaults) {\n            if (Utils.isUndefined(p)) {\n                p = new diagram.Point(0, 0);\n            }\n\n            if (Utils.isUndefined(id)) {\n                id = randomId();\n            }\n\n            shapeDefaults = kendo.deepExtend({\n                width: 20,\n                height: 20,\n                id: id,\n                radius: 10,\n                fill: \"#778899\",\n                data: \"circle\",\n                undoable: false,\n                x: p.x,\n                y: p.y\n            }, shapeDefaults);\n\n            return kendoDiagram.addShape(shapeDefaults);\n        },\n        /**\n         * The method used by the diagram creation to instantiate a connection.\n         * @param diagram he Kendo diagram where the diagram will be created.\n         * @param from The source shape.\n         * @param to The target shape.\n         * @param options Optional Connection options.\n         * @returns {*}\n         * @private\n         */\n        _addConnection: function (diagram, from, to, options) {\n            return diagram.connect(from, to, options);\n        },\n\n        /**\n         * Creates a diagram from the given Graph.\n         * @param diagram The Kendo diagram where the diagram will be created.\n         * @param graph The graph structure defining the diagram.\n         */\n        createDiagramFromGraph: function (diagram, graph, doLayout, randomSize) {\n\n            if (Utils.isUndefined(diagram)) {\n                throw \"The diagram surface is undefined.\";\n            }\n            if (Utils.isUndefined(graph)) {\n                throw \"No graph specification defined.\";\n            }\n            if (Utils.isUndefined(doLayout)) {\n                doLayout = true;\n            }\n            if (Utils.isUndefined(randomSize)) {\n                randomSize = false;\n            }\n\n            var width = diagram.element.clientWidth || 200;\n            var height = diagram.element.clientHeight || 200;\n            var map = [], node, shape;\n            for (var i = 0, len = graph.nodes.length; i < len; i++) {\n                node = graph.nodes[i];\n                var p = node.position;\n                if (Utils.isUndefined(p)) {\n                    if (Utils.isDefined(node.x) && Utils.isDefined(node.y)) {\n                        p = new Point(node.x, node.y);\n                    }\n                    else {\n                        p = new Point(Utils.randomInteger(10, width - 20), Utils.randomInteger(10, height - 20));\n                    }\n                }\n                var opt = {};\n\n                if (node.id === \"0\") {\n                    /* kendo.deepExtend(opt,\n                     {\n                     fill: \"Orange\",\n                     data: 'circle',\n                     width: 100,\n                     height: 100,\n                     center: new Point(50, 50)\n                     });*/\n                }\n                else if (randomSize) {\n                    kendo.deepExtend(opt, {\n                        width: Math.random() * 150 + 20,\n                        height: Math.random() * 80 + 50,\n                        data: 'rectangle',\n                        fill: {\n                            color: \"#778899\"\n                        }\n                    });\n                }\n\n                shape = this._addShape(diagram, p, node.id, opt);\n                //shape.content(node.id);\n\n                var bounds = shape.bounds();\n                if (Utils.isDefined(bounds)) {\n                    node.x = bounds.x;\n                    node.y = bounds.y;\n                    node.width = bounds.width;\n                    node.height = bounds.height;\n                }\n                map[node.id] = shape;\n            }\n            for (var gli = 0; gli < graph.links.length; gli++) {\n                var link = graph.links[gli];\n                var sourceShape = map[link.source.id];\n                if (Utils.isUndefined(sourceShape)) {\n                    continue;\n                }\n                var targetShape = map[link.target.id];\n                if (Utils.isUndefined(targetShape)) {\n                    continue;\n                }\n                this._addConnection(diagram, sourceShape, targetShape, {id: link.id});\n\n            }\n            if (doLayout) {\n                var l = new diagram.SpringLayout(diagram);\n                l.layoutGraph(graph, {limitToView: false});\n                for (var shi = 0; shi < graph.nodes.length; shi++) {\n                    node = graph.nodes[shi];\n                    shape = map[node.id];\n                    shape.bounds(new Rect(node.x, node.y, node.width, node.height));\n                }\n            }\n        },\n\n        /**\n         * Creates a balanced tree with the specified number of levels and siblings count.\n         * Note that for a balanced tree of level N and sibling count s, counting the root as level zero:\n         *  - NodeCount = (1-s^(N+1))/(1-s)]\n         *  - LinkCount = s.(1-s^N)/(1-s)\n         * @param levels How many levels the tree should have.\n         * @param siblingsCount How many siblings each level should have.\n         * @returns {diagram.Graph}\n         */\n        createBalancedTree: function (levels, siblingsCount) {\n            if (Utils.isUndefined(levels)) {\n                levels = 3;\n            }\n            if (Utils.isUndefined(siblingsCount)) {\n                siblingsCount = 3;\n            }\n\n            var g = new diagram.Graph(), counter = -1, lastAdded = [], news;\n            if (levels <= 0 || siblingsCount <= 0) {\n                return g;\n            }\n            var root = new Node((++counter).toString());\n            g.addNode(root);\n            g.root = root;\n            lastAdded.push(root);\n            for (var i = 0; i < levels; i++) {\n                news = [];\n                for (var j = 0; j < lastAdded.length; j++) {\n                    var parent = lastAdded[j];\n                    for (var k = 0; k < siblingsCount; k++) {\n                        var item = new Node((++counter).toString());\n                        g.addLink(parent, item);\n                        news.push(item);\n                    }\n                }\n                lastAdded = news;\n            }\n            return g;\n        },\n\n        /**\n         * Creates a balanced tree with the specified number of levels and siblings count.\n         * Note that for a balanced forest of level N, sibling count s and tree count t, counting the root as level zero:\n         *  - NodeCount = t.(1-s^(N+1))/(1-s)]\n         *  - LinkCount = t.s.(1-s^N)/(1-s)\n         * @param levels How many levels the tree should have.\n         * @param siblingsCount How many siblings each level should have.\n         * @returns {diagram.Graph}\n         * @param treeCount The number of trees the forest should have.\n         */\n        createBalancedForest: function (levels, siblingsCount, treeCount) {\n            if (Utils.isUndefined(levels)) {\n                levels = 3;\n            }\n            if (Utils.isUndefined(siblingsCount)) {\n                siblingsCount = 3;\n            }\n            if (Utils.isUndefined(treeCount)) {\n                treeCount = 5;\n            }\n            var g = new diagram.Graph(), counter = -1, lastAdded = [], news;\n            if (levels <= 0 || siblingsCount <= 0 || treeCount <= 0) {\n                return g;\n            }\n\n            for (var t = 0; t < treeCount; t++) {\n                var root = new Node((++counter).toString());\n                g.addNode(root);\n                lastAdded = [root];\n                for (var i = 0; i < levels; i++) {\n                    news = [];\n                    for (var j = 0; j < lastAdded.length; j++) {\n                        var parent = lastAdded[j];\n                        for (var k = 0; k < siblingsCount; k++) {\n                            var item = new Node((++counter).toString());\n                            g.addLink(parent, item);\n                            news.push(item);\n                        }\n                    }\n                    lastAdded = news;\n                }\n            }\n            return g;\n        },\n\n        /**\n         * Creates a random graph (uniform distribution) with the specified amount of nodes.\n         * @param nodeCount The amount of nodes the random graph should have.\n         * @param maxIncidence The maximum allowed degree of the nodes.\n         * @param isTree Whether the return graph should be a tree (default: false).\n         * @returns {diagram.Graph}\n         */\n        createRandomConnectedGraph: function (nodeCount, maxIncidence, isTree) {\n\n            /* Swa's Mathematica export of random Bernoulli graphs\n             gr[n_,p_]:=Module[{g=RandomGraph[BernoulliGraphDistribution[n,p],VertexLabels->\"Name\",DirectedEdges->True]},\n             While[Not[ConnectedGraphQ[g]],g=RandomGraph[BernoulliGraphDistribution[n,p],VertexLabels->\"Name\",DirectedEdges->True]];g];\n             project[a_]:=(\"\\\"\"<>ToString[Part[#,1]]<>\"->\"<>ToString[Part[#,2]]<>\"\\\"\")&     @ a;\n             export[g_]:=project/@ EdgeList[g]\n             g = gr[12,.1]\n             export [g]\n             */\n\n            if (Utils.isUndefined(nodeCount)) {\n                nodeCount = 40;\n            }\n            if (Utils.isUndefined(maxIncidence)) {\n                maxIncidence = 4;\n            }\n            if (Utils.isUndefined(isTree)) {\n                isTree = false;\n            }\n\n            var g = new diagram.Graph(), counter = -1;\n            if (nodeCount <= 0) {\n                return g;\n            }\n\n            var root = new Node((++counter).toString());\n            g.addNode(root);\n            if (nodeCount === 1) {\n                return g;\n            }\n            if (nodeCount > 1) {\n                // random tree\n                for (var i = 1; i < nodeCount; i++) {\n                    var poolNode = g.takeRandomNode([], maxIncidence);\n                    if (!poolNode) {\n                        //failed to find one so the graph will have less nodes than specified\n                        break;\n                    }\n                    var newNode = g.addNode(i.toString());\n                    g.addLink(poolNode, newNode);\n                }\n                if (!isTree && nodeCount > 1) {\n                    var randomAdditions = Utils.randomInteger(1, nodeCount);\n                    for (var ri = 0; ri < randomAdditions; ri++) {\n                        var n1 = g.takeRandomNode([], maxIncidence);\n                        var n2 = g.takeRandomNode([], maxIncidence);\n                        if (n1 && n2 && !g.areConnected(n1, n2)) {\n                            g.addLink(n1, n2);\n                        }\n                    }\n                }\n                return g;\n            }\n        },\n\n        /**\n         * Generates a random diagram.\n         * @param diagram The host diagram.\n         * @param shapeCount The number of shapes the random diagram should contain.\n         * @param maxIncidence The maximum degree the shapes can have.\n         * @param isTree Whether the generated diagram should be a tree\n         * @param layoutType The optional layout type to apply after the diagram is generated.\n         */\n        randomDiagram: function (diagram, shapeCount, maxIncidence, isTree, randomSize) {\n            var g = kendo.dataviz.diagram.Graph.Utils.createRandomConnectedGraph(shapeCount, maxIncidence, isTree);\n            Graph.Utils.createDiagramFromGraph(diagram, g, false, randomSize);\n        }\n    };\n\n    kendo.deepExtend(diagram, {\n        init: function (element) {\n            kendo.init(element, diagram.ui);\n        },\n\n        Point: Point,\n        Intersect: Intersect,\n        Geometry: Geometry,\n        Rect: Rect,\n        Size: Size,\n        RectAlign: RectAlign,\n        Matrix: Matrix,\n        MatrixVector: MatrixVector,\n        normalVariable: normalVariable,\n        randomId: randomId,\n        Dictionary: Dictionary,\n        HashTable: HashTable,\n        Queue: Queue,\n        Set: Set,\n        Node: Node,\n        Link: Link,\n        Graph: Graph,\n        PathDefiner: PathDefiner\n    });\n})(window.kendo.jQuery);\n\n}, typeof define == 'function' && define.amd ? define : function(a1, a2, a3){ (a3 || a2)(); });\n\n(function(f, define){\n    define('dataviz/diagram/svg',[ \"../../kendo.drawing\", \"./math\" ], f);\n})(function(){\n\n(function ($, undefined) {\n    // Imports ================================================================\n    var kendo = window.kendo,\n        diagram = kendo.dataviz.diagram,\n        Class = kendo.Class,\n        deepExtend = kendo.deepExtend,\n        Point = diagram.Point,\n        Rect = diagram.Rect,\n        Matrix = diagram.Matrix,\n        Utils = diagram.Utils,\n        isNumber = Utils.isNumber,\n        isString = Utils.isString,\n        MatrixVector = diagram.MatrixVector,\n\n        g = kendo.geometry,\n        d = kendo.drawing,\n\n        defined = d.util.defined,\n\n        inArray = $.inArray;\n\n    // Constants ==============================================================\n    var TRANSPARENT = \"transparent\",\n        Markers = {\n            none: \"none\",\n            arrowStart: \"ArrowStart\",\n            filledCircle: \"FilledCircle\",\n            arrowEnd: \"ArrowEnd\"\n        },\n        FULL_CIRCLE_ANGLE = 360,\n        START = \"start\",\n        END = \"end\",\n        WIDTH = \"width\",\n        HEIGHT = \"height\",\n        X = \"x\",\n        Y = \"y\";\n\n    diagram.Markers = Markers;\n\n    function diffNumericOptions(options, fields) {\n        var elementOptions = this.options;\n        var hasChanges = false;\n        var value, field;\n        for (var i = 0; i < fields.length; i++) {\n            field = fields[i];\n            value = options[field];\n            if (isNumber(value) && elementOptions[field] !== value) {\n                elementOptions[field] = value;\n                hasChanges = true;\n            }\n        }\n\n        return hasChanges;\n    }\n\n    var Scale = Class.extend({\n        init: function (x, y) {\n            this.x = x;\n            this.y = y;\n        },\n        toMatrix: function () {\n            return Matrix.scaling(this.x, this.y);\n        },\n        toString: function () {\n            return kendo.format(\"scale({0},{1})\", this.x, this.y);\n        },\n        invert: function() {\n            return new Scale(1/this.x, 1/this.y);\n        }\n    });\n\n    var Translation = Class.extend({\n        init: function (x, y) {\n            this.x = x;\n            this.y = y;\n        },\n        toMatrixVector: function () {\n            return new MatrixVector(0, 0, 0, 0, this.x, this.y);\n        },\n        toMatrix: function () {\n            return Matrix.translation(this.x, this.y);\n        },\n        toString: function () {\n            return kendo.format(\"translate({0},{1})\", this.x, this.y);\n        },\n        plus: function (delta) {\n            this.x += delta.x;\n            this.y += delta.y;\n        },\n        times: function (factor) {\n            this.x *= factor;\n            this.y *= factor;\n        },\n        length: function () {\n            return Math.sqrt(this.x * this.x + this.y * this.y);\n        },\n        normalize: function () {\n            if (this.Length === 0) {\n                return;\n            }\n            this.times(1 / this.length());\n        },\n        invert: function() {\n            return new Translation(-this.x, -this.y);\n        }\n    });\n\n    var Rotation = Class.extend({\n        init: function (angle, x, y) {\n            this.x = x || 0;\n            this.y = y || 0;\n            this.angle = angle;\n        },\n        toString: function () {\n            if (this.x && this.y) {\n                return kendo.format(\"rotate({0},{1},{2})\", this.angle, this.x, this.y);\n            } else {\n                return kendo.format(\"rotate({0})\", this.angle);\n            }\n        },\n        toMatrix: function () {\n            return Matrix.rotation(this.angle, this.x, this.y); // T*R*T^-1\n        },\n        center: function () {\n            return new Point(this.x, this.y);\n        },\n        invert: function() {\n            return new Rotation(FULL_CIRCLE_ANGLE - this.angle, this.x, this.y);\n        }\n    });\n\n    Rotation.ZERO = new Rotation(0);\n\n    Rotation.create = function (rotation) {\n        return new Rotation(rotation.angle, rotation.x, rotation.y);\n    };\n\n    Rotation.parse = function (str) {\n        var values = str.slice(1, str.length - 1).split(\",\"),\n            angle = values[0],\n            x = values[1],\n            y = values[2];\n        var rotation = new Rotation(angle, x, y);\n        return rotation;\n    };\n\n    var CompositeTransform = Class.extend({\n        init: function (x, y, scaleX, scaleY, angle, center) {\n            this.translate = new Translation(x, y);\n            if (scaleX !== undefined && scaleY !== undefined) {\n                this.scale = new Scale(scaleX, scaleY);\n            }\n            if (angle !== undefined) {\n                this.rotate = center ? new Rotation(angle, center.x, center.y) : new Rotation(angle);\n            }\n        },\n        toString: function () {\n            var toString = function (transform) {\n                return transform ? transform.toString() : \"\";\n            };\n\n            return toString(this.translate) +\n                toString(this.rotate) +\n                toString(this.scale);\n        },\n\n        render: function (visual) {\n            visual._transform = this;\n            visual._renderTransform();\n        },\n\n        toMatrix: function () {\n            var m = Matrix.unit();\n\n            if (this.translate) {\n                m = m.times(this.translate.toMatrix());\n            }\n            if (this.rotate) {\n                m = m.times(this.rotate.toMatrix());\n            }\n            if (this.scale) {\n                m = m.times(this.scale.toMatrix());\n            }\n            return m;\n        },\n        invert: function() {\n            var rotate = this.rotate ? this.rotate.invert() : undefined,\n                rotateMatrix = rotate ? rotate.toMatrix() : Matrix.unit(),\n                scale = this.scale ? this.scale.invert() : undefined,\n                scaleMatrix = scale ? scale.toMatrix() : Matrix.unit();\n\n            var translatePoint = new Point(-this.translate.x, -this.translate.y);\n            translatePoint = rotateMatrix.times(scaleMatrix).apply(translatePoint);\n            var translate = new Translation(translatePoint.x, translatePoint.y);\n\n            var transform = new CompositeTransform();\n            transform.translate = translate;\n            transform.rotate = rotate;\n            transform.scale = scale;\n\n            return transform;\n        }\n    });\n\n    var AutoSizeableMixin = {\n        _setScale: function() {\n            var options = this.options;\n            var originWidth = this._originWidth;\n            var originHeight = this._originHeight;\n            var scaleX = options.width / originWidth;\n            var scaleY = options.height / originHeight;\n\n            if (!isNumber(scaleX)) {\n                scaleX = 1;\n            }\n            if (!isNumber(scaleY)) {\n                scaleY = 1;\n            }\n\n            this._transform.scale = new Scale(scaleX, scaleY);\n        },\n\n        _setTranslate: function() {\n            var options = this.options;\n            var x = options.x || 0;\n            var y = options.y || 0;\n            this._transform.translate = new Translation(x, y);\n        },\n\n        _initSize: function() {\n            var options = this.options;\n            var transform = false;\n            if (options.autoSize !== false && (defined(options.width) || defined(options.height))) {\n                this._measure(true);\n                this._setScale();\n                transform = true;\n            }\n\n            if (defined(options.x) || defined(options.y)) {\n                this._setTranslate();\n                transform = true;\n            }\n\n            if (transform) {\n                this._renderTransform();\n            }\n        },\n\n        _updateSize: function(options) {\n            var update = false;\n\n            if (this.options.autoSize !== false && this._diffNumericOptions(options, [WIDTH, HEIGHT])) {\n                update = true;\n                this._measure(true);\n                this._setScale();\n            }\n\n            if (this._diffNumericOptions(options, [X, Y])) {\n                update = true;\n                this._setTranslate();\n            }\n\n            if (update) {\n                this._renderTransform();\n            }\n\n            return update;\n        }\n    };\n\n    var Element = Class.extend({\n        init: function (options) {\n            var element = this;\n            element.options = deepExtend({}, element.options, options);\n            element.id = element.options.id;\n            element._originSize = Rect.empty();\n            element._transform = new CompositeTransform();\n        },\n\n        visible: function (value) {\n            return this.drawingContainer().visible(value);\n        },\n\n        redraw: function (options) {\n            if (options && options.id) {\n                 this.id = options.id;\n            }\n        },\n\n        position: function (x, y) {\n            var options = this.options;\n            if (!defined(x)) {\n               return new Point(options.x, options.y);\n            }\n\n            if (defined(y)) {\n                options.x = x;\n                options.y = y;\n            } else if (x instanceof Point) {\n                options.x = x.x;\n                options.y = x.y;\n            }\n\n            this._transform.translate = new Translation(options.x, options.y);\n            this._renderTransform();\n        },\n\n        rotate: function (angle, center) {\n            if (defined(angle)) {\n                this._transform.rotate = new Rotation(angle, center.x, center.y);\n                this._renderTransform();\n            }\n            return this._transform.rotate || Rotation.ZERO;\n        },\n\n        drawingContainer: function() {\n            return this.drawingElement;\n        },\n\n        _renderTransform: function () {\n            var matrix = this._transform.toMatrix();\n            this.drawingContainer().transform(new g.Matrix(matrix.a, matrix.b, matrix.c, matrix.d, matrix.e, matrix.f));\n        },\n\n        _hover: function () {},\n\n        _diffNumericOptions: diffNumericOptions,\n\n        _measure: function (force) {\n            var rect;\n            if (!this._measured || force) {\n                var box = this._boundingBox() || new g.Rect();\n                var startPoint = box.topLeft();\n                rect = new Rect(startPoint.x, startPoint.y, box.width(), box.height());\n                this._originSize = rect;\n                this._originWidth = rect.width;\n                this._originHeight = rect.height;\n                this._measured = true;\n            } else {\n                rect = this._originSize;\n            }\n            return rect;\n        },\n\n        _boundingBox: function() {\n            return this.drawingElement.rawBBox();\n        }\n    });\n\n    var VisualBase = Element.extend({\n        init: function(options) {\n            Element.fn.init.call(this, options);\n\n            options = this.options;\n            options.fill = normalizeDrawingOptions(options.fill);\n            options.stroke = normalizeDrawingOptions(options.stroke);\n        },\n\n        options: {\n            stroke: {\n                color: \"gray\",\n                width: 1\n            },\n            fill: {\n                color: TRANSPARENT\n            }\n        },\n\n        fill: function(color, opacity) {\n            this._fill({\n                color: getColor(color),\n                opacity: opacity\n            });\n        },\n\n        stroke: function(color, width, opacity) {\n            this._stroke({\n                color: getColor(color),\n                width: width,\n                opacity: opacity\n            });\n        },\n\n        redraw: function (options) {\n            if (options) {\n                var stroke = options.stroke;\n                var fill = options.fill;\n                if (stroke) {\n                    this._stroke(normalizeDrawingOptions(stroke));\n                }\n                if (fill) {\n                    this._fill(normalizeDrawingOptions(fill));\n                }\n\n                Element.fn.redraw.call(this, options);\n            }\n        },\n\n        _hover: function (show) {\n            var drawingElement = this.drawingElement;\n            var options = this.options;\n            var hover = options.hover;\n\n            if (hover && hover.fill) {\n                var fill = show ? normalizeDrawingOptions(hover.fill) : options.fill;\n                drawingElement.fill(fill.color, fill.opacity);\n            }\n        },\n\n        _stroke: function(strokeOptions) {\n            var options = this.options;\n            deepExtend(options, {\n                stroke: strokeOptions\n            });\n\n            strokeOptions = options.stroke;\n\n            var stroke = null;\n            if (strokeOptions.width > 0) {\n                stroke = {\n                    color: strokeOptions.color,\n                    width: strokeOptions.width,\n                    opacity: strokeOptions.opacity,\n                    dashType: strokeOptions.dashType\n                };\n            }\n\n            this.drawingElement.options.set(\"stroke\", stroke);\n        },\n\n        _fill: function(fillOptions) {\n            var options = this.options;\n            deepExtend(options, {\n                fill: fillOptions || {}\n            });\n            var fill = options.fill;\n\n            if (fill.gradient) {\n                var gradient = fill.gradient;\n                var GradientClass = (gradient.type === \"radial\" ? d.RadialGradient : d.LinearGradient);\n                this.drawingElement.fill(new GradientClass(gradient));\n            } else {\n                this.drawingElement.fill(fill.color, fill.opacity);\n            }\n        }\n    });\n\n    var TextBlock = VisualBase.extend({\n        init: function (options) {\n            options = this._textColor(options);\n            VisualBase.fn.init.call(this, options);\n\n            this._font();\n            this._initText();\n            this._initSize();\n        },\n\n        options: {\n            fontSize: 15,\n            fontFamily: \"sans-serif\",\n            stroke: {\n                width: 0\n            },\n            fill: {\n                color: \"black\"\n            },\n            autoSize: true\n        },\n\n        _initText: function() {\n            var options = this.options;\n\n            this.drawingElement = new d.Text(defined(options.text) ? options.text : \"\", new g.Point(), {\n                font: options.font\n            });\n\n            this._fill();\n            this._stroke();\n        },\n\n        _textColor: function(options) {\n            if (options && options.color) {\n                options = deepExtend({}, options, {\n                    fill: {\n                        color: options.color\n                    }\n                });\n            }\n            return options;\n        },\n\n        _font: function() {\n            var options = this.options;\n            if (options.fontFamily && defined(options.fontSize)) {\n                var fontOptions = [];\n\n                if (options.fontStyle) {\n                    fontOptions.push(options.fontStyle);\n                }\n\n                if (options.fontWeight) {\n                    fontOptions.push(options.fontWeight);\n                }\n\n                fontOptions.push(options.fontSize + (isNumber(options.fontSize) ? \"px\" : \"\"));\n                fontOptions.push(options.fontFamily);\n\n                options.font = fontOptions.join(\" \");\n            } else {\n                delete options.font;\n            }\n        },\n\n        content: function (text) {\n            return this.drawingElement.content(text);\n        },\n\n        redraw: function (options) {\n            if (options) {\n                var sizeChanged = false;\n                var textOptions = this.options;\n\n                options = this._textColor(options);\n\n                VisualBase.fn.redraw.call(this, options);\n\n                if (options.fontFamily || defined(options.fontSize) || options.fontStyle || options.fontWeight) {\n                    deepExtend(textOptions, {\n                        fontFamily: options.fontFamily,\n                        fontSize: options.fontSize,\n                        fontStyle: options.fontStyle,\n                        fontWeight: options.fontWeight\n                    });\n                    this._font();\n                    this.drawingElement.options.set(\"font\", textOptions.font);\n                    sizeChanged = true;\n                }\n\n                if (options.text) {\n                    this.content(options.text);\n                    sizeChanged = true;\n                }\n\n                if (!this._updateSize(options) && sizeChanged) {\n                    this._initSize();\n                }\n            }\n        }\n    });\n\n    deepExtend(TextBlock.fn, AutoSizeableMixin);\n\n    var Rectangle = VisualBase.extend({\n        init: function (options) {\n            VisualBase.fn.init.call(this, options);\n            this._initPath();\n            this._setPosition();\n        },\n\n        _setPosition: function() {\n            var options = this.options;\n            var x = options.x;\n            var y = options.y;\n            if (defined(x) || defined(y)) {\n                this.position(x || 0, y || 0);\n            }\n        },\n\n        redraw: function (options) {\n            if (options) {\n                VisualBase.fn.redraw.call(this, options);\n                if (this._diffNumericOptions(options, [WIDTH, HEIGHT])) {\n                    this._drawPath();\n                }\n                if (this._diffNumericOptions(options, [X, Y])) {\n                    this._setPosition();\n                }\n            }\n        },\n\n        _initPath: function() {\n            var options = this.options;\n            this.drawingElement = new d.Path({\n                stroke: options.stroke,\n                closed: true\n            });\n\n            this._fill();\n            this._drawPath();\n        },\n\n        _drawPath: function() {\n            var drawingElement = this.drawingElement;\n            var sizeOptions = sizeOptionsOrDefault(this.options);\n            var width = sizeOptions.width;\n            var height = sizeOptions.height;\n\n            drawingElement.segments.elements([\n                createSegment(0, 0),\n                createSegment(width, 0),\n                createSegment(width, height),\n                createSegment(0, height)\n            ]);\n        }\n    });\n\n    var MarkerBase = VisualBase.extend({\n        init: function(options) {\n           VisualBase.fn.init.call(this, options);\n           var anchor = this.options.anchor;\n           this.anchor = new g.Point(anchor.x, anchor.y);\n           this.createElement();\n        },\n\n        options: {\n           stroke: {\n                color: TRANSPARENT,\n                width: 0\n           },\n           fill: {\n                color: \"black\"\n           }\n        },\n\n        _transformToPath: function(point, path) {\n            var transform = path.transform();\n            if (point && transform) {\n                point = point.transformCopy(transform);\n            }\n            return point;\n        },\n\n        redraw: function(options) {\n            if (options) {\n                if (options.position) {\n                    this.options.position = options.position;\n                }\n\n                VisualBase.fn.redraw.call(this, options);\n            }\n        }\n    });\n\n    var CircleMarker = MarkerBase.extend({\n        options: {\n            radius: 4,\n            anchor: {\n                x: 0,\n                y: 0\n            }\n        },\n\n        createElement: function() {\n            var options = this.options;\n            this.drawingElement = new d.Circle(new g.Circle(this.anchor, options.radius), {\n                fill: options.fill,\n                stroke: options.stroke\n            });\n        },\n\n        positionMarker: function(path) {\n            var options = this.options;\n            var position = options.position;\n            var segments = path.segments;\n            var targetSegment;\n            var point;\n\n            if (position == START) {\n                targetSegment = segments[0];\n            } else {\n                targetSegment = segments[segments.length - 1];\n            }\n            if (targetSegment) {\n                point = this._transformToPath(targetSegment.anchor(), path);\n                this.drawingElement.transform(g.transform().translate(point.x, point.y));\n            }\n        }\n    });\n\n    var ArrowMarker = MarkerBase.extend({\n        options: {\n            path: \"M 0 0 L 10 5 L 0 10 L 3 5 z\"           ,\n            anchor: {\n                x: 10,\n                y: 5\n            }\n        },\n\n        createElement: function() {\n            var options = this.options;\n            this.drawingElement = d.Path.parse(options.path, {\n                fill: options.fill,\n                stroke: options.stroke\n            });\n        },\n\n        positionMarker: function(path) {\n            var points = this._linePoints(path);\n            var start = points.start;\n            var end = points.end;\n            var transform = g.transform();\n            if (start) {\n                transform.rotate(lineAngle(start, end), end);\n            }\n\n            if (end) {\n                var anchor = this.anchor;\n                var translate = end.clone().translate(-anchor.x, -anchor.y);\n                transform.translate(translate.x, translate.y);\n            }\n            this.drawingElement.transform(transform);\n        },\n\n        _linePoints: function(path) {\n            var options = this.options;\n            var segments = path.segments;\n            var startPoint, endPoint, targetSegment;\n            if (options.position == START) {\n                targetSegment = segments[0];\n                if (targetSegment) {\n                    endPoint = targetSegment.anchor();\n                    startPoint = targetSegment.controlOut();\n                    var nextSegment = segments[1];\n                    if (!startPoint && nextSegment) {\n                        startPoint = nextSegment.anchor();\n                    }\n                }\n            } else {\n                targetSegment = segments[segments.length - 1];\n                if (targetSegment) {\n                    endPoint = targetSegment.anchor();\n                    startPoint = targetSegment.controlIn();\n                    var prevSegment = segments[segments.length - 2];\n                    if (!startPoint && prevSegment) {\n                        startPoint = prevSegment.anchor();\n                    }\n                }\n            }\n            if (endPoint) {\n                return {\n                    start: this._transformToPath(startPoint, path),\n                    end: this._transformToPath(endPoint, path)\n                };\n            }\n        }\n    });\n\n    var MarkerPathMixin = {\n        _getPath: function(position) {\n            var path = this.drawingElement;\n            if (path instanceof d.MultiPath) {\n                if (position == START) {\n                    path = path.paths[0];\n                } else {\n                    path = path.paths[path.paths.length - 1];\n                }\n            }\n            if (path && path.segments.length) {\n                return path;\n            }\n        },\n\n        _normalizeMarkerOptions: function(options) {\n            var startCap = options.startCap;\n            var endCap = options.endCap;\n\n            if (isString(startCap)) {\n                options.startCap = {\n                    type: startCap\n                };\n            }\n\n            if (isString(endCap)) {\n                options.endCap = {\n                    type: endCap\n                };\n            }\n        },\n\n        _removeMarker: function(position) {\n            var marker = this._markers[position];\n            if (marker) {\n                this.drawingContainer().remove(marker.drawingElement);\n                delete this._markers[position];\n            }\n        },\n\n        _createMarkers: function() {\n            var options = this.options;\n            this._normalizeMarkerOptions(options);\n\n            this._markers = {};\n            this._markers[START] = this._createMarker(options.startCap, START);\n            this._markers[END] = this._createMarker(options.endCap, END);\n        },\n\n        _createMarker: function(options, position) {\n            var type = (options || {}).type;\n            var path = this._getPath(position);\n            var markerType, marker;\n            if (!path) {\n                this._removeMarker(position);\n                return;\n            }\n\n            if (type == Markers.filledCircle) {\n                markerType = CircleMarker;\n            } else if (type == Markers.arrowStart || type == Markers.arrowEnd){\n                markerType = ArrowMarker;\n            } else {\n                this._removeMarker(position);\n            }\n            if (markerType) {\n                marker = new markerType(deepExtend({}, options, {\n                    position: position\n                }));\n                marker.positionMarker(path);\n                this.drawingContainer().append(marker.drawingElement);\n\n                return marker;\n            }\n        },\n\n        _positionMarker : function(position) {\n            var marker = this._markers[position];\n\n            if (marker) {\n                var path = this._getPath(position);\n                if (path) {\n                    marker.positionMarker(path);\n                } else {\n                    this._removeMarker(position);\n                }\n            }\n        },\n\n        _capMap: {\n            start: \"startCap\",\n            end: \"endCap\"\n        },\n\n        _redrawMarker: function(pathChange, position, options) {\n            this._normalizeMarkerOptions(options);\n\n            var pathOptions = this.options;\n            var cap = this._capMap[position];\n            var pathCapType = (pathOptions[cap] || {}).type;\n            var optionsCap = options[cap];\n            var created = false;\n            if (optionsCap) {\n                pathOptions[cap] = deepExtend({}, pathOptions[cap], optionsCap);\n                if (optionsCap.type && pathCapType != optionsCap.type) {\n                    this._removeMarker(position);\n                    this._markers[position] = this._createMarker(pathOptions[cap], position);\n                    created  = true;\n                } else if (this._markers[position]) {\n                   this._markers[position].redraw(optionsCap);\n                }\n            } else if (pathChange && !this._markers[position] && pathOptions[cap]) {\n                this._markers[position] = this._createMarker(pathOptions[cap], position);\n                created = true;\n            }\n            return created;\n        },\n\n        _redrawMarkers: function (pathChange, options) {\n            if (!this._redrawMarker(pathChange, START, options) && pathChange) {\n                this._positionMarker(START);\n            }\n            if (!this._redrawMarker(pathChange, END, options) && pathChange) {\n                this._positionMarker(END);\n            }\n        }\n    };\n\n    var Path = VisualBase.extend({\n        init: function (options) {\n            VisualBase.fn.init.call(this, options);\n            this.container = new d.Group();\n            this._createElements();\n            this._initSize();\n        },\n\n        options: {\n            autoSize: true\n        },\n\n        drawingContainer: function() {\n            return this.container;\n        },\n\n        data: function (value) {\n            var options = this.options;\n            if (value) {\n                if (options.data != value) {\n                   options.data = value;\n                   this._setData(value);\n                   this._initSize();\n                   this._redrawMarkers(true, {});\n                }\n            } else {\n                return options.data;\n            }\n        },\n\n        redraw: function (options) {\n            if (options) {\n                VisualBase.fn.redraw.call(this, options);\n\n                var pathOptions = this.options;\n                var data = options.data;\n\n                if (defined(data) && pathOptions.data != data) {\n                    pathOptions.data = data;\n                    this._setData(data);\n                    if (!this._updateSize(options)) {\n                        this._initSize();\n                    }\n                    this._redrawMarkers(true, options);\n                } else {\n                    this._updateSize(options);\n                    this._redrawMarkers(false, options);\n                }\n            }\n        },\n\n        _createElements: function() {\n            var options = this.options;\n\n            this.drawingElement = d.Path.parse(options.data || \"\", {\n                stroke: options.stroke\n            });\n\n            this._fill();\n            this.container.append(this.drawingElement);\n            this._createMarkers();\n        },\n\n        _setData: function(data) {\n            var drawingElement = this.drawingElement;\n            var multipath = d.Path.parse(data || \"\");\n            var paths = multipath.paths.slice(0);\n            multipath.paths.elements([]);\n            drawingElement.paths.elements(paths);\n        }\n    });\n\n    deepExtend(Path.fn, AutoSizeableMixin);\n    deepExtend(Path.fn, MarkerPathMixin);\n\n    var Line = VisualBase.extend({\n        init: function (options) {\n            VisualBase.fn.init.call(this, options);\n            this.container = new d.Group();\n            this._initPath();\n            this._createMarkers();\n        },\n\n        drawingContainer: function() {\n            return this.container;\n        },\n\n        redraw: function (options) {\n            if (options) {\n                options = options || {};\n                var from = options.from;\n                var to = options.to;\n                if (from) {\n                    this.options.from = from;\n                }\n\n                if (to) {\n                    this.options.to = to;\n                }\n\n                if (from || to) {\n                    this._drawPath();\n                    this._redrawMarkers(true, options);\n                } else {\n                    this._redrawMarkers(false, options);\n                }\n\n                VisualBase.fn.redraw.call(this, options);\n            }\n        },\n\n        _initPath: function() {\n            var options = this.options;\n            var drawingElement = this.drawingElement = new d.Path({\n                stroke: options.stroke\n            });\n\n            this._fill();\n            this._drawPath();\n            this.container.append(drawingElement);\n        },\n\n        _drawPath: function() {\n            var options = this.options;\n            var drawingElement = this.drawingElement;\n            var from = options.from || new Point();\n            var to = options.to || new Point();\n\n            drawingElement.segments.elements([\n                createSegment(from.x, from.y),\n                createSegment(to.x, to.y)\n            ]);\n        }\n    });\n\n    deepExtend(Line.fn, MarkerPathMixin);\n\n    var Polyline = VisualBase.extend({\n        init: function (options) {\n            VisualBase.fn.init.call(this, options);\n            this.container = new d.Group();\n            this._initPath();\n            this._createMarkers();\n        },\n\n        drawingContainer: function() {\n            return this.container;\n        },\n\n        points: function (points) {\n            var options = this.options;\n            if (points) {\n                options.points = points;\n                this._updatePath();\n            } else {\n                return options.points;\n            }\n        },\n\n        redraw: function (options) {\n            if (options) {\n                var points = options.points;\n                VisualBase.fn.redraw.call(this, options);\n\n                if (points && this._pointsDiffer(points)) {\n                    this.points(points);\n                    this._redrawMarkers(true, options);\n                } else {\n                    this._redrawMarkers(false, options);\n                }\n            }\n        },\n\n        _initPath: function() {\n            var options = this.options;\n            this.drawingElement = new d.Path({\n                stroke: options.stroke\n            });\n\n            this._fill();\n            this.container.append(this.drawingElement);\n\n            if (options.points) {\n                this._updatePath();\n            }\n        },\n\n        _pointsDiffer: function(points) {\n            var currentPoints = this.options.points;\n            var differ = currentPoints.length !== points.length;\n            if (!differ) {\n                for (var i = 0; i < points.length; i++) {\n                    if (currentPoints[i].x !== points[i].x || currentPoints[i].y !== points[i].y) {\n                        differ = true;\n                        break;\n                    }\n                }\n            }\n\n            return differ;\n        },\n\n        _updatePath: function() {\n            var drawingElement = this.drawingElement;\n            var options = this.options;\n            var points = options.points;\n            var segments = [];\n            var point;\n            for (var i = 0; i < points.length; i++) {\n                point = points[i];\n                segments.push(createSegment(point.x, point.y));\n            }\n\n            drawingElement.segments.elements(segments);\n        },\n\n        options: {\n            points: []\n        }\n    });\n\n    deepExtend(Polyline.fn, MarkerPathMixin);\n\n    var Image = Element.extend({\n        init: function (options) {\n            Element.fn.init.call(this, options);\n\n            this._initImage();\n        },\n\n        redraw: function (options) {\n            if (options) {\n                if (options.source) {\n                    this.drawingElement.src(options.source);\n                }\n\n                if (this._diffNumericOptions(options, [WIDTH, HEIGHT, X, Y])) {\n                    this.drawingElement.rect(this._rect());\n                }\n\n                Element.fn.redraw.call(this, options);\n            }\n        },\n\n        _initImage: function() {\n            var options = this.options;\n            var rect = this._rect();\n\n            this.drawingElement = new d.Image(options.source, rect, {});\n        },\n\n        _rect: function() {\n            var sizeOptions = sizeOptionsOrDefault(this.options);\n            var origin = new g.Point(sizeOptions.x, sizeOptions.y);\n            var size = new g.Size(sizeOptions.width, sizeOptions.height);\n\n            return new g.Rect(origin, size);\n        }\n    });\n\n    var Group = Element.extend({\n        init: function (options) {\n            this.children = [];\n            Element.fn.init.call(this, options);\n            this.drawingElement = new d.Group();\n            this._initSize();\n        },\n\n        options: {\n            autoSize: false\n        },\n\n        append: function (visual) {\n            this.drawingElement.append(visual.drawingContainer());\n            this.children.push(visual);\n            this._childrenChange = true;\n        },\n\n        remove: function (visual) {\n            if (this._remove(visual)) {\n                this._childrenChange = true;\n            }\n        },\n\n        _remove: function(visual) {\n            var index = inArray(visual, this.children);\n            if (index >= 0) {\n                this.drawingElement.removeAt(index);\n                this.children.splice(index, 1);\n                return true;\n            }\n        },\n\n        clear: function () {\n            this.drawingElement.clear();\n            this.children = [];\n            this._childrenChange = true;\n        },\n\n        toFront: function (visuals) {\n            var visual;\n\n            for (var i = 0; i < visuals.length; i++) {\n                visual = visuals[i];\n                if (this._remove(visual)) {\n                    this.append(visual);\n                }\n            }\n        },\n        //TO DO: add drawing group support for moving and inserting children\n        toBack: function (visuals) {\n            this._reorderChildren(visuals, 0);\n        },\n\n        toIndex: function (visuals, indices) {\n            this._reorderChildren(visuals, indices);\n        },\n\n        _reorderChildren: function(visuals, indices) {\n            var group = this.drawingElement;\n            var drawingChildren = group.children.slice(0);\n            var children = this.children;\n            var fixedPosition = isNumber(indices);\n            var i, index, toIndex, drawingElement, visual;\n\n            for (i = 0; i < visuals.length; i++) {\n                visual = visuals[i];\n                drawingElement = visual.drawingContainer();\n\n                index = inArray(visual, children);\n                if (index >= 0) {\n                    drawingChildren.splice(index, 1);\n                    children.splice(index, 1);\n\n                    toIndex = fixedPosition ? indices : indices[i];\n\n                    drawingChildren.splice(toIndex, 0, drawingElement);\n                    children.splice(toIndex, 0, visual);\n                }\n            }\n            group.clear();\n            group.append.apply(group, drawingChildren);\n        },\n\n        redraw: function (options) {\n            if (options) {\n                if (this._childrenChange) {\n                    this._childrenChange = false;\n                    if (!this._updateSize(options)) {\n                        this._initSize();\n                    }\n                } else {\n                    this._updateSize(options);\n                }\n\n                Element.fn.redraw.call(this, options);\n            }\n        },\n\n        _boundingBox: function() {\n            var children = this.children;\n            var boundingBox;\n            var visual, childBoundingBox;\n            for (var i = 0; i < children.length; i++) {\n                visual = children[i];\n                if (visual.visible() && visual._includeInBBox !== false) {\n                    childBoundingBox = visual.drawingContainer().clippedBBox(null);\n                    if (childBoundingBox) {\n                        if (boundingBox) {\n                            boundingBox = g.Rect.union(boundingBox, childBoundingBox);\n                        } else {\n                            boundingBox = childBoundingBox;\n                        }\n                    }\n                }\n            }\n\n            return boundingBox;\n        }\n    });\n\n    deepExtend(Group.fn, AutoSizeableMixin);\n\n    var Layout = Group.extend({\n        init: function (rect, options) {\n            this.children = [];\n            Element.fn.init.call(this, options);\n            this.drawingElement = new d.Layout(toDrawingRect(rect), options);\n            this._initSize();\n        },\n\n        rect: function(rect) {\n            if (rect) {\n                this.drawingElement.rect(toDrawingRect(rect));\n            } else {\n                var drawingRect = this.drawingElement.rect();\n                if (drawingRect) {\n                    return new Rect(drawingRect.origin.x, drawingRect.origin.y, drawingRect.size.width, drawingRect.size.height);\n                }\n            }\n        },\n\n        reflow: function() {\n            this.drawingElement.reflow();\n        },\n\n        redraw: function (options) {\n            kendo.deepExtend(this.drawingElement.options, options);\n            Group.fn.redraw.call(this, options);\n        }\n    });\n\n    var Circle = VisualBase.extend({\n        init: function (options) {\n            VisualBase.fn.init.call(this, options);\n            this._initCircle();\n            this._initSize();\n        },\n\n        redraw: function (options) {\n            if (options) {\n                var circleOptions = this.options;\n\n                if (options.center) {\n                    deepExtend(circleOptions, {\n                        center: options.center\n                    });\n                    this._center.move(circleOptions.center.x, circleOptions.center.y);\n                }\n\n                if (this._diffNumericOptions(options, [\"radius\"])) {\n                    this._circle.setRadius(circleOptions.radius);\n                }\n\n                this._updateSize(options);\n\n                VisualBase.fn.redraw.call(this, options);\n            }\n        },\n\n        _initCircle: function() {\n            var options = this.options;\n            var width = options.width;\n            var height = options.height;\n            var radius = options.radius;\n            if (!defined(radius)) {\n                if (!defined(width)) {\n                    width = height;\n                }\n                if (!defined(height)) {\n                    height = width;\n                }\n                options.radius = radius = Math.min(width, height) / 2;\n            }\n\n            var center = options.center || {x: radius, y: radius};\n            this._center = new g.Point(center.x, center.y);\n            this._circle = new g.Circle(this._center, radius);\n            this.drawingElement = new d.Circle(this._circle, {\n                stroke: options.stroke\n            });\n\n            this._fill();\n        }\n    });\n    deepExtend(Circle.fn, AutoSizeableMixin);\n\n    var Canvas = Class.extend({\n        init: function (element, options) {\n            options = options || {};\n            this.element = element;\n            this.surface = d.Surface.create(element, options);\n            if (kendo.isFunction(this.surface.translate)) {\n                this.translate = this._translate;\n            }\n\n            this.drawingElement = new d.Group();\n            this._viewBox = new Rect(0, 0, options.width, options.height);\n            this.size(this._viewBox);\n        },\n\n        bounds: function () {\n            var box = this.drawingElement.clippedBBox();\n            return new Rect(0, 0, box.width(), box.height());\n        },\n\n        size: function (size) {\n            var viewBox = this._viewBox;\n            if (defined(size)) {\n                viewBox.width = size.width;\n                viewBox.height = size.height;\n                this.surface.setSize(size);\n            }\n            return {\n                width: viewBox.width,\n                height: viewBox.height\n            };\n        },\n\n        _translate: function (x, y) {\n            var viewBox = this._viewBox;\n            if (defined(x) && defined(y)) {\n                viewBox.x = x;\n                viewBox.y = y;\n                this.surface.translate({x: x, y: y});\n            }\n            return {\n                x: viewBox.x,\n                y: viewBox.y\n            };\n        },\n\n        draw: function() {\n            this.surface.draw(this.drawingElement);\n        },\n\n        append: function (visual) {\n            this.drawingElement.append(visual.drawingContainer());\n            return this;\n        },\n\n        remove: function (visual) {\n            this.drawingElement.remove(visual.drawingContainer());\n        },\n\n        insertBefore: function () {\n\n        },\n\n        clear: function () {\n            this.drawingElement.clear();\n        },\n\n        destroy: function(clearHtml) {\n            this.surface.destroy();\n            if(clearHtml) {\n                $(this.element).remove();\n            }\n        }\n    });\n\n    // Helper functions ===========================================\n\n    function sizeOptionsOrDefault(options) {\n        return {\n            x: options.x || 0,\n            y: options.y || 0,\n            width: options.width || 0,\n            height: options.height || 0\n        };\n    }\n\n    function normalizeDrawingOptions(options) {\n        if (options) {\n            var drawingOptions = options;\n\n            if (isString(drawingOptions)) {\n                drawingOptions = {\n                    color: drawingOptions\n                };\n            }\n\n            if (drawingOptions.color) {\n                drawingOptions.color = getColor(drawingOptions.color);\n            }\n            return drawingOptions;\n        }\n    }\n\n    function getColor(value) {\n        var color;\n        if (value != TRANSPARENT) {\n            color = new d.Color(value).toHex();\n        } else {\n            color = value;\n        }\n        return color;\n    }\n\n    function lineAngle(p1, p2) {\n        var xDiff = p2.x - p1.x;\n        var yDiff = p2.y - p1.y;\n        var angle = d.util.deg(Math.atan2(yDiff, xDiff));\n        return angle;\n    }\n\n    function createSegment(x, y) {\n        return new d.Segment(new g.Point(x, y));\n    }\n\n    function toDrawingRect(rect) {\n        if (rect) {\n            return new g.Rect([rect.x, rect.y], [rect.width, rect.height]);\n        }\n    }\n\n    // Exports ================================================================\n    kendo.deepExtend(diagram, {\n        init: function (element) {\n            kendo.init(element, diagram.ui);\n        },\n        diffNumericOptions: diffNumericOptions,\n        Element: Element,\n        Scale: Scale,\n        Translation: Translation,\n        Rotation: Rotation,\n        Circle: Circle,\n        Group: Group,\n        Rectangle: Rectangle,\n        Canvas: Canvas,\n        Path: Path,\n        Layout: Layout,\n        Line: Line,\n        MarkerBase: MarkerBase,\n        ArrowMarker: ArrowMarker,\n        CircleMarker: CircleMarker,\n        Polyline: Polyline,\n        CompositeTransform: CompositeTransform,\n        TextBlock: TextBlock,\n        Image: Image,\n        VisualBase: VisualBase\n    });\n})(window.kendo.jQuery);\n\n}, typeof define == 'function' && define.amd ? define : function(a1, a2, a3){ (a3 || a2)(); });\n\n(function (f, define) {\n    define('dataviz/diagram/services',[ \"../../kendo.drawing\", \"./svg\" ], f);\n})(function () {\n\n    (function ($, undefined) {\n        // Imports ================================================================\n        var kendo = window.kendo,\n            dataviz = kendo.dataviz,\n            diagram = dataviz.diagram,\n            Class = kendo.Class,\n            Group = diagram.Group,\n            Rect = diagram.Rect,\n            Rectangle = diagram.Rectangle,\n            Utils = diagram.Utils,\n            isUndefined = Utils.isUndefined,\n            Point = diagram.Point,\n            Circle = diagram.Circle,\n            Ticker = diagram.Ticker,\n            deepExtend = kendo.deepExtend,\n            Movable = kendo.ui.Movable,\n            util = kendo.drawing.util,\n            defined = util.defined,\n            inArray = $.inArray,\n            proxy = $.proxy;\n\n        // Constants ==============================================================\n        var Cursors = {\n                arrow: \"default\",\n                grip: \"pointer\",\n                cross: \"pointer\",\n                add: \"pointer\",\n                move: \"move\",\n                select: \"pointer\",\n                south: \"s-resize\",\n                east: \"e-resize\",\n                west: \"w-resize\",\n                north: \"n-resize\",\n                rowresize: \"row-resize\",\n                colresize: \"col-resize\"\n            },\n            HIT_TEST_DISTANCE = 10,\n            AUTO = \"Auto\",\n            TOP = \"Top\",\n            RIGHT = \"Right\",\n            LEFT = \"Left\",\n            BOTTOM = \"Bottom\",\n            DEFAULT_SNAP_SIZE = 10,\n            DEFAULT_SNAP_ANGLE = 10,\n            DRAG_START = \"dragStart\",\n            DRAG = \"drag\",\n            DRAG_END = \"dragEnd\",\n            ITEMROTATE = \"itemRotate\",\n            ITEMBOUNDSCHANGE = \"itemBoundsChange\",\n            MIN_SNAP_SIZE = 5,\n            MIN_SNAP_ANGLE = 5,\n            MOUSE_ENTER = \"mouseEnter\",\n            MOUSE_LEAVE = \"mouseLeave\",\n            ZOOM_START = \"zoomStart\",\n            ZOOM_END = \"zoomEnd\",\n            SCROLL_MIN = -20000,\n            SCROLL_MAX = 20000,\n            FRICTION = 0.90,\n            FRICTION_MOBILE = 0.93,\n            VELOCITY_MULTIPLIER = 5,\n            TRANSPARENT = \"transparent\",\n            PAN = \"pan\",\n            ROTATED = \"rotated\",\n            SOURCE = \"source\",\n            TARGET = \"target\",\n            HANDLE_NAMES = {\n                \"-1\": SOURCE,\n                \"1\": TARGET\n            };\n\n        diagram.Cursors = Cursors;\n\n        var PositionAdapter = kendo.Class.extend({\n            init: function (layoutState) {\n                this.layoutState = layoutState;\n                this.diagram = layoutState.diagram;\n            },\n            initState: function () {\n                this.froms = [];\n                this.tos = [];\n                this.subjects = [];\n                function pusher(id, bounds) {\n                    var shape = this.diagram.getShapeById(id);\n                    if (shape) {\n                        this.subjects.push(shape);\n                        this.froms.push(shape.bounds().topLeft());\n                        this.tos.push(bounds.topLeft());\n                    }\n                }\n\n                this.layoutState.nodeMap.forEach(pusher, this);\n            },\n            update: function (tick) {\n                if (this.subjects.length <= 0) {\n                    return;\n                }\n                for (var i = 0; i < this.subjects.length; i++) {\n                    //todo: define a Lerp function instead\n                    this.subjects[i].position(\n                        new Point(this.froms[i].x + (this.tos[i].x - this.froms[i].x) * tick, this.froms[i].y + (this.tos[i].y - this.froms[i].y) * tick)\n                    );\n                }\n            }\n        });\n\n        var LayoutUndoUnit = Class.extend({\n            init: function (initialState, finalState, animate) {\n                if (isUndefined(animate)) {\n                    this.animate = false;\n                }\n                else {\n                    this.animate = animate;\n                }\n                this._initialState = initialState;\n                this._finalState = finalState;\n                this.title = \"Diagram layout\";\n            },\n            undo: function () {\n                this.setState(this._initialState);\n            },\n            redo: function () {\n                this.setState(this._finalState);\n            },\n            setState: function (state) {\n                var diagram = state.diagram;\n                if (this.animate) {\n                    state.linkMap.forEach(\n                        function (id, points) {\n                            var conn = diagram.getShapeById(id);\n                            conn.visible(false);\n                            if (conn) {\n                                conn.points(points);\n                            }\n                        }\n                    );\n                    var ticker = new Ticker();\n                    ticker.addAdapter(new PositionAdapter(state));\n                    ticker.onComplete(function () {\n                        state.linkMap.forEach(\n                            function (id) {\n                                var conn = diagram.getShapeById(id);\n                                conn.visible(true);\n                            }\n                        );\n                    });\n                    ticker.play();\n                }\n                else {\n                    state.nodeMap.forEach(function (id, bounds) {\n                        var shape = diagram.getShapeById(id);\n                        if (shape) {\n                            shape.position(bounds.topLeft());\n                        }\n                    });\n                    state.linkMap.forEach(\n                        function (id, points) {\n                            var conn = diagram.getShapeById(id);\n                            if (conn) {\n                                conn.points(points);\n                            }\n                        }\n                    );\n                }\n            }\n        });\n\n        var CompositeUnit = Class.extend({\n            init: function (unit) {\n                this.units = [];\n                this.title = \"Composite unit\";\n                if (unit !== undefined) {\n                    this.units.push(unit);\n                }\n            },\n            add: function (undoUnit) {\n                this.units.push(undoUnit);\n            },\n            undo: function () {\n                for (var i = 0; i < this.units.length; i++) {\n                    this.units[i].undo();\n                }\n            },\n            redo: function () {\n                for (var i = 0; i < this.units.length; i++) {\n                    this.units[i].redo();\n                }\n            }\n        });\n\n        var ConnectionEditUnit = Class.extend({\n            init: function (item, redoSource, redoTarget) {\n                this.item = item;\n                this._redoSource = redoSource;\n                this._redoTarget = redoTarget;\n                if (defined(redoSource)) {\n                    this._undoSource = item.source();\n                }\n\n                if (defined(redoTarget)) {\n                    this._undoTarget = item.target();\n                }\n                this.title = \"Connection Editing\";\n            },\n            undo: function () {\n                if (this._undoSource !== undefined) {\n                    this.item._updateConnector(this._undoSource, \"source\");\n                }\n\n                if (this._undoTarget !== undefined) {\n                    this.item._updateConnector(this._undoTarget, \"target\");\n                }\n\n                this.item.updateModel();\n            },\n            redo: function () {\n                if (this._redoSource !== undefined) {\n                    this.item._updateConnector(this._redoSource, \"source\");\n                }\n\n                if (this._redoTarget !== undefined) {\n                    this.item._updateConnector(this._redoTarget, \"target\");\n                }\n\n                this.item.updateModel();\n            }\n        });\n\n        var ConnectionEditUndoUnit = Class.extend({\n            init: function (item, undoSource, undoTarget) {\n                this.item = item;\n                this._undoSource = undoSource;\n                this._undoTarget = undoTarget;\n                this._redoSource = item.source();\n                this._redoTarget = item.target();\n                this.title = \"Connection Editing\";\n            },\n            undo: function () {\n                this.item._updateConnector(this._undoSource, \"source\");\n                this.item._updateConnector(this._undoTarget, \"target\");\n                this.item.updateModel();\n            },\n            redo: function () {\n                this.item._updateConnector(this._redoSource, \"source\");\n                this.item._updateConnector(this._redoTarget, \"target\");\n                this.item.updateModel();\n            }\n        });\n\n        var DeleteConnectionUnit = Class.extend({\n            init: function (connection) {\n                this.connection = connection;\n                this.diagram = connection.diagram;\n                this.targetConnector = connection.targetConnector;\n                this.title = \"Delete connection\";\n            },\n            undo: function () {\n                this.diagram._addConnection(this.connection, false);\n            },\n            redo: function () {\n                this.diagram.remove(this.connection, false);\n            }\n        });\n\n        var DeleteShapeUnit = Class.extend({\n            init: function (shape) {\n                this.shape = shape;\n                this.diagram = shape.diagram;\n                this.title = \"Deletion\";\n            },\n            undo: function () {\n                this.diagram._addShape(this.shape, false);\n                this.shape.select(false);\n            },\n            redo: function () {\n                this.shape.select(false);\n                this.diagram.remove(this.shape, false);\n            }\n        });\n        /**\n         * Holds the undoredo state when performing a rotation, translation or scaling. The adorner is optional.\n         * @type {*}\n         */\n        var TransformUnit = Class.extend({\n            init: function (shapes, undoStates, adorner) {\n                this.shapes = shapes;\n                this.undoStates = undoStates;\n                this.title = \"Transformation\";\n                this.redoStates = [];\n                this.adorner = adorner;\n                for (var i = 0; i < this.shapes.length; i++) {\n                    var shape = this.shapes[i];\n                    this.redoStates.push(shape.bounds());\n                }\n            },\n            undo: function () {\n                for (var i = 0; i < this.shapes.length; i++) {\n                    var shape = this.shapes[i];\n                    shape.bounds(this.undoStates[i]);\n                    if (shape.hasOwnProperty(\"layout\")) {\n                        shape.layout(shape, this.redoStates[i], this.undoStates[i]);\n                    }\n                    shape.updateModel();\n                }\n                if (this.adorner) {\n                    this.adorner.refreshBounds();\n                    this.adorner.refresh();\n                }\n            },\n            redo: function () {\n                for (var i = 0; i < this.shapes.length; i++) {\n                    var shape = this.shapes[i];\n                    shape.bounds(this.redoStates[i]);\n                    // the 'layout' property, if implemented, lets the shape itself work out what to do with the new bounds\n                    if (shape.hasOwnProperty(\"layout\")) {\n                        shape.layout(shape, this.undoStates[i], this.redoStates[i]);\n                    }\n                    shape.updateModel();\n                }\n\n                if (this.adorner) {\n                    this.adorner.refreshBounds();\n                    this.adorner.refresh();\n                }\n            }\n        });\n\n        var AddConnectionUnit = Class.extend({\n            init: function (connection, diagram) {\n                this.connection = connection;\n                this.diagram = diagram;\n                this.title = \"New connection\";\n            },\n\n            undo: function () {\n                this.diagram.remove(this.connection, false);\n            },\n\n            redo: function () {\n                this.diagram._addConnection(this.connection, false);\n            }\n        });\n\n        var AddShapeUnit = Class.extend({\n            init: function (shape, diagram) {\n                this.shape = shape;\n                this.diagram = diagram;\n                this.title = \"New shape\";\n            },\n\n            undo: function () {\n                this.diagram.deselect();\n                this.diagram.remove(this.shape, false);\n            },\n\n            redo: function () {\n                this.diagram._addShape(this.shape, false);\n            }\n        });\n\n        var PanUndoUnit = Class.extend({\n            init: function (initialPosition, finalPosition, diagram) {\n                this.initial = initialPosition;\n                this.finalPos = finalPosition;\n                this.diagram = diagram;\n                this.title = \"Pan Unit\";\n            },\n            undo: function () {\n                this.diagram.pan(this.initial);\n            },\n            redo: function () {\n                this.diagram.pan(this.finalPos);\n            }\n        });\n\n        var RotateUnit = Class.extend({\n            init: function (adorner, shapes, undoRotates) {\n                this.shapes = shapes;\n                this.undoRotates = undoRotates;\n                this.title = \"Rotation\";\n                this.redoRotates = [];\n                this.redoAngle = adorner._angle;\n                this.adorner = adorner;\n                this.center = adorner._innerBounds.center();\n                for (var i = 0; i < this.shapes.length; i++) {\n                    var shape = this.shapes[i];\n                    this.redoRotates.push(shape.rotate().angle);\n                }\n            },\n            undo: function () {\n                var i, shape;\n                for (i = 0; i < this.shapes.length; i++) {\n                    shape = this.shapes[i];\n                    shape.rotate(this.undoRotates[i], this.center, false);\n                    if (shape.hasOwnProperty(\"layout\")) {\n                        shape.layout(shape);\n                    }\n                    shape.updateModel();\n                }\n                if (this.adorner) {\n                    this.adorner._initialize();\n                    this.adorner.refresh();\n                }\n            },\n            redo: function () {\n                var i, shape;\n                for (i = 0; i < this.shapes.length; i++) {\n                    shape = this.shapes[i];\n                    shape.rotate(this.redoRotates[i], this.center, false);\n                    if (shape.hasOwnProperty(\"layout\")) {\n                        shape.layout(shape);\n                    }\n                    shape.updateModel();\n                }\n                if (this.adorner) {\n                    this.adorner._initialize();\n                    this.adorner.refresh();\n                }\n            }\n        });\n\n        var ToFrontUnit = Class.extend({\n            init: function (diagram, items, initialIndices) {\n                this.diagram = diagram;\n                this.indices = initialIndices;\n                this.items = items;\n                this.title = \"Rotate Unit\";\n            },\n            undo: function () {\n                this.diagram._toIndex(this.items, this.indices);\n            },\n            redo: function () {\n                this.diagram.toFront(this.items, false);\n            }\n        });\n\n        var ToBackUnit = Class.extend({\n            init: function (diagram, items, initialIndices) {\n                this.diagram = diagram;\n                this.indices = initialIndices;\n                this.items = items;\n                this.title = \"Rotate Unit\";\n            },\n            undo: function () {\n                this.diagram._toIndex(this.items, this.indices);\n            },\n            redo: function () {\n                this.diagram.toBack(this.items, false);\n            }\n        });\n\n        /**\n         * Undo-redo service.\n         */\n        var UndoRedoService = kendo.Observable.extend({\n            init: function (options) {\n                kendo.Observable.fn.init.call(this, options);\n                this.bind(this.events, options);\n                this.stack = [];\n                this.index = 0;\n                this.capacity = 100;\n            },\n\n            events: [\"undone\", \"redone\"],\n\n            /**\n             * Starts the collection of units. Add those with\n             * the addCompositeItem method and call commit. Or cancel to forget about it.\n             */\n            begin: function () {\n                this.composite = new CompositeUnit();\n            },\n\n            /**\n             * Cancels the collection process of unit started with 'begin'.\n             */\n            cancel: function () {\n                this.composite = undefined;\n            },\n\n            /**\n             * Commits a batch of units.\n             */\n            commit: function (execute) {\n                if (this.composite.units.length > 0) {\n                    this._restart(this.composite, execute);\n                }\n                this.composite = undefined;\n            },\n\n            /**\n             * Adds a unit as part of the begin-commit batch.\n             * @param undoUnit\n             */\n            addCompositeItem: function (undoUnit) {\n                if (this.composite) {\n                    this.composite.add(undoUnit);\n                } else {\n                    this.add(undoUnit);\n                }\n            },\n\n            /**\n             * Standard addition of a unit. See also the batch version; begin-addCompositeUnit-commit methods.\n             * @param undoUnit The unit to be added.\n             * @param execute If false, the unit will be added but not executed.\n             */\n            add: function (undoUnit, execute) {\n                this._restart(undoUnit, execute);\n            },\n\n            /**\n             * Returns the number of undoable unit in the stack.\n             * @returns {Number}\n             */\n\n            pop: function() {\n                if (this.index > 0) {\n                    this.stack.pop();\n                    this.index--;\n                }\n            },\n\n            count: function () {\n                return this.stack.length;\n            },\n\n            /**\n             * Rollback of the unit on top of the stack.\n             */\n            undo: function () {\n                if (this.index > 0) {\n                    this.index--;\n                    this.stack[this.index].undo();\n                    this.trigger(\"undone\");\n                }\n            },\n\n            /**\n             * Redo of the last undone action.\n             */\n            redo: function () {\n                if (this.stack.length > 0 && this.index < this.stack.length) {\n                    this.stack[this.index].redo();\n                    this.index++;\n                    this.trigger(\"redone\");\n                }\n            },\n\n            _restart: function (composite, execute) {\n                // throw away anything beyond this point if this is a new branch\n                this.stack.splice(this.index, this.stack.length - this.index);\n                this.stack.push(composite);\n                if (execute !== false) {\n                    this.redo();\n                } else {\n                    this.index++;\n                }\n                // check the capacity\n                if (this.stack.length > this.capacity) {\n                    this.stack.splice(0, this.stack.length - this.capacity);\n                    this.index = this.capacity; //points to the end of the stack\n                }\n            },\n\n            /**\n             * Clears the stack.\n             */\n            clear: function () {\n                this.stack = [];\n                this.index = 0;\n            }\n        });\n\n// Tools =========================================\n\n        var EmptyTool = Class.extend({\n            init: function (toolService) {\n                this.toolService = toolService;\n            },\n            start: function () {\n            },\n            move: function () {\n            },\n            end: function () {\n            },\n            tryActivate: function () {\n                return false;\n            },\n            getCursor: function () {\n                return Cursors.arrow;\n            }\n        });\n\n        var ScrollerTool = EmptyTool.extend({\n            init: function (toolService) {\n                var tool = this;\n                var friction = kendo.support.mobileOS ? FRICTION_MOBILE : FRICTION;\n                EmptyTool.fn.init.call(tool, toolService);\n\n                var diagram = tool.toolService.diagram,\n                    canvas = diagram.canvas;\n\n                var scroller = diagram.scroller = tool.scroller = $(diagram.scrollable).kendoMobileScroller({\n                    friction: friction,\n                    velocityMultiplier: VELOCITY_MULTIPLIER,\n                    mousewheelScrolling: false,\n                    zoom: false,\n                    scroll: proxy(tool._move, tool)\n                }).data(\"kendoMobileScroller\");\n\n                if (canvas.translate) {\n                    tool.movableCanvas = new Movable(canvas.element);\n                }\n\n                var virtualScroll = function (dimension, min, max) {\n                    dimension.makeVirtual();\n                    dimension.virtualSize(min || SCROLL_MIN, max || SCROLL_MAX);\n                };\n\n                virtualScroll(scroller.dimensions.x);\n                virtualScroll(scroller.dimensions.y);\n                scroller.disable();\n            },\n\n            tryActivate: function (p, meta) {\n                var toolService = this.toolService;\n                var options = toolService.diagram.options.pannable;\n                var enabled = meta.ctrlKey;\n\n                if (defined(options.key)) {\n                    if (!options.key || options.key == \"none\") {\n                        enabled = noMeta(meta) && !defined(toolService.hoveredItem);\n                    } else {\n                        enabled = meta[options.key + \"Key\"];\n                    }\n                }\n\n                return  options !== false && enabled && !defined(toolService.hoveredAdorner) && !defined(toolService._hoveredConnector);\n            },\n\n            start: function () {\n                this.scroller.enable();\n            },\n            move: function () {\n            },//the tool itself should not handle the scrolling. Let kendo scroller take care of this part. Check _move\n            _move: function (args) {\n                var tool = this,\n                    diagram = tool.toolService.diagram,\n                    canvas = diagram.canvas,\n                    scrollPos = new Point(args.scrollLeft, args.scrollTop);\n\n                if (canvas.translate) {\n                    diagram._storePan(scrollPos.times(-1));\n                    tool.movableCanvas.moveTo(scrollPos);\n                    canvas.translate(scrollPos.x, scrollPos.y);\n                } else {\n                    scrollPos = scrollPos.plus(diagram._pan.times(-1));\n                }\n\n                diagram.trigger(PAN, {pan: scrollPos});\n            },\n            end: function () {\n                this.scroller.disable();\n            },\n            getCursor: function () {\n                return Cursors.move;\n            }\n        });\n\n        /**\n         * The tool handling the transformations via the adorner.\n         * @type {*}\n         */\n        var PointerTool = Class.extend({\n            init: function (toolService) {\n                this.toolService = toolService;\n            },\n            tryActivate: function () {\n                return true; // the pointer tool is last and handles all others requests.\n            },\n            start: function (p, meta) {\n                var toolService = this.toolService,\n                    diagram = toolService.diagram,\n                    hoveredItem = toolService.hoveredItem;\n\n                if (hoveredItem) {\n                    toolService.selectSingle(hoveredItem, meta);\n                    if (hoveredItem.adorner) { //connection\n                        this.adorner = hoveredItem.adorner;\n                        this.handle = this.adorner._hitTest(p);\n                    }\n                }\n\n                if (!this.handle) {\n                    this.handle = diagram._resizingAdorner._hitTest(p);\n                    if (this.handle) {\n                        this.adorner = diagram._resizingAdorner;\n                    }\n                }\n\n                if (this.adorner) {\n                    if (!this.adorner.isDragHandle(this.handle) || !diagram.trigger(DRAG_START, { shapes: this.adorner.shapes, connections: [] })) {\n                        this.adorner.start(p);\n                    } else {\n                        toolService.startPoint = p;\n                        toolService.end(p);\n                    }\n                }\n            },\n\n            move: function (p) {\n                if (this.adorner) {\n                    this.adorner.move(this.handle, p);\n                    if (this.adorner.isDragHandle(this.handle)) {\n                        this.toolService.diagram.trigger(DRAG, { shapes: this.adorner.shapes, connections: [] });\n                    }\n                }\n            },\n\n            end: function () {\n                var diagram = this.toolService.diagram,\n                    adorner = this.adorner,\n                    unit;\n\n                if (adorner) {\n                    if (!adorner.isDragHandle(this.handle) || !diagram.trigger(DRAG_END, { shapes: adorner.shapes, connections: [] })) {\n                        unit = adorner.stop();\n                        if (unit) {\n                            diagram.undoRedoService.add(unit, false);\n                        }\n                    } else {\n                        adorner.cancel();\n                    }\n                }\n\n                this.adorner = undefined;\n                this.handle = undefined;\n            },\n            getCursor: function (p) {\n                return this.toolService.hoveredItem ? this.toolService.hoveredItem._getCursor(p) : Cursors.arrow;\n            }\n        });\n\n        var SelectionTool = Class.extend({\n            init: function (toolService) {\n                this.toolService = toolService;\n            },\n            tryActivate: function (p, meta) {\n                var toolService = this.toolService;\n                var selectable = toolService.diagram.options.selectable;\n                var enabled = selectable && selectable.multiple !== false;\n\n                if (enabled) {\n                    if (selectable.key && selectable.key != \"none\") {\n                        enabled = meta[selectable.key + \"Key\"];\n                    } else {\n                        enabled = noMeta(meta);\n                    }\n                }\n\n                return enabled && !defined(toolService.hoveredItem) && !defined(toolService.hoveredAdorner);\n            },\n            start: function (p) {\n                var diagram = this.toolService.diagram;\n                diagram.deselect();\n                diagram.selector.start(p);\n            },\n            move: function (p) {\n                var diagram = this.toolService.diagram;\n                diagram.selector.move(p);\n            },\n            end: function (p, meta) {\n                var diagram = this.toolService.diagram, hoveredItem = this.toolService.hoveredItem;\n                var rect = diagram.selector.bounds();\n                if ((!hoveredItem || !hoveredItem.isSelected) && !meta.ctrlKey) {\n                    diagram.deselect();\n                }\n                if (!rect.isEmpty()) {\n                    diagram.selectArea(rect);\n                }\n                diagram.selector.end();\n            },\n            getCursor: function () {\n                return Cursors.arrow;\n            }\n        });\n\n        var ConnectionTool = Class.extend({\n            init: function (toolService) {\n                this.toolService = toolService;\n                this.type = \"ConnectionTool\";\n            },\n            tryActivate: function() {\n                return this.toolService._hoveredConnector;\n            },\n            start: function (p, meta) {\n                var toolService = this.toolService,\n                    diagram = toolService.diagram,\n                    connector = toolService._hoveredConnector,\n                    connection = diagram._createConnection({}, connector._c, p);\n\n                if (canDrag(connection) && !diagram.trigger(DRAG_START, { shapes: [], connections: [connection], connectionHandle: TARGET }) && diagram._addConnection(connection)) {\n                    toolService._connectionManipulation(connection, connector._c.shape, true);\n                    toolService._removeHover();\n                    toolService.selectSingle(toolService.activeConnection, meta);\n                    if (meta.type == \"touchmove\") {\n                        diagram._cachedTouchTarget = connector.visual;\n                    }\n                } else {\n                    connection.source(null);\n                    toolService.end(p);\n                }\n            },\n\n            move: function (p) {\n                var toolService = this.toolService;\n                var connection = toolService.activeConnection;\n\n                connection.target(p);\n                toolService.diagram.trigger(DRAG, { shapes: [], connections: [connection], connectionHandle: TARGET  });\n                return true;\n            },\n\n            end: function (p) {\n                var toolService = this.toolService,\n                    d = toolService.diagram,\n                    connection = toolService.activeConnection,\n                    hoveredItem = toolService.hoveredItem,\n                    connector = toolService._hoveredConnector,\n                    target,\n                    cachedTouchTarget = d._cachedTouchTarget;\n\n                if (!connection) {\n                    return;\n                }\n\n                if (connector && connector._c != connection.sourceConnector) {\n                    target = connector._c;\n                } else if (hoveredItem && hoveredItem instanceof diagram.Shape) {\n                    target = hoveredItem.getConnector(AUTO) || hoveredItem.getConnector(p);\n                } else {\n                    target = p;\n                }\n\n                connection.target(target);\n\n                if (!d.trigger(DRAG_END, { shapes: [], connections: [connection], connectionHandle: TARGET })) {\n                    connection.updateModel();\n                    d._syncConnectionChanges();\n                } else {\n                    d.remove(connection, false);\n                    d.undoRedoService.pop();\n                }\n                toolService._connectionManipulation();\n\n                if(cachedTouchTarget) {\n                    d._connectorsAdorner.visual.remove(cachedTouchTarget);\n                    d._cachedTouchTarget = null;\n                }\n            },\n\n            getCursor: function () {\n                return Cursors.arrow;\n            }\n        });\n\n        var ConnectionEditTool = Class.extend({\n            init: function (toolService) {\n                this.toolService = toolService;\n                this.type = \"ConnectionTool\";\n            },\n\n            tryActivate: function (p, meta) {\n                var toolService = this.toolService,\n                    diagram = toolService.diagram,\n                    selectable =  diagram.options.selectable,\n                    item = toolService.hoveredItem,\n                    isActive = selectable !== false &&\n                               item && item.path && !(item.isSelected && meta.ctrlKey);\n\n                if (isActive) {\n                    this._c = item;\n                }\n\n                return isActive;\n            },\n\n            start: function (p, meta) {\n                var toolService = this.toolService;\n                var connection = this._c;\n\n                toolService.selectSingle(connection, meta);\n\n                var adorner = connection.adorner;\n\n                var handle, name;\n                if (adorner) {\n                    handle = adorner._hitTest(p);\n                    name = HANDLE_NAMES[handle];\n                }\n\n                if (canDrag(connection) && adorner && !toolService.diagram.trigger(DRAG_START, { shapes: [], connections: [connection], connectionHandle: name })) {\n                    this.handle = handle;\n                    this.handleName = name;\n                    adorner.start(p);\n                } else {\n                    toolService.startPoint = p;\n                    toolService.end(p);\n                }\n            },\n\n            move: function (p) {\n                var adorner = this._c.adorner;\n                if (canDrag(this._c) && adorner) {\n                    adorner.move(this.handle, p);\n                    this.toolService.diagram.trigger(DRAG, { shapes: [], connections: [this._c], connectionHandle: this.handleName });\n\n                    return true;\n                }\n            },\n\n            end: function (p) {\n                var connection = this._c;\n                var adorner = connection.adorner;\n                var toolService = this.toolService;\n                var diagram = toolService.diagram;\n\n                if (adorner) {\n                    if (canDrag(connection)) {\n                        var unit = adorner.stop(p);\n                        if (!diagram.trigger(DRAG_END, { shapes: [], connections: [connection], connectionHandle: this.handleName })) {\n                            diagram.undoRedoService.add(unit, false);\n                            connection.updateModel();\n                            diagram._syncConnectionChanges();\n                        } else {\n                            unit.undo();\n                        }\n                    }\n                }\n            },\n\n            getCursor: function () {\n                return Cursors.move;\n            }\n        });\n\n        function testKey(key, str) {\n            return str.charCodeAt(0) == key || str.toUpperCase().charCodeAt(0) == key;\n        }\n\n        /**\n         * The service managing the tools.\n         * @type {*}\n         */\n        var ToolService = Class.extend({\n            init: function (diagram) {\n                this.diagram = diagram;\n                this.tools = [\n                    new ScrollerTool(this),\n                    new ConnectionEditTool(this),\n                    new ConnectionTool(this),\n                    new SelectionTool(this),\n                    new PointerTool(this)\n                ]; // the order matters.\n\n                this.activeTool = undefined;\n            },\n\n            start: function (p, meta) {\n                meta = deepExtend({}, meta);\n                if (this.activeTool) {\n                    this.activeTool.end(p, meta);\n                }\n                this._updateHoveredItem(p);\n                this._activateTool(p, meta);\n                this.activeTool.start(p, meta);\n                this._updateCursor(p);\n                this.diagram.focus();\n                this.diagram.canvas.surface.suspendTracking();\n                this.startPoint = p;\n                return true;\n            },\n\n            move: function (p, meta) {\n                meta = deepExtend({}, meta);\n                var updateHovered = true;\n                if (this.activeTool) {\n                    updateHovered = this.activeTool.move(p, meta);\n                }\n                if (updateHovered) {\n                    this._updateHoveredItem(p);\n                }\n                this._updateCursor(p);\n                return true;\n            },\n\n            end: function (p, meta) {\n                meta = deepExtend({}, meta);\n                if (this.activeTool) {\n                    this.activeTool.end(p, meta);\n                }\n                this.diagram.canvas.surface.resumeTracking();\n                this.activeTool = undefined;\n                this._updateCursor(p);\n                return true;\n            },\n\n            keyDown: function (key, meta) {\n                var diagram = this.diagram;\n                meta = deepExtend({ ctrlKey: false, metaKey: false, altKey: false }, meta);\n                if ((meta.ctrlKey || meta.metaKey) && !meta.altKey) {// ctrl or option\n                    if (testKey(key, \"a\")) {// A: select all\n                        diagram.selectAll();\n                        diagram._destroyToolBar();\n                        return true;\n                    } else if (testKey(key, \"z\")) {// Z: undo\n                        diagram.undo();\n                        diagram._destroyToolBar();\n                        return true;\n                    } else if (testKey(key, \"y\")) {// y: redo\n                        diagram.redo();\n                        diagram._destroyToolBar();\n                        return true;\n                    } else if (testKey(key, \"c\")) {\n                        diagram.copy();\n                        diagram._destroyToolBar();\n                    } else if (testKey(key, \"x\")) {\n                        diagram.cut();\n                        diagram._destroyToolBar();\n                    } else if (testKey(key, \"v\")) {\n                        diagram.paste();\n                        diagram._destroyToolBar();\n                    } else if (testKey(key, \"l\")) {\n                        diagram.layout();\n                        diagram._destroyToolBar();\n                    } else if (testKey(key, \"d\")) {\n                        diagram._destroyToolBar();\n                        diagram.copy();\n                        diagram.paste();\n                    }\n                } else if (key === 46 || key === 8) {// del: deletion\n                    var toRemove = this.diagram._triggerRemove(diagram.select());\n                    if (toRemove.length) {\n                        this.diagram.remove(toRemove, true);\n                        this.diagram._syncChanges();\n                        this.diagram._destroyToolBar();\n                    }\n\n                    return true;\n                } else if (key === 27) {// ESC: stop any action\n                    this._discardNewConnection();\n                    diagram.deselect();\n                    diagram._destroyToolBar();\n                    return true;\n                }\n\n            },\n            wheel: function (p, meta) {\n                var diagram = this.diagram,\n                    delta = meta.delta,\n                    z = diagram.zoom(),\n                    options = diagram.options,\n                    zoomRate = options.zoomRate,\n                    zoomOptions = { point: p, meta: meta, zoom: z };\n\n                if (diagram.trigger(ZOOM_START, zoomOptions)) {\n                    return;\n                }\n\n                if (delta < 0) {\n                    z += zoomRate;\n                } else {\n                    z -= zoomRate;\n                }\n\n                z = kendo.dataviz.round(Math.max(options.zoomMin, Math.min(options.zoomMax, z)), 2);\n                zoomOptions.zoom = z;\n\n                diagram.zoom(z, zoomOptions);\n                diagram.trigger(ZOOM_END, zoomOptions);\n\n                return true;\n            },\n            setTool: function (tool, index) {\n                tool.toolService = this;\n                this.tools[index] = tool;\n            },\n\n            selectSingle: function(item, meta) {\n                var diagram = this.diagram;\n                var selectable = diagram.options.selectable;\n                if (selectable && !item.isSelected && item.options.selectable !== false) {\n                    var addToSelection = meta.ctrlKey && selectable.multiple !== false;\n                    diagram.select(item, { addToSelection: addToSelection });\n                }\n            },\n\n            _discardNewConnection: function () {\n                if (this.newConnection) {\n                    this.diagram.remove(this.newConnection);\n                    this.newConnection = undefined;\n                }\n            },\n            _activateTool: function (p, meta) {\n                for (var i = 0; i < this.tools.length; i++) {\n                    var tool = this.tools[i];\n                    if (tool.tryActivate(p, meta)) {\n                        this.activeTool = tool;\n                        break; // activating the first available tool in the loop.\n                    }\n                }\n            },\n            _updateCursor: function (p) {\n                var element = this.diagram.element;\n                var cursor = this.activeTool ? this.activeTool.getCursor(p) : (this.hoveredAdorner ? this.hoveredAdorner._getCursor(p) : (this.hoveredItem ? this.hoveredItem._getCursor(p) : Cursors.arrow));\n\n                element.css({cursor: cursor});\n            },\n            _connectionManipulation: function (connection, disabledShape, isNew) {\n                this.activeConnection = connection;\n                this.disabledShape = disabledShape;\n                if (isNew) {\n                    this.newConnection = this.activeConnection;\n                } else {\n                    this.newConnection = undefined;\n                }\n            },\n            _updateHoveredItem: function (p) {\n                var hit = this._hitTest(p);\n                var diagram = this.diagram;\n\n                if (hit != this.hoveredItem && (!this.disabledShape || hit != this.disabledShape)) {\n                    if (this.hoveredItem) {\n                        diagram.trigger(MOUSE_LEAVE, { item: this.hoveredItem });\n                        this.hoveredItem._hover(false);\n                    }\n\n                    if (hit && hit.options.enable) {\n                        diagram.trigger(MOUSE_ENTER, { item: hit });\n\n                        this.hoveredItem = hit; // Shape, connection or connector\n                        this.hoveredItem._hover(true);\n                    } else {\n                        this.hoveredItem = undefined;\n                    }\n                }\n            },\n            _removeHover: function () {\n                if (this.hoveredItem) {\n                    this.hoveredItem._hover(false);\n                    this.hoveredItem = undefined;\n                }\n            },\n            _hitTest: function (point) {\n                var hit, d = this.diagram, item, i;\n\n                // connectors\n                if (this._hoveredConnector) {\n                    this._hoveredConnector._hover(false);\n                    this._hoveredConnector = undefined;\n                }\n                if (d._connectorsAdorner._visible) {\n                    hit = d._connectorsAdorner._hitTest(point);\n                    if (hit) {\n                        return hit;\n                    }\n                }\n\n                hit = this.diagram._resizingAdorner._hitTest(point);\n                if (hit) {\n                    this.hoveredAdorner = d._resizingAdorner;\n                    if (hit.x !== 0 || hit.y !== 0) { // hit testing for resizers or rotator, otherwise if (0,0) than pass through.\n                        return;\n                    }\n                    hit = undefined;\n                } else {\n                    this.hoveredAdorner = undefined;\n                }\n\n                if (!this.activeTool || this.activeTool.type !== \"ConnectionTool\") {\n                    var selectedConnections = []; // only the connections should have higher presence because the connection edit point is on top of connector.\n                    // TODO: This should be reworked. The connection adorner should be one for all selected connections and should be hit tested prior the connections and shapes itself.\n                    for (i = 0; i < d._selectedItems.length; i++) {\n                        item = d._selectedItems[i];\n                        if (item instanceof diagram.Connection) {\n                            selectedConnections.push(item);\n                        }\n                    }\n                    hit = this._hitTestItems(selectedConnections, point);\n                }\n\n                return hit || this._hitTestElements(point);\n            },\n\n            _hitTestElements: function(point) {\n                var diagram = this.diagram;\n                var shapeHit = this._hitTestItems(diagram.shapes, point);\n                var connectionHit = this._hitTestItems(diagram.connections, point);\n                var hit;\n\n                if ((!this.activeTool || this.activeTool.type != \"ConnectionTool\") && shapeHit && connectionHit && !hitTestShapeConnectors(shapeHit, point)) {\n                    var mainLayer = diagram.mainLayer;\n                    var shapeIdx = inArray(shapeHit.visual, mainLayer.children);\n                    var connectionIdx = inArray(connectionHit.visual, mainLayer.children);\n                    hit = shapeIdx > connectionIdx ? shapeHit : connectionHit;\n                }\n                return hit || shapeHit || connectionHit;\n            },\n\n            _hitTestItems: function (array, point) {\n                var i, item, hit;\n                for (i = array.length - 1; i >= 0; i--) {\n                    item = array[i];\n                    hit = item._hitTest(point);\n                    if (hit) {\n                        return hit;\n                    }\n                }\n            }\n        });\n\n// Routing =========================================\n\n        /**\n         * Base class for connection routers.\n         */\n        var ConnectionRouterBase = kendo.Class.extend({\n            init: function () {\n            }\n            /*route: function (connection) {\n             },\n             hitTest: function (p) {\n\n             },\n             getBounds: function () {\n\n             }*/\n        });\n\n        /**\n         * Base class for polyline and cascading routing.\n         */\n        var LinearConnectionRouter = ConnectionRouterBase.extend({\n            init: function (connection) {\n                var that = this;\n                ConnectionRouterBase.fn.init.call(that);\n                this.connection = connection;\n            },\n            /**\n             * Hit testing for polyline paths.\n             */\n            hitTest: function (p) {\n                var rec = this.getBounds().inflate(HIT_TEST_DISTANCE);\n                if (!rec.contains(p)) {\n                    return false;\n                }\n                return diagram.Geometry.distanceToPolyline(p, this.connection.allPoints()) < HIT_TEST_DISTANCE;\n            },\n\n            /**\n             * Bounds of a polyline.\n             * @returns {kendo.dataviz.diagram.Rect}\n             */\n            getBounds: function () {\n                var points = this.connection.allPoints(),\n                    s = points[0],\n                    e = points[points.length - 1],\n                    right = Math.max(s.x, e.x),\n                    left = Math.min(s.x, e.x),\n                    top = Math.min(s.y, e.y),\n                    bottom = Math.max(s.y, e.y);\n\n                for (var i = 1; i < points.length - 1; ++i) {\n                    right = Math.max(right, points[i].x);\n                    left = Math.min(left, points[i].x);\n                    top = Math.min(top, points[i].y);\n                    bottom = Math.max(bottom, points[i].y);\n                }\n\n                return new Rect(left, top, right - left, bottom - top);\n            }\n        });\n\n        /**\n         * A simple poly-linear routing which does not alter the intermediate points.\n         * Does hold the underlying hit, bounds....logic.\n         * @type {*|Object|void|extend|Zepto.extend|b.extend}\n         */\n        var PolylineRouter = LinearConnectionRouter.extend({\n            init: function (connection) {\n                var that = this;\n                LinearConnectionRouter.fn.init.call(that);\n                this.connection = connection;\n            },\n            route: function () {\n                // just keep the points as is\n            }\n        });\n\n        var CascadingRouter = LinearConnectionRouter.extend({\n            SAME_SIDE_DISTANCE_RATIO: 5,\n\n            init: function (connection) {\n                var that = this;\n                LinearConnectionRouter.fn.init.call(that);\n                this.connection = connection;\n            },\n\n            routePoints: function(start, end, sourceConnector, targetConnector) {\n                var result;\n\n                if (sourceConnector && targetConnector) {\n                    result = this._connectorPoints(start, end, sourceConnector, targetConnector);\n                } else {\n                    result = this._floatingPoints(start, end, sourceConnector);\n                }\n                return result;\n            },\n\n            route: function () {\n                var sourceConnector = this.connection._resolvedSourceConnector;\n                var targetConnector = this.connection._resolvedTargetConnector;\n                var start = this.connection.sourcePoint();\n                var end = this.connection.targetPoint();\n                var points = this.routePoints(start, end, sourceConnector, targetConnector);\n                this.connection.points(points);\n            },\n\n            _connectorSides: [{\n                name: \"Top\",\n                axis: \"y\",\n                boundsPoint: \"topLeft\",\n                secondarySign: 1\n            }, {\n                name: \"Left\",\n                axis: \"x\",\n                boundsPoint: \"topLeft\",\n                secondarySign: 1\n            }, {\n                name: \"Bottom\",\n                axis: \"y\",\n                boundsPoint: \"bottomRight\",\n                secondarySign: -1\n            }, {\n                name: \"Right\",\n                axis: \"x\",\n                boundsPoint: \"bottomRight\",\n                secondarySign: -1\n            }],\n\n            _connectorSide: function(connector, targetPoint) {\n                var position = connector.position();\n                var shapeBounds = connector.shape.bounds(ROTATED);\n                var bounds = {\n                    topLeft: shapeBounds.topLeft(),\n                    bottomRight: shapeBounds.bottomRight()\n                };\n                var sides = this._connectorSides;\n                var min = util.MAX_NUM;\n                var sideDistance;\n                var minSide;\n                var axis;\n                var side;\n                for (var idx = 0; idx < sides.length; idx++) {\n                    side = sides[idx];\n                    axis = side.axis;\n                    sideDistance = Math.round(Math.abs(position[axis] - bounds[side.boundsPoint][axis]));\n                    if (sideDistance < min) {\n                        min = sideDistance;\n                        minSide = side;\n                    } else if (sideDistance === min &&\n                        (position[axis] - targetPoint[axis]) * side.secondarySign > (position[minSide.axis] - targetPoint[minSide.axis]) * minSide.secondarySign) {\n                        minSide = side;\n                    }\n                }\n                return minSide.name;\n            },\n\n            _sameSideDistance: function(connector) {\n                var bounds = connector.shape.bounds(ROTATED);\n                return Math.min(bounds.width, bounds.height) / this.SAME_SIDE_DISTANCE_RATIO;\n            },\n\n            _connectorPoints: function(start, end, sourceConnector, targetConnector) {\n                var sourceConnectorSide = this._connectorSide(sourceConnector, end);\n                var targetConnectorSide = this._connectorSide(targetConnector, start);\n                var deltaX = end.x - start.x;\n                var deltaY = end.y - start.y;\n                var sameSideDistance = this._sameSideDistance(sourceConnector);\n                var result = [];\n                var pointX, pointY;\n\n                if (sourceConnectorSide === TOP || sourceConnectorSide == BOTTOM) {\n                    if (targetConnectorSide == TOP || targetConnectorSide == BOTTOM) {\n                        if (sourceConnectorSide == targetConnectorSide) {\n                            if (sourceConnectorSide == TOP) {\n                                pointY = Math.min(start.y, end.y) - sameSideDistance;\n                            } else {\n                                pointY = Math.max(start.y, end.y) + sameSideDistance;\n                            }\n                            result = [new Point(start.x, pointY), new Point(end.x, pointY)];\n                        } else {\n                            result = [new Point(start.x, start.y + deltaY / 2), new Point(end.x, start.y + deltaY / 2)];\n                        }\n                    } else {\n                        result = [new Point(start.x, end.y)];\n                    }\n                } else {\n                    if (targetConnectorSide == LEFT || targetConnectorSide == RIGHT) {\n                        if (sourceConnectorSide == targetConnectorSide) {\n                            if (sourceConnectorSide == LEFT) {\n                                pointX = Math.min(start.x, end.x) - sameSideDistance;\n                            } else {\n                                pointX = Math.max(start.x, end.x) + sameSideDistance;\n                            }\n                            result = [new Point(pointX, start.y), new Point(pointX, end.y)];\n                        } else {\n                            result = [new Point(start.x + deltaX / 2, start.y), new Point(start.x + deltaX / 2, start.y + deltaY)];\n                        }\n                    } else {\n                        result = [new Point(end.x, start.y)];\n                    }\n                }\n                return result;\n            },\n\n            _floatingPoints: function(start, end, sourceConnector) {\n                var sourceConnectorSide = sourceConnector ? this._connectorSide(sourceConnector, end) : null;\n                var cascadeStartHorizontal = this._startHorizontal(start, end, sourceConnectorSide);\n                var points = [start, start, end, end];\n                var deltaX = end.x - start.x;\n                var deltaY = end.y - start.y;\n                var length = points.length;\n                var shiftX;\n                var shiftY;\n\n                // note that this is more generic than needed for only two intermediate points.\n                for (var idx = 1; idx < length - 1; ++idx) {\n                    if (cascadeStartHorizontal) {\n                        if (idx % 2 !== 0) {\n                            shiftX = deltaX / (length / 2);\n                            shiftY = 0;\n                        }\n                        else {\n                            shiftX = 0;\n                            shiftY = deltaY / ((length - 1) / 2);\n                        }\n                    }\n                    else {\n                        if (idx % 2 !== 0) {\n                            shiftX = 0;\n                            shiftY = deltaY / (length / 2);\n                        }\n                        else {\n                            shiftX = deltaX / ((length - 1) / 2);\n                            shiftY = 0;\n                        }\n                    }\n                    points[idx] = new Point(points[idx - 1].x + shiftX, points[idx - 1].y + shiftY);\n                }\n                // need to fix the wrong 1.5 factor of the last intermediate point\n                idx--;\n                if ((cascadeStartHorizontal && (idx % 2 !== 0)) || (!cascadeStartHorizontal && (idx % 2 === 0))) {\n                    points[length - 2] = new Point(points[length - 1].x, points[length - 2].y);\n                } else {\n                    points[length - 2] = new Point(points[length - 2].x, points[length - 1].y);\n                }\n\n                return [points[1], points[2]];\n            },\n\n            _startHorizontal: function (start, end, sourceSide) {\n                var horizontal;\n                if (sourceSide !== null && (sourceSide === RIGHT || sourceSide === LEFT)) {\n                    horizontal = true;\n                } else {\n                    horizontal = Math.abs(start.x - end.x) > Math.abs(start.y - end.y);\n                }\n\n                return horizontal;\n            }\n        });\n\n// Adorners =========================================\n\n        var AdornerBase = Class.extend({\n            init: function (diagram, options) {\n                var that = this;\n                that.diagram = diagram;\n                that.options = deepExtend({}, that.options, options);\n                that.visual = new Group();\n                that.diagram._adorners.push(that);\n            },\n            refresh: function () {\n\n            }\n        });\n\n        var ConnectionEditAdorner = AdornerBase.extend({\n            init: function (connection, options) {\n                var that = this, diagram;\n                that.connection = connection;\n                diagram = that.connection.diagram;\n                that._ts = diagram.toolService;\n                AdornerBase.fn.init.call(that, diagram, options);\n                var sp = that.connection.sourcePoint();\n                var tp = that.connection.targetPoint();\n                that.spVisual = new Circle(deepExtend(that.options.handles, { center: sp }));\n                that.epVisual = new Circle(deepExtend(that.options.handles, { center: tp }));\n                that.visual.append(that.spVisual);\n                that.visual.append(that.epVisual);\n            },\n\n            options: {\n                handles: {}\n            },\n\n            _getCursor: function () {\n                return Cursors.move;\n            },\n\n            start: function (p) {\n                this.handle = this._hitTest(p);\n                this.startPoint = p;\n                this._initialSource = this.connection.source();\n                this._initialTarget = this.connection.target();\n                switch (this.handle) {\n                    case -1:\n                        if (this.connection.targetConnector) {\n                            this._ts._connectionManipulation(this.connection, this.connection.targetConnector.shape);\n                        }\n                        break;\n                    case 1:\n                        if (this.connection.sourceConnector) {\n                            this._ts._connectionManipulation(this.connection, this.connection.sourceConnector.shape);\n                        }\n                        break;\n                }\n            },\n\n            move: function (handle, p) {\n                switch (handle) {\n                    case -1:\n                        this.connection.source(p);\n                        break;\n                    case 1:\n                        this.connection.target(p);\n                        break;\n                    default:\n                        var delta = p.minus(this.startPoint);\n                        this.startPoint = p;\n                        if (!this.connection.sourceConnector) {\n                            this.connection.source(this.connection.sourcePoint().plus(delta));\n                        }\n                        if (!this.connection.targetConnector) {\n                            this.connection.target(this.connection.targetPoint().plus(delta));\n                        }\n                        break;\n                }\n                this.refresh();\n                return true;\n            },\n\n            stop: function (p) {\n                var ts = this.diagram.toolService, item = ts.hoveredItem, target;\n                if (ts._hoveredConnector) {\n                    target = ts._hoveredConnector._c;\n                } else if (item && item instanceof diagram.Shape) {\n                    target = item.getConnector(AUTO) || item.getConnector(p);\n                } else {\n                    target = p;\n                }\n\n                if (this.handle === -1) {\n                    this.connection.source(target);\n                } else if (this.handle === 1) {\n                    this.connection.target(target);\n                }\n\n                this.handle = undefined;\n                this._ts._connectionManipulation();\n                return new ConnectionEditUndoUnit(this.connection, this._initialSource, this._initialTarget);\n            },\n\n            _hitTest: function (point) {\n                var sourcePoint = this.connection.sourcePoint();\n                var targetPoint = this.connection.targetPoint();\n                var radiusX = this.options.handles.width / 2 + HIT_TEST_DISTANCE;\n                var radiusY = this.options.handles.height / 2 + HIT_TEST_DISTANCE;\n                var sourcePointDistance = sourcePoint.distanceTo(point);\n                var targetPointDistance = targetPoint.distanceTo(point);\n                var sourceHandle = new Rect(sourcePoint.x, sourcePoint.y).inflate(radiusX, radiusY).contains(point);\n                var targetHandle = new Rect(targetPoint.x, targetPoint.y).inflate(radiusX, radiusY).contains(point);\n                var handle = 0;\n\n                if (sourceHandle && (!targetHandle || sourcePointDistance < targetPointDistance)) {\n                    handle = -1;\n                } else if (targetHandle && (!sourceHandle || targetPointDistance < sourcePointDistance)) {\n                    handle = 1;\n                }\n\n                return handle;\n            },\n\n            refresh: function () {\n                this.spVisual.redraw({ center: this.diagram.modelToLayer(this.connection.sourcePoint()) });\n                this.epVisual.redraw({ center: this.diagram.modelToLayer(this.connection.targetPoint()) });\n            }\n        });\n\n        var ConnectorsAdorner = AdornerBase.extend({\n            init: function (diagram, options) {\n                var that = this;\n                AdornerBase.fn.init.call(that, diagram, options);\n                that._refreshHandler = function (e) {\n                    if (e.item == that.shape) {\n                        that.refresh();\n                    }\n                };\n            },\n\n            show: function (shape) {\n                var that = this, len, i, ctr;\n                that._visible = true;\n                that.shape = shape;\n                that.diagram.bind(ITEMBOUNDSCHANGE, that._refreshHandler);\n                len = shape.connectors.length;\n                that.connectors = [];\n                that._clearVisual();\n                for (i = 0; i < len; i++) {\n                    ctr = new ConnectorVisual(shape.connectors[i]);\n                    that.connectors.push(ctr);\n                    that.visual.append(ctr.visual);\n                }\n                that.visual.visible(true);\n                that.refresh();\n            },\n\n            _clearVisual: function() {\n                var that = this;\n                if(that.diagram._cachedTouchTarget) {\n                    that._keepCachedTouchTarget();\n                } else {\n                    that.visual.clear();\n                }\n            },\n\n            _keepCachedTouchTarget: function () {\n                var that = this,\n                    visualChildren = that.visual.children;\n                var childrenCount = visualChildren.length;\n                var index = inArray(that.diagram._cachedTouchTarget, visualChildren);\n                for (var i = childrenCount - 1; i >= 0; i--) {\n                    if(i == index) {\n                        continue;\n                    }\n                    that.visual.remove(visualChildren[i]);\n                }\n            },\n\n            destroy: function () {\n                var that = this;\n                that.diagram.unbind(ITEMBOUNDSCHANGE, that._refreshHandler);\n                that.shape = undefined;\n                that._visible = undefined;\n                that.visual.visible(false);\n            },\n\n            _hitTest: function (p) {\n                var ctr, i;\n                for (i = 0; i < this.connectors.length; i++) {\n                    ctr = this.connectors[i];\n                    if (ctr._hitTest(p)) {\n                        ctr._hover(true);\n                        this.diagram.toolService._hoveredConnector = ctr;\n                        break;\n                    }\n                }\n            },\n\n            refresh: function () {\n                if (this.shape) {\n                    var bounds = this.shape.bounds();\n                        bounds = this.diagram.modelToLayer(bounds);\n                    this.visual.position(bounds.topLeft());\n                    $.each(this.connectors, function () {\n                        this.refresh();\n                    });\n                }\n            }\n        });\n\n        function hitToOppositeSide(hit, bounds) {\n            var result;\n\n            if (hit.x == -1 && hit.y == -1) {\n                result = bounds.bottomRight();\n            } else if (hit.x == 1 && hit.y == 1) {\n                result = bounds.topLeft();\n            } else if (hit.x == -1 && hit.y == 1) {\n                result = bounds.topRight();\n            } else if (hit.x == 1 && hit.y == -1) {\n                result = bounds.bottomLeft();\n            } else if (hit.x === 0 && hit.y == -1) {\n                result = bounds.bottom();\n            } else if (hit.x === 0 && hit.y == 1) {\n                result = bounds.top();\n            } else if (hit.x == 1 && hit.y === 0) {\n                result = bounds.left();\n            } else if (hit.x == -1 && hit.y === 0) {\n                result = bounds.right();\n            }\n\n            return result;\n        }\n\n        var ResizingAdorner = AdornerBase.extend({\n            init: function (diagram, options) {\n                var that = this;\n                AdornerBase.fn.init.call(that, diagram, options);\n                that._manipulating = false;\n                that.map = [];\n                that.shapes = [];\n\n                that._initSelection();\n                that._createHandles();\n                that.redraw();\n                that.diagram.bind(\"select\", function (e) {\n                    that._initialize(e.selected);\n                });\n\n                that._refreshHandler = function () {\n                    if (!that._internalChange) {\n                        that.refreshBounds();\n                        that.refresh();\n                    }\n                };\n\n                that._rotatedHandler = function () {\n                    if (that.shapes.length == 1) {\n                        that._angle = that.shapes[0].rotate().angle;\n                    }\n                    that._refreshHandler();\n                };\n\n                that.diagram.bind(ITEMBOUNDSCHANGE, that._refreshHandler).bind(ITEMROTATE, that._rotatedHandler);\n                that.refreshBounds();\n                that.refresh();\n            },\n\n            options: {\n                handles: {\n                    fill: {\n                        color: \"#fff\"\n                    },\n                    stroke: {\n                        color: \"#282828\"\n                    },\n                    height: 7,\n                    width: 7,\n                    hover: {\n                        fill: {\n                            color: \"#282828\"\n                        },\n                        stroke: {\n                            color: \"#282828\"\n                        }\n                    }\n                },\n                selectable: {\n                    stroke: {\n                        color: \"#778899\",\n                        width: 1,\n                        dashType: \"dash\"\n                    },\n                    fill: {\n                        color: TRANSPARENT\n                    }\n                },\n                offset: 10\n            },\n\n            _initSelection: function() {\n                var that = this;\n                var diagram = that.diagram;\n                var selectable = diagram.options.selectable;\n                var options = deepExtend({}, that.options.selectable, selectable);\n                that.rect = new Rectangle(options);\n                that.visual.append(that.rect);\n            },\n\n            _resizable: function() {\n                return this.options.editable && this.options.editable.resize !== false;\n            },\n\n            _handleOptions: function() {\n                return (this.options.editable.resize || {}).handles || this.options.handles;\n            },\n\n            _createHandles: function() {\n                var handles, item, y, x;\n\n                if (this._resizable()) {\n                    handles = this._handleOptions();\n                    for (x = -1; x <= 1; x++) {\n                        for (y = -1; y <= 1; y++) {\n                            if ((x !== 0) || (y !== 0)) { // (0, 0) element, (-1, -1) top-left, (+1, +1) bottom-right\n                                item = new Rectangle(handles);\n                                item.drawingElement._hover = proxy(this._hover, this);\n                                this.map.push({ x: x, y: y, visual: item });\n                                this.visual.append(item);\n                            }\n                        }\n                    }\n                }\n            },\n\n            bounds: function (value) {\n                if (value) {\n                    this._innerBounds = value.clone();\n                    this._bounds = this.diagram.modelToLayer(value).inflate(this.options.offset, this.options.offset);\n                } else {\n                    return this._bounds;\n                }\n            },\n\n            _hitTest: function (p) {\n                var tp = this.diagram.modelToLayer(p),\n                    i, hit, handleBounds, handlesCount = this.map.length, handle;\n\n                if (this._angle) {\n                    tp = tp.clone().rotate(this._bounds.center(), this._angle);\n                }\n\n                if (this._resizable()) {\n                    for (i = 0; i < handlesCount; i++) {\n                        handle = this.map[i];\n                        hit = new Point(handle.x, handle.y);\n                        handleBounds = this._getHandleBounds(hit); //local coordinates\n                        handleBounds.offset(this._bounds.x, this._bounds.y);\n                        if (handleBounds.contains(tp)) {\n                            return hit;\n                        }\n                    }\n                }\n\n                if (this._bounds.contains(tp)) {\n                    return new Point(0, 0);\n                }\n            },\n\n            _getHandleBounds: function (p) {\n                if (this._resizable()) {\n                    var handles = this._handleOptions(),\n                        w = handles.width,\n                        h = handles.height,\n                        r = new Rect(0, 0, w, h);\n\n                    if (p.x < 0) {\n                        r.x = - w / 2;\n                    } else if (p.x === 0) {\n                        r.x = Math.floor(this._bounds.width / 2) - w / 2;\n                    } else if (p.x > 0) {\n                        r.x = this._bounds.width + 1.0 - w / 2;\n                    } if (p.y < 0) {\n                        r.y = - h / 2;\n                    } else if (p.y === 0) {\n                        r.y = Math.floor(this._bounds.height / 2) - h / 2;\n                    } else if (p.y > 0) {\n                        r.y = this._bounds.height + 1.0 - h / 2;\n                    }\n\n                    return r;\n                }\n            },\n\n            _getCursor: function (point) {\n                var hit = this._hitTest(point);\n                if (hit && (hit.x >= -1) && (hit.x <= 1) && (hit.y >= -1) && (hit.y <= 1) && this._resizable()) {\n                    var angle = this._angle;\n                    if (angle) {\n                        angle = 360 - angle;\n                        hit.rotate(new Point(0, 0), angle);\n                        hit = new Point(Math.round(hit.x), Math.round(hit.y));\n                    }\n\n                    if (hit.x == -1 && hit.y == -1) {\n                        return \"nw-resize\";\n                    }\n                    if (hit.x == 1 && hit.y == 1) {\n                        return \"se-resize\";\n                    }\n                    if (hit.x == -1 && hit.y == 1) {\n                        return \"sw-resize\";\n                    }\n                    if (hit.x == 1 && hit.y == -1) {\n                        return \"ne-resize\";\n                    }\n                    if (hit.x === 0 && hit.y == -1) {\n                        return \"n-resize\";\n                    }\n                    if (hit.x === 0 && hit.y == 1) {\n                        return \"s-resize\";\n                    }\n                    if (hit.x == 1 && hit.y === 0) {\n                        return \"e-resize\";\n                    }\n                    if (hit.x == -1 && hit.y === 0) {\n                        return \"w-resize\";\n                    }\n                }\n                return this._manipulating ? Cursors.move : Cursors.select;\n            },\n\n            _initialize: function() {\n                var that = this, i, item,\n                    items = that.diagram.select();\n\n                that.shapes = [];\n                for (i = 0; i < items.length; i++) {\n                    item = items[i];\n                    if (item instanceof diagram.Shape) {\n                        that.shapes.push(item);\n                        item._rotationOffset = new Point();\n                    }\n                }\n\n                that._angle = that.shapes.length == 1 ? that.shapes[0].rotate().angle : 0;\n                that._startAngle = that._angle;\n                that._rotates();\n                that._positions();\n                that.refreshBounds();\n                that.refresh();\n                that.redraw();\n            },\n\n            _rotates: function () {\n                var that = this, i, shape;\n                that.initialRotates = [];\n                for (i = 0; i < that.shapes.length; i++) {\n                    shape = that.shapes[i];\n                    that.initialRotates.push(shape.rotate().angle);\n                }\n            },\n\n            _positions: function () {\n                var that = this, i, shape;\n                that.initialStates = [];\n                for (i = 0; i < that.shapes.length; i++) {\n                    shape = that.shapes[i];\n                    that.initialStates.push(shape.bounds());\n                }\n            },\n\n            _hover: function(value, element) {\n                if (this._resizable()) {\n                    var handleOptions = this._handleOptions(),\n                        hover = handleOptions.hover,\n                        stroke = handleOptions.stroke,\n                        fill = handleOptions.fill;\n\n                    if (value && Utils.isDefined(hover.stroke)) {\n                        stroke = deepExtend({}, stroke, hover.stroke);\n                    }\n\n                    if (value && Utils.isDefined(hover.fill)) {\n                        fill = hover.fill;\n                    }\n                    element.stroke(stroke.color, stroke.width, stroke.opacity);\n                    element.fill(fill.color, fill.opacity);\n                }\n            },\n\n            start: function (p) {\n                this._sp = p;\n                this._cp = p;\n                this._lp = p;\n                this._manipulating = true;\n                this._internalChange = true;\n                this.shapeStates = [];\n                for (var i = 0; i < this.shapes.length; i++) {\n                    var shape = this.shapes[i];\n                    this.shapeStates.push(shape.bounds());\n                }\n            },\n\n            redraw: function () {\n                var i, handle,\n                    visibleHandles = this._resizable();\n\n                for (i = 0; i < this.map.length; i++) {\n                    handle = this.map[i];\n                    handle.visual.visible(visibleHandles);\n                }\n            },\n\n            angle: function(value) {\n                if (defined(value)) {\n                    this._angle = value;\n                }\n\n                return this._angle;\n            },\n\n            rotate: function() {\n                var center = this._innerBounds.center();\n                var currentAngle = this.angle();\n                this._internalChange = true;\n                for (var i = 0; i < this.shapes.length; i++) {\n                    var shape = this.shapes[i];\n                    currentAngle = (currentAngle + this.initialRotates[i] - this._startAngle) % 360;\n                    shape.rotate(currentAngle, center);\n                }\n                this.refresh();\n            },\n\n            move: function (handle, p) {\n                var delta, dragging,\n                    dtl = new Point(),\n                    dbr = new Point(),\n                    bounds, center, shape,\n                    i, angle, newBounds,\n                    changed = 0, staticPoint,\n                    scaleX, scaleY;\n\n                if (handle.y === -2 && handle.x === -1) {\n                    center = this._innerBounds.center();\n                    this._angle = this._truncateAngle(Utils.findAngle(center, p));\n                    for (i = 0; i < this.shapes.length; i++) {\n                        shape = this.shapes[i];\n                        angle = (this._angle + this.initialRotates[i] - this._startAngle) % 360;\n                        shape.rotate(angle, center);\n                        if (shape.hasOwnProperty(\"layout\")) {\n                            shape.layout(shape);\n                        }\n                        this._rotating = true;\n                    }\n                    this.refresh();\n                } else {\n                    if (this.shouldSnap()) {\n                        var thr = this._truncateDistance(p.minus(this._lp));\n                        // threshold\n                        if (thr.x === 0 && thr.y === 0) {\n                            this._cp = p;\n                            return;\n                        }\n                        delta = thr;\n                        this._lp = new Point(this._lp.x + thr.x, this._lp.y + thr.y);\n                    } else {\n                        delta = p.minus(this._cp);\n                    }\n\n                    if (this.isDragHandle(handle)) {\n                        dbr = dtl = delta; // dragging\n                        dragging = true;\n                    } else {\n                        if (this._angle) { // adjust the delta so that resizers resize in the correct direction after rotation.\n                            delta.rotate(new Point(0, 0), this._angle);\n                        }\n                        if (handle.x == -1) {\n                            dtl.x = delta.x;\n                        } else if (handle.x == 1) {\n                            dbr.x = delta.x;\n                        }\n                        if (handle.y == -1) {\n                            dtl.y = delta.y;\n                        } else if (handle.y == 1) {\n                            dbr.y = delta.y;\n                        }\n                    }\n\n                    if (!dragging) {\n                        staticPoint = hitToOppositeSide(handle, this._innerBounds);\n                        scaleX = (this._innerBounds.width + delta.x * handle.x) / this._innerBounds.width;\n                        scaleY = (this._innerBounds.height + delta.y * handle.y) / this._innerBounds.height;\n                    }\n\n                    for (i = 0; i < this.shapes.length; i++) {\n                        shape = this.shapes[i];\n                        bounds = shape.bounds();\n                        if (dragging) {\n                            if (!canDrag(shape)) {\n                                continue;\n                            }\n                            newBounds = this._displaceBounds(bounds, dtl, dbr, dragging);\n                        } else {\n                            newBounds = bounds.clone();\n                            newBounds.scale(scaleX, scaleY, staticPoint, this._innerBounds.center(), shape.rotate().angle);\n                            var newCenter = newBounds.center(); // fixes the new rotation center.\n                            newCenter.rotate(bounds.center(), -this._angle);\n                            newBounds = new Rect(newCenter.x - newBounds.width / 2, newCenter.y - newBounds.height / 2, newBounds.width, newBounds.height);\n                        }\n                        if (newBounds.width >= shape.options.minWidth && newBounds.height >= shape.options.minHeight) { // if we up-size very small shape\n                            var oldBounds = bounds;\n                            shape.bounds(newBounds);\n                            if (shape.hasOwnProperty(\"layout\")) {\n                                shape.layout(shape, oldBounds, newBounds);\n                            }\n                            if (oldBounds.width !== newBounds.width || oldBounds.height !== newBounds.height) {\n                                shape.rotate(shape.rotate().angle); // forces the rotation to update it's rotation center\n                            }\n                            changed += 1;\n                        }\n                    }\n\n                    if (changed) {\n                        if (changed == i) {\n                            newBounds = this._displaceBounds(this._innerBounds, dtl, dbr, dragging);\n                            this.bounds(newBounds);\n                        } else {\n                            this.refreshBounds();\n                        }\n                        this.refresh();\n                    }\n\n                    this._positions();\n                }\n\n                this._cp = p;\n            },\n\n            isDragHandle: function(handle) {\n                return handle.x === 0 && handle.y === 0;\n            },\n\n            cancel: function() {\n                var shapes = this.shapes;\n                var states = this.shapeStates;\n                for (var idx = 0; idx < shapes.length; idx++) {\n                    shapes[idx].bounds(states[idx]);\n                }\n                this.refreshBounds();\n                this.refresh();\n                this._manipulating = undefined;\n                this._internalChange = undefined;\n                this._rotating = undefined;\n            },\n\n            _truncatePositionToGuides: function (bounds) {\n                if (this.diagram.ruler) {\n                    return this.diagram.ruler.truncatePositionToGuides(bounds);\n                }\n                return bounds;\n            },\n\n            _truncateSizeToGuides: function (bounds) {\n                if (this.diagram.ruler) {\n                    return this.diagram.ruler.truncateSizeToGuides(bounds);\n                }\n                return bounds;\n            },\n\n            _truncateAngle: function (a) {\n                var snap = this.snapOptions();\n                var snapAngle = Math.max(snap.angle || DEFAULT_SNAP_ANGLE, MIN_SNAP_ANGLE);\n                return snap ? Math.floor((a % 360) / snapAngle) * snapAngle : (a % 360);\n            },\n\n            _truncateDistance: function (d) {\n                if (d instanceof diagram.Point) {\n                    return new diagram.Point(this._truncateDistance(d.x), this._truncateDistance(d.y));\n                } else {\n                    var snap = this.snapOptions() || {};\n                    var snapSize = Math.max(snap.size || DEFAULT_SNAP_SIZE, MIN_SNAP_SIZE);\n                    return snap ? Math.floor(d / snapSize) * snapSize : d;\n                }\n            },\n\n            snapOptions: function() {\n                var editable = this.diagram.options.editable;\n                var snap = ((editable || {}).drag || {}).snap || {};\n                return snap;\n            },\n\n            shouldSnap: function() {\n                var editable = this.diagram.options.editable;\n                var drag = (editable || {}).drag;\n                var snap = (drag || {}).snap;\n                return editable !== false && drag !== false && snap !== false;\n            },\n\n            _displaceBounds: function (bounds, dtl, dbr, dragging) {\n                var tl = bounds.topLeft().plus(dtl),\n                    br = bounds.bottomRight().plus(dbr),\n                    newBounds = Rect.fromPoints(tl, br),\n                    newCenter;\n                if (!dragging) {\n                    newCenter = newBounds.center();\n                    newCenter.rotate(bounds.center(), -this._angle);\n                    newBounds = new Rect(newCenter.x - newBounds.width / 2, newCenter.y - newBounds.height / 2, newBounds.width, newBounds.height);\n                }\n                return newBounds;\n            },\n\n            stop: function () {\n                var unit, i, shape;\n                if (this._cp != this._sp) {\n                    if (this._rotating) {\n                        unit = new RotateUnit(this, this.shapes, this.initialRotates);\n                        this._rotating = false;\n                    } else if (this._diffStates()) {\n                        if (this.diagram.ruler) {\n                            for (i = 0; i < this.shapes.length; i++) {\n                                shape = this.shapes[i];\n                                var bounds = shape.bounds();\n                                bounds = this._truncateSizeToGuides(this._truncatePositionToGuides(bounds));\n                                shape.bounds(bounds);\n                                this.refreshBounds();\n                                this.refresh();\n                            }\n                        }\n                        for (i = 0; i < this.shapes.length; i++) {\n                            shape = this.shapes[i];\n                            shape.updateModel();\n                        }\n                        unit = new TransformUnit(this.shapes, this.shapeStates, this);\n                        this.diagram._syncShapeChanges();\n                    }\n                }\n\n                this._manipulating = undefined;\n                this._internalChange = undefined;\n                this._rotating = undefined;\n                return unit;\n            },\n\n            _diffStates: function() {\n                var shapes = this.shapes;\n                var states = this.shapeStates;\n                for (var idx = 0; idx < shapes.length; idx++) {\n                    if (!shapes[idx].bounds().equals(states[idx])) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n\n            refreshBounds: function () {\n                var bounds = this.shapes.length == 1 ?\n                    this.shapes[0].bounds().clone() :\n                    this.diagram.boundingBox(this.shapes, true);\n\n                this.bounds(bounds);\n            },\n\n            refresh: function () {\n                var that = this, b, bounds;\n                if (this.shapes.length > 0) {\n                    bounds = this.bounds();\n                    this.visual.visible(true);\n                    this.visual.position(bounds.topLeft());\n                    $.each(this.map, function () {\n                        b = that._getHandleBounds(new Point(this.x, this.y));\n                        this.visual.position(b.topLeft());\n                    });\n                    this.visual.position(bounds.topLeft());\n\n                    var center = new Point(bounds.width / 2, bounds.height / 2);\n                    this.visual.rotate(this._angle, center);\n                    this.rect.redraw({ width: bounds.width, height: bounds.height });\n                    if (this.rotationThumb) {\n                        var thumb = this.options.editable.rotate.thumb;\n                        this._rotationThumbBounds = new Rect(bounds.center().x, bounds.y + thumb.y, 0, 0).inflate(thumb.width);\n                        this.rotationThumb.redraw({ x: bounds.width / 2 - thumb.width / 2 });\n                    }\n                } else {\n                    this.visual.visible(false);\n                }\n            }\n        });\n\n        var Selector = Class.extend({\n            init: function (diagram) {\n                var selectable = diagram.options.selectable;\n                this.options = deepExtend({}, this.options, selectable);\n\n                this.visual = new Rectangle(this.options);\n                this.diagram = diagram;\n            },\n            options: {\n                stroke: {\n                    color: \"#778899\",\n                    width: 1,\n                    dashType: \"dash\"\n                },\n                fill: {\n                    color: TRANSPARENT\n                }\n            },\n            start: function (p) {\n                this._sp = this._ep = p;\n                this.refresh();\n                this.diagram._adorn(this, true);\n            },\n            end: function () {\n                this._sp = this._ep = undefined;\n                this.diagram._adorn(this, false);\n            },\n            bounds: function (value) {\n                if (value) {\n                    this._bounds = value;\n                }\n                return this._bounds;\n            },\n            move: function (p) {\n                this._ep = p;\n                this.refresh();\n            },\n            refresh: function () {\n                if (this._sp) {\n                    var visualBounds = Rect.fromPoints(this.diagram.modelToLayer(this._sp), this.diagram.modelToLayer(this._ep));\n                    this.bounds(Rect.fromPoints(this._sp, this._ep));\n                    this.visual.position(visualBounds.topLeft());\n                    this.visual.redraw({ height: visualBounds.height + 1, width: visualBounds.width + 1 });\n                }\n            }\n        });\n\n        var ConnectorVisual = Class.extend({\n            init: function (connector) {\n                this.options = deepExtend({}, connector.options);\n                this._c = connector;\n                this.visual = new Circle(this.options);\n                this.refresh();\n            },\n            _hover: function (value) {\n                var options = this.options,\n                    hover = options.hover,\n                    stroke = options.stroke,\n                    fill = options.fill;\n\n                if (value && Utils.isDefined(hover.stroke)) {\n                    stroke = deepExtend({}, stroke, hover.stroke);\n                }\n\n                if (value && Utils.isDefined(hover.fill)) {\n                    fill = hover.fill;\n                }\n\n                this.visual.redraw({\n                    stroke: stroke,\n                    fill: fill\n                });\n            },\n            refresh: function () {\n                var p = this._c.shape.diagram.modelToView(this._c.position()),\n                    relative = p.minus(this._c.shape.bounds(\"transformed\").topLeft()),\n                    value = new Rect(p.x, p.y, 0, 0);\n                value.inflate(this.options.width / 2, this.options.height / 2);\n                this._visualBounds = value;\n                this.visual.redraw({ center: new Point(relative.x, relative.y) });\n            },\n            _hitTest: function (p) {\n                var tp = this._c.shape.diagram.modelToView(p);\n                return this._visualBounds.contains(tp);\n            }\n        });\n\n        function canDrag(element) {\n            var editable = element.options.editable;\n            return editable && editable.drag !== false;\n        }\n\n        function hitTestShapeConnectors(shape, point) {\n            var connector, position, rect;\n            for (var idx = 0; idx < shape.connectors.length; idx++) {\n                connector = shape.connectors[idx];\n                position = connector.position();\n                rect = new Rect(position.x, position.y);\n                rect.inflate(HIT_TEST_DISTANCE, HIT_TEST_DISTANCE);\n                if (rect.contains(point)) {\n                    return connector;\n                }\n            }\n        }\n\n        function noMeta(meta) {\n            return meta.ctrlKey === false && meta.altKey === false && meta.shiftKey === false;\n        }\n\n        deepExtend(diagram, {\n            CompositeUnit: CompositeUnit,\n            TransformUnit: TransformUnit,\n            PanUndoUnit: PanUndoUnit,\n            AddShapeUnit: AddShapeUnit,\n            AddConnectionUnit: AddConnectionUnit,\n            DeleteShapeUnit: DeleteShapeUnit,\n            DeleteConnectionUnit: DeleteConnectionUnit,\n            ConnectionEditAdorner: ConnectionEditAdorner,\n            ConnectionTool: ConnectionTool,\n            ConnectorVisual: ConnectorVisual,\n            UndoRedoService: UndoRedoService,\n            ResizingAdorner: ResizingAdorner,\n            Selector: Selector,\n            ToolService: ToolService,\n            ConnectorsAdorner: ConnectorsAdorner,\n            LayoutUndoUnit: LayoutUndoUnit,\n            ConnectionEditUnit: ConnectionEditUnit,\n            ToFrontUnit: ToFrontUnit,\n            ToBackUnit: ToBackUnit,\n            ConnectionRouterBase: ConnectionRouterBase,\n            PolylineRouter: PolylineRouter,\n            CascadingRouter: CascadingRouter,\n            SelectionTool: SelectionTool,\n            ScrollerTool: ScrollerTool,\n            PointerTool: PointerTool,\n            ConnectionEditTool: ConnectionEditTool,\n            RotateUnit: RotateUnit\n        });\n})(window.kendo.jQuery);\n\n}, typeof define == 'function' && define.amd ? define : function(a1, a2, a3){ (a3 || a2)(); });\n\n(function(f, define){\n    define('dataviz/diagram/layout',[ \"./math\" ], f);\n})(function(){\n\n(function ($, undefined) {\n    var kendo = window.kendo,\n        diagram = kendo.dataviz.diagram,\n        Graph = diagram.Graph,\n        Node = diagram.Node,\n        Link = diagram.Link,\n        deepExtend = kendo.deepExtend,\n        Size = diagram.Size,\n        Rect = diagram.Rect,\n        Dictionary = diagram.Dictionary,\n        Set = diagram.Set,\n        HyperTree = diagram.Graph,\n        Utils = diagram.Utils,\n        Point = diagram.Point,\n        EPSILON = 1e-06,\n        DEG_TO_RAD = Math.PI / 180,\n        contains = Utils.contains,\n        grep = $.grep;\n\n    /**\n     * Base class for layout algorithms.\n     * @type {*}\n     */\n    var LayoutBase = kendo.Class.extend({\n        defaultOptions: {\n            type: \"Tree\",\n            subtype: \"Down\",\n            roots: null,\n            animate: false,\n            //-------------------------------------------------------------------\n            /**\n             * Force-directed option: whether the motion of the nodes should be limited by the boundaries of the diagram surface.\n             */\n            limitToView: false,\n            /**\n             * Force-directed option: the amount of friction applied to the motion of the nodes.\n             */\n            friction: 0.9,\n            /**\n             * Force-directed option: the optimal distance between nodes (minimum energy).\n             */\n            nodeDistance: 50,\n            /**\n             * Force-directed option: the number of time things are being calculated.\n             */\n            iterations: 300,\n            //-------------------------------------------------------------------\n            /**\n             * Tree option: the separation in one direction (depends on the subtype what direction this is).\n             */\n            horizontalSeparation: 90,\n            /**\n             * Tree option: the separation in the complementary direction (depends on the subtype what direction this is).\n             */\n            verticalSeparation: 50,\n\n            //-------------------------------------------------------------------\n            /**\n             * Tip-over tree option: children-to-parent vertical distance.\n             */\n            underneathVerticalTopOffset: 15,\n            /**\n             * Tip-over tree option: children-to-parent horizontal distance.\n             */\n            underneathHorizontalOffset: 15,\n            /**\n             * Tip-over tree option: leaf-to-next-branch vertical distance.\n             */\n            underneathVerticalSeparation: 15,\n            //-------------------------------------------------------------------\n            /**\n             * Settings object to organize the different components of the diagram in a grid layout structure\n             */\n            grid: {\n                /**\n                 * The width of the grid in which components are arranged. Beyond this width a component will be on the next row.\n                 */\n                width: 1500,\n                /**\n                 * The left offset of the grid.\n                 */\n                offsetX: 50,\n                /**\n                 * The top offset of the grid.\n                 */\n                offsetY: 50,\n                /**\n                 * The horizontal padding within a cell of the grid where a single component resides.\n                 */\n                componentSpacingX: 20,\n                /**\n                 * The vertical padding within a cell of the grid where a single component resides.\n                 */\n                componentSpacingY: 20\n            },\n\n            //-------------------------------------------------------------------\n            /**\n             * Layered option: the separation height/width between the layers.\n             */\n            layerSeparation: 50,\n            /**\n             * Layered option: how many rounds of shifting and fine-tuning.\n             */\n            layeredIterations: 2,\n            /**\n             * Tree-radial option: the angle at which the layout starts.\n             */\n            startRadialAngle: 0,\n            /**\n             * Tree-radial option: the angle at which the layout starts.\n             */\n            endRadialAngle: 360,\n            /**\n             * Tree-radial option: the separation between levels.\n             */\n            radialSeparation: 150,\n            /**\n             * Tree-radial option: the separation between the root and the first level.\n             */\n            radialFirstLevelSeparation: 200,\n            /**\n             * Tree-radial option: whether a virtual roots bing the components in one radial layout.\n             */\n            keepComponentsInOneRadialLayout: false,\n            //-------------------------------------------------------------------\n\n            // TODO: ensure to change this to false when containers are around\n            ignoreContainers: true,\n            layoutContainerChildren: false,\n            ignoreInvisible: true,\n            animateTransitions: false\n        },\n        init: function () {\n        },\n\n        /**\n         * Organizes the components in a grid.\n         * Returns the final set of nodes (not the Graph).\n         * @param components\n         */\n        gridLayoutComponents: function (components) {\n            if (!components) {\n                throw \"No components supplied.\";\n            }\n\n            // calculate and cache the bounds of the components\n            Utils.forEach(components, function (c) {\n                c.calcBounds();\n            });\n\n            // order by decreasing width\n            components.sort(function (a, b) {\n                return b.bounds.width - a.bounds.width;\n            });\n\n            var maxWidth = this.options.grid.width,\n                offsetX = this.options.grid.componentSpacingX,\n                offsetY = this.options.grid.componentSpacingY,\n                height = 0,\n                startX = this.options.grid.offsetX,\n                startY = this.options.grid.offsetY,\n                x = startX,\n                y = startY,\n                i,\n                resultLinkSet = [],\n                resultNodeSet = [];\n\n            while (components.length > 0) {\n                if (x >= maxWidth) {\n                    // start a new row\n                    x = startX;\n                    y += height + offsetY;\n                    // reset the row height\n                    height = 0;\n                }\n                var component = components.pop();\n                this.moveToOffset(component, new Point(x, y));\n                for (i = 0; i < component.nodes.length; i++) {\n                    resultNodeSet.push(component.nodes[i]); // to be returned in the end\n                }\n                for (i = 0; i < component.links.length; i++) {\n                    resultLinkSet.push(component.links[i]);\n                }\n                var boundingRect = component.bounds;\n                var currentHeight = boundingRect.height;\n                if (currentHeight <= 0 || isNaN(currentHeight)) {\n                    currentHeight = 0;\n                }\n                var currentWidth = boundingRect.width;\n                if (currentWidth <= 0 || isNaN(currentWidth)) {\n                    currentWidth = 0;\n                }\n\n                if (currentHeight >= height) {\n                    height = currentHeight;\n                }\n                x += currentWidth + offsetX;\n            }\n\n            return {\n                nodes: resultNodeSet,\n                links: resultLinkSet\n            };\n        },\n\n        moveToOffset: function (component, p) {\n            var i, j,\n                bounds = component.bounds,\n                deltax = p.x - bounds.x,\n                deltay = p.y - bounds.y;\n\n            for (i = 0; i < component.nodes.length; i++) {\n                var node = component.nodes[i];\n                var nodeBounds = node.bounds();\n                if (nodeBounds.width === 0 && nodeBounds.height === 0 && nodeBounds.x === 0 && nodeBounds.y === 0) {\n                    nodeBounds = new Rect(0, 0, 0, 0);\n                }\n                nodeBounds.x += deltax;\n                nodeBounds.y += deltay;\n                node.bounds(nodeBounds);\n            }\n            for (i = 0; i < component.links.length; i++) {\n                var link = component.links[i];\n                if (link.points) {\n                    var newpoints = [];\n                    var points = link.points;\n                    for (j = 0; j < points.length; j++) {\n                        var pt = points[j];\n                        pt.x += deltax;\n                        pt.y += deltay;\n                        newpoints.push(pt);\n                    }\n                    link.points = newpoints;\n                }\n            }\n            this.currentHorizontalOffset += bounds.width + this.options.grid.offsetX;\n            return new Point(deltax, deltay);\n        },\n\n        transferOptions: function (options) {\n\n            // Size options lead to stackoverflow and need special handling\n\n            this.options = kendo.deepExtend({}, this.defaultOptions);\n            if (Utils.isUndefined(options)) {\n                return;\n            }\n\n            this.options = kendo.deepExtend(this.options, options || {});\n        }\n    });\n\n    /**\n     * The data bucket a hypertree holds in its nodes.     *\n     * @type {*}\n     */\n    /* var ContainerGraph = kendo.Class.extend({\n     init: function (diagram) {\n     this.diagram = diagram;\n     this.graph = new Graph(diagram);\n     this.container = null;\n     this.containerNode = null;\n     }\n\n     });*/\n\n    /**\n     * Adapter between the diagram control and the graph representation. It converts shape and connections to nodes and edges taking into the containers and their collapsef state,\n     * the visibility of items and more. If the layoutContainerChildren is true a hypertree is constructed which holds the hierarchy of containers and many conditions are analyzed\n     * to investigate how the effective graph structure looks like and how the layout has to be performed.\n     * @type {*}\n     */\n    var DiagramToHyperTreeAdapter = kendo.Class.extend({\n        init: function (diagram) {\n\n            /**\n             * The mapping to/from the original nodes.\n             * @type {Dictionary}\n             */\n            this.nodeMap = new Dictionary();\n\n            /**\n             * Gets the mapping of a shape to a container in case the shape sits in a collapsed container.\n             * @type {Dictionary}\n             */\n            this.shapeMap = new Dictionary();\n\n            /**\n             * The nodes being mapped.\n             * @type {Dictionary}\n             */\n            this.nodes = [];\n\n            /**\n             * The connections being mapped.\n             * @type {Dictionary}\n             */\n            this.edges = [];\n\n            // the mapping from an edge to all the connections it represents, this can be both because of multiple connections between\n            // two shapes or because a container holds multiple connections to another shape or container.\n            this.edgeMap = new Dictionary();\n\n            /**\n             * The resulting set of Nodes when the analysis has finished.\n             * @type {Array}\n             */\n            this.finalNodes = [];\n\n            /**\n             * The resulting set of Links when the analysis has finished.\n             * @type {Array}\n             */\n            this.finalLinks = [];\n\n            /**\n             * The items being omitted because of multigraph edges.\n             * @type {Array}\n             */\n            this.ignoredConnections = [];\n\n            /**\n             * The items being omitted because of containers, visibility and other factors.\n             * @type {Array}\n             */\n            this.ignoredShapes = [];\n\n            /**\n             * The map from a node to the partition/hypernode in which it sits. This hyperMap is null if 'options.layoutContainerChildren' is false.\n             * @type {Dictionary}\n             */\n            this.hyperMap = new Dictionary();\n\n            /**\n             * The hypertree contains the hierarchy defined by the containers.\n             * It's in essence a Graph of Graphs with a tree structure defined by the hierarchy of containers.\n             * @type {HyperTree}\n             */\n            this.hyperTree = new Graph();\n\n            /**\n             * The resulting graph after conversion. Note that this does not supply the information contained in the\n             * ignored connection and shape collections.\n             * @type {null}\n             */\n            this.finalGraph = null;\n\n            this.diagram = diagram;\n        },\n\n        /**\n         * The hyperTree is used when the 'options.layoutContainerChildren' is true. It contains the hierarchy of containers whereby each node is a ContainerGraph.\n         * This type of node has a Container reference to the container which holds the Graph items. There are three possible situations during the conversion process:\n         *  - Ignore the containers: the container are non-existent and only normal shapes are mapped. If a shape has a connection to a container it will be ignored as well\n         *    since there is no node mapped for the container.\n         *  - Do not ignore the containers and leave the content of the containers untouched: the top-level elements are being mapped and the children within a container are not altered.\n         *  - Do not ignore the containers and organize the content of the containers as well: the hypertree is constructed and there is a partitioning of all nodes and connections into the hypertree.\n         *    The only reason a connection or node is not being mapped might be due to the visibility, which includes the visibility change through a collapsed parent container.\n         * @param options\n         */\n        convert: function (options) {\n\n            if (Utils.isUndefined(this.diagram)) {\n                throw \"No diagram to convert.\";\n            }\n\n            this.options = kendo.deepExtend({\n                    ignoreInvisible: true,\n                    ignoreContainers: true,\n                    layoutContainerChildren: false\n                },\n                options || {}\n            );\n\n            this.clear();\n            // create the nodes which participate effectively in the graph analysis\n            this._renormalizeShapes();\n\n            // recreate the incoming and outgoing collections of each and every node\n            this._renormalizeConnections();\n\n            // export the resulting graph\n            this.finalNodes = new Dictionary(this.nodes);\n            this.finalLinks = new Dictionary(this.edges);\n\n            this.finalGraph = new Graph();\n            this.finalNodes.forEach(function (n) {\n                this.finalGraph.addNode(n);\n            }, this);\n            this.finalLinks.forEach(function (l) {\n                this.finalGraph.addExistingLink(l);\n            }, this);\n            return this.finalGraph;\n        },\n\n        /**\n         * Maps the specified connection to an edge of the graph deduced from the given diagram.\n         * @param connection\n         * @returns {*}\n         */\n        mapConnection: function (connection) {\n            return this.edgeMap.get(connection.id);\n        },\n\n        /**\n         * Maps the specified shape to a node of the graph deduced from the given diagram.\n         * @param shape\n         * @returns {*}\n         */\n        mapShape: function (shape) {\n            return this.nodeMap.get(shape.id);\n        },\n\n        /**\n         * Gets the edge, if any, between the given nodes.\n         * @param a\n         * @param b\n         */\n        getEdge: function (a, b) {\n            return Utils.first(a.links, function (link) {\n                return link.getComplement(a) === b;\n            });\n        },\n\n        /**\n         * Clears all the collections used by the conversion process.\n         */\n        clear: function () {\n            this.finalGraph = null;\n            this.hyperTree = (!this.options.ignoreContainers && this.options.layoutContainerChildren) ? new HyperTree() : null;\n            this.hyperMap = (!this.options.ignoreContainers && this.options.layoutContainerChildren) ? new Dictionary() : null;\n            this.nodeMap = new Dictionary();\n            this.shapeMap = new Dictionary();\n            this.nodes = [];\n            this.edges = [];\n            this.edgeMap = new Dictionary();\n            this.ignoredConnections = [];\n            this.ignoredShapes = [];\n            this.finalNodes = [];\n            this.finalLinks = [];\n        },\n\n        /**\n         * The path from a given ContainerGraph to the root (container).\n         * @param containerGraph\n         * @returns {Array}\n         */\n        listToRoot: function (containerGraph) {\n            var list = [];\n            var s = containerGraph.container;\n            if (!s) {\n                return list;\n            }\n            list.push(s);\n            while (s.parentContainer) {\n                s = s.parentContainer;\n                list.push(s);\n            }\n            list.reverse();\n            return list;\n        },\n\n        firstNonIgnorableContainer: function (shape) {\n\n            if (shape.isContainer && !this._isIgnorableItem(shape)) {\n                return shape;\n            }\n            return !shape.parentContainer ? null : this.firstNonIgnorableContainer(shape.parentContainer);\n        },\n        isContainerConnection: function (a, b) {\n            if (a.isContainer && this.isDescendantOf(a, b)) {\n                return true;\n            }\n            return b.isContainer && this.isDescendantOf(b, a);\n        },\n\n        /**\n         * Returns true if the given shape is a direct child or a nested container child of the given container.\n         * If the given container and shape are the same this will return false since a shape cannot be its own child.\n         * @param scope\n         * @param a\n         * @returns {boolean}\n         */\n        isDescendantOf: function (scope, a) {\n            if (!scope.isContainer) {\n                throw \"Expecting a container.\";\n            }\n            if (scope === a) {\n                return false;\n            }\n            if (contains(scope.children, a)) {\n                return true;\n            }\n            var containers = [];\n            for (var i = 0, len = scope.children.length; i < len; i++) {\n                var c = scope.children[i];\n                if (c.isContainer && this.isDescendantOf(c, a)) {\n                    containers.push(c);\n                }\n            }\n\n            return containers.length > 0;\n        },\n        isIgnorableItem: function (shape) {\n            if (this.options.ignoreInvisible) {\n                if (shape.isCollapsed && this._isVisible(shape)) {\n                    return false;\n                }\n                if (!shape.isCollapsed && this._isVisible(shape)) {\n                    return false;\n                }\n                return true;\n            }\n            else {\n                return shape.isCollapsed && !this._isTop(shape);\n            }\n        },\n\n        /**\n         *  Determines whether the shape is or needs to be mapped to another shape. This occurs essentially when the shape sits in\n         * a collapsed container hierarchy and an external connection needs a node endpoint. This node then corresponds to the mapped shape and is\n         * necessarily a container in the parent hierarchy of the shape.\n         * @param shape\n         */\n        isShapeMapped: function (shape) {\n            return shape.isCollapsed && !this._isVisible(shape) && !this._isTop(shape);\n        },\n\n        leastCommonAncestor: function (a, b) {\n            if (!a) {\n                throw \"Parameter should not be null.\";\n            }\n            if (!b) {\n                throw \"Parameter should not be null.\";\n            }\n\n            if (!this.hyperTree) {\n                throw \"No hypertree available.\";\n            }\n            var al = this.listToRoot(a);\n            var bl = this.listToRoot(b);\n            var found = null;\n            if (Utils.isEmpty(al) || Utils.isEmpty(bl)) {\n                return this.hyperTree.root.data;\n            }\n            var xa = al[0];\n            var xb = bl[0];\n            var i = 0;\n            while (xa === xb) {\n                found = al[i];\n                i++;\n                if (i >= al.length || i >= bl.length) {\n                    break;\n                }\n                xa = al[i];\n                xb = bl[i];\n            }\n            if (!found) {\n                return this.hyperTree.root.data;\n            }\n            else {\n                return grep(this.hyperTree.nodes, function (n) {\n                    return  n.data.container === found;\n                });\n            }\n        },\n        /**\n         * Determines whether the specified item is a top-level shape or container.\n         * @param item\n         * @returns {boolean}\n         * @private\n         */\n        _isTop: function (item) {\n            return !item.parentContainer;\n        },\n\n        /**\n         * Determines iteratively (by walking up the container stack) whether the specified shape is visible.\n         * This does NOT tell whether the item is not visible due to an explicit Visibility change or due to a collapse state.\n         * @param shape\n         * @returns {*}\n         * @private\n         */\n        _isVisible: function (shape) {\n\n            if (!shape.visible()) {\n                return false;\n            }\n            return !shape.parentContainer ? shape.visible() : this._isVisible(shape.parentContainer);\n        },\n\n        _isCollapsed: function (shape) {\n\n            if (shape.isContainer && shape.isCollapsed) {\n                return true;\n            }\n            return shape.parentContainer && this._isCollapsed(shape.parentContainer);\n        },\n\n        /**\n         * First part of the graph creation; analyzing the shapes and containers and deciding whether they should be mapped to a Node.\n         * @private\n         */\n        _renormalizeShapes: function () {\n            // add the nodes, the adjacency structure will be reconstructed later on\n            if (this.options.ignoreContainers) {\n                for (var i = 0, len = this.diagram.shapes.length; i < len; i++) {\n                    var shape = this.diagram.shapes[i];\n\n                    // if not visible (and ignoring the invisible ones) or a container we skip\n                    if ((this.options.ignoreInvisible && !this._isVisible(shape)) || shape.isContainer) {\n                        this.ignoredShapes.push(shape);\n                        continue;\n                    }\n                    var node = new Node(shape.id, shape);\n                    node.isVirtual = false;\n\n                    // the mapping will always contain singletons and the hyperTree will be null\n                    this.nodeMap.add(shape.id, node);\n                    this.nodes.push(node);\n                }\n            }\n            else {\n                throw \"Containers are not supported yet, but stay tuned.\";\n            }\n        },\n\n        /**\n         * Second part of the graph creation; analyzing the connections and deciding whether they should be mapped to an edge.\n         * @private\n         */\n        _renormalizeConnections: function () {\n            if (this.diagram.connections.length === 0) {\n                return;\n            }\n            for (var i = 0, len = this.diagram.connections.length; i < len; i++) {\n                var conn = this.diagram.connections[i];\n\n                if (this.isIgnorableItem(conn)) {\n                    this.ignoredConnections.push(conn);\n                    continue;\n                }\n\n                var source = !conn.sourceConnector ? null : conn.sourceConnector.shape;\n                var sink = !conn.targetConnector ? null : conn.targetConnector.shape;\n\n                // no layout for floating connections\n                if (!source || !sink) {\n                    this.ignoredConnections.push(conn);\n                    continue;\n                }\n\n                if (contains(this.ignoredShapes, source) && !this.shapeMap.containsKey(source)) {\n                    this.ignoredConnections.push(conn);\n                    continue;\n                }\n                if (contains(this.ignoredShapes, sink) && !this.shapeMap.containsKey(sink)) {\n                    this.ignoredConnections.push(conn);\n                    continue;\n                }\n\n                // if the endpoint sits in a collapsed container we need the container rather than the shape itself\n                if (this.shapeMap.containsKey(source)) {\n                    source = this.shapeMap[source];\n                }\n                if (this.shapeMap.containsKey(sink)) {\n                    sink = this.shapeMap[sink];\n                }\n\n                var sourceNode = this.mapShape(source);\n                var sinkNode = this.mapShape(sink);\n                if ((sourceNode === sinkNode) || this.areConnectedAlready(sourceNode, sinkNode)) {\n                    this.ignoredConnections.push(conn);\n                    continue;\n                }\n\n                if (sourceNode === null || sinkNode === null) {\n                    throw \"A shape was not mapped to a node.\";\n                }\n                if (this.options.ignoreContainers) {\n                    // much like a floating connection here since at least one end is attached to a container\n                    if (sourceNode.isVirtual || sinkNode.isVirtual) {\n                        this.ignoredConnections.push(conn);\n                        continue;\n                    }\n                    var newEdge = new Link(sourceNode, sinkNode, conn.id, conn);\n\n                    this.edgeMap.add(conn.id, newEdge);\n                    this.edges.push(newEdge);\n                }\n                else {\n                    throw \"Containers are not supported yet, but stay tuned.\";\n                }\n            }\n        },\n\n        areConnectedAlready: function (n, m) {\n            return Utils.any(this.edges, function (l) {\n                return l.source === n && l.target === m || l.source === m && l.target === n;\n            });\n        }\n\n        /**\n         * Depth-first traversal of the given container.\n         * @param container\n         * @param action\n         * @param includeStart\n         * @private\n         */\n        /* _visitContainer: function (container, action, includeStart) {\n\n         *//*if (container == null) throw new ArgumentNullException(\"container\");\n         if (action == null) throw new ArgumentNullException(\"action\");\n         if (includeStart) action(container);\n         if (container.children.isEmpty()) return;\n         foreach(\n         var item\n         in\n         container.children.OfType < IShape > ()\n         )\n         {\n         var childContainer = item\n         as\n         IContainerShape;\n         if (childContainer != null) this.VisitContainer(childContainer, action);\n         else action(item);\n         }*//*\n         }*/\n\n\n    });\n\n    /**\n     * The classic spring-embedder (aka force-directed, Fruchterman-Rheingold, barycentric) algorithm.\n     * http://en.wikipedia.org/wiki/Force-directed_graph_drawing\n     *  - Chapter 12 of Tamassia et al. \"Handbook of graph drawing and visualization\".\n     *  - Kobourov on preprint arXiv; http://arxiv.org/pdf/1201.3011.pdf\n     *  - Fruchterman and Rheingold in SOFTWARE-PRACTICE AND EXPERIENCE, VOL. 21(1 1), 1129-1164 (NOVEMBER 1991)\n     * @type {*}\n     */\n    var SpringLayout = LayoutBase.extend({\n        init: function (diagram) {\n            var that = this;\n            LayoutBase.fn.init.call(that);\n            if (Utils.isUndefined(diagram)) {\n                throw \"Diagram is not specified.\";\n            }\n            this.diagram = diagram;\n        },\n\n        layout: function (options) {\n\n            this.transferOptions(options);\n\n            var adapter = new DiagramToHyperTreeAdapter(this.diagram);\n            var graph = adapter.convert(options);\n            if (graph.isEmpty()) {\n                return;\n            }\n            // split into connected components\n            var components = graph.getConnectedComponents();\n            if (Utils.isEmpty(components)) {\n                return;\n            }\n            for (var i = 0; i < components.length; i++) {\n                var component = components[i];\n                this.layoutGraph(component, options);\n            }\n            var finalNodeSet = this.gridLayoutComponents(components);\n            return new diagram.LayoutState(this.diagram, finalNodeSet);\n        },\n\n        layoutGraph: function (graph, options) {\n\n            if (Utils.isDefined(options)) {\n                this.transferOptions(options);\n            }\n            this.graph = graph;\n\n            var initialTemperature = this.options.nodeDistance * 9;\n            this.temperature = initialTemperature;\n\n            var guessBounds = this._expectedBounds();\n            this.width = guessBounds.width;\n            this.height = guessBounds.height;\n\n            for (var step = 0; step < this.options.iterations; step++) {\n                this.refineStage = step >= this.options.iterations * 5 / 6;\n                this.tick();\n                // exponential cooldown\n                this.temperature = this.refineStage ?\n                    initialTemperature / 30 :\n                    initialTemperature * (1 - step / (2 * this.options.iterations ));\n            }\n        },\n\n        /**\n         * Single iteration of the simulation.\n         */\n        tick: function () {\n            var i;\n            // collect the repulsive forces on each node\n            for (i = 0; i < this.graph.nodes.length; i++) {\n                this._repulsion(this.graph.nodes[i]);\n            }\n\n            // collect the attractive forces on each node\n            for (i = 0; i < this.graph.links.length; i++) {\n                this._attraction(this.graph.links[i]);\n            }\n            // update the positions\n            for (i = 0; i < this.graph.nodes.length; i++) {\n                var node = this.graph.nodes[i];\n                var offset = Math.sqrt(node.dx * node.dx + node.dy * node.dy);\n                if (offset === 0) {\n                    return;\n                }\n                node.x += Math.min(offset, this.temperature) * node.dx / offset;\n                node.y += Math.min(offset, this.temperature) * node.dy / offset;\n                if (this.options.limitToView) {\n                    node.x = Math.min(this.width, Math.max(node.width / 2, node.x));\n                    node.y = Math.min(this.height, Math.max(node.height / 2, node.y));\n                }\n            }\n        },\n\n        /**\n         * Shakes the node away from its current position to escape the deadlock.\n         * @param node A Node.\n         * @private\n         */\n        _shake: function (node) {\n            // just a simple polar neighborhood\n            var rho = Math.random() * this.options.nodeDistance / 4;\n            var alpha = Math.random() * 2 * Math.PI;\n            node.x += rho * Math.cos(alpha);\n            node.y -= rho * Math.sin(alpha);\n        },\n\n        /**\n         * The typical Coulomb-Newton force law F=k/r^2\n         * @remark This only works in dimensions less than three.\n         * @param d\n         * @param n A Node.\n         * @param m Another Node.\n         * @returns {number}\n         * @private\n         */\n        _InverseSquareForce: function (d, n, m) {\n            var force;\n            if (!this.refineStage) {\n                force = Math.pow(d, 2) / Math.pow(this.options.nodeDistance, 2);\n            }\n            else {\n                var deltax = n.x - m.x;\n                var deltay = n.y - m.y;\n\n                var wn = n.width / 2;\n                var hn = n.height / 2;\n                var wm = m.width / 2;\n                var hm = m.height / 2;\n\n                force = (Math.pow(deltax, 2) / Math.pow(wn + wm + this.options.nodeDistance, 2)) + (Math.pow(deltay, 2) / Math.pow(hn + hm + this.options.nodeDistance, 2));\n            }\n            return force * 4 / 3;\n        },\n\n        /**\n         * The typical Hooke force law F=kr^2\n         * @param d\n         * @param n\n         * @param m\n         * @returns {number}\n         * @private\n         */\n        _SquareForce: function (d, n, m) {\n            return 1 / this._InverseSquareForce(d, n, m);\n        },\n\n        _repulsion: function (n) {\n            n.dx = 0;\n            n.dy = 0;\n            Utils.forEach(this.graph.nodes, function (m) {\n                if (m === n) {\n                    return;\n                }\n                while (n.x === m.x && n.y === m.y) {\n                    this._shake(m);\n                }\n                var vx = n.x - m.x;\n                var vy = n.y - m.y;\n                var distance = Math.sqrt(vx * vx + vy * vy);\n                var r = this._SquareForce(distance, n, m) * 2;\n                n.dx += (vx / distance) * r;\n                n.dy += (vy / distance) * r;\n            }, this);\n        },\n        _attraction: function (link) {\n            var t = link.target;\n            var s = link.source;\n            if (s === t) {\n                // loops induce endless shakes\n                return;\n            }\n            while (s.x === t.x && s.y === t.y) {\n                this._shake(t);\n            }\n\n            var vx = s.x - t.x;\n            var vy = s.y - t.y;\n            var distance = Math.sqrt(vx * vx + vy * vy);\n\n            var a = this._InverseSquareForce(distance, s, t) * 5;\n            var dx = (vx / distance) * a;\n            var dy = (vy / distance) * a;\n            t.dx += dx;\n            t.dy += dy;\n            s.dx -= dx;\n            s.dy -= dy;\n        },\n\n        /**\n         * Calculates the expected bounds after layout.\n         * @returns {*}\n         * @private\n         */\n        _expectedBounds: function () {\n\n            var size, N = this.graph.nodes.length, /*golden ration optimal?*/ ratio = 1.5, multiplier = 4;\n            if (N === 0) {\n                return size;\n            }\n            size = Utils.fold(this.graph.nodes, function (s, node) {\n                var area = node.width * node.height;\n                if (area > 0) {\n                    s += Math.sqrt(area);\n                    return s;\n                }\n                return 0;\n            }, 0, this);\n            var av = size / N;\n            var squareSize = av * Math.ceil(Math.sqrt(N));\n            var width = squareSize * Math.sqrt(ratio);\n            var height = squareSize / Math.sqrt(ratio);\n            return { width: width * multiplier, height: height * multiplier };\n        }\n\n    });\n\n    var TreeLayoutProcessor = kendo.Class.extend({\n\n        init: function (options) {\n            this.center = null;\n            this.options = options;\n        },\n        layout: function (treeGraph, root) {\n            this.graph = treeGraph;\n            if (!this.graph.nodes || this.graph.nodes.length === 0) {\n                return;\n            }\n\n            if (!contains(this.graph.nodes, root)) {\n                throw \"The given root is not in the graph.\";\n            }\n\n            this.center = root;\n            this.graph.cacheRelationships();\n            /* var nonull = this.graph.nodes.where(function (n) {\n             return n.associatedShape != null;\n             });*/\n\n            // transfer the rects\n            /*nonull.forEach(function (n) {\n             n.Location = n.associatedShape.Position;\n             n.NodeSize = n.associatedShape.ActualBounds.ToSize();\n             }\n\n             );*/\n\n            // caching the children\n            /* nonull.forEach(function (n) {\n             n.children = n.getChildren();\n             });*/\n\n            this.layoutSwitch();\n\n            // apply the layout to the actual visuals\n            // nonull.ForEach(n => n.associatedShape.Position = n.Location);\n        },\n\n        layoutLeft: function (left) {\n            this.setChildrenDirection(this.center, \"Left\", false);\n            this.setChildrenLayout(this.center, \"Default\", false);\n            var h = 0, w = 0, y, i, node;\n            for (i = 0; i < left.length; i++) {\n                node = left[i];\n                node.TreeDirection = \"Left\";\n                var s = this.measure(node, Size.Empty);\n                w = Math.max(w, s.Width);\n                h += s.height + this.options.verticalSeparation;\n            }\n\n            h -= this.options.verticalSeparation;\n            var x = this.center.x - this.options.horizontalSeparation;\n            y = this.center.y + ((this.center.height - h) / 2);\n            for (i = 0; i < left.length; i++) {\n                node = left[i];\n                var p = new Point(x - node.Size.width, y);\n\n                this.arrange(node, p);\n                y += node.Size.height + this.options.verticalSeparation;\n            }\n        },\n\n        layoutRight: function (right) {\n            this.setChildrenDirection(this.center, \"Right\", false);\n            this.setChildrenLayout(this.center, \"Default\", false);\n            var h = 0, w = 0, y, i, node;\n            for (i = 0; i < right.length; i++) {\n                node = right[i];\n                node.TreeDirection = \"Right\";\n                var s = this.measure(node, Size.Empty);\n                w = Math.max(w, s.Width);\n                h += s.height + this.options.verticalSeparation;\n            }\n\n            h -= this.options.verticalSeparation;\n            var x = this.center.x + this.options.horizontalSeparation + this.center.width;\n            y = this.center.y + ((this.center.height - h) / 2);\n            for (i = 0; i < right.length; i++) {\n                node = right[i];\n                var p = new Point(x, y);\n                this.arrange(node, p);\n                y += node.Size.height + this.options.verticalSeparation;\n            }\n        },\n\n        layoutUp: function (up) {\n            this.setChildrenDirection(this.center, \"Up\", false);\n            this.setChildrenLayout(this.center, \"Default\", false);\n            var w = 0, y, node, i;\n            for (i = 0; i < up.length; i++) {\n                node = up[i];\n                node.TreeDirection = \"Up\";\n                var s = this.measure(node, Size.Empty);\n                w += s.width + this.options.horizontalSeparation;\n            }\n\n            w -= this.options.horizontalSeparation;\n            var x = this.center.x + (this.center.width / 2) - (w / 2);\n\n            // y = this.center.y -verticalSeparation -this.center.height/2 - h;\n            for (i = 0; i < up.length; i++) {\n                node = up[i];\n                y = this.center.y - this.options.verticalSeparation - node.Size.height;\n                var p = new Point(x, y);\n                this.arrange(node, p);\n                x += node.Size.width + this.options.horizontalSeparation;\n            }\n        },\n\n        layoutDown: function (down) {\n            var node, i;\n            this.setChildrenDirection(this.center, \"Down\", false);\n            this.setChildrenLayout(this.center, \"Default\", false);\n            var w = 0, y;\n            for (i = 0; i < down.length; i++) {\n                node = down[i];\n                node.treeDirection = \"Down\";\n                var s = this.measure(node, Size.Empty);\n                w += s.width + this.options.horizontalSeparation;\n            }\n\n            w -= this.options.horizontalSeparation;\n            var x = this.center.x + (this.center.width / 2) - (w / 2);\n            y = this.center.y + this.options.verticalSeparation + this.center.height;\n            for (i = 0; i < down.length; i++) {\n                node = down[i];\n                var p = new Point(x, y);\n                this.arrange(node, p);\n                x += node.Size.width + this.options.horizontalSeparation;\n            }\n        },\n\n        layoutRadialTree: function () {\n            // var rmax = children.Aggregate(0D, (current, node) => Math.max(node.SectorAngle, current));\n            this.setChildrenDirection(this.center, \"Radial\", false);\n            this.setChildrenLayout(this.center, \"Default\", false);\n            this.previousRoot = null;\n            var startAngle = this.options.startRadialAngle * DEG_TO_RAD;\n            var endAngle = this.options.endRadialAngle * DEG_TO_RAD;\n            if (endAngle <= startAngle) {\n                throw \"Final angle should not be less than the start angle.\";\n            }\n\n            this.maxDepth = 0;\n            this.origin = new Point(this.center.x, this.center.y);\n            this.calculateAngularWidth(this.center, 0);\n\n            // perform the layout\n            if (this.maxDepth > 0) {\n                this.radialLayout(this.center, this.options.radialFirstLevelSeparation, startAngle, endAngle);\n            }\n\n            // update properties of the root node\n            this.center.Angle = endAngle - startAngle;\n        },\n\n        tipOverTree: function (down, startFromLevel) {\n            if (Utils.isUndefined(startFromLevel)) {\n                startFromLevel = 0;\n            }\n\n            this.setChildrenDirection(this.center, \"Down\", false);\n            this.setChildrenLayout(this.center, \"Default\", false);\n            this.setChildrenLayout(this.center, \"Underneath\", false, startFromLevel);\n            var w = 0, y, node, i;\n            for (i = 0; i < down.length; i++) {\n                node = down[i];\n\n                // if (node.IsSpecial) continue;\n                node.TreeDirection = \"Down\";\n                var s = this.measure(node, Size.Empty);\n                w += s.width + this.options.horizontalSeparation;\n            }\n\n            w -= this.options.horizontalSeparation;\n\n            // putting the root in the center with respect to the whole diagram is not a nice result, let's put it with respect to the first level only\n            w -= down[down.length - 1].width;\n            w += down[down.length - 1].associatedShape.bounds().width;\n\n            var x = this.center.x + (this.center.width / 2) - (w / 2);\n            y = this.center.y + this.options.verticalSeparation + this.center.height;\n            for (i = 0; i < down.length; i++) {\n                node = down[i];\n                // if (node.IsSpecial) continue;\n                var p = new Point(x, y);\n                this.arrange(node, p);\n                x += node.Size.width + this.options.horizontalSeparation;\n            }\n\n            /*//let's place the special node, assuming there is only one\n             if (down.Count(n => n.IsSpecial) > 0)\n             {\n             var special = (from n in down where n.IsSpecial select n).First();\n             if (special.Children.Count > 0)\n             throw new DiagramException(\"The 'special' element should not have children.\");\n             special.Data.Location = new Point(Center.Data.Location.X + Center.AssociatedShape.BoundingRectangle.Width + this.options.HorizontalSeparation, Center.Data.Location.Y);\n             }*/\n        },\n        calculateAngularWidth: function (n, d) {\n            if (d > this.maxDepth) {\n                this.maxDepth = d;\n            }\n\n            var aw = 0, w = 1000, h = 1000, diameter = d === 0 ? 0 : Math.sqrt((w * w) + (h * h)) / d;\n\n            if (n.children.length > 0) {\n                // eventually with n.IsExpanded\n                for (var i = 0, len = n.children.length; i < len; i++) {\n                    var child = n.children[i];\n                    aw += this.calculateAngularWidth(child, d + 1);\n                }\n                aw = Math.max(diameter, aw);\n            }\n            else {\n                aw = diameter;\n            }\n\n            n.sectorAngle = aw;\n            return aw;\n        },\n        sortChildren: function (n) {\n            var basevalue = 0, i;\n\n            // update basevalue angle for node ordering\n            if (n.parents.length > 1) {\n                throw \"Node is not part of a tree.\";\n            }\n            var p = n.parents[0];\n            if (p) {\n                var pl = new Point(p.x, p.y);\n                var nl = new Point(n.x, n.y);\n                basevalue = this.normalizeAngle(Math.atan2(pl.y - nl.y, pl.x - nl.x));\n            }\n\n            var count = n.children.length;\n            if (count === 0) {\n                return null;\n            }\n\n            var angle = [];\n            var idx = [];\n\n            for (i = 0; i < count; ++i) {\n                var c = n.children[i];\n                var l = new Point(c.x, c.y);\n                idx[i] = i;\n                angle[i] = this.normalizeAngle(-basevalue + Math.atan2(l.y - l.y, l.x - l.x));\n            }\n\n            Utils.bisort(angle, idx);\n            var col = []; // list of nodes\n            var children = n.children;\n            for (i = 0; i < count; ++i) {\n                col.push(children[idx[i]]);\n            }\n\n            return col;\n        },\n\n        normalizeAngle: function (angle) {\n            while (angle > Math.PI * 2) {\n                angle -= 2 * Math.PI;\n            }\n            while (angle < 0) {\n                angle += Math.PI * 2;\n            }\n            return angle;\n        },\n        radialLayout: function (node, radius, startAngle, endAngle) {\n            var deltaTheta = endAngle - startAngle;\n            var deltaThetaHalf = deltaTheta / 2.0;\n            var parentSector = node.sectorAngle;\n            var fraction = 0;\n            var sorted = this.sortChildren(node);\n            for (var i = 0, len = sorted.length; i < len; i++) {\n                var childNode = sorted[i];\n                var cp = childNode;\n                var childAngleFraction = cp.sectorAngle / parentSector;\n                if (childNode.children.length > 0) {\n                    this.radialLayout(childNode,\n                        radius + this.options.radialSeparation,\n                        startAngle + (fraction * deltaTheta),\n                        startAngle + ((fraction + childAngleFraction) * deltaTheta));\n                }\n\n                this.setPolarLocation(childNode, radius, startAngle + (fraction * deltaTheta) + (childAngleFraction * deltaThetaHalf));\n                cp.angle = childAngleFraction * deltaTheta;\n                fraction += childAngleFraction;\n            }\n        },\n        setPolarLocation: function (node, radius, angle) {\n            node.x = this.origin.x + (radius * Math.cos(angle));\n            node.y = this.origin.y + (radius * Math.sin(angle));\n            node.BoundingRectangle = new Rect(node.x, node.y, node.width, node.height);\n        },\n\n        /**\n         * Sets the children direction recursively.\n         * @param node\n         * @param direction\n         * @param includeStart\n         */\n        setChildrenDirection: function (node, direction, includeStart) {\n            var rootDirection = node.treeDirection;\n            this.graph.depthFirstTraversal(node, function (n) {\n                n.treeDirection = direction;\n            });\n            if (!includeStart) {\n                node.treeDirection = rootDirection;\n            }\n        },\n\n        /**\n         * Sets the children layout recursively.\n         * @param node\n         * @param layout\n         * @param includeStart\n         * @param startFromLevel\n         */\n        setChildrenLayout: function (node, layout, includeStart, startFromLevel) {\n            if (Utils.isUndefined(startFromLevel)) {\n                startFromLevel = 0;\n            }\n            var rootLayout = node.childrenLayout;\n            if (startFromLevel > 0) {\n                // assign levels to the Node.Level property\n                this.graph.assignLevels(node);\n\n                // assign the layout on the condition that the level is at least the 'startFromLevel'\n                this.graph.depthFirstTraversal(\n                    node, function (s) {\n                        if (s.level >= startFromLevel + 1) {\n                            s.childrenLayout = layout;\n                        }\n                    }\n                );\n            }\n            else {\n                this.graph.depthFirstTraversal(node, function (s) {\n                    s.childrenLayout = layout;\n                });\n\n                // if the start should not be affected we put the state back\n                if (!includeStart) {\n                    node.childrenLayout = rootLayout;\n                }\n            }\n        },\n\n        /**\n         * Returns the actual size of the node. The given size is the allowed space wherein the node can lay out itself.\n         * @param node\n         * @param givenSize\n         * @returns {Size}\n         */\n        measure: function (node, givenSize) {\n            var w = 0, h = 0, s;\n            var result = new Size(0, 0);\n            if (!node) {\n                throw \"\";\n            }\n            var b = node.associatedShape.bounds();\n            var shapeWidth = b.width;\n            var shapeHeight = b.height;\n            if (node.parents.length !== 1) {\n                throw \"Node not in a spanning tree.\";\n            }\n\n            var parent = node.parents[0];\n            if (node.treeDirection === \"Undefined\") {\n                node.treeDirection = parent.treeDirection;\n            }\n\n            if (Utils.isEmpty(node.children)) {\n                result = new Size(\n                    Math.abs(shapeWidth) < EPSILON ? 50 : shapeWidth,\n                    Math.abs(shapeHeight) < EPSILON ? 25 : shapeHeight);\n            }\n            else if (node.children.length === 1) {\n                switch (node.treeDirection) {\n                    case \"Radial\":\n                        s = this.measure(node.children[0], givenSize); // child size\n                        w = shapeWidth + (this.options.radialSeparation * Math.cos(node.AngleToParent)) + s.width;\n                        h = shapeHeight + Math.abs(this.options.radialSeparation * Math.sin(node.AngleToParent)) + s.height;\n                        break;\n                    case \"Left\":\n                    case \"Right\":\n                        switch (node.childrenLayout) {\n\n                            case \"TopAlignedWithParent\":\n                                break;\n\n                            case \"BottomAlignedWithParent\":\n                                break;\n\n                            case \"Underneath\":\n                                s = this.measure(node.children[0], givenSize);\n                                w = shapeWidth + s.width + this.options.underneathHorizontalOffset;\n                                h = shapeHeight + this.options.underneathVerticalTopOffset + s.height;\n                                break;\n\n                            case \"Default\":\n                                s = this.measure(node.children[0], givenSize);\n                                w = shapeWidth + this.options.horizontalSeparation + s.width;\n                                h = Math.max(shapeHeight, s.height);\n                                break;\n\n                            default:\n                                throw \"Unhandled TreeDirection in the Radial layout measuring.\";\n                        }\n                        break;\n                    case \"Up\":\n                    case \"Down\":\n                        switch (node.childrenLayout) {\n\n                            case \"TopAlignedWithParent\":\n                            case \"BottomAlignedWithParent\":\n                                break;\n\n                            case \"Underneath\":\n                                s = this.measure(node.children[0], givenSize);\n                                w = Math.max(shapeWidth, s.width + this.options.underneathHorizontalOffset);\n                                h = shapeHeight + this.options.underneathVerticalTopOffset + s.height;\n                                break;\n\n                            case \"Default\":\n                                s = this.measure(node.children[0], givenSize);\n                                h = shapeHeight + this.options.verticalSeparation + s.height;\n                                w = Math.max(shapeWidth, s.width);\n                                break;\n\n                            default:\n                                throw \"Unhandled TreeDirection in the Down layout measuring.\";\n                        }\n                        break;\n                    default:\n                        throw \"Unhandled TreeDirection in the layout measuring.\";\n                }\n\n                result = new Size(w, h);\n            }\n            else {\n                var i, childNode;\n                switch (node.treeDirection) {\n                    case \"Left\":\n                    case \"Right\":\n                        switch (node.childrenLayout) {\n\n                            case \"TopAlignedWithParent\":\n                            case \"BottomAlignedWithParent\":\n                                break;\n\n                            case \"Underneath\":\n                                w = shapeWidth;\n                                h = shapeHeight + this.options.underneathVerticalTopOffset;\n                                for (i = 0; i < node.children.length; i++) {\n                                    childNode = node.children[i];\n                                    s = this.measure(childNode, givenSize);\n                                    w = Math.max(w, s.width + this.options.underneathHorizontalOffset);\n                                    h += s.height + this.options.underneathVerticalSeparation;\n                                }\n\n                                h -= this.options.underneathVerticalSeparation;\n                                break;\n\n                            case \"Default\":\n                                w = shapeWidth;\n                                h = 0;\n                                for (i = 0; i < node.children.length; i++) {\n                                    childNode = node.children[i];\n                                    s = this.measure(childNode, givenSize);\n                                    w = Math.max(w, shapeWidth + this.options.horizontalSeparation + s.width);\n                                    h += s.height + this.options.verticalSeparation;\n                                }\n                                h -= this.options.verticalSeparation;\n                                break;\n\n                            default:\n                                throw \"Unhandled TreeDirection in the Right layout measuring.\";\n                        }\n\n                        break;\n                    case \"Up\":\n                    case \"Down\":\n\n                        switch (node.childrenLayout) {\n\n                            case \"TopAlignedWithParent\":\n                            case \"BottomAlignedWithParent\":\n                                break;\n\n                            case \"Underneath\":\n                                w = shapeWidth;\n                                h = shapeHeight + this.options.underneathVerticalTopOffset;\n                                for (i = 0; i < node.children.length; i++) {\n                                    childNode = node.children[i];\n                                    s = this.measure(childNode, givenSize);\n                                    w = Math.max(w, s.width + this.options.underneathHorizontalOffset);\n                                    h += s.height + this.options.underneathVerticalSeparation;\n                                }\n\n                                h -= this.options.underneathVerticalSeparation;\n                                break;\n\n                            case \"Default\":\n                                w = 0;\n                                h = 0;\n                                for (i = 0; i < node.children.length; i++) {\n                                    childNode = node.children[i];\n                                    s = this.measure(childNode, givenSize);\n                                    w += s.width + this.options.horizontalSeparation;\n                                    h = Math.max(h, s.height + this.options.verticalSeparation + shapeHeight);\n                                }\n\n                                w -= this.options.horizontalSeparation;\n                                break;\n\n                            default:\n                                throw \"Unhandled TreeDirection in the Down layout measuring.\";\n                        }\n\n                        break;\n                    default:\n                        throw \"Unhandled TreeDirection in the layout measuring.\";\n                }\n\n                result = new Size(w, h);\n            }\n\n            node.SectorAngle = Math.sqrt((w * w / 4) + (h * h / 4));\n            node.Size = result;\n            return result;\n        },\n        arrange: function (n, p) {\n            var i, pp, child, node, childrenwidth, b = n.associatedShape.bounds();\n            var shapeWidth = b.width;\n            var shapeHeight = b.height;\n            if (Utils.isEmpty(n.children)) {\n                n.x = p.x;\n                n.y = p.y;\n                n.BoundingRectangle = new Rect(p.x, p.y, shapeWidth, shapeHeight);\n            }\n            else {\n                var x, y;\n                var selfLocation;\n                switch (n.treeDirection) {\n                    case \"Left\":\n                        switch (n.childrenLayout) {\n                            case \"TopAlignedWithParent\":\n                            case \"BottomAlignedWithParent\":\n                                break;\n\n                            case \"Underneath\":\n                                selfLocation = p;\n                                n.x = selfLocation.x;\n                                n.y = selfLocation.y;\n                                n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                                y = p.y + shapeHeight + this.options.underneathVerticalTopOffset;\n                                for (i = 0; i < node.children.length; i++) {\n                                    node = node.children[i];\n                                    x = selfLocation.x - node.associatedShape.width - this.options.underneathHorizontalOffset;\n                                    pp = new Point(x, y);\n                                    this.arrange(node, pp);\n                                    y += node.Size.height + this.options.underneathVerticalSeparation;\n                                }\n                                break;\n\n                            case \"Default\":\n                                selfLocation = new Point(p.x + n.Size.width - shapeWidth, p.y + ((n.Size.height - shapeHeight) / 2));\n                                n.x = selfLocation.x;\n                                n.y = selfLocation.y;\n                                n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                                x = selfLocation.x - this.options.horizontalSeparation; // alignment of children\n                                y = p.y;\n                                for (i = 0; i < n.children.length; i++) {\n                                    node = n.children[i];\n                                    pp = new Point(x - node.Size.width, y);\n                                    this.arrange(node, pp);\n                                    y += node.Size.height + this.options.verticalSeparation;\n                                }\n                                break;\n\n                            default:\n                                throw   \"Unsupported TreeDirection\";\n                        }\n\n                        break;\n                    case \"Right\":\n                        switch (n.childrenLayout) {\n                            case \"TopAlignedWithParent\":\n                            case \"BottomAlignedWithParent\":\n                                break;\n\n                            case \"Underneath\":\n                                selfLocation = p;\n                                n.x = selfLocation.x;\n                                n.y = selfLocation.y;\n                                n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                                x = p.x + shapeWidth + this.options.underneathHorizontalOffset;\n\n                                // alignment of children left-underneath the parent\n                                y = p.y + shapeHeight + this.options.underneathVerticalTopOffset;\n                                for (i = 0; i < n.children.length; i++) {\n                                    node = n.children[i];\n                                    pp = new Point(x, y);\n                                    this.arrange(node, pp);\n                                    y += node.Size.height + this.options.underneathVerticalSeparation;\n                                }\n\n                                break;\n\n                            case \"Default\":\n                                selfLocation = new Point(p.x, p.y + ((n.Size.height - shapeHeight) / 2));\n                                n.x = selfLocation.x;\n                                n.y = selfLocation.y;\n                                n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                                x = p.x + shapeWidth + this.options.horizontalSeparation; // alignment of children\n                                y = p.y;\n                                for (i = 0; i < n.children.length; i++) {\n                                    node = n.children[i];\n                                    pp = new Point(x, y);\n                                    this.arrange(node, pp);\n                                    y += node.Size.height + this.options.verticalSeparation;\n                                }\n                                break;\n\n                            default:\n                                throw   \"Unsupported TreeDirection\";\n                        }\n\n                        break;\n                    case \"Up\":\n                        selfLocation = new Point(p.x + ((n.Size.width - shapeWidth) / 2), p.y + n.Size.height - shapeHeight);\n                        n.x = selfLocation.x;\n                        n.y = selfLocation.y;\n                        n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                        if (Math.abs(selfLocation.x - p.x) < EPSILON) {\n                            childrenwidth = 0;\n                            // means there is an aberration due to the oversized Element with respect to the children\n                            for (i = 0; i < n.children.length; i++) {\n                                child = n.children[i];\n                                childrenwidth += child.Size.width + this.options.horizontalSeparation;\n                            }\n                            childrenwidth -= this.options.horizontalSeparation;\n                            x = p.x + ((shapeWidth - childrenwidth) / 2);\n                        }\n                        else {\n                            x = p.x;\n                        }\n\n                        for (i = 0; i < n.children.length; i++) {\n                            node = n.children[i];\n                            y = selfLocation.y - this.options.verticalSeparation - node.Size.height;\n                            pp = new Point(x, y);\n                            this.arrange(node, pp);\n                            x += node.Size.width + this.options.horizontalSeparation;\n                        }\n                        break;\n\n                    case \"Down\":\n\n                        switch (n.childrenLayout) {\n                            case \"TopAlignedWithParent\":\n                            case \"BottomAlignedWithParent\":\n                                break;\n                            case \"Underneath\":\n                                selfLocation = p;\n                                n.x = selfLocation.x;\n                                n.y = selfLocation.y;\n                                n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                                x = p.x + this.options.underneathHorizontalOffset; // alignment of children left-underneath the parent\n                                y = p.y + shapeHeight + this.options.underneathVerticalTopOffset;\n                                for (i = 0; i < n.children.length; i++) {\n                                    node = n.children[i];\n                                    pp = new Point(x, y);\n                                    this.arrange(node, pp);\n                                    y += node.Size.height + this.options.underneathVerticalSeparation;\n                                }\n                                break;\n\n                            case    \"Default\":\n                                selfLocation = new Point(p.x + ((n.Size.width - shapeWidth) / 2), p.y);\n                                n.x = selfLocation.x;\n                                n.y = selfLocation.y;\n                                n.BoundingRectangle = new Rect(n.x, n.y, n.width, n.height);\n                                if (Math.abs(selfLocation.x - p.x) < EPSILON) {\n                                    childrenwidth = 0;\n                                    // means there is an aberration due to the oversized Element with respect to the children\n                                    for (i = 0; i < n.children.length; i++) {\n                                        child = n.children[i];\n                                        childrenwidth += child.Size.width + this.options.horizontalSeparation;\n                                    }\n\n                                    childrenwidth -= this.options.horizontalSeparation;\n                                    x = p.x + ((shapeWidth - childrenwidth) / 2);\n                                }\n                                else {\n                                    x = p.x;\n                                }\n\n                                for (i = 0; i < n.children.length; i++) {\n                                    node = n.children[i];\n                                    y = selfLocation.y + this.options.verticalSeparation + shapeHeight;\n                                    pp = new Point(x, y);\n                                    this.arrange(node, pp);\n                                    x += node.Size.width + this.options.horizontalSeparation;\n                                }\n                                break;\n\n                            default:\n                                throw   \"Unsupported TreeDirection\";\n                        }\n                        break;\n\n                    case \"None\":\n                        break;\n\n                    default:\n                        throw   \"Unsupported TreeDirection\";\n                }\n            }\n        },\n        layoutSwitch: function () {\n            if (!this.center) {\n                return;\n            }\n\n            if (Utils.isEmpty(this.center.children)) {\n                return;\n            }\n\n            var type = this.options.subtype;\n            if (Utils.isUndefined(type)) {\n                type = \"Down\";\n            }\n            var single, male, female, leftcount;\n            var children = this.center.children;\n            switch (type.toLowerCase()) {\n                case \"radial\":\n                case \"radialtree\":\n                    this.layoutRadialTree();\n                    break;\n\n                case \"mindmaphorizontal\":\n                case \"mindmap\":\n                    single = this.center.children;\n\n                    if (this.center.children.length === 1) {\n                        this.layoutRight(single);\n                    }\n                    else {\n                        // odd number will give one more at the right\n                        leftcount = children.length / 2;\n                        male = grep(this.center.children, function (n) {\n                            return Utils.indexOf(children, n) < leftcount;\n                        });\n                        female = grep(this.center.children, function (n) {\n                            return Utils.indexOf(children, n) >= leftcount;\n                        });\n\n                        this.layoutLeft(male);\n                        this.layoutRight(female);\n                    }\n                    break;\n\n                case \"mindmapvertical\":\n                    single = this.center.children;\n\n                    if (this.center.children.length === 1) {\n                        this.layoutDown(single);\n                    }\n                    else {\n                        // odd number will give one more at the right\n                        leftcount = children.length / 2;\n                        male = grep(this.center.children, function (n) {\n                            return Utils.indexOf(children, n) < leftcount;\n                        });\n                        female = grep(this.center.children, function (n) {\n                            return Utils.indexOf(children, n) >= leftcount;\n                        });\n                        this.layoutUp(male);\n                        this.layoutDown(female);\n                    }\n                    break;\n\n                case \"right\":\n                    this.layoutRight(this.center.children);\n                    break;\n\n                case \"left\":\n                    this.layoutLeft(this.center.children);\n                    break;\n\n                case \"up\":\n                case \"bottom\":\n                    this.layoutUp(this.center.children);\n                    break;\n\n                case \"down\":\n                case \"top\":\n                    this.layoutDown(this.center.children);\n                    break;\n\n                case \"tipover\":\n                case \"tipovertree\":\n                    if (this.options.tipOverTreeStartLevel < 0) {\n                        throw  \"The tip-over level should be a positive integer.\";\n                    }\n                    this.tipOverTree(this.center.children, this.options.tipOverTreeStartLevel);\n                    break;\n\n                case \"undefined\":\n                case \"none\":\n                    break;\n            }\n        }\n    });\n\n    /**\n     * The various tree layout algorithms.\n     * @type {*}\n     */\n    var TreeLayout = LayoutBase.extend({\n        init: function (diagram) {\n            var that = this;\n            LayoutBase.fn.init.call(that);\n            if (Utils.isUndefined(diagram)) {\n                throw \"No diagram specified.\";\n            }\n            this.diagram = diagram;\n        },\n\n        /**\n         * Arranges the diagram in a tree-layout with the specified options and tree subtype.\n         */\n        layout: function (options) {\n\n            this.transferOptions(options);\n\n            // transform the diagram into a Graph\n            var adapter = new DiagramToHyperTreeAdapter(this.diagram);\n\n            /**\n             * The Graph reduction from the given diagram.\n             * @type {*}\n             */\n            this.graph = adapter.convert();\n\n            var finalNodeSet = this.layoutComponents();\n\n            // note that the graph contains the original data and\n            // the components are another instance of nodes referring to the same set of shapes\n            return new diagram.LayoutState(this.diagram, finalNodeSet);\n        },\n\n        layoutComponents: function () {\n            if (this.graph.isEmpty()) {\n                return;\n            }\n\n            // split into connected components\n            var components = this.graph.getConnectedComponents();\n            if (Utils.isEmpty(components)) {\n                return;\n            }\n\n            var layout = new TreeLayoutProcessor(this.options);\n            var trees = [];\n            // find a spanning tree for each component\n            for (var i = 0; i < components.length; i++) {\n                var component = components[i];\n\n                var treeGraph = this.getTree(component);\n                if (!treeGraph) {\n                    throw \"Failed to find a spanning tree for the component.\";\n                }\n                var root = treeGraph.root;\n                var tree = treeGraph.tree;\n                layout.layout(tree, root);\n\n                trees.push(tree);\n            }\n\n            return this.gridLayoutComponents(trees);\n\n        },\n\n        /**\n         * Gets a spanning tree (and root) for the given graph.\n         * Ensure that the given graph is connected!\n         * @param graph\n         * @returns {*} A literal object consisting of the found root and the spanning tree.\n         */\n        getTree: function (graph) {\n            var root = null;\n            if (this.options.roots && this.options.roots.length > 0) {\n                for (var i = 0, len = graph.nodes.length; i < len; i++) {\n                    var node = graph.nodes[i];\n                    for (var j = 0; j < this.options.roots.length; j++) {\n                        var givenRootShape = this.options.roots[j];\n                        if (givenRootShape === node.associatedShape) {\n                            root = node;\n                            break;\n                        }\n                    }\n                }\n            }\n            if (!root) {\n                // finds the most probable root on the basis of the longest path in the component\n                root = graph.root();\n                // should not happen really\n                if (!root) {\n                    throw \"Unable to find a root for the tree.\";\n                }\n            }\n            return this.getTreeForRoot(graph, root);\n        },\n\n        getTreeForRoot: function (graph, root) {\n\n            var tree = graph.getSpanningTree(root);\n            if (Utils.isUndefined(tree) || tree.isEmpty()) {\n                return null;\n            }\n            return {\n                tree: tree,\n                root: tree.root\n            };\n        }\n\n    });\n\n    /**\n     * The Sugiyama aka layered layout algorithm.\n     * @type {*}\n     */\n    var LayeredLayout = LayoutBase.extend({\n        init: function (diagram) {\n            var that = this;\n            LayoutBase.fn.init.call(that);\n            if (Utils.isUndefined(diagram)) {\n                throw \"Diagram is not specified.\";\n            }\n            this.diagram = diagram;\n        },\n\n        layout: function (options) {\n\n            this.transferOptions(options);\n\n            var adapter = new DiagramToHyperTreeAdapter(this.diagram);\n            var graph = adapter.convert(options);\n            if (graph.isEmpty()) {\n                return;\n            }\n            // split into connected components\n            var components = graph.getConnectedComponents();\n            if (Utils.isEmpty(components)) {\n                return;\n            }\n            for (var i = 0; i < components.length; i++) {\n                var component = components[i];\n                this.layoutGraph(component, options);\n            }\n            var finalNodeSet = this.gridLayoutComponents(components);\n            return new diagram.LayoutState(this.diagram, finalNodeSet);\n\n        },\n\n        /**\n         * Initializes the runtime data properties of the layout.\n         * @private\n         */\n        _initRuntimeProperties: function () {\n            for (var k = 0; k < this.graph.nodes.length; k++) {\n                var node = this.graph.nodes[k];\n                node.layer = -1;\n                node.downstreamLinkCount = 0;\n                node.upstreamLinkCount = 0;\n\n                node.isVirtual = false;\n\n                node.uBaryCenter = 0.0;\n                node.dBaryCenter = 0.0;\n\n                node.upstreamPriority = 0;\n                node.downstreamPriority = 0;\n\n                node.gridPosition = 0;\n            }\n        },\n        _prepare: function (graph) {\n            var current = [], i, l, link;\n\n            // defines a mapping of a node to the layer index\n            var layerMap = new Dictionary();\n            var layerCount = 0;\n            var targetLayer, next, target;\n\n            Utils.forEach(graph.nodes, function (node) {\n                if (node.incoming.length === 0) {\n                    layerMap.set(node, 0);\n                    current.push(node);\n                }\n            });\n\n            while (current.length > 0) {\n                next = current.shift();\n                for (i = 0; i < next.outgoing.length; i++) {\n                    link = next.outgoing[i];\n                    target = link.target;\n\n                    if (layerMap.containsKey(target)) {\n                        targetLayer = Math.max(layerMap.get(next) + 1, layerMap.get(target));\n                    } else {\n                        targetLayer = layerMap.get(next) + 1;\n                    }\n                    layerMap.set(target, targetLayer);\n                    if (targetLayer > layerCount) {\n                        layerCount = targetLayer;\n                    }\n\n                    if (!contains(current, target)) {\n                        current.push(target);\n                    }\n                }\n            }\n\n            var sortedNodes = layerMap.keys();\n\n            sortedNodes.sort(function (o1, o2) {\n                var o1layer = layerMap.get(o1);\n                var o2layer = layerMap.get(o2);\n                return Utils.sign(o2layer - o1layer);\n            });\n\n            for (var n = 0; n < sortedNodes.length; ++n) {\n                var node = sortedNodes[n];\n                var minLayer = Number.MAX_VALUE;\n\n                if (node.outgoing.length === 0) {\n                    continue;\n                }\n\n                for (l = 0; l < node.outgoing.length; ++l) {\n                    link = node.outgoing[l];\n                    minLayer = Math.min(minLayer, layerMap.get(link.target));\n                }\n\n                if (minLayer > 1) {\n                    layerMap.set(node, minLayer - 1);\n                }\n            }\n\n            this.layers = [];\n            var layer;\n            for (i = 0; i < layerCount + 1; i++) {\n                layer = [];\n                layer.linksTo = {};\n                this.layers.push(layer);\n            }\n\n            layerMap.forEach(function (node, layer) {\n                node.layer = layer;\n                this.layers[layer].push(node);\n            }, this);\n\n            // set initial grid positions\n            for (l = 0; l < this.layers.length; l++) {\n                layer = this.layers[l];\n                for (i = 0; i < layer.length; i++) {\n                    layer[i].gridPosition = i;\n                }\n            }\n        },\n        /**\n         * Performs the layout of a single component.\n         */\n        layoutGraph: function (graph, options) {\n            if (Utils.isUndefined(graph)) {\n                throw \"No graph given or graph analysis of the diagram failed.\";\n            }\n            if (Utils.isDefined(options)) {\n                this.transferOptions(options);\n            }\n            this.graph = graph;\n\n            // sets unique indices on the nodes\n            graph.setItemIndices();\n\n            // ensures no cycles present for this layout\n            var reversedEdges = graph.makeAcyclic();\n\n            // define the runtime props being used by the layout algorithm\n            this._initRuntimeProperties();\n\n            this._prepare(graph, options);\n\n            this._dummify();\n\n            this._optimizeCrossings();\n\n            this._swapPairs();\n\n            this.arrangeNodes();\n\n            this._moveThingsAround();\n\n            this._dedummify();\n\n            // re-reverse the links which were switched earlier\n            Utils.forEach(reversedEdges, function (e) {\n                if (e.points) {\n                    e.points.reverse();\n                }\n            });\n        },\n\n        setMinDist: function (m, n, minDist) {\n            var l = m.layer;\n            var i = m.layerIndex;\n            this.minDistances[l][i] = minDist;\n        },\n\n        getMinDist: function (m, n) {\n            var dist = 0,\n                i1 = m.layerIndex,\n                i2 = n.layerIndex,\n                l = m.layer,\n                min = Math.min(i1, i2),\n                max = Math.max(i1, i2);\n            // use Sum()?\n            for (var k = min; k < max; ++k) {\n                dist += this.minDistances[l][k];\n            }\n            return dist;\n        },\n\n        placeLeftToRight: function (leftClasses) {\n            var leftPos = new Dictionary(), n, node;\n            for (var c = 0; c < this.layers.length; ++c) {\n                var classNodes = leftClasses[c];\n                if (!classNodes) {\n                    continue;\n                }\n\n                for (n = 0; n < classNodes.length; n++) {\n                    node = classNodes[n];\n                    if (!leftPos.containsKey(node)) {\n                        this.placeLeft(node, leftPos, c);\n                    }\n                }\n\n                // adjust class\n                var d = Number.POSITIVE_INFINITY;\n                for (n = 0; n < classNodes.length; n++) {\n                    node = classNodes[n];\n                    var rightSibling = this.rightSibling(node);\n                    if (rightSibling && this.nodeLeftClass.get(rightSibling) !== c) {\n                        d = Math.min(d, leftPos.get(rightSibling) - leftPos.get(node) - this.getMinDist(node, rightSibling));\n                    }\n                }\n                if (d === Number.POSITIVE_INFINITY) {\n                    var D = [];\n                    for (n = 0; n < classNodes.length; n++) {\n                        node = classNodes[n];\n                        var neighbors = [];\n                        Utils.addRange(neighbors, this.upNodes.get(node));\n                        Utils.addRange(neighbors, this.downNodes.get(node));\n\n                        for (var e = 0; e < neighbors.length; e++) {\n                            var neighbor = neighbors[e];\n                            if (this.nodeLeftClass.get(neighbor) < c) {\n                                D.push(leftPos.get(neighbor) - leftPos.get(node));\n                            }\n                        }\n                    }\n                    D.sort();\n                    if (D.length === 0) {\n                        d = 0;\n                    }\n                    else if (D.length % 2 === 1) {\n                        d = D[this.intDiv(D.length, 2)];\n                    }\n                    else {\n                        d = (D[this.intDiv(D.length, 2) - 1] + D[this.intDiv(D.length, 2)]) / 2;\n                    }\n                }\n                for (n = 0; n < classNodes.length; n++) {\n                    node = classNodes[n];\n                    leftPos.set(node, leftPos.get(node) + d);\n                }\n            }\n            return leftPos;\n        },\n\n        placeRightToLeft: function (rightClasses) {\n            var rightPos = new Dictionary(), n, node;\n            for (var c = 0; c < this.layers.length; ++c) {\n                var classNodes = rightClasses[c];\n                if (!classNodes) {\n                    continue;\n                }\n\n                for (n = 0; n < classNodes.length; n++) {\n                    node = classNodes[n];\n                    if (!rightPos.containsKey(node)) {\n                        this.placeRight(node, rightPos, c);\n                    }\n                }\n\n                // adjust class\n                var d = Number.NEGATIVE_INFINITY;\n                for (n = 0; n < classNodes.length; n++) {\n                    node = classNodes[n];\n                    var leftSibling = this.leftSibling(node);\n                    if (leftSibling && this.nodeRightClass.get(leftSibling) !== c) {\n                        d = Math.max(d, rightPos.get(leftSibling) - rightPos.get(node) + this.getMinDist(leftSibling, node));\n                    }\n                }\n                if (d === Number.NEGATIVE_INFINITY) {\n                    var D = [];\n                    for (n = 0; n < classNodes.length; n++) {\n                        node = classNodes[n];\n                        var neighbors = [];\n                        Utils.addRange(neighbors, this.upNodes.get(node));\n                        Utils.addRange(neighbors, this.downNodes.get(node));\n\n                        for (var e = 0; e < neighbors.length; e++) {\n                            var neighbor = neighbors[e];\n                            if (this.nodeRightClass.get(neighbor) < c) {\n                                D.push(rightPos.get(node) - rightPos.get(neighbor));\n                            }\n                        }\n                    }\n                    D.sort();\n                    if (D.length === 0) {\n                        d = 0;\n                    }\n                    else if (D.length % 2 === 1) {\n                        d = D[this.intDiv(D.length, 2)];\n                    }\n                    else {\n                        d = (D[this.intDiv(D.length, 2) - 1] + D[this.intDiv(D.length, 2)]) / 2;\n                    }\n                }\n                for (n = 0; n < classNodes.length; n++) {\n                    node = classNodes[n];\n                    rightPos.set(node, rightPos.get(node) + d);\n                }\n            }\n            return rightPos;\n        },\n\n        _getLeftWing: function () {\n            var leftWing = { value: null };\n            var result = this.computeClasses(leftWing, 1);\n            this.nodeLeftClass = leftWing.value;\n            return result;\n        },\n\n        _getRightWing: function () {\n            var rightWing = { value: null };\n            var result = this.computeClasses(rightWing, -1);\n            this.nodeRightClass = rightWing.value;\n            return result;\n        },\n\n        computeClasses: function (wingPair, d) {\n            var currentWing = 0,\n                wing = wingPair.value = new Dictionary();\n\n            for (var l = 0; l < this.layers.length; ++l) {\n                currentWing = l;\n\n                var layer = this.layers[l];\n                for (var n = d === 1 ? 0 : layer.length - 1; 0 <= n && n < layer.length; n += d) {\n                    var node = layer[n];\n                    if (!wing.containsKey(node)) {\n                        wing.set(node, currentWing);\n                        if (node.isVirtual) {\n                            var ndsinl = this._nodesInLink(node);\n                            for (var kk = 0; kk < ndsinl.length; kk++) {\n                                var vnode = ndsinl[kk];\n                                wing.set(vnode, currentWing);\n                            }\n                        }\n                    }\n                    else {\n                        currentWing = wing.get(node);\n                    }\n                }\n            }\n\n            var wings = [];\n            for (var i = 0; i < this.layers.length; i++) {\n                wings.push(null);\n            }\n            wing.forEach(function (node, classIndex) {\n                if (wings[classIndex] === null) {\n                    wings[classIndex] = [];\n                }\n                wings[classIndex].push(node);\n            });\n\n            return wings;\n        },\n        _isVerticalLayout: function () {\n            return this.options.subtype.toLowerCase() === \"up\" || this.options.subtype.toLowerCase() === \"down\" || this.options.subtype.toLowerCase() === \"vertical\";\n        },\n\n        _isHorizontalLayout: function () {\n            return this.options.subtype.toLowerCase() === \"right\" || this.options.subtype.toLowerCase() === \"left\" || this.options.subtype.toLowerCase() === \"horizontal\";\n        },\n        _isIncreasingLayout: function () {\n            // meaning that the visiting of the layers goes in the natural order of increasing layer index\n            return this.options.subtype.toLowerCase() === \"right\" || this.options.subtype.toLowerCase() === \"down\";\n        },\n        _moveThingsAround: function () {\n            var i, l, node, layer, n, w;\n            // sort the layers by their grid position\n            for (l = 0; l < this.layers.length; ++l) {\n                layer = this.layers[l];\n                layer.sort(this._gridPositionComparer);\n            }\n\n            this.minDistances = [];\n            for (l = 0; l < this.layers.length; ++l) {\n                layer = this.layers[l];\n                this.minDistances[l] = [];\n                for (n = 0; n < layer.length; ++n) {\n                    node = layer[n];\n                    node.layerIndex = n;\n                    this.minDistances[l][n] = this.options.nodeDistance;\n                    if (n < layer.length - 1) {\n                        if (this._isVerticalLayout()) {\n                            this.minDistances[l][n] += (node.width + layer[n + 1].width) / 2;\n                        }\n                        else {\n                            this.minDistances[l][n] += (node.height + layer[n + 1].height) / 2;\n                        }\n                    }\n                }\n            }\n\n            this.downNodes = new Dictionary();\n            this.upNodes = new Dictionary();\n            Utils.forEach(this.graph.nodes, function (node) {\n                this.downNodes.set(node, []);\n                this.upNodes.set(node, []);\n            }, this);\n            Utils.forEach(this.graph.links, function (link) {\n                var origin = link.source;\n                var dest = link.target;\n                var down = null, up = null;\n                if (origin.layer > dest.layer) {\n                    down = link.source;\n                    up = link.target;\n                }\n                else {\n                    up = link.source;\n                    down = link.target;\n                }\n                this.downNodes.get(up).push(down);\n                this.upNodes.get(down).push(up);\n            }, this);\n            this.downNodes.forEachValue(function (list) {\n                list.sort(this._gridPositionComparer);\n            }, this);\n            this.upNodes.forEachValue(function (list) {\n                list.sort(this._gridPositionComparer);\n            }, this);\n\n            for (l = 0; l < this.layers.length - 1; ++l) {\n                layer = this.layers[l];\n                for (w = 0; w < layer.length - 1; w++) {\n                    var currentNode = layer[w];\n                    if (!currentNode.isVirtual) {\n                        continue;\n                    }\n\n                    var currDown = this.downNodes.get(currentNode)[0];\n                    if (!currDown.isVirtual) {\n                        continue;\n                    }\n\n                    for (n = w + 1; n < layer.length; ++n) {\n                        node = layer[n];\n                        if (!node.isVirtual) {\n                            continue;\n                        }\n\n                        var downNode = this.downNodes.get(node)[0];\n                        if (!downNode.isVirtual) {\n                            continue;\n                        }\n\n                        if (currDown.gridPosition > downNode.gridPosition) {\n                            var pos = currDown.gridPosition;\n                            currDown.gridPosition = downNode.gridPosition;\n                            downNode.gridPosition = pos;\n                            var i1 = currDown.layerIndex;\n                            var i2 = downNode.layerIndex;\n                            this.layers[l + 1][i1] = downNode;\n                            this.layers[l + 1][i2] = currDown;\n                            currDown.layerIndex = i2;\n                            downNode.layerIndex = i1;\n                        }\n                    }\n                }\n            }\n\n\n            var leftClasses = this._getLeftWing();\n            var rightClasses = this._getRightWing();\n\n\n            var leftPos = this.placeLeftToRight(leftClasses);\n            var rightPos = this.placeRightToLeft(rightClasses);\n            var x = new Dictionary();\n            Utils.forEach(this.graph.nodes, function (node) {\n                x.set(node, (leftPos.get(node) + rightPos.get(node)) / 2);\n            });\n\n\n            var order = new Dictionary();\n            var placed = new Dictionary();\n            for (l = 0; l < this.layers.length; ++l) {\n                layer = this.layers[l];\n                var sequenceStart = -1, sequenceEnd = -1;\n                for (n = 0; n < layer.length; ++n) {\n                    node = layer[n];\n                    order.set(node, 0);\n                    placed.set(node, false);\n                    if (node.isVirtual) {\n                        if (sequenceStart === -1) {\n                            sequenceStart = n;\n                        }\n                        else if (sequenceStart === n - 1) {\n                            sequenceStart = n;\n                        }\n                        else {\n                            sequenceEnd = n;\n                            order.set(layer[sequenceStart], 0);\n                            if (x.get(node) - x.get(layer[sequenceStart]) === this.getMinDist(layer[sequenceStart], node)) {\n                                placed.set(layer[sequenceStart], true);\n                            }\n                            else {\n                                placed.set(layer[sequenceStart], false);\n                            }\n                            sequenceStart = n;\n                        }\n                    }\n                }\n            }\n            var directions = [1, -1];\n            Utils.forEach(directions, function (d) {\n                var start = d === 1 ? 0 : this.layers.length - 1;\n                for (var l = start; 0 <= l && l < this.layers.length; l += d) {\n                    var layer = this.layers[l];\n                    var virtualStartIndex = this._firstVirtualNode(layer);\n                    var virtualStart = null;\n                    var sequence = null;\n                    if (virtualStartIndex !== -1) {\n                        virtualStart = layer[virtualStartIndex];\n                        sequence = [];\n                        for (i = 0; i < virtualStartIndex; i++) {\n                            sequence.push(layer[i]);\n                        }\n                    }\n                    else {\n                        virtualStart = null;\n                        sequence = layer;\n                    }\n                    if (sequence.length > 0) {\n                        this._sequencer(x, null, virtualStart, d, sequence);\n                        for (i = 0; i < sequence.length - 1; ++i) {\n                            this.setMinDist(sequence[i], sequence[i + 1], x.get(sequence[i + 1]) - x.get(sequence[i]));\n                        }\n                        if (virtualStart) {\n                            this.setMinDist(sequence[sequence.length - 1], virtualStart, x.get(virtualStart) - x.get(sequence[sequence.length - 1]));\n                        }\n                    }\n\n                    while (virtualStart) {\n                        var virtualEnd = this.nextVirtualNode(layer, virtualStart);\n                        if (!virtualEnd) {\n                            virtualStartIndex = virtualStart.layerIndex;\n                            sequence = [];\n                            for (i = virtualStartIndex + 1; i < layer.length; i++) {\n                                sequence.push(layer[i]);\n                            }\n                            if (sequence.length > 0) {\n                                this._sequencer(x, virtualStart, null, d, sequence);\n                                for (i = 0; i < sequence.length - 1; ++i) {\n                                    this.setMinDist(sequence[i], sequence[i + 1], x.get(sequence[i + 1]) - x.get(sequence[i]));\n                                }\n                                this.setMinDist(virtualStart, sequence[0], x.get(sequence[0]) - x.get(virtualStart));\n                            }\n                        }\n                        else if (order.get(virtualStart) === d) {\n                            virtualStartIndex = virtualStart.layerIndex;\n                            var virtualEndIndex = virtualEnd.layerIndex;\n                            sequence = [];\n                            for (i = virtualStartIndex + 1; i < virtualEndIndex; i++) {\n                                sequence.push(layer[i]);\n                            }\n                            if (sequence.length > 0) {\n                                this._sequencer(x, virtualStart, virtualEnd, d, sequence);\n                            }\n                            placed.set(virtualStart, true);\n                        }\n                        virtualStart = virtualEnd;\n                    }\n                    this.adjustDirections(l, d, order, placed);\n                }\n            }, this);\n\n\n            var fromLayerIndex = this._isIncreasingLayout() ? 0 : this.layers.length - 1;\n            var reachedFinalLayerIndex = function (k, ctx) {\n                if (ctx._isIncreasingLayout()) {\n                    return k < ctx.layers.length;\n                }\n                else {\n                    return k >= 0;\n                }\n            };\n            var layerIncrement = this._isIncreasingLayout() ? +1 : -1, offset = 0;\n\n            /**\n             * Calcs the max height of the given layer.\n             */\n            function maximumHeight(layer, ctx) {\n                var height = Number.MIN_VALUE;\n                for (var n = 0; n < layer.length; ++n) {\n                    var node = layer[n];\n                    if (ctx._isVerticalLayout()) {\n                        height = Math.max(height, node.height);\n                    }\n                    else {\n                        height = Math.max(height, node.width);\n                    }\n                }\n                return height;\n            }\n\n            for (i = fromLayerIndex; reachedFinalLayerIndex(i, this); i += layerIncrement) {\n                layer = this.layers[i];\n                var height = maximumHeight(layer, this);\n\n                for (n = 0; n < layer.length; ++n) {\n                    node = layer[n];\n                    if (this._isVerticalLayout()) {\n                        node.x = x.get(node);\n                        node.y = offset + height / 2;\n                    }\n                    else {\n                        node.x = offset + height / 2;\n                        node.y = x.get(node);\n                    }\n                }\n\n                offset += this.options.layerSeparation + height;\n            }\n        },\n\n        adjustDirections: function (l, d, order, placed) {\n            if (l + d < 0 || l + d >= this.layers.length) {\n                return;\n            }\n\n            var prevBridge = null, prevBridgeTarget = null;\n            var layer = this.layers[l + d];\n            for (var n = 0; n < layer.length; ++n) {\n                var nextBridge = layer[n];\n                if (nextBridge.isVirtual) {\n                    var nextBridgeTarget = this.getNeighborOnLayer(nextBridge, l);\n                    if (nextBridgeTarget.isVirtual) {\n                        if (prevBridge) {\n                            var p = placed.get(prevBridgeTarget);\n                            var clayer = this.layers[l];\n                            var i1 = prevBridgeTarget.layerIndex;\n                            var i2 = nextBridgeTarget.layerIndex;\n                            for (var i = i1 + 1; i < i2; ++i) {\n                                if (clayer[i].isVirtual) {\n                                    p = p && placed.get(clayer[i]);\n                                }\n                            }\n                            if (p) {\n                                order.set(prevBridge, d);\n                                var j1 = prevBridge.layerIndex;\n                                var j2 = nextBridge.layerIndex;\n                                for (var j = j1 + 1; j < j2; ++j) {\n                                    if (layer[j].isVirtual) {\n                                        order.set(layer[j], d);\n                                    }\n                                }\n                            }\n                        }\n                        prevBridge = nextBridge;\n                        prevBridgeTarget = nextBridgeTarget;\n                    }\n                }\n            }\n        },\n\n        getNeighborOnLayer: function (node, l) {\n            var neighbor = this.upNodes.get(node)[0];\n            if (neighbor.layer === l) {\n                return neighbor;\n            }\n            neighbor = this.downNodes.get(node)[0];\n            if (neighbor.layer === l) {\n                return neighbor;\n            }\n            return null;\n        },\n\n        _sequencer: function (x, virtualStart, virtualEnd, dir, sequence) {\n            if (sequence.length === 1) {\n                this._sequenceSingle(x, virtualStart, virtualEnd, dir, sequence[0]);\n            }\n\n            if (sequence.length > 1) {\n                var r = sequence.length, t = this.intDiv(r, 2);\n                this._sequencer(x, virtualStart, virtualEnd, dir, sequence.slice(0, t));\n                this._sequencer(x, virtualStart, virtualEnd, dir, sequence.slice(t));\n                this.combineSequences(x, virtualStart, virtualEnd, dir, sequence);\n            }\n        },\n\n        _sequenceSingle: function (x, virtualStart, virtualEnd, dir, node) {\n            var neighbors = dir === -1 ? this.downNodes.get(node) : this.upNodes.get(node);\n\n            var n = neighbors.length;\n            if (n !== 0) {\n                if (n % 2 === 1) {\n                    x.set(node, x.get(neighbors[this.intDiv(n, 2)]));\n                }\n                else {\n                    x.set(node, (x.get(neighbors[this.intDiv(n, 2) - 1]) + x.get(neighbors[this.intDiv(n, 2)])) / 2);\n                }\n\n                if (virtualStart) {\n                    x.set(node, Math.max(x.get(node), x.get(virtualStart) + this.getMinDist(virtualStart, node)));\n                }\n                if (virtualEnd) {\n                    x.set(node, Math.min(x.get(node), x.get(virtualEnd) - this.getMinDist(node, virtualEnd)));\n                }\n            }\n        },\n\n        combineSequences: function (x, virtualStart, virtualEnd, dir, sequence) {\n            var r = sequence.length, t = this.intDiv(r, 2);\n\n            // collect left changes\n            var leftHeap = [], i, c, n, neighbors, neighbor, pair;\n            for (i = 0; i < t; ++i) {\n                c = 0;\n                neighbors = dir === -1 ? this.downNodes.get(sequence[i]) : this.upNodes.get(sequence[i]);\n                for (n = 0; n < neighbors.length; ++n) {\n                    neighbor = neighbors[n];\n                    if (x.get(neighbor) >= x.get(sequence[i])) {\n                        c++;\n                    }\n                    else {\n                        c--;\n                        leftHeap.push({ k: x.get(neighbor) + this.getMinDist(sequence[i], sequence[t - 1]), v: 2 });\n                    }\n                }\n                leftHeap.push({ k: x.get(sequence[i]) + this.getMinDist(sequence[i], sequence[t - 1]), v: c });\n            }\n            if (virtualStart) {\n                leftHeap.push({ k: x.get(virtualStart) + this.getMinDist(virtualStart, sequence[t - 1]), v: Number.MAX_VALUE });\n            }\n            leftHeap.sort(this._positionDescendingComparer);\n\n            // collect right changes\n            var rightHeap = [];\n            for (i = t; i < r; ++i) {\n                c = 0;\n                neighbors = dir === -1 ? this.downNodes.get(sequence[i]) : this.upNodes.get(sequence[i]);\n                for (n = 0; n < neighbors.length; ++n) {\n                    neighbor = neighbors[n];\n                    if (x.get(neighbor) <= x.get(sequence[i])) {\n                        c++;\n                    }\n                    else {\n                        c--;\n                        rightHeap.push({ k: x.get(neighbor) - this.getMinDist(sequence[i], sequence[t]), v: 2 });\n                    }\n                }\n                rightHeap.push({ k: x.get(sequence[i]) - this.getMinDist(sequence[i], sequence[t]), v: c });\n            }\n            if (virtualEnd) {\n                rightHeap.push({ k: x.get(virtualEnd) - this.getMinDist(virtualEnd, sequence[t]), v: Number.MAX_VALUE });\n            }\n            rightHeap.sort(this._positionAscendingComparer);\n\n            var leftRes = 0, rightRes = 0;\n            var m = this.getMinDist(sequence[t - 1], sequence[t]);\n            while (x.get(sequence[t]) - x.get(sequence[t - 1]) < m) {\n                if (leftRes < rightRes) {\n                    if (leftHeap.length === 0) {\n                        x.set(sequence[t - 1], x.get(sequence[t]) - m);\n                        break;\n                    }\n                    else {\n                        pair = leftHeap.shift();\n                        leftRes = leftRes + pair.v;\n                        x.set(sequence[t - 1], pair.k);\n                        x.set(sequence[t - 1], Math.max(x.get(sequence[t - 1]), x.get(sequence[t]) - m));\n                    }\n                }\n                else {\n                    if (rightHeap.length === 0) {\n                        x.set(sequence[t], x.get(sequence[t - 1]) + m);\n                        break;\n                    }\n                    else {\n                        pair = rightHeap.shift();\n                        rightRes = rightRes + pair.v;\n                        x.set(sequence[t], pair.k);\n                        x.set(sequence[t], Math.min(x.get(sequence[t]), x.get(sequence[t - 1]) + m));\n                    }\n                }\n            }\n            for (i = t - 2; i >= 0; i--) {\n                x.set(sequence[i], Math.min(x.get(sequence[i]), x.get(sequence[t - 1]) - this.getMinDist(sequence[i], sequence[t - 1])));\n            }\n            for (i = t + 1; i < r; i++) {\n                x.set(sequence[i], Math.max(x.get(sequence[i]), x.get(sequence[t]) + this.getMinDist(sequence[i], sequence[t])));\n            }\n        },\n\n        placeLeft: function (node, leftPos, leftClass) {\n            var pos = Number.NEGATIVE_INFINITY;\n            Utils.forEach(this._getComposite(node), function (v) {\n                var leftSibling = this.leftSibling(v);\n                if (leftSibling && this.nodeLeftClass.get(leftSibling) === this.nodeLeftClass.get(v)) {\n                    if (!leftPos.containsKey(leftSibling)) {\n                        this.placeLeft(leftSibling, leftPos, leftClass);\n                    }\n                    pos = Math.max(pos, leftPos.get(leftSibling) + this.getMinDist(leftSibling, v));\n                }\n            }, this);\n            if (pos === Number.NEGATIVE_INFINITY) {\n                pos = 0;\n            }\n            Utils.forEach(this._getComposite(node), function (v) {\n                leftPos.set(v, pos);\n            });\n        },\n\n        placeRight: function (node, rightPos, rightClass) {\n            var pos = Number.POSITIVE_INFINITY;\n            Utils.forEach(this._getComposite(node), function (v) {\n                var rightSibling = this.rightSibling(v);\n                if (rightSibling && this.nodeRightClass.get(rightSibling) === this.nodeRightClass.get(v)) {\n                    if (!rightPos.containsKey(rightSibling)) {\n                        this.placeRight(rightSibling, rightPos, rightClass);\n                    }\n                    pos = Math.min(pos, rightPos.get(rightSibling) - this.getMinDist(v, rightSibling));\n                }\n            }, this);\n            if (pos === Number.POSITIVE_INFINITY) {\n                pos = 0;\n            }\n            Utils.forEach(this._getComposite(node), function (v) {\n                rightPos.set(v, pos);\n            });\n        },\n\n        leftSibling: function (node) {\n            var layer = this.layers[node.layer],\n                layerIndex = node.layerIndex;\n            return layerIndex === 0 ? null : layer[layerIndex - 1];\n        },\n\n        rightSibling: function (node) {\n            var layer = this.layers[node.layer];\n            var layerIndex = node.layerIndex;\n            return layerIndex === layer.length - 1 ? null : layer[layerIndex + 1];\n\n        },\n\n        _getComposite: function (node) {\n            return node.isVirtual ? this._nodesInLink(node) : [node];\n        },\n\n        arrangeNodes: function () {\n            var i, l, ni, layer, node;\n            // Initialize node's base priority\n            for (l = 0; l < this.layers.length; l++) {\n                layer = this.layers[l];\n\n                for (ni = 0; ni < layer.length; ni++) {\n                    node = layer[ni];\n                    node.upstreamPriority = node.upstreamLinkCount;\n                    node.downstreamPriority = node.downstreamLinkCount;\n                }\n            }\n\n            // Layout is invoked after MinimizeCrossings\n            // so we may assume node's barycenters are initially correct\n\n            var maxLayoutIterations = 2;\n            for (var it = 0; it < maxLayoutIterations; it++) {\n                for (i = this.layers.length - 1; i >= 1; i--) {\n                    this.layoutLayer(false, i);\n                }\n\n                for (i = 0; i < this.layers.length - 1; i++) {\n                    this.layoutLayer(true, i);\n                }\n            }\n\n            // Offset the whole structure so that there are no gridPositions < 0\n            var gridPos = Number.MAX_VALUE;\n            for (l = 0; l < this.layers.length; l++) {\n                layer = this.layers[l];\n\n                for (ni = 0; ni < layer.length; ni++) {\n                    node = layer[ni];\n                    gridPos = Math.min(gridPos, node.gridPosition);\n                }\n            }\n\n            if (gridPos < 0) {\n                for (l = 0; l < this.layers.length; l++) {\n                    layer = this.layers[l];\n\n                    for (ni = 0; ni < layer.length; ni++) {\n                        node = layer[ni];\n                        node.gridPosition = node.gridPosition - gridPos;\n                    }\n                }\n            }\n        },\n\n        /// <summary>\n        /// Layout of a single layer.\n        /// </summary>\n        /// <param name=\"layerIndex\">The layer to organize.</param>\n        /// <param name=\"movingDownwards\">If set to <c>true</c> we move down in the layer stack.</param>\n        /// <seealso cref=\"OptimizeCrossings()\"/>\n        layoutLayer: function (down, layer) {\n            var iconsidered;\n            var considered;\n\n            if (down) {\n                considered = this.layers[iconsidered = layer + 1];\n            }\n            else {\n                considered = this.layers[iconsidered = layer - 1];\n            }\n\n            // list containing the nodes in the considered layer sorted by priority\n            var sorted = [];\n            for (var n = 0; n < considered.length; n++) {\n                sorted.push(considered[n]);\n            }\n            sorted.sort(function (n1, n2) {\n                var n1Priority = (n1.upstreamPriority + n1.downstreamPriority) / 2;\n                var n2Priority = (n2.upstreamPriority + n2.downstreamPriority) / 2;\n\n                if (Math.abs(n1Priority - n2Priority) < 0.0001) {\n                    return 0;\n                }\n                if (n1Priority < n2Priority) {\n                    return 1;\n                }\n                return -1;\n            });\n\n            // each node strives for its barycenter; high priority nodes start first\n            Utils.forEach(sorted, function (node) {\n                var nodeGridPos = node.gridPosition;\n                var nodeBaryCenter = this.calcBaryCenter(node);\n                var nodePriority = (node.upstreamPriority + node.downstreamPriority) / 2;\n\n                if (Math.abs(nodeGridPos - nodeBaryCenter) < 0.0001) {\n                    // This node is exactly at its barycenter -> perfect\n                    return;\n                }\n\n                if (Math.abs(nodeGridPos - nodeBaryCenter) < 0.25 + 0.0001) {\n                    // This node is close enough to the barycenter -> should work\n                    return;\n                }\n\n                if (nodeGridPos < nodeBaryCenter) {\n                    // Try to move the node to the right in an\n                    // attempt to reach its barycenter\n                    while (nodeGridPos < nodeBaryCenter) {\n                        if (!this.moveRight(node, considered, nodePriority)) {\n                            break;\n                        }\n\n                        nodeGridPos = node.gridPosition;\n                    }\n                }\n                else {\n                    // Try to move the node to the left in an\n                    // attempt to reach its barycenter\n                    while (nodeGridPos > nodeBaryCenter) {\n                        if (!this.moveLeft(node, considered, nodePriority)) {\n                            break;\n                        }\n\n                        nodeGridPos = node.gridPosition;\n                    }\n                }\n            }, this);\n\n            // after the layer has been rearranged we need to recalculate the barycenters\n            // of the nodes in the surrounding layers\n            if (iconsidered > 0) {\n                this.calcDownData(iconsidered - 1);\n            }\n            if (iconsidered < this.layers.length - 1) {\n                this.calcUpData(iconsidered + 1);\n            }\n        },\n\n        /// <summary>\n        /// Moves the node to the right and returns <c>true</c> if this was possible.\n        /// </summary>\n        /// <param name=\"node\">The node.</param>\n        /// <param name=\"layer\">The layer.</param>\n        /// <returns>Returns <c>true</c> if the shift was possible, otherwise <c>false</c>.</returns>\n        moveRight: function (node, layer, priority) {\n            var index = Utils.indexOf(layer, node);\n            if (index === layer.length - 1) {\n                // this is the last node in the layer, so we can move to the right without troubles\n                node.gridPosition = node.gridPosition + 0.5;\n                return true;\n            }\n\n            var rightNode = layer[index + 1];\n            var rightNodePriority = (rightNode.upstreamPriority + rightNode.downstreamPriority) / 2;\n\n            // check if there is space between the right and the current node\n            if (rightNode.gridPosition > node.gridPosition + 1) {\n                node.gridPosition = node.gridPosition + 0.5;\n                return true;\n            }\n\n            // we have reached a node with higher priority; no movement is allowed\n            if (rightNodePriority > priority ||\n                Math.abs(rightNodePriority - priority) < 0.0001) {\n                return false;\n            }\n\n            // the right node has lower priority - try to move it\n            if (this.moveRight(rightNode, layer, priority)) {\n                node.gridPosition = node.gridPosition + 0.5;\n                return true;\n            }\n\n            return false;\n        },\n\n        /// <summary>\n        /// Moves the node to the left and returns <c>true</c> if this was possible.\n        /// </summary>\n        /// <param name=\"node\">The node.</param>\n        /// <param name=\"layer\">The layer.</param>\n        /// <returns>Returns <c>true</c> if the shift was possible, otherwise <c>false</c>.</returns>\n        moveLeft: function (node, layer, priority) {\n            var index = Utils.indexOf(layer, node);\n            if (index === 0) {\n                // this is the last node in the layer, so we can move to the left without troubles\n                node.gridPosition = node.gridPosition - 0.5;\n                return true;\n            }\n\n            var leftNode = layer[index - 1];\n            var leftNodePriority = (leftNode.upstreamPriority + leftNode.downstreamPriority) / 2;\n\n            // check if there is space between the left and the current node\n            if (leftNode.gridPosition < node.gridPosition - 1) {\n                node.gridPosition = node.gridPosition - 0.5;\n                return true;\n            }\n\n            // we have reached a node with higher priority; no movement is allowed\n            if (leftNodePriority > priority ||\n                Math.abs(leftNodePriority - priority) < 0.0001) {\n                return false;\n            }\n\n            // The left node has lower priority - try to move it\n            if (this.moveLeft(leftNode, layer, priority)) {\n                node.gridPosition = node.gridPosition - 0.5;\n                return true;\n            }\n\n            return false;\n        },\n\n        mapVirtualNode: function (node, link) {\n            this.nodeToLinkMap.set(node, link);\n            if (!this.linkToNodeMap.containsKey(link)) {\n                this.linkToNodeMap.set(link, []);\n            }\n            this.linkToNodeMap.get(link).push(node);\n        },\n\n        _nodesInLink: function (node) {\n            return this.linkToNodeMap.get(this.nodeToLinkMap.get(node));\n        },\n\n        /// <summary>\n        /// Inserts dummy nodes to break long links.\n        /// </summary>\n        _dummify: function () {\n            this.linkToNodeMap = new Dictionary();\n            this.nodeToLinkMap = new Dictionary();\n\n            var layer, pos, newNode, node, r, newLink, i, l, links = this.graph.links.slice(0);\n            var layers = this.layers;\n\n            var addLinkBetweenLayers = function(upLayer, downLayer, link) {\n                layers[upLayer].linksTo[downLayer] = layers[upLayer].linksTo[downLayer] || [];\n                layers[upLayer].linksTo[downLayer].push(link);\n            };\n\n            for (l = 0; l < links.length; l++) {\n                var link = links[l];\n                var o = link.source;\n                var d = link.target;\n\n                var oLayer = o.layer;\n                var dLayer = d.layer;\n                var oPos = o.gridPosition;\n                var dPos = d.gridPosition;\n\n                var step = (dPos - oPos) / Math.abs(dLayer - oLayer);\n\n                var p = o;\n                if (oLayer - dLayer > 1) {\n                    for (i = oLayer - 1; i > dLayer; i--) {\n                        newNode = new Node();\n                        newNode.x = o.x;\n                        newNode.y = o.y;\n                        newNode.width = o.width / 100;\n                        newNode.height = o.height / 100;\n\n                        layer = layers[i];\n                        pos = (i - dLayer) * step + oPos;\n                        if (pos > layer.length) {\n                            pos = layer.length;\n                        }\n\n                        // check if origin and dest are both last\n                        if (oPos >= layers[oLayer].length - 1 &&\n                            dPos >= layers[dLayer].length - 1) {\n                            pos = layer.length;\n                        }\n\n                        // check if origin and destination are both first\n                        else if (oPos === 0 && dPos === 0) {\n                            pos = 0;\n                        }\n\n                        newNode.layer = i;\n                        newNode.uBaryCenter = 0.0;\n                        newNode.dBaryCenter = 0.0;\n                        newNode.upstreamLinkCount = 0;\n                        newNode.downstreamLinkCount = 0;\n                        newNode.gridPosition = pos;\n                        newNode.isVirtual = true;\n\n                        Utils.insert(layer, newNode, pos);\n\n                        // translate rightwards nodes' positions\n                        for (r = pos + 1; r < layer.length; r++) {\n                            node = layer[r];\n                            node.gridPosition = node.gridPosition + 1;\n                        }\n\n                        newLink = new Link(p, newNode);\n                        newLink.depthOfDumminess = 0;\n\n                        addLinkBetweenLayers(i - 1, i, newLink);\n\n                        p = newNode;\n\n                        // add the new node and the new link to the graph\n                        this.graph._addNode(newNode);\n                        this.graph.addLink(newLink);\n\n                        newNode.index = this.graph.nodes.length - 1;\n                        this.mapVirtualNode(newNode, link);\n                    }\n\n                    // set the origin of the real arrow to the last dummy\n                    addLinkBetweenLayers(dLayer - 1, dLayer, newLink);\n                    link.changeSource(p);\n                    link.depthOfDumminess = oLayer - dLayer - 1;\n                } else if (oLayer - dLayer < -1) {\n                    for (i = oLayer + 1; i < dLayer; i++) {\n                        newNode = new Node();\n                        newNode.x = o.x;\n                        newNode.y = o.y;\n                        newNode.width = o.width / 100;\n                        newNode.height = o.height / 100;\n\n                        layer = layers[i];\n                        pos = (i - oLayer) * step + oPos;\n                        if (pos > layer.length) {\n                            pos = layer.length;\n                        }\n\n                        // check if origin and dest are both last\n                        if (oPos >= layers[oLayer].length - 1 &&\n                            dPos >= layers[dLayer].length - 1) {\n                            pos = layer.length;\n                        }\n\n                        // check if origin and destination are both first\n                        else if (oPos === 0 && dPos === 0) {\n                            pos = 0;\n                        }\n\n                        newNode.layer = i;\n                        newNode.uBaryCenter = 0.0;\n                        newNode.dBaryCenter = 0.0;\n                        newNode.upstreamLinkCount = 0;\n                        newNode.downstreamLinkCount = 0;\n                        newNode.gridPosition = pos;\n                        newNode.isVirtual = true;\n\n                        pos &= pos; // truncates to int\n                        Utils.insert(layer, newNode, pos);\n\n                        // translate rightwards nodes' positions\n                        for (r = pos + 1; r < layer.length; r++) {\n                            node = layer[r];\n                            node.gridPosition = node.gridPosition + 1;\n                        }\n\n                        newLink = new Link(p, newNode);\n                        newLink.depthOfDumminess = 0;\n                        addLinkBetweenLayers(i - 1, i, newLink);\n\n                        p = newNode;\n\n                        // add the new node and the new link to the graph\n                        this.graph._addNode(newNode);\n                        this.graph.addLink(newLink);\n\n                        newNode.index = this.graph.nodes.length - 1;\n                        this.mapVirtualNode(newNode, link);\n                    }\n                    addLinkBetweenLayers(dLayer - 1, dLayer, link);\n\n                    // Set the origin of the real arrow to the last dummy\n                    link.changeSource(p);\n                    link.depthOfDumminess = dLayer - oLayer - 1;\n                } else {\n                    addLinkBetweenLayers(oLayer, dLayer, link);\n                }\n            }\n        },\n\n        /// <summary>\n        /// Removes the dummy nodes inserted earlier to break long links.\n        /// </summary>\n        /// <remarks>The virtual nodes are effectively turned into intermediate connection points.</remarks>\n        _dedummify: function () {\n            var dedum = true;\n            while (dedum) {\n                dedum = false;\n\n                for (var l = 0; l < this.graph.links.length; l++) {\n                    var link = this.graph.links[l];\n                    if (!link.depthOfDumminess) {\n                        continue;\n                    }\n\n                    var points = [];\n\n                    // add points in reverse order\n                    points.unshift({ x: link.target.x, y: link.target.y });\n                    points.unshift({ x: link.source.x, y: link.source.y });\n\n                    // _dedummify the link\n                    var temp = link;\n                    var depthOfDumminess = link.depthOfDumminess;\n                    for (var d = 0; d < depthOfDumminess; d++) {\n                        var node = temp.source;\n                        var prevLink = node.incoming[0];\n\n                        points.unshift({ x: prevLink.source.x, y: prevLink.source.y });\n\n                        temp = prevLink;\n                    }\n\n                    // restore the original link origin\n                    link.changeSource(temp.source);\n\n                    // reset dummification flag\n                    link.depthOfDumminess = 0;\n\n                    // note that we only need the intermediate points, floating links have been dropped in the analysis\n                    if (points.length > 2) {\n                        // first and last are the endpoints\n                        points.splice(0, 1);\n                        points.splice(points.length - 1);\n                        link.points = points;\n                    }\n                    else {\n                        link.points = [];\n                    }\n\n                    // we are not going to delete the dummy elements;\n                    // they won't be needed anymore anyway.\n\n                    dedum = true;\n                    break;\n                }\n            }\n        },\n\n        /// <summary>\n        /// Optimizes/reduces the crossings between the layers by turning the crossing problem into a (combinatorial) number ordering problem.\n        /// </summary>\n        _optimizeCrossings: function () {\n            var moves = -1, i;\n            var maxIterations = 3;\n            var iter = 0;\n\n            while (moves !== 0) {\n                if (iter++ > maxIterations) {\n                    break;\n                }\n\n                moves = 0;\n\n                for (i = this.layers.length - 1; i >= 1; i--) {\n                    moves += this.optimizeLayerCrossings(false, i);\n                }\n\n                for (i = 0; i < this.layers.length - 1; i++) {\n                    moves += this.optimizeLayerCrossings(true, i);\n                }\n            }\n        },\n\n        calcUpData: function (layer) {\n            if (layer === 0) {\n                return;\n            }\n\n            var considered = this.layers[layer], i, l, link;\n            var upLayer = new Set();\n            var temp = this.layers[layer - 1];\n            for (i = 0; i < temp.length; i++) {\n                upLayer.add(temp[i]);\n            }\n\n            for (i = 0; i < considered.length; i++) {\n                var node = considered[i];\n\n                // calculate barycenter\n                var sum = 0;\n                var total = 0;\n\n                for (l = 0; l < node.incoming.length; l++) {\n                    link = node.incoming[l];\n                    if (upLayer.contains(link.source)) {\n                        total++;\n                        sum += link.source.gridPosition;\n                    }\n                }\n\n                for (l = 0; l < node.outgoing.length; l++) {\n                    link = node.outgoing[l];\n                    if (upLayer.contains(link.target)) {\n                        total++;\n                        sum += link.target.gridPosition;\n                    }\n                }\n\n                if (total > 0) {\n                    node.uBaryCenter = sum / total;\n                    node.upstreamLinkCount = total;\n                }\n                else {\n                    node.uBaryCenter = i;\n                    node.upstreamLinkCount = 0;\n                }\n            }\n        },\n\n        calcDownData: function (layer) {\n            if (layer === this.layers.length - 1) {\n                return;\n            }\n\n            var considered = this.layers[layer], i , l, link;\n            var downLayer = new Set();\n            var temp = this.layers[layer + 1];\n            for (i = 0; i < temp.length; i++) {\n                downLayer.add(temp[i]);\n            }\n\n            for (i = 0; i < considered.length; i++) {\n                var node = considered[i];\n\n                // calculate barycenter\n                var sum = 0;\n                var total = 0;\n\n                for (l = 0; l < node.incoming.length; l++) {\n                    link = node.incoming[l];\n                    if (downLayer.contains(link.source)) {\n                        total++;\n                        sum += link.source.gridPosition;\n                    }\n                }\n\n                for (l = 0; l < node.outgoing.length; l++) {\n                    link = node.outgoing[l];\n                    if (downLayer.contains(link.target)) {\n                        total++;\n                        sum += link.target.gridPosition;\n                    }\n                }\n\n                if (total > 0) {\n                    node.dBaryCenter = sum / total;\n                    node.downstreamLinkCount = total;\n                }\n                else {\n                    node.dBaryCenter = i;\n                    node.downstreamLinkCount = 0;\n                }\n            }\n        },\n\n        /// <summary>\n        /// Optimizes the crossings.\n        /// </summary>\n        /// <remarks>The big trick here is the usage of weights or values attached to connected nodes which turn a problem of crossing links\n        /// to an a problem of ordering numbers.</remarks>\n        /// <param name=\"layerIndex\">The layer index.</param>\n        /// <param name=\"movingDownwards\">If set to <c>true</c> we move down in the layer stack.</param>\n        /// <returns>The number of nodes having moved, i.e. the number of crossings reduced.</returns>\n        optimizeLayerCrossings: function (down, layer) {\n            var iconsidered;\n            var considered;\n\n            if (down) {\n                considered = this.layers[iconsidered = layer + 1];\n            }\n            else {\n                considered = this.layers[iconsidered = layer - 1];\n            }\n\n            // remember what it was\n            var presorted = considered.slice(0);\n\n            // calculate barycenters for all nodes in the considered layer\n            if (down) {\n                this.calcUpData(iconsidered);\n            }\n            else {\n                this.calcDownData(iconsidered);\n            }\n\n            var that = this;\n            // sort nodes within this layer according to the barycenters\n            considered.sort(function(n1, n2) {\n                var n1BaryCenter = that.calcBaryCenter(n1),\n                    n2BaryCenter = that.calcBaryCenter(n2);\n                if (Math.abs(n1BaryCenter - n2BaryCenter) < 0.0001) {\n                    // in case of coinciding barycenters compare by the count of in/out links\n                    if (n1.degree() === n2.degree()) {\n                        return that.compareByIndex(n1, n2);\n                    }\n                    else if (n1.degree() < n2.degree()) {\n                        return 1;\n                    }\n                    return -1;\n                }\n                var compareValue = (n2BaryCenter - n1BaryCenter) * 1000;\n                if (compareValue > 0) {\n                    return -1;\n                }\n                else if (compareValue < 0) {\n                    return 1;\n                }\n                return that.compareByIndex(n1, n2);\n            });\n\n            // count relocations\n            var i, moves = 0;\n            for (i = 0; i < considered.length; i++) {\n                if (considered[i] !== presorted[i]) {\n                    moves++;\n                }\n            }\n\n            if (moves > 0) {\n                // now that the boxes have been arranged, update their grid positions\n                var inode = 0;\n                for (i = 0; i < considered.length; i++) {\n                    var node = considered[i];\n                    node.gridPosition = inode++;\n                }\n            }\n\n            return moves;\n        },\n\n        /// <summary>\n        /// Swaps a pair of nodes in a layer.\n        /// </summary>\n        /// <param name=\"layerIndex\">Index of the layer.</param>\n        /// <param name=\"n\">The Nth node in the layer.</param>\n        _swapPairs: function () {\n            var maxIterations = this.options.layeredIterations;\n            var iter = 0;\n\n            while (true) {\n                if (iter++ > maxIterations) {\n                    break;\n                }\n\n                var downwards = (iter % 4 <= 1);\n                var secondPass = (iter % 4 === 1);\n\n                for (var l = (downwards ? 0 : this.layers.length - 1);\n                     downwards ? l <= this.layers.length - 1 : l >= 0; l += (downwards ? 1 : -1)) {\n                    var layer = this.layers[l];\n                    var hasSwapped = false;\n\n                    // there is no need to recalculate crossings if they were calculated\n                    // on the previous step and nothing has changed\n                    var calcCrossings = true;\n                    var memCrossings = 0;\n\n                    for (var n = 0; n < layer.length - 1; n++) {\n                        // count crossings\n                        var up = 0;\n                        var down = 0;\n                        var crossBefore = 0;\n\n                        if (calcCrossings) {\n                            if (l !== 0) {\n                                up = this.countLinksCrossingBetweenTwoLayers(l - 1, l);\n                            }\n                            if (l !== this.layers.length - 1) {\n                                down = this.countLinksCrossingBetweenTwoLayers(l, l + 1);\n                            }\n                            if (downwards) {\n                                up *= 2;\n                            }\n                            else {\n                                down *= 2;\n                            }\n\n                            crossBefore = up + down;\n                        }\n                        else {\n                            crossBefore = memCrossings;\n                        }\n\n                        if (crossBefore === 0) {\n                            continue;\n                        }\n\n                        // Swap nodes\n                        var node1 = layer[n];\n                        var node2 = layer[n + 1];\n\n                        var node1GridPos = node1.gridPosition;\n                        var node2GridPos = node2.gridPosition;\n                        layer[n] = node2;\n                        layer[n + 1] = node1;\n                        node1.gridPosition = node2GridPos;\n                        node2.gridPosition = node1GridPos;\n\n                        // count crossings again and if worse than before, restore swapping\n                        up = 0;\n                        if (l !== 0) {\n                            up = this.countLinksCrossingBetweenTwoLayers(l - 1, l);\n                        }\n                        down = 0;\n                        if (l !== this.layers.length - 1) {\n                            down = this.countLinksCrossingBetweenTwoLayers(l, l + 1);\n                        }\n                        if (downwards) {\n                            up *= 2;\n                        }\n                        else {\n                            down *= 2;\n                        }\n                        var crossAfter = up + down;\n\n                        var revert = false;\n                        if (secondPass) {\n                            revert = crossAfter >= crossBefore;\n                        }\n                        else {\n                            revert = crossAfter > crossBefore;\n                        }\n\n                        if (revert) {\n                            node1 = layer[n];\n                            node2 = layer[n + 1];\n\n                            node1GridPos = node1.gridPosition;\n                            node2GridPos = node2.gridPosition;\n                            layer[n] = node2;\n                            layer[n + 1] = node1;\n                            node1.gridPosition = node2GridPos;\n                            node2.gridPosition = node1GridPos;\n\n                            // nothing has changed, remember the crossings so that\n                            // they are not calculated again on the next step\n                            memCrossings = crossBefore;\n                            calcCrossings = false;\n                        }\n                        else {\n                            hasSwapped = true;\n                            calcCrossings = true;\n                        }\n                    }\n\n                    if (hasSwapped) {\n                        if (l !== this.layers.length - 1) {\n                            this.calcUpData(l + 1);\n                        }\n                        if (l !== 0) {\n                            this.calcDownData(l - 1);\n                        }\n                    }\n                }\n            }\n        },\n\n        /// <summary>\n        /// Counts the number of links crossing between two layers.\n        /// </summary>\n        /// <param name=\"layerIndex1\">The layer index.</param>\n        /// <param name=\"layerIndex2\">Another layer index.</param>\n        /// <returns></returns>\n        countLinksCrossingBetweenTwoLayers: function (ulayer, dlayer) {\n            var links = this.layers[ulayer].linksTo[dlayer];\n            var link1, link2, n11, n12, n21, n22, l1, l2;\n            var crossings = 0;\n            var length = links.length;\n\n            for (l1 = 0; l1 < length; l1++) {\n                link1 = links[l1];\n                for (l2 = l1 + 1; l2 < length; l2++) {\n\n                    link2 = links[l2];\n\n                    if (link1.target.layer === dlayer) {\n                        n11 = link1.source;\n                        n12 = link1.target;\n                    }\n                    else {\n                        n11 = link1.target;\n                        n12 = link1.source;\n                    }\n\n                    if (link2.target.layer === dlayer) {\n                        n21 = link2.source;\n                        n22 = link2.target;\n                    }\n                    else {\n                        n21 = link2.target;\n                        n22 = link2.source;\n                    }\n\n                    var n11gp = n11.gridPosition;\n                    var n12gp = n12.gridPosition;\n                    var n21gp = n21.gridPosition;\n                    var n22gp = n22.gridPosition;\n\n                    if ((n11gp - n21gp) * (n12gp - n22gp) < 0) {\n                        crossings++;\n                    }\n                }\n            }\n\n            return crossings;\n        },\n\n        calcBaryCenter: function (node) {\n            var upstreamLinkCount = node.upstreamLinkCount;\n            var downstreamLinkCount = node.downstreamLinkCount;\n            var uBaryCenter = node.uBaryCenter;\n            var dBaryCenter = node.dBaryCenter;\n\n            if (upstreamLinkCount > 0 && downstreamLinkCount > 0) {\n                return (uBaryCenter + dBaryCenter) / 2;\n            }\n            if (upstreamLinkCount > 0) {\n                return uBaryCenter;\n            }\n            if (downstreamLinkCount > 0) {\n                return dBaryCenter;\n            }\n\n            return 0;\n        },\n\n        _gridPositionComparer: function (x, y) {\n            if (x.gridPosition < y.gridPosition) {\n                return -1;\n            }\n            if (x.gridPosition > y.gridPosition) {\n                return 1;\n            }\n            return 0;\n        },\n\n        _positionAscendingComparer: function (x, y) {\n            return x.k < y.k ? -1 : x.k > y.k ? 1 : 0;\n        },\n\n        _positionDescendingComparer: function (x, y) {\n            return x.k < y.k ? 1 : x.k > y.k ? -1 : 0;\n        },\n\n        _firstVirtualNode: function (layer) {\n            for (var c = 0; c < layer.length; c++) {\n                if (layer[c].isVirtual) {\n                    return c;\n                }\n            }\n            return -1;\n        },\n\n        compareByIndex: function (o1, o2) {\n            var i1 = o1.index;\n            var i2 = o2.index;\n\n            if (i1 < i2) {\n                return 1;\n            }\n\n            if (i1 > i2) {\n                return -1;\n            }\n\n            return 0;\n        },\n\n        intDiv: function (numerator, denominator) {\n            return (numerator - numerator % denominator) / denominator;\n        },\n\n        nextVirtualNode: function (layer, node) {\n            var nodeIndex = node.layerIndex;\n            for (var i = nodeIndex + 1; i < layer.length; ++i) {\n                if (layer[i].isVirtual) {\n                    return layer[i];\n                }\n            }\n            return null;\n        }\n\n    });\n\n    /**\n     * Captures the state of a diagram; node positions, link points and so on.\n     * @type {*}\n     */\n    var LayoutState = kendo.Class.extend({\n        init: function (diagram, graphOrNodes) {\n            if (Utils.isUndefined(diagram)) {\n                throw \"No diagram given\";\n            }\n            this.diagram = diagram;\n            this.nodeMap = new Dictionary();\n            this.linkMap = new Dictionary();\n            this.capture(graphOrNodes ? graphOrNodes : diagram);\n        },\n\n        /**\n         * Will capture either\n         * - the state of the shapes and the intermediate points of the connections in the diagram\n         * - the bounds of the nodes contained in the Graph together with the intermediate points of the links in the Graph\n         * - the bounds of the nodes in the Array<Node>\n         * - the links points and node bounds in the literal object\n         * @param diagramOrGraphOrNodes\n         */\n        capture: function (diagramOrGraphOrNodes) {\n            var node,\n                nodes,\n                shape,\n                i,\n                conn,\n                link,\n                links;\n\n            if (diagramOrGraphOrNodes instanceof diagram.Graph) {\n\n                for (i = 0; i < diagramOrGraphOrNodes.nodes.length; i++) {\n                    node = diagramOrGraphOrNodes.nodes[i];\n                    shape = node.associatedShape;\n                    //shape.bounds(new Rect(node.x, node.y, node.width, node.height));\n                    this.nodeMap.set(shape.visual.id, new Rect(node.x, node.y, node.width, node.height));\n                }\n                for (i = 0; i < diagramOrGraphOrNodes.links.length; i++) {\n                    link = diagramOrGraphOrNodes.links[i];\n                    conn = link.associatedConnection;\n                    this.linkMap.set(conn.visual.id, link.points());\n                }\n            }\n            else if (diagramOrGraphOrNodes instanceof Array) {\n                nodes = diagramOrGraphOrNodes;\n                for (i = 0; i < nodes.length; i++) {\n                    node = nodes[i];\n                    shape = node.associatedShape;\n                    if (shape) {\n                        this.nodeMap.set(shape.visual.id, new Rect(node.x, node.y, node.width, node.height));\n                    }\n                }\n            }\n            else if (diagramOrGraphOrNodes.hasOwnProperty(\"links\") && diagramOrGraphOrNodes.hasOwnProperty(\"nodes\")) {\n                nodes = diagramOrGraphOrNodes.nodes;\n                links = diagramOrGraphOrNodes.links;\n                for (i = 0; i < nodes.length; i++) {\n                    node = nodes[i];\n                    shape = node.associatedShape;\n                    if (shape) {\n                        this.nodeMap.set(shape.visual.id, new Rect(node.x, node.y, node.width, node.height));\n                    }\n                }\n                for (i = 0; i < links.length; i++) {\n                    link = links[i];\n                    conn = link.associatedConnection;\n                    if (conn) {\n                        this.linkMap.set(conn.visual.id, link.points);\n                    }\n                }\n            }\n            else { // capture the diagram\n                var shapes = this.diagram.shapes;\n                var connections = this.diagram.connections;\n                for (i = 0; i < shapes.length; i++) {\n                    shape = shapes[i];\n                    this.nodeMap.set(shape.visual.id, shape.bounds());\n                }\n                for (i = 0; i < connections.length; i++) {\n                    conn = connections[i];\n                    this.linkMap.set(conn.visual.id, conn.points());\n                }\n            }\n        }\n    });\n\n    deepExtend(diagram, {\n        init: function (element) {\n            kendo.init(element, diagram.ui);\n        },\n        SpringLayout: SpringLayout,\n        TreeLayout: TreeLayout,\n        GraphAdapter: DiagramToHyperTreeAdapter,\n        LayeredLayout: LayeredLayout,\n        LayoutBase: LayoutBase,\n        LayoutState: LayoutState\n    });\n})(window.kendo.jQuery);\n\n}, typeof define == 'function' && define.amd ? define : function(a1, a2, a3){ (a3 || a2)(); });\n\n(function (f, define) {\n    define('dataviz/diagram/dom',[\"../../kendo.data\", \"../../kendo.draganddrop\", \"../../kendo.toolbar\",\n           \"../../kendo.editable\",\n           \"../../kendo.window\",\n           \"../../kendo.dropdownlist\",\n           \"../../kendo.dataviz.core\",\n           \"../../kendo.dataviz.themes\",\n           \"./svg\",\n           \"./services\",\n           \"./layout\" ], f);\n})(function () {\n\n    (function ($, undefined) {\n        // Imports ================================================================\n        var dataviz = kendo.dataviz,\n            draw = kendo.drawing,\n            geom = kendo.geometry,\n            diagram = dataviz.diagram,\n            Widget = kendo.ui.Widget,\n            Class = kendo.Class,\n            proxy = $.proxy,\n            deepExtend = kendo.deepExtend,\n            outerWidth = kendo._outerWidth,\n            outerHeight = kendo._outerHeight,\n            extend = $.extend,\n            HierarchicalDataSource = kendo.data.HierarchicalDataSource,\n            Canvas = diagram.Canvas,\n            Group = diagram.Group,\n            Rectangle = diagram.Rectangle,\n            Circle = diagram.Circle,\n            CompositeTransform = diagram.CompositeTransform,\n            Rect = diagram.Rect,\n            Path = diagram.Path,\n            DeleteShapeUnit = diagram.DeleteShapeUnit,\n            DeleteConnectionUnit = diagram.DeleteConnectionUnit,\n            TextBlock = diagram.TextBlock,\n            Image = diagram.Image,\n            Point = diagram.Point,\n            Intersect = diagram.Intersect,\n            ConnectionEditAdorner = diagram.ConnectionEditAdorner,\n            UndoRedoService = diagram.UndoRedoService,\n            ToolService = diagram.ToolService,\n            Selector = diagram.Selector,\n            ResizingAdorner = diagram.ResizingAdorner,\n            ConnectorsAdorner = diagram.ConnectorsAdorner,\n            Cursors = diagram.Cursors,\n            Utils = diagram.Utils,\n            Observable = kendo.Observable,\n            ToBackUnit = diagram.ToBackUnit,\n            ToFrontUnit = diagram.ToFrontUnit,\n            PolylineRouter = diagram.PolylineRouter,\n            CascadingRouter = diagram.CascadingRouter,\n            isUndefined = Utils.isUndefined,\n            isDefined = Utils.isDefined,\n            defined = draw.util.defined,\n            isArray = Array.isArray,\n            isFunction = kendo.isFunction,\n            isString = Utils.isString,\n            isPlainObject = $.isPlainObject,\n\n            math = Math;\n\n        // Constants ==============================================================\n        var NS = \".kendoDiagram\",\n            CASCADING = \"cascading\",\n            ITEMBOUNDSCHANGE = \"itemBoundsChange\",\n            CHANGE = \"change\",\n            CLICK = \"click\",\n            DRAG = \"drag\",\n            DRAG_END = \"dragEnd\",\n            DRAG_START = \"dragStart\",\n            MOUSE_ENTER = \"mouseEnter\",\n            MOUSE_LEAVE = \"mouseLeave\",\n            ERROR = \"error\",\n            AUTO = \"Auto\",\n            TOP = \"Top\",\n            RIGHT = \"Right\",\n            LEFT = \"Left\",\n            BOTTOM = \"Bottom\",\n            MAXINT = 9007199254740992,\n            SELECT = \"select\",\n            ITEMROTATE = \"itemRotate\",\n            PAN = \"pan\",\n            ZOOM_START = \"zoomStart\",\n            ZOOM_END = \"zoomEnd\",\n            NONE = \"none\",\n            DEFAULT_CANVAS_WIDTH = 600,\n            DEFAULT_CANVAS_HEIGHT = 600,\n            DEFAULT_SHAPE_TYPE = \"rectangle\",\n            DEFAULT_SHAPE_WIDTH = 100,\n            DEFAULT_SHAPE_HEIGHT = 100,\n            DEFAULT_SHAPE_MINWIDTH = 20,\n            DEFAULT_SHAPE_MINHEIGHT = 20,\n            DEFAULT_SHAPE_POSITION = 0,\n            DEFAULT_CONNECTION_BACKGROUND = \"Yellow\",\n            MAX_VALUE = Number.MAX_VALUE,\n            MIN_VALUE = -Number.MAX_VALUE,\n            ABSOLUTE = \"absolute\",\n            TRANSFORMED = \"transformed\",\n            ROTATED = \"rotated\",\n            TRANSPARENT = \"transparent\",\n            WIDTH = \"width\",\n            HEIGHT = \"height\",\n            X = \"x\",\n            Y = \"y\",\n            MOUSEWHEEL_NS = \"DOMMouseScroll\" + NS + \" mousewheel\" + NS,\n            MOBILE_ZOOM_RATE = 0.05,\n            MOBILE_PAN_DISTANCE = 5,\n            BUTTON_TEMPLATE = '<a class=\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base #=className#\" href=\"\\\\#\">' +\n                '<span class=\"k-button-icon #=iconClass# #=imageClass#\"></span>' +\n                '<span class=\"k-button-text\">#=text#</span>' +\n            '</a>',\n            CONNECTION_CONTENT_OFFSET = 5;\n\n        diagram.DefaultConnectors = [{\n            name: TOP\n        }, {\n            name: BOTTOM\n        }, {\n            name: LEFT\n        }, {\n            name: RIGHT\n        }, {\n            name: AUTO,\n            position: function (shape) {\n                return shape.getPosition(\"center\");\n            }\n        }];\n\n        var defaultButtons = {\n            cancel: {\n                text: \"Cancel\",\n                imageClass: \"k-i-cancel\",\n                className: \"k-diagram-cancel\",\n                iconClass: \"k-icon\"\n            },\n            update: {\n                text: \"Update\",\n                imageClass: \"k-i-checkmark\",\n                className: \"k-diagram-update\",\n                iconClass: \"k-icon\"\n            }\n        };\n\n        diagram.shapeDefaults = function(extra) {\n            var defaults = {\n                type: DEFAULT_SHAPE_TYPE,\n                path: \"\",\n                autoSize: true,\n                visual: null,\n                x: DEFAULT_SHAPE_POSITION,\n                y: DEFAULT_SHAPE_POSITION,\n                minWidth: DEFAULT_SHAPE_MINWIDTH,\n                minHeight: DEFAULT_SHAPE_MINHEIGHT,\n                width: DEFAULT_SHAPE_WIDTH,\n                height: DEFAULT_SHAPE_HEIGHT,\n                hover: {},\n                editable: {\n                    connect: true,\n                    tools: []\n                },\n                connectors: diagram.DefaultConnectors,\n                rotation: {\n                    angle: 0\n                }\n            };\n\n            Utils.simpleExtend(defaults, extra);\n\n            return defaults;\n        };\n\n        function mwDelta(e) {\n            var origEvent = e.originalEvent,\n                delta = 0;\n\n            if (origEvent.wheelDelta) {\n                delta = -origEvent.wheelDelta / 40;\n                delta = delta > 0 ? math.ceil(delta) : math.floor(delta);\n            } else if (origEvent.detail) {\n                delta = origEvent.detail;\n            }\n\n            return delta;\n        }\n\n        function isAutoConnector(connector) {\n            return connector.options.name.toLowerCase() === AUTO.toLowerCase();\n        }\n\n        function closestConnector(point, connectors) {\n            var minimumDistance = MAXINT, resCtr, connector;\n            for (var i = 0; i < connectors.length; i++) {\n                connector = connectors[i];\n                if (!isAutoConnector(connector)) {\n                    var dist = point.distanceTo(connector.position());\n                    if (dist < minimumDistance) {\n                        minimumDistance = dist;\n                        resCtr = connector;\n                    }\n                }\n            }\n            return resCtr;\n        }\n\n        function indicesOfItems(group, visuals) {\n            var i, indices = [], visual;\n            var children = group.drawingContainer().children;\n            var length = children.length;\n            for (i = 0; i < visuals.length; i++) {\n                visual = visuals[i];\n                for (var j = 0; j < length; j++) {\n                    if (children[j] == visual.drawingContainer()) {\n                        indices.push(j);\n                        break;\n                    }\n                }\n            }\n            return indices;\n        }\n\n        var DiagramElement = Observable.extend({\n            init: function (options) {\n                var that = this;\n                that.dataItem = (options || {}).dataItem;\n                Observable.fn.init.call(that);\n                that.options = deepExtend({ id: diagram.randomId() }, that.options, options);\n                that.isSelected = false;\n                that.visual = new Group({\n                    id: that.options.id,\n                    autoSize: that.options.autoSize\n                });\n                that.id = that.options.id;\n                that._template();\n            },\n\n            options: {\n                hover: {},\n                cursor: Cursors.grip,\n                content: {\n                    align: \"center middle\"\n                },\n                selectable: true,\n                serializable: true,\n                enable: true\n            },\n\n            _getCursor: function (point) {\n                if (this.adorner) {\n                    return this.adorner._getCursor(point);\n                }\n                return this.options.cursor;\n            },\n\n            visible: function (value) {\n                if (isUndefined(value)) {\n                    return this.visual.visible();\n                } else {\n                    this.visual.visible(value);\n                }\n            },\n\n            bounds: function () {\n            },\n\n            refresh: function () {\n                this.visual.redraw();\n            },\n\n            position: function (point) {\n                this.options.x = point.x;\n                this.options.y = point.y;\n                this.visual.position(point);\n            },\n\n            toString: function () {\n                return this.options.id;\n            },\n\n            serialize: function () {\n                // the options json object describes the shape perfectly. So this object can serve as shape serialization.\n                var json = deepExtend({}, {options: this.options});\n                if (this.dataItem) {\n                    json.dataItem = this.dataItem.toString();\n                }\n                return json;\n            },\n\n            _content: function (content) {\n                if (content !== undefined) {\n                    var options = this.options;\n\n                    if (diagram.Utils.isString(content)) {\n                        options.content.text = content;\n                    } else {\n                        deepExtend(options.content, content);\n                    }\n\n                    var contentOptions = options.content;\n                    var contentVisual = this._contentVisual;\n\n                    if (!contentVisual) {\n                        this._createContentVisual(contentOptions);\n                    } else {\n                        this._updateContentVisual(contentOptions);\n                    }\n                }\n\n                return this.options.content.text;\n            },\n\n            _createContentVisual: function(options) {\n                if (options.text) {\n                    this._contentVisual = new TextBlock(options);\n                    this._contentVisual._includeInBBox = false;\n                    this.visual.append(this._contentVisual);\n                }\n            },\n\n            _updateContentVisual: function(options) {\n                this._contentVisual.redraw(options);\n            },\n\n            _hitTest: function (point) {\n                var bounds = this.bounds();\n                return this.visible() && bounds.contains(point) && this.options.enable;\n            },\n\n            _template: function () {\n                var that = this;\n                if (that.options.content.template) {\n                    var data = that.dataItem || {},\n                        elementTemplate = kendo.template(that.options.content.template, {\n                            paramName: \"dataItem\"\n                        });\n\n                    that.options.content.text = elementTemplate(data);\n                }\n            },\n\n            _canSelect: function () {\n                return this.options.selectable !== false;\n            },\n\n            toJSON: function() {\n                return {\n                    id: this.options.id\n                };\n            }\n        });\n\n        var Connector = Class.extend({\n            init: function (shape, options) {\n                this.options = deepExtend({}, this.options, options);\n                this.connections = [];\n                this.shape = shape;\n            },\n            options: {\n                width: 7,\n                height: 7,\n                fill: {\n                    color: DEFAULT_CONNECTION_BACKGROUND\n                },\n                hover: {}\n            },\n            position: function () {\n                if (this.options.position) {\n                    return this.options.position(this.shape);\n                } else {\n                    return this.shape.getPosition(this.options.name);\n                }\n            },\n            toJSON: function () {\n                return {\n                    shapeId: this.shape.toString(),\n                    connector: this.options.name\n                };\n            }\n        });\n\n        Connector.parse = function (diagram, str) {\n            var tempStr = str.split(\":\"),\n                id = tempStr[0],\n                name = tempStr[1] || AUTO;\n\n            for (var i = 0; i < diagram.shapes.length; i++) {\n                var shape = diagram.shapes[i];\n                if (shape.options.id == id) {\n                    return shape.getConnector(name.trim());\n                }\n            }\n        };\n\n        var Shape = DiagramElement.extend({\n            init: function (options, diagram) {\n                var that = this;\n                DiagramElement.fn.init.call(that, options);\n                this.diagram = diagram;\n                this.updateOptionsFromModel();\n                options = that.options;\n                that.connectors = [];\n                that.type = options.type;\n                that.createShapeVisual();\n                that.updateBounds();\n                that.content(that.content());\n\n                that._createConnectors();\n            },\n\n            options: diagram.shapeDefaults(),\n\n            _setOptionsFromModel: function(model) {\n                var modelOptions = filterShapeDataItem(model || this.dataItem);\n                this.options = deepExtend({}, this.options, modelOptions);\n\n                this.redrawVisual();\n            },\n\n            updateOptionsFromModel: function(model, field) {\n                if (this.diagram && this.diagram._isEditable) {\n                    var modelOptions = filterShapeDataItem(model || this.dataItem);\n\n                    if (model && field) {\n                        if (!dataviz.inArray(field, [\"x\", \"y\", \"width\", \"height\"])) {\n                            if (this.options.visual) {\n                                this._redrawVisual();\n                            } else if (modelOptions.type) {\n                                this.options = deepExtend({}, this.options, modelOptions);\n                                this._redrawVisual();\n                            }\n\n                            if (this.options.content) {\n                                this._template();\n                                this.content(this.options.content);\n                            }\n                        } else {\n                            var bounds = this.bounds();\n                            bounds[field] = model[field];\n                            this.bounds(bounds);\n                        }\n                    } else {\n                        this.options = deepExtend({}, this.options, modelOptions);\n                    }\n                }\n            },\n\n            _redrawVisual: function() {\n                this.visual.clear();\n                this._contentVisual = null;\n                this.options.dataItem = this.dataItem;\n                this.createShapeVisual();\n                this.updateBounds();\n            },\n\n            redrawVisual: function() {\n                this._redrawVisual();\n                if (this.options.content) {\n                    this._template();\n                    this.content(this.options.content);\n                }\n            },\n\n            updateModel: function(syncChanges) {\n                var diagram = this.diagram;\n                if (diagram && diagram._isEditable) {\n                    var bounds = this._bounds;\n                    var model = this.dataItem;\n\n                    if (model) {\n                        diagram._suspendModelRefresh();\n                        if (defined(model.x) && bounds.x !== model.x) {\n                            model.set(\"x\", bounds.x);\n                        }\n\n                        if (defined(model.y) && bounds.y !== model.y) {\n                            model.set(\"y\", bounds.y);\n                        }\n\n                        if (defined(model.width) && bounds.width !== model.width) {\n                            model.set(\"width\", bounds.width);\n                        }\n\n                        if (defined(model.height) && bounds.height !== model.height) {\n                            model.set(\"height\", bounds.height);\n                        }\n\n                        this.dataItem = model;\n                        diagram._resumeModelRefresh();\n\n                        if (syncChanges) {\n                            diagram._syncShapeChanges();\n                        }\n                    }\n                }\n            },\n\n            updateBounds: function() {\n                var bounds = this.visual._measure(true);\n                var options = this.options;\n                this.bounds(new Rect(options.x, options.y, bounds.width, bounds.height));\n                this._rotate();\n                this._alignContent();\n            },\n\n            content: function(content) {\n                var result = this._content(content);\n\n                this._alignContent();\n\n                return result;\n            },\n\n            _alignContent: function() {\n                var contentOptions = this.options.content || {};\n                var contentVisual = this._contentVisual;\n                if (contentVisual && contentOptions.align) {\n                    var containerRect = this.visual._measure();\n                    var aligner = new diagram.RectAlign(containerRect);\n                    var contentBounds = contentVisual.drawingElement.bbox(null);\n\n                    var contentRect = new Rect(0, 0, contentBounds.width(), contentBounds.height());\n                    var alignedBounds = aligner.align(contentRect, contentOptions.align);\n\n                    contentVisual.position(alignedBounds.topLeft());\n                }\n            },\n\n            _createConnectors: function() {\n                var options = this.options,\n                    length = options.connectors.length,\n                    connectorDefaults = options.connectorDefaults,\n                    connector, i;\n\n                for (i = 0; i < length; i++) {\n                    connector = new Connector(\n                        this, deepExtend({},\n                            connectorDefaults,\n                            options.connectors[i]\n                        )\n                    );\n                    this.connectors.push(connector);\n                }\n            },\n\n            bounds: function (value) {\n                var bounds;\n\n                if (value) {\n                    if (isString(value)) {\n                        switch (value) {\n                            case TRANSFORMED :\n                                bounds = this._transformedBounds();\n                                break;\n                            case ABSOLUTE :\n                                bounds = this._transformedBounds();\n                                var pan = this.diagram._pan;\n                                bounds.x += pan.x;\n                                bounds.y += pan.y;\n                                break;\n                            case ROTATED :\n                                bounds = this._rotatedBounds();\n                                break;\n                            default:\n                                bounds = this._bounds;\n                        }\n                    } else {\n                        this._setBounds(value);\n                        this._triggerBoundsChange();\n                        if (!(this.diagram && this.diagram._layouting)) {\n                            this.refreshConnections();\n                        }\n                    }\n                } else {\n                    bounds = this._bounds;\n                }\n\n                return bounds;\n            },\n\n            _setBounds: function(rect) {\n                var options = this.options;\n                var topLeft = rect.topLeft();\n                var x = options.x = topLeft.x;\n                var y = options.y = topLeft.y;\n                var width = options.width = math.max(rect.width, options.minWidth);\n                var height = options.height = math.max(rect.height, options.minHeight);\n\n                this._bounds = new Rect(x, y, width, height);\n\n                this.visual.redraw({\n                    x: x,\n                    y: y,\n                    width: width,\n                    height: height\n                });\n            },\n\n            position: function (point) {\n                if (point) {\n                    this.bounds(new Rect(point.x, point.y, this._bounds.width, this._bounds.height));\n                } else {\n                    return this._bounds.topLeft();\n                }\n            },\n            /**\n             * Returns a clone of this shape.\n             * @returns {Shape}\n             */\n            clone: function () {\n                var json = this.serialize();\n\n                json.options.id = diagram.randomId();\n\n                if (this.diagram && this.diagram._isEditable && defined(this.dataItem)) {\n                    json.options.dataItem = cloneDataItem(this.dataItem);\n                }\n\n                return new Shape(json.options);\n            },\n\n            select: function (value) {\n                var diagram = this.diagram, selected, deselected;\n                if (isUndefined(value)) {\n                    value = true;\n                }\n\n                if (this._canSelect()) {\n                    if (this.isSelected != value) {\n                        selected = [];\n                        deselected = [];\n                        this.isSelected = value;\n                        if (this.isSelected) {\n                            diagram._selectedItems.push(this);\n                            selected.push(this);\n                        } else {\n                            Utils.remove(diagram._selectedItems, this);\n                            deselected.push(this);\n                        }\n\n                        if (!diagram._internalSelection) {\n                            diagram._selectionChanged(selected, deselected);\n                        }\n\n                        return true;\n                    }\n                }\n            },\n\n            rotate: function (angle, center, undoable) { // we assume the center is always the center of the shape.\n                var rotate = this.visual.rotate();\n                if (angle !== undefined) {\n                    if (undoable !== false && this.diagram && this.diagram.undoRedoService && angle !== rotate.angle) {\n                        this.diagram.undoRedoService.add(\n                            new diagram.RotateUnit(this.diagram._resizingAdorner, [this], [rotate.angle]), false);\n                    }\n\n                    var b = this.bounds(),\n                        sc = new Point(b.width / 2, b.height / 2),\n                        deltaAngle,\n                        newPosition;\n\n                    if (center) {\n                        deltaAngle = angle - rotate.angle;\n                        newPosition = b.center().rotate(center, 360 - deltaAngle).minus(sc);\n                        this._rotationOffset = this._rotationOffset.plus(newPosition.minus(b.topLeft()));\n                        this.position(newPosition);\n                    }\n\n                    this.visual.rotate(angle, sc);\n                    this.options.rotation.angle = angle;\n\n                    if (this.diagram && this.diagram._connectorsAdorner) {\n                        this.diagram._connectorsAdorner.refresh();\n                    }\n\n                    this.refreshConnections();\n\n                    if (this.diagram) {\n                        this.diagram.trigger(ITEMROTATE, { item: this });\n                    }\n                }\n\n                return rotate;\n            },\n\n            connections: function (type) { // in, out, undefined = both\n                var result = [], i, j, con, cons, ctr;\n\n                for (i = 0; i < this.connectors.length; i++) {\n                    ctr = this.connectors[i];\n                    cons = ctr.connections;\n                    for (j = 0, cons; j < cons.length; j++) {\n                        con = cons[j];\n                        if (type == \"out\") {\n                            var source = con.source();\n                            if (source.shape && source.shape == this) {\n                                result.push(con);\n                            }\n                        } else if (type == \"in\") {\n                            var target = con.target();\n                            if (target.shape && target.shape == this) {\n                                result.push(con);\n                            }\n                        } else {\n                            result.push(con);\n                        }\n                    }\n                }\n\n                return result;\n            },\n\n            refreshConnections: function () {\n                $.each(this.connections(), function () {\n                    this.refresh();\n                });\n            },\n            /**\n             * Gets a connector of this shape either by the connector's supposed name or\n             * via a Point in which case the closest connector will be returned.\n             * @param nameOrPoint The name of a Connector or a Point.\n             * @returns {Connector}\n             */\n            getConnector: function (nameOrPoint) {\n                var i, ctr;\n                if (isString(nameOrPoint)) {\n                    nameOrPoint = nameOrPoint.toLocaleLowerCase();\n                    for (i = 0; i < this.connectors.length; i++) {\n                        ctr = this.connectors[i];\n                        if (ctr.options.name.toLocaleLowerCase() == nameOrPoint) {\n                            return ctr;\n                        }\n                    }\n                } else if (nameOrPoint instanceof Point) {\n                    return closestConnector(nameOrPoint, this.connectors);\n                } else {\n                    return this.connectors.length ? this.connectors[0] : null;\n                }\n            },\n\n            getPosition: function (side) {\n                var b = this.bounds(),\n                    fnName = side.charAt(0).toLowerCase() + side.slice(1);\n\n                if (isFunction(b[fnName])) {\n                    return this._transformPoint(b[fnName]());\n                }\n\n                return b.center();\n            },\n\n            redraw: function (options) {\n                if (options) {\n                    var shapeOptions = this.options;\n                    var boundsChange;\n\n                    this.shapeVisual.redraw(this._visualOptions(options));\n\n                    if (this._diffNumericOptions(options, [WIDTH, HEIGHT, X, Y])) {\n                        this.bounds(new Rect(shapeOptions.x, shapeOptions.y, shapeOptions.width, shapeOptions.height));\n                        boundsChange = true;\n                    }\n\n                    if (options.connectors) {\n                        shapeOptions.connectors = options.connectors;\n                        this._updateConnectors();\n                    }\n\n                    shapeOptions = deepExtend(shapeOptions, options);\n\n                    if  (options.rotation || boundsChange) {\n                        this._rotate();\n                    }\n\n                    if (shapeOptions.content) {\n                        this.content(shapeOptions.content);\n                    }\n                }\n            },\n\n            _updateConnectors: function() {\n                var connections = this.connections();\n                this.connectors = [];\n                this._createConnectors();\n                var connection;\n                var source;\n                var target;\n\n                for (var idx = 0; idx < connections.length; idx++) {\n                    connection = connections[idx];\n                    source = connection.source();\n                    target = connection.target();\n                    if (source.shape && source.shape === this) {\n                        connection.source(this.getConnector(source.options.name) || null);\n                    } else if (target.shape && target.shape === this) {\n                        connection.target(this.getConnector(target.options.name) || null);\n                    }\n                    connection.updateModel();\n                }\n            },\n\n            _diffNumericOptions: diagram.diffNumericOptions,\n\n            _visualOptions: function(options) {\n                return {\n                    data: options.path,\n                    source: options.source,\n                    hover: options.hover,\n                    fill: options.fill,\n                    stroke: options.stroke\n                };\n            },\n\n            _triggerBoundsChange: function () {\n                if (this.diagram) {\n                    this.diagram.trigger(ITEMBOUNDSCHANGE, {item: this, bounds: this._bounds.clone()}); // the trigger modifies the arguments internally.\n                }\n            },\n\n            _transformPoint: function (point) {\n                var rotate = this.rotate(),\n                    bounds = this.bounds(),\n                    tl = bounds.topLeft();\n\n                if (rotate.angle) {\n                    point.rotate(rotate.center().plus(tl), 360 - rotate.angle);\n                }\n\n                return point;\n            },\n\n            _transformedBounds: function () {\n                var bounds = this.bounds(),\n                    tl = bounds.topLeft(),\n                    br = bounds.bottomRight();\n\n                return Rect.fromPoints(this.diagram.modelToView(tl), this.diagram.modelToView(br));\n            },\n\n            _rotatedBounds: function () {\n                var bounds = this.bounds().rotatedBounds(this.rotate().angle),\n                    tl = bounds.topLeft(),\n                    br = bounds.bottomRight();\n\n                return Rect.fromPoints(tl, br);\n            },\n\n            _rotate: function () {\n                var rotation = this.options.rotation;\n\n                if (rotation && rotation.angle) {\n                    this.rotate(rotation.angle);\n                }\n\n                this._rotationOffset = new Point();\n            },\n\n            _hover: function (value) {\n                var options = this.options,\n                    hover = options.hover,\n                    stroke = options.stroke,\n                    fill = options.fill;\n\n                if (value && isDefined(hover.stroke)) {\n                    stroke = deepExtend({}, stroke, hover.stroke);\n                }\n\n                if (value && isDefined(hover.fill)) {\n                    fill = hover.fill;\n                }\n\n                this.shapeVisual.redraw({\n                    stroke: stroke,\n                    fill: fill\n                });\n\n                if (options.editable && options.editable.connect) {\n                    this.diagram._showConnectors(this, value);\n                }\n            },\n\n            _hitTest: function (value) {\n                if (this.visible()) {\n                    var bounds = this.bounds(), rotatedPoint,\n                        angle = this.rotate().angle;\n\n                    if (value.isEmpty && !value.isEmpty()) { // rect selection\n                        return Intersect.rects(value, bounds, angle ? angle : 0);\n                    } else { // point\n                        rotatedPoint = value.clone().rotate(bounds.center(), angle); // cloning is important because rotate modifies the point inline.\n                        if (bounds.contains(rotatedPoint)) {\n                            return this;\n                        }\n                    }\n                }\n            },\n\n            toJSON: function() {\n                return {\n                    shapeId: this.options.id\n                };\n            },\n\n            createShapeVisual: function() {\n                var options = this.options;\n                var visualOptions = this._visualOptions(options);\n                var visualTemplate = options.visual;\n                var type = (options.type + \"\").toLocaleLowerCase();\n                var shapeVisual;\n\n                visualOptions.width = options.width;\n                visualOptions.height = options.height;\n\n                if (isFunction(visualTemplate)) { // custom template\n                    shapeVisual = visualTemplate.call(this, options);\n                } else if (visualOptions.data) {\n                    shapeVisual = new Path(visualOptions);\n                    translateToOrigin(shapeVisual);\n                } else if (type == \"rectangle\"){\n                    shapeVisual = new Rectangle(visualOptions);\n                } else if (type == \"circle\") {\n                    shapeVisual = new Circle(visualOptions);\n                } else if (type == \"text\") {\n                    shapeVisual = new TextBlock(visualOptions);\n                } else if (type == \"image\") {\n                    shapeVisual = new Image(visualOptions);\n                } else {\n                    shapeVisual = new Path(visualOptions);\n                }\n\n                this.shapeVisual = shapeVisual;\n                this.visual.append(this.shapeVisual);\n            }\n        });\n\n        /**\n         * The visual link between two Shapes through the intermediate of Connectors.\n         */\n        var Connection = DiagramElement.extend({\n            init: function (from, to, options) {\n                var that = this;\n                DiagramElement.fn.init.call(that, options);\n                this.updateOptionsFromModel();\n                this._initRouter();\n                that.path = new diagram.Polyline(that.options);\n                that.path.fill(TRANSPARENT);\n                that.visual.append(that.path);\n                that._sourcePoint = that._targetPoint = new Point();\n                that._setSource(from);\n                that._setTarget(to);\n                that.content(that.options.content);\n                that.definers = [];\n                if (defined(options) && options.points) {\n                    that.points(options.points);\n                }\n            },\n\n            options: {\n                hover: {\n                    stroke: {}\n                },\n                startCap: NONE,\n                endCap: NONE,\n                points: [],\n                selectable: true,\n                fromConnector: AUTO,\n                toConnector: AUTO\n            },\n\n            _setOptionsFromModel: function(model) {\n                this.updateOptionsFromModel(model || this.dataItem);\n            },\n\n            updateOptionsFromModel: function(model) {\n                if (this.diagram && this.diagram._isEditable) {\n                    var dataMap = this.diagram._dataMap;\n                    var options = filterConnectionDataItem(model || this.dataItem);\n\n                    if (model) {\n                        if (defined(options.from)) {\n                            var from = dataMap[options.from];\n                            if (from && defined(options.fromConnector)) {\n                               from = from.getConnector(options.fromConnector);\n                            }\n                            this.source(from);\n                        } else if (defined(options.fromX) && defined(options.fromY)) {\n                            this.source(new Point(options.fromX, options.fromY));\n                        }\n\n                        if (defined(options.to)) {\n                            var to = dataMap[options.to];\n                            if (to && defined(options.toConnector)) {\n                                to = to.getConnector(options.toConnector);\n                            }\n                            this.target(to);\n                        } else if (defined(options.toX) && defined(options.toY)) {\n                            this.target(new Point(options.toX, options.toY));\n                        }\n\n                        if (defined(options.type) && this.type() !== options.type) {\n                            this.points([]);\n                            this.type(options.type);\n                        }\n\n                        this.dataItem = model;\n\n                        this._template();\n                        this.redraw(this.options);\n                    } else {\n                        this.options = deepExtend({}, options, this.options);\n                    }\n                }\n            },\n\n            updateModel: function(syncChanges) {\n                if (this.diagram && this.diagram._isEditable) {\n                    if (this.diagram.connectionsDataSource) {\n                        var model = this.diagram.connectionsDataSource.getByUid(this.dataItem.uid);\n\n                        if (model) {\n                            this.diagram._suspendModelRefresh();\n                            if (defined(this.options.fromX) && this.options.fromX !== null) {\n                                clearField(\"from\", model);\n                                clearField(\"fromConnector\", model);\n                                model.set(\"fromX\", this.options.fromX);\n                                model.set(\"fromY\", this.options.fromY);\n                            } else  {\n                                model.set(\"from\", this.options.from);\n                                if (defined(model.fromConnector)) {\n                                    model.set(\"fromConnector\", this.sourceConnector ? this.sourceConnector.options.name : null);\n                                }\n                                clearField(\"fromX\", model);\n                                clearField(\"fromY\", model);\n                            }\n\n                            if (defined(this.options.toX) && this.options.toX !== null) {\n                                clearField(\"to\", model);\n                                clearField(\"toConnector\", model);\n                                model.set(\"toX\", this.options.toX);\n                                model.set(\"toY\", this.options.toY);\n                            } else {\n                                model.set(\"to\", this.options.to);\n                                if (defined(model.toConnector)) {\n                                    model.set(\"toConnector\", this.targetConnector ? this.targetConnector.options.name : null);\n                                }\n                                clearField(\"toX\", model);\n                                clearField(\"toY\", model);\n                            }\n\n                            if (defined(this.options.type) && defined(model.type)) {\n                                model.set(\"type\", this.options.type);\n                            }\n\n                            this.dataItem = model;\n                            this.diagram._resumeModelRefresh();\n\n                            if (syncChanges) {\n                                this.diagram._syncConnectionChanges();\n                            }\n                        }\n                    }\n                }\n            },\n\n            /**\n             * Gets the Point where the source of the connection resides.\n             * If the endpoint in Auto-connector the location of the resolved connector will be returned.\n             * If the endpoint is floating the location of the endpoint is returned.\n             */\n            sourcePoint: function () {\n                return this._resolvedSourceConnector ? this._resolvedSourceConnector.position() : this._sourcePoint;\n            },\n\n            _setSource: function(source) {\n                var shapeSource = source instanceof Shape;\n                var defaultConnector = this.options.fromConnector || AUTO;\n                var dataItem;\n                if (shapeSource && !source.getConnector(defaultConnector)) {\n                    return;\n                }\n\n                if (source !== undefined) {\n                    this.from = source;\n                }\n\n                this._removeFromSourceConnector();\n\n                if (source === null) { // detach\n                    if (this.sourceConnector) {\n                        this._sourcePoint = (this._resolvedSourceConnector || this.sourceConnector).position();\n                        this._clearSourceConnector();\n                        this._setFromOptions(null, this._sourcePoint);\n                    }\n                } else if (source instanceof Connector) {\n                    dataItem = source.shape.dataItem;\n                    if (dataItem) {\n                        this._setFromOptions(dataItem.id);\n                    }\n                    this.sourceConnector = source;\n                    this.sourceConnector.connections.push(this);\n                } else if (source instanceof Point) {\n                    this._setFromOptions(null, source);\n                    this._sourcePoint = source;\n                    if (this.sourceConnector) {\n                        this._clearSourceConnector();\n                    }\n\n                } else if (shapeSource) {\n                    dataItem = source.dataItem;\n                    if (dataItem) {\n                        this._setFromOptions(dataItem.id);\n                    }\n\n                    this.sourceConnector = source.getConnector(defaultConnector);\n                    this.sourceConnector.connections.push(this);\n                }\n            },\n\n            source: function (source, undoable) {\n                if (isDefined(source)) {\n                    if (undoable && this.diagram) {\n                        this.diagram.undoRedoService.addCompositeItem(new diagram.ConnectionEditUnit(this, source));\n                    }\n                    this._setSource(source);\n                    this.refresh();\n                }\n                return this.sourceConnector ? this.sourceConnector : this._sourcePoint;\n            },\n\n            _setFromOptions: function(from, fromPoint) {\n                this.options.from = from;\n                if (fromPoint)  {\n                    this.options.fromX = fromPoint.x;\n                    this.options.fromY = fromPoint.y;\n                } else {\n                    this.options.fromX = null;\n                    this.options.fromY = null;\n                }\n            },\n\n            /**\n             * Gets or sets the PathDefiner of the sourcePoint.\n             * The left part of this definer is always null since it defines the source tangent.\n             * @param value\n             * @returns {*}\n             */\n            sourceDefiner: function (value) {\n                if (value) {\n                    if (value instanceof diagram.PathDefiner) {\n                        value.left = null;\n                        this._sourceDefiner = value;\n                        this.source(value.point); // refresh implicit here\n                    } else {\n                        throw \"The sourceDefiner needs to be a PathDefiner.\";\n                    }\n                } else {\n                    if (!this._sourceDefiner) {\n                        this._sourceDefiner = new diagram.PathDefiner(this.sourcePoint(), null, null);\n                    }\n                    return this._sourceDefiner;\n                }\n            },\n\n            /**\n             * Gets  the Point where the target of the connection resides.\n             */\n            targetPoint: function () {\n                return this._resolvedTargetConnector ? this._resolvedTargetConnector.position() : this._targetPoint;\n            },\n\n            _setTarget: function(target) {\n                var shapeTarget = target instanceof Shape;\n                var defaultConnector = this.options.toConnector || AUTO;\n                var dataItem;\n\n                if (shapeTarget && !target.getConnector(defaultConnector)) {\n                    return;\n                }\n\n                if (target !== undefined) {\n                    this.to = target;\n                }\n\n                this._removeFromTargetConnector();\n\n                if (target === null) { // detach\n                    if (this.targetConnector) {\n                        this._targetPoint = (this._resolvedTargetConnector || this.targetConnector).position();\n                        this._clearTargetConnector();\n                        this._setToOptions(null, this._targetPoint);\n                    }\n                } else if (target instanceof Connector) {\n                    dataItem = target.shape.dataItem;\n                    if (dataItem) {\n                        this._setToOptions(dataItem.id);\n                    }\n                    this.targetConnector = target;\n                    this.targetConnector.connections.push(this);\n                } else if (target instanceof Point) {\n                    this._setToOptions(null, target);\n                    this._targetPoint = target;\n                    if (this.targetConnector) {\n                        this._clearTargetConnector();\n                    }\n                } else if (shapeTarget) {\n                    dataItem = target.dataItem;\n                    if (dataItem) {\n                        this._setToOptions(dataItem.id);\n                    }\n                    this.targetConnector = target.getConnector(defaultConnector);\n                    this.targetConnector.connections.push(this);\n                }\n            },\n\n            target: function (target, undoable) {\n                if (isDefined(target)) {\n                    if (undoable && this.diagram) {\n                        this.diagram.undoRedoService.addCompositeItem(new diagram.ConnectionEditUnit(this, undefined, target));\n                    }\n                    this._setTarget(target);\n\n                    this.refresh();\n                }\n                return this.targetConnector ? this.targetConnector : this._targetPoint;\n            },\n\n            _setToOptions: function(to, toPoint) {\n                this.options.to = to;\n                if (toPoint)  {\n                    this.options.toX = toPoint.x;\n                    this.options.toY = toPoint.y;\n                } else {\n                    this.options.toX = null;\n                    this.options.toY = null;\n                }\n            },\n\n            /**\n             * Gets or sets the PathDefiner of the targetPoint.\n             * The right part of this definer is always null since it defines the target tangent.\n             * @param value\n             * @returns {*}\n             */\n            targetDefiner: function (value) {\n                if (value) {\n                    if (value instanceof diagram.PathDefiner) {\n                        value.right = null;\n                        this._targetDefiner = value;\n                        this.target(value.point); // refresh implicit here\n                    } else {\n                        throw \"The sourceDefiner needs to be a PathDefiner.\";\n                    }\n                } else {\n                    if (!this._targetDefiner) {\n                        this._targetDefiner = new diagram.PathDefiner(this.targetPoint(), null, null);\n                    }\n                    return this._targetDefiner;\n                }\n            },\n\n            _updateConnectors: function() {\n                this._updateConnector(this.source(), \"source\");\n                this._updateConnector(this.target(), \"target\");\n            },\n\n            _updateConnector: function(instance, name) {\n                var that = this;\n                var diagram = that.diagram;\n                if (instance instanceof Connector && !diagram.getShapeById(instance.shape.id)) {\n                    var dataItem = instance.shape.dataItem;\n                    var connectorName = instance.options.name;\n                    var setNewTarget = function() {\n                        var shape = diagram._dataMap[dataItem.id];\n                        instance = shape.getConnector(connectorName);\n                        that[name](instance, false);\n                        that.updateModel();\n                    };\n                    if (diagram._dataMap[dataItem.id]) {\n                       setNewTarget();\n                    } else {\n                        var inactiveItem = diagram._inactiveShapeItems.getByUid(dataItem.uid);\n                        if (inactiveItem) {\n                            diagram._deferredConnectionUpdates.push(inactiveItem.onActivate(setNewTarget));\n                        }\n                    }\n                } else {\n                    that[name](instance, false);\n                }\n            },\n\n            content: function(content) {\n                var result = this._content(content);\n                if (defined(content)) {\n                    this._alignContent();\n                }\n                return result;\n            },\n\n            _createContentVisual: function(options) {\n                var visual;\n                if (isFunction(options.visual)) {\n                    visual = options.visual.call(this, options);\n                } else if (options.text) {\n                    visual = new TextBlock(options);\n                }\n\n                if (visual) {\n                    this._contentVisual = visual;\n                    visual._includeInBBox = false;\n                    this.visual.append(visual);\n                }\n\n                return visual;\n            },\n\n            _updateContentVisual: function(options) {\n                if (isFunction(options.visual)) {\n                    this.visual.remove(this._contentVisual);\n                    this._createContentVisual(options);\n                } else {\n                    this._contentVisual.redraw(options);\n                }\n            },\n\n            _alignContent: function() {\n                if (this._contentVisual) {\n                    var offset = CONNECTION_CONTENT_OFFSET;\n                    var points = this.allPoints();\n                    var endIdx = math.floor(points.length / 2);\n                    var startIdx = endIdx - 1;\n\n                    while(startIdx > 0 && points[startIdx].equals(points[endIdx])) {\n                        startIdx--;\n                        endIdx++;\n                    }\n\n                    var endPoint = points[endIdx];\n                    var startPoint = points[startIdx];\n\n                    var boundingBox = this._contentVisual._measure();\n                    var width = boundingBox.width;\n                    var height = boundingBox.height;\n                    var alignToPath = points.length % 2 === 0;\n                    var distance = startPoint.distanceTo(endPoint);\n\n                    if (alignToPath && points.length > 2 && distance > 0 &&\n                        ((startPoint.y === endPoint.y && distance < width) || (startPoint.x === endPoint.x && distance < height))) {\n                        alignToPath = false;\n                        offset = 0;\n                    }\n\n                    var point;\n\n                    if (alignToPath) {\n                        var angle  = draw.util.deg(math.atan2(endPoint.y - startPoint.y, endPoint.x - startPoint.x));\n                        point = new Point((endPoint.x - startPoint.x) / 2 + startPoint.x, (endPoint.y - startPoint.y) / 2 + startPoint.y);\n\n                        if (math.abs(angle) === 90) {\n                            point.x += offset;\n                            point.y-= height / 2;\n                        } else if (angle % 180 === 0) {\n                            point.x -= width / 2;\n                            point.y -= height + offset;\n                        } else if (angle < -90 || (0 < angle && angle < 90)) {\n                            point.y-= height;\n                        } else if (angle < 0 || angle > 90) {\n                            point.x -= width;\n                            point.y -= height;\n                        }\n                    } else {\n                        var midIdx = math.floor(points.length / 2);\n                        point = points[midIdx].clone();\n                        startPoint = points[midIdx - 1];\n                        endPoint = points[midIdx + 1];\n\n                        var offsetX = startPoint.x <= point.x && endPoint.x <= point.x ? offset : -boundingBox.width - offset;\n                        var offsetY = startPoint.y <= point.y && endPoint.y <= point.y ? offset : -boundingBox.height - offset;\n\n                        point.x += offsetX;\n                        point.y += offsetY;\n                    }\n\n                    this._contentVisual.position(point);\n                }\n            },\n\n            /**\n             * Selects or unselects this connections.\n             * @param value True to select, false to unselect.\n             */\n            select: function (value) {\n                var diagram = this.diagram, selected, deselected;\n                if (this._canSelect()) {\n                    if (this.isSelected !== value) {\n                        this.isSelected = value;\n                        selected = [];\n                        deselected = [];\n                        if (this.isSelected) {\n                            this.adorner = new ConnectionEditAdorner(this, this.options.selection);\n                            diagram._adorn(this.adorner, true);\n                            diagram._selectedItems.push(this);\n                            selected.push(this);\n                        } else {\n                            if (this.adorner) {\n                                diagram._adorn(this.adorner, false);\n                                Utils.remove(diagram._selectedItems, this);\n                                this.adorner = undefined;\n                                deselected.push(this);\n                            }\n                        }\n\n                        if (this.adorner) {\n                            this.adorner.refresh();\n                        }\n\n                        if (!diagram._internalSelection) {\n                            diagram._selectionChanged(selected, deselected);\n                        }\n                        return true;\n                    }\n                }\n            },\n            /**\n             * Gets or sets the bounds of this connection.\n             * @param value A Rect object.\n             * @remark This is automatically set in the refresh().\n             * @returns {Rect}\n             */\n            bounds: function (value) {\n                if (value && !isString(value)) {\n                    this._bounds = value;\n                } else {\n                    return this._bounds;\n                }\n            },\n            /**\n             * Gets or sets the connection type (see ConnectionType enumeration).\n             * @param value A ConnectionType value.\n             * @returns {ConnectionType}\n             */\n            type: function (value) {\n                var options = this.options;\n                if (value) {\n                    if (value !== options.type) {\n                        options.type = value;\n                        this._initRouter();\n                        this.refresh();\n                    }\n                } else {\n                    return options.type;\n                }\n            },\n\n            _initRouter: function() {\n                var type = (this.options.type || \"\").toLowerCase();\n                if (type == CASCADING) {\n                    this._router = new CascadingRouter(this);\n                } else {\n                    this._router = new PolylineRouter(this);\n                }\n            },\n            /**\n             * Gets or sets the collection of *intermediate* points.\n             * The 'allPoints()' property will return all the points.\n             * The 'definers' property returns the definers of the intermediate points.\n             * The 'sourceDefiner' and 'targetDefiner' return the definers of the endpoints.\n             * @param value\n             */\n            points: function (value) {\n                if (value) {\n                    this.definers = [];\n                    for (var i = 0; i < value.length; i++) {\n                        var definition = value[i];\n                        if (definition instanceof diagram.Point) {\n                            this.definers.push(new diagram.PathDefiner(definition));\n                        } else if (definition.hasOwnProperty(\"x\") && definition.hasOwnProperty(\"y\")) { // e.g. Clipboard does not preserve the Point definition and tunred into an Object\n                            this.definers.push(new diagram.PathDefiner(new Point(definition.x, definition.y)));\n                        } else {\n                            throw \"A Connection point needs to be a Point or an object with x and y properties.\";\n                        }\n                    }\n\n                } else {\n                    var pts = [];\n                    if (isDefined(this.definers)) {\n                        for (var k = 0; k < this.definers.length; k++) {\n                            pts.push(this.definers[k].point);\n                        }\n                    }\n                    return pts;\n                }\n            },\n            /**\n             * Gets all the points of this connection. This is the combination of the sourcePoint, the points and the targetPoint.\n             * @returns {Array}\n             */\n            allPoints: function () {\n                var pts = [this.sourcePoint()];\n                if (this.definers) {\n                    for (var k = 0; k < this.definers.length; k++) {\n                        pts.push(this.definers[k].point);\n                    }\n                }\n                pts.push(this.targetPoint());\n                return pts;\n            },\n\n            refresh: function () {\n                this._resolveConnectors();\n                this._refreshPath();\n                this._alignContent();\n\n                if (this.adorner) {\n                    this.adorner.refresh();\n                }\n            },\n\n            _resolveConnectors: function () {\n                var connection = this,\n                    sourcePoint, targetPoint,\n                    sourceConnectors, targetConnectors,\n                    source = connection.source(),\n                    target = connection.target();\n\n                if (source instanceof Point) {\n                    sourcePoint = source;\n                } else if (source instanceof Connector) {\n                    if (isAutoConnector(source)) {\n                        sourceConnectors = source.shape.connectors;\n                    } else {\n                        sourceConnectors = [source];\n                    }\n                }\n\n                if (target instanceof Point) {\n                    targetPoint = target;\n                } else if (target instanceof Connector) {\n                    if (isAutoConnector(target)) {\n                        targetConnectors = target.shape.connectors;\n                    } else {\n                        targetConnectors = [target];\n                    }\n                }\n\n                if (sourcePoint) {\n                    if (targetConnectors) {\n                        connection._resolvedTargetConnector = closestConnector(sourcePoint, targetConnectors);\n                    }\n                } else if (sourceConnectors) {\n                    if (targetPoint) {\n                        connection._resolvedSourceConnector = closestConnector(targetPoint, sourceConnectors);\n                    } else if (targetConnectors) {\n                        this._resolveAutoConnectors(sourceConnectors, targetConnectors);\n                    }\n                }\n            },\n\n            _resolveAutoConnectors: function(sourceConnectors, targetConnectors) {\n                var minNonConflict = MAXINT;\n                var minDist = MAXINT;\n                var minNonConflictSource, minNonConflictTarget;\n                var sourcePoint, targetPoint;\n                var minSource, minTarget;\n                var sourceConnector, targetConnector;\n                var sourceIdx, targetIdx;\n                var dist;\n\n                for (sourceIdx = 0; sourceIdx < sourceConnectors.length; sourceIdx++) {\n                    sourceConnector = sourceConnectors[sourceIdx];\n                    if (!isAutoConnector(sourceConnector)) {\n                        sourcePoint = sourceConnector.position();\n\n                        for (targetIdx = 0; targetIdx < targetConnectors.length; targetIdx++) {\n                            targetConnector = targetConnectors[targetIdx];\n                            if (!isAutoConnector(targetConnector)) {\n                                targetPoint = targetConnector.position();\n                                dist = math.round(sourcePoint.distanceTo(targetPoint));\n\n                                if (dist < minNonConflict && this.diagram && this._testRoutePoints(sourcePoint, targetPoint, sourceConnector, targetConnector)) {\n                                    minNonConflict = dist;\n                                    minNonConflictSource = sourceConnector;\n                                    minNonConflictTarget = targetConnector;\n                                }\n\n                                if (dist < minDist) {\n                                    minSource = sourceConnector;\n                                    minTarget = targetConnector;\n                                    minDist = dist;\n                                }\n                            }\n                        }\n                    }\n                }\n\n                if (minNonConflictSource) {\n                    minSource = minNonConflictSource;\n                    minTarget = minNonConflictTarget;\n                }\n\n                this._resolvedSourceConnector = minSource;\n                this._resolvedTargetConnector = minTarget;\n            },\n\n            _testRoutePoints: function(sourcePoint, targetPoint, sourceConnector, targetConnector) {\n                var router = this._router;\n                var passRoute = true;\n                if (router instanceof CascadingRouter) {\n                    var points = router.routePoints(sourcePoint, targetPoint, sourceConnector, targetConnector),\n                        start, end,\n                         rect, exclude;\n\n                    exclude = this._getRouteExclude(sourcePoint, targetPoint, sourceConnector.shape, targetConnector.shape);\n                    points.unshift(sourcePoint);\n                    points.push(targetPoint);\n\n\n                    for (var idx = 1; idx < points.length; idx++) {\n                        start = points[idx - 1];\n                        end = points[idx];\n                        rect = new Rect(math.min(start.x, end.x), math.min(start.y, end.y),\n                                        math.abs(start.x - end.x), math.abs(start.y - end.y));\n                        if (rect.width > 0) {\n                            rect.x++;\n                            rect.width-=2;\n                        }\n                        if (rect.height > 0) {\n                            rect.y++;\n                            rect.height-=2;\n                        }\n\n                        if (!rect.isEmpty() && this.diagram._shapesQuadTree.hitTestRect(rect, exclude)) {\n                            passRoute = false;\n                            break;\n                        }\n                    }\n                }\n                return passRoute;\n            },\n\n            _getRouteExclude: function(sourcePoint, targetPoint, sourceShape, targetShape) {\n                var exclude = [];\n                if (this._isPointInsideShape(sourcePoint, sourceShape)){\n                    exclude.push(sourceShape);\n                }\n                if (this._isPointInsideShape(targetPoint, targetShape)){\n                    exclude.push(targetShape);\n                }\n                return exclude;\n            },\n\n            _isPointInsideShape: function (point, shape) {\n                var bounds = shape.bounds(), rotatedPoint,\n                    angle = shape.rotate().angle,\n                    pointX, pointY,\n                    boundsX = bounds.x,\n                    boundsY = bounds.y;\n\n                rotatedPoint = point.clone().rotate(bounds.center(), angle);\n                pointX = rotatedPoint.x;\n                pointY = rotatedPoint.y;\n                return pointX > boundsX && pointX < (boundsX + bounds.width) && pointY > boundsY && pointY < (boundsY + bounds.height);\n            },\n\n            redraw: function (options) {\n                if (options) {\n                    this.options = deepExtend({}, this.options, options);\n\n                    var points = this.options.points;\n\n                    if (defined(points) && points.length > 0) {\n                        this.points(points);\n                        this._refreshPath();\n                    }\n\n                    if ((options && options.content) || options.text) {\n                        this.content(options.content);\n                    }\n\n                    this.path.redraw({\n                        fill: options.fill,\n                        stroke: options.stroke,\n                        startCap: options.startCap,\n                        endCap: options.endCap\n                    });\n                }\n            },\n            /**\n             * Returns a clone of this connection.\n             * @returns {Connection}\n             */\n            clone: function () {\n                var json = this.serialize();\n\n                if (this.diagram && this.diagram._isEditable && defined(this.dataItem)) {\n                    json.options.dataItem = cloneDataItem(this.dataItem);\n                }\n\n                return new Connection(this.from, this.to, json.options);\n            },\n            /**\n             * Returns a serialized connection in json format. Consist of the options and the dataItem.\n             * @returns {Connection}\n             */\n            serialize: function () {\n                var from = this.from.toJSON ? this.from.toJSON : this.from.toString(),\n                    to = this.to.toJSON ? this.to.toJSON : this.to.toString();\n\n                var json = deepExtend({}, {\n                    options: this.options,\n                    from: from,\n                    to: to\n                });\n\n                if (defined(this.dataItem)) {\n                    json.dataItem = this.dataItem.toString();\n                }\n\n                json.options.points = this.points();\n                return json;\n            },\n\n            /**\n             * Returns whether the given Point or Rect hits this connection.\n             * @param value\n             * @returns {Connection}\n             * @private\n             */\n            _hitTest: function (value) {\n                if (this.visible()) {\n                    var p = new Point(value.x, value.y), from = this.sourcePoint(), to = this.targetPoint();\n                    if (value.isEmpty && !value.isEmpty() && value.contains(from) && value.contains(to)) {\n                        return this;\n                    }\n                    if (this._router.hitTest(p)) {\n                        return this;\n                    }\n                }\n            },\n\n            _hover: function (value) {\n                var color = (this.options.stroke || {}).color;\n\n                if (value && isDefined(this.options.hover.stroke.color)) {\n                    color = this.options.hover.stroke.color;\n                }\n\n                this.path.redraw({\n                    stroke: {\n                        color: color\n                    }\n                });\n            },\n\n            _refreshPath: function () {\n                if (!defined(this.path)) {\n                    return;\n                }\n                this._drawPath();\n                this.bounds(this._router.getBounds());\n            },\n\n            _drawPath: function () {\n                if (this._router) {\n                    this._router.route(); // sets the intermediate points\n                }\n                var source = this.sourcePoint();\n                var target = this.targetPoint();\n                var points = this.points();\n\n                this.path.redraw({\n                    points: [source].concat(points, [target])\n                });\n            },\n\n            _clearSourceConnector: function () {\n                this.sourceConnector = undefined;\n                this._resolvedSourceConnector = undefined;\n            },\n\n            _clearTargetConnector: function () {\n                this.targetConnector = undefined;\n                this._resolvedTargetConnector = undefined;\n            },\n\n            _removeFromSourceConnector: function() {\n                if (this.sourceConnector) {\n                    Utils.remove(this.sourceConnector.connections, this);\n                }\n            },\n\n            _removeFromTargetConnector: function() {\n                if (this.targetConnector) {\n                    Utils.remove(this.targetConnector.connections, this);\n                }\n            },\n\n            toJSON: function() {\n                var connection = this;\n                var from, to, point;\n                if (connection.from && connection.from.toJSON) {\n                    from = connection.from.toJSON();\n                } else {\n                    point = connection._sourcePoint;\n                    from = {\n                        x: point.x,\n                        y: point.y\n                    };\n                }\n\n                if (connection.to && connection.to.toJSON) {\n                    to = connection.to.toJSON();\n                } else {\n                    point = connection._targetPoint;\n                    to = {\n                        x: point.x,\n                        y: point.y\n                    };\n                }\n\n                return {\n                    from : from,\n                    to: to\n                };\n            }\n        });\n\n        var Diagram = Widget.extend({\n            init: function (element, userOptions) {\n                var that = this;\n\n                kendo.destroy(element);\n                Widget.fn.init.call(that, element, userOptions);\n\n                that._initTheme();\n\n                that._initElements();\n                that._extendLayoutOptions(that.options);\n                that._initDefaults(userOptions);\n                that._interactionDefaults();\n\n                that._initCanvas();\n\n                that.mainLayer = new Group({\n                    id: \"main-layer\"\n                });\n                that.canvas.append(that.mainLayer);\n\n                that._shapesQuadTree = new ShapesQuadTree(that);\n\n                that._pan = new Point();\n                that._adorners = [];\n                that.adornerLayer = new Group({\n                    id: \"adorner-layer\"\n                });\n                that.canvas.append(that.adornerLayer);\n\n                that._createHandlers();\n\n                that._initialize();\n\n                that._resizingAdorner = new ResizingAdorner(that, { editable: that.options.editable });\n                that._connectorsAdorner = new ConnectorsAdorner(that);\n\n                that._adorn(that._resizingAdorner, true);\n                that._adorn(that._connectorsAdorner, true);\n\n                that.selector = new Selector(that);\n                // TODO: We may consider using real Clipboard API once is supported by the standard.\n                that._clipboard = [];\n\n                that.pauseMouseHandlers = false;\n\n                that._fetchFreshData();\n\n                that._createGlobalToolBar();\n\n                that._createOptionElements();\n\n                that.zoom(that.options.zoom);\n\n                that.canvas.draw();\n            },\n\n            options: {\n                name: \"Diagram\",\n                theme: \"default\",\n                layout: \"\",\n                zoomRate: 0.1,\n                zoom: 1,\n                zoomMin: 0,\n                zoomMax: 2,\n                dataSource: {},\n                draggable: true,\n                template: \"\",\n                autoBind: true,\n                editable: {\n                    rotate: {},\n                    resize: {},\n                    text: true,\n                    tools: [],\n                    drag: {\n                        snap: {\n                            size: 10,\n                            angle: 10\n                        }\n                    },\n                    remove: true\n                },\n                pannable: {},\n                selectable: {\n                    key: \"none\"\n                },\n                tooltip: { enabled: true, format: \"{0}\" },\n                copy: {\n                    enabled: true,\n                    offsetX: 20,\n                    offsetY: 20\n                },\n                shapeDefaults: diagram.shapeDefaults({ undoable: true }),\n                connectionDefaults: {\n                    editable: {\n                        tools: []\n                    },\n                    type: CASCADING\n                },\n                shapes: [],\n                connections: []\n            },\n\n            events: [\n                ZOOM_END,\n                ZOOM_START,\n                PAN, SELECT,\n                ITEMROTATE,\n                ITEMBOUNDSCHANGE,\n                CHANGE,\n                CLICK,\n                MOUSE_ENTER,\n                MOUSE_LEAVE,\n                \"toolBarClick\",\n                \"save\",\n                \"cancel\",\n                \"edit\",\n                \"remove\",\n                \"add\",\n                \"dataBound\",\n                DRAG_START,\n                DRAG,\n                DRAG_END\n            ],\n\n            items: function() {\n                return $();\n            },\n\n            _createGlobalToolBar: function() {\n                var editable = this.options.editable;\n                if (editable) {\n                    var tools = editable.tools;\n                    if (this._isEditable && tools !== false && (!tools || tools.length === 0)) {\n                        tools = [\"createShape\", \"undo\", \"redo\", \"rotateClockwise\", \"rotateAnticlockwise\"];\n                    }\n\n                    if (tools && tools.length) {\n                        this.toolBar = new DiagramToolBar(this, {\n                            tools: tools || {},\n                            click: proxy(this._toolBarClick, this),\n                            modal: false\n                        });\n\n                        this.toolBar.element.css({\n                            textAlign: \"left\"\n                        });\n\n                        this.element.prepend(this.toolBar.element);\n                        this._resize();\n                    }\n                }\n            },\n\n            createShape: function() {\n                if ((this.editor && this.editor.end()) || !this.editor) {\n                    var dataSource = this.dataSource;\n                    var view = dataSource.view() || [];\n                    var index = view.length;\n                    var model = createModel(dataSource, {});\n                    var shape = this._createShape(model, {});\n\n                    if (!this.trigger(\"add\", { shape: shape })) {\n                        dataSource.insert(index, model);\n                        var inactiveItem = this._inactiveShapeItems.getByUid(model.uid);\n                        inactiveItem.element = shape;\n                        this.edit(shape);\n                    }\n                }\n            },\n\n            _createShape: function(dataItem, options) {\n                options = deepExtend({}, this.options.shapeDefaults, options);\n                options.dataItem = dataItem;\n                var shape = new Shape(options, this);\n                return shape;\n            },\n\n            createConnection: function() {\n                if (((this.editor && this.editor.end()) || !this.editor)) {\n                    var connectionsDataSource = this.connectionsDataSource;\n                    var view = connectionsDataSource.view() || [];\n                    var index = view.length;\n                    var model = createModel(connectionsDataSource, {});\n                    var connection = this._createConnection(model);\n                    if (!this.trigger(\"add\", { connection: connection })) {\n                        this._connectionsDataMap[model.uid] = connection;\n                        connectionsDataSource.insert(index, model);\n                        this.addConnection(connection, false);\n                        this.edit(connection);\n                    }\n                }\n            },\n\n            _createConnection: function(dataItem, source, target) {\n                var options = deepExtend({}, this.options.connectionDefaults);\n                options.dataItem = dataItem;\n\n                var connection = new Connection(source || new Point(), target || new Point(), options);\n\n                return connection;\n            },\n\n            editModel: function(dataItem, editorType) {\n                this.cancelEdit();\n                var editors, template;\n                var editable = this.options.editable;\n\n                if (editorType == \"shape\") {\n                    editors = editable.shapeEditors;\n                    template = editable.shapeTemplate;\n                } else if (editorType == \"connection\") {\n                    var connectionSelectorHandler = proxy(connectionSelector, this);\n                    editors = deepExtend({}, { from: connectionSelectorHandler, to: connectionSelectorHandler }, editable.connectionEditors);\n                    template = editable.connectionTemplate;\n                } else {\n                    return;\n                }\n\n                this.editor = new PopupEditor(this.element, {\n                    update: proxy(this._update, this),\n                    cancel: proxy(this._cancel, this),\n                    model: dataItem,\n                    type: editorType,\n                    target: this,\n                    editors: editors,\n                    template: template\n                });\n\n                this.trigger(\"edit\", this._editArgs());\n            },\n\n            edit: function(item) {\n                if (item.dataItem) {\n                    var editorType = item instanceof Shape ? \"shape\" : \"connection\";\n                    this.editModel(item.dataItem, editorType);\n                }\n            },\n\n            cancelEdit: function() {\n                if (this.editor) {\n                    this._getEditDataSource().cancelChanges(this.editor.model);\n\n                    this._destroyEditor();\n                }\n            },\n\n            saveEdit: function() {\n                if (this.editor && this.editor.end() &&\n                    !this.trigger(\"save\", this._editArgs())) {\n                    this._getEditDataSource().sync();\n                }\n            },\n\n            _update: function() {\n                if (this.editor && this.editor.end() &&\n                    !this.trigger(\"save\", this._editArgs())) {\n                    this._getEditDataSource().sync();\n                    this._destroyEditor();\n                }\n            },\n\n            _cancel: function() {\n                if (this.editor && !this.trigger(\"cancel\", this._editArgs())) {\n                    var model = this.editor.model;\n                    this._getEditDataSource().cancelChanges(model);\n                    var element = this._connectionsDataMap[model.uid] || this._dataMap[model.id];\n                    if (element) {\n                        element._setOptionsFromModel(model);\n                    }\n                    this._destroyEditor();\n                }\n            },\n\n            _getEditDataSource: function() {\n                return this.editor.options.type === \"shape\" ? this.dataSource : this.connectionsDataSource;\n            },\n\n            _editArgs: function() {\n                var result = { container: this.editor.wrapper };\n                result[this.editor.options.type] = this.editor.model;\n                return result;\n            },\n\n            _destroyEditor: function() {\n                if (this.editor) {\n                    this.editor.close();\n                    this.editor = null;\n                }\n            },\n\n            _initElements: function() {\n                this.wrapper = this.element.empty()\n                    .css(\"position\", \"relative\")\n                    .attr(\"tabindex\", 0)\n                    .addClass(\"k-widget k-diagram\");\n\n                this.scrollable = $(\"<div />\").appendTo(this.element);\n            },\n\n            _initDefaults: function(userOptions) {\n                var options = this.options;\n                var editable = options.editable;\n                var shapeDefaults = options.shapeDefaults;\n                var connectionDefaults = options.connectionDefaults;\n                var userShapeDefaults = (userOptions || {}).shapeDefaults;\n                if (editable === false) {\n                    shapeDefaults.editable = false;\n                    connectionDefaults.editable = false;\n                } else {\n                    copyDefaultOptions(editable, shapeDefaults.editable, [\"drag\", \"remove\", \"connect\"]);\n                    copyDefaultOptions(editable, connectionDefaults.editable, [\"drag\", \"remove\"]);\n                }\n\n                if (userShapeDefaults && userShapeDefaults.connectors) {\n                    options.shapeDefaults.connectors = userShapeDefaults.connectors;\n                }\n            },\n\n            _interactionDefaults: function() {\n                var options = this.options;\n                var selectable = options.selectable;\n                var pannable = options.pannable;\n                var mobile = kendo.support.mobileOS;\n\n                if (selectable && !defined(selectable.multiple)) {\n                    options.selectable = deepExtend({\n                        multiple: mobile ? false : true\n                    }, options.selectable);\n                }\n\n                if (pannable && !defined(pannable.key)) {\n                    options.pannable = deepExtend({\n                        key: mobile ? \"none\" : \"ctrl\"\n                    }, options.pannable);\n                }\n            },\n\n            _initCanvas: function() {\n                var canvasContainer = $(\"<div class='k-layer'></div>\").appendTo(this.scrollable)[0];\n                var viewPort = this.viewport();\n                this.canvas = new Canvas(canvasContainer, {\n                    width: viewPort.width || DEFAULT_CANVAS_WIDTH,\n                    height: viewPort.height || DEFAULT_CANVAS_HEIGHT\n                });\n            },\n\n            _createHandlers: function () {\n                var that = this;\n                var element = that.element;\n\n                element.on(MOUSEWHEEL_NS, proxy(that._wheel, that))\n                .on(\"keydown\" + NS, proxy(that._keydown, that));\n\n                that._userEvents = new kendo.UserEvents(this.scrollable, {\n                    multiTouch: true,\n                    fastTap: true,\n                    tap: proxy(that._tap, that),\n                    start: proxy(that._dragStart, that),\n                    move: proxy(that._drag, that),\n                    end: proxy(that._dragEnd, that),\n                    gesturestart: proxy(that._gestureStart, that),\n                    gesturechange: proxy(that._gestureChange, that),\n                    gestureend: proxy(that._gestureEnd, that),\n                    doubleTap: proxy(that._doubleTap, that),\n                    supportDoubleTap: true\n                });\n\n                that.toolService = new ToolService(that);\n\n                this.scrollable\n                    .on(\"mouseover\" + NS, proxy(that._mouseover, that))\n                    .on(\"mouseout\" + NS, proxy(that._mouseout, that))\n                    .on(\"mousemove\" + NS, proxy(that._mouseMove, that))\n                    .on(\"mousedown\" + NS, proxy(that._mouseDown, that))\n                    .on(\"mouseup\" + NS, proxy(that._mouseUp, that));\n\n                this._syncHandler = proxy(that._syncChanges, that);\n\n                that._resizeHandler = proxy(that.resize, that, false);\n                kendo.onResize(that._resizeHandler);\n\n                this.bind(ZOOM_START, proxy(that._destroyToolBar, that));\n                this.bind(PAN, proxy(that._destroyToolBar, that));\n            },\n\n            _dragStart: function (e) {\n                this._pauseMouseHandlers = true;\n                var point = this._eventPositions(e, true);\n\n                var event = e.event;\n                if (this.toolService.start(point, this._meta(event))) {\n                    this._destroyToolBar();\n                    event.preventDefault();\n                }\n            },\n\n            _drag: function (e) {\n                var p = this._eventPositions(e);\n                var event = e.event;\n                if (this.toolService.move(p, this._meta(event))) {\n                    event.preventDefault();\n                }\n            },\n\n            _dragEnd: function (e) {\n                this._pauseMouseHandlers = false;\n                var p = this._eventPositions(e);\n                var event = e.event;\n                if (this.toolService.end(p, this._meta(event))) {\n                    this._createToolBar();\n                    event.preventDefault();\n                }\n            },\n\n            _mouseMove: function (e) {\n                if (!this._pauseMouseHandlers) {\n                    var p = this._eventPositions(e);\n                    this.toolService._updateHoveredItem(p);\n                    this.toolService._updateCursor(p);\n                }\n            },\n\n            _mouseDown: function () {\n                this._pauseMouseHandlers = true;\n            },\n\n            _mouseUp: function () {\n                this._pauseMouseHandlers = false;\n            },\n\n            _tap: function(e) {\n                var toolService = this.toolService;\n                var selectable = this.options.selectable;\n                var point = this._eventPositions(e);\n                var focused = this.focus();\n\n                toolService._updateHoveredItem(point);\n\n                if (toolService.hoveredItem) {\n                    var item = toolService.hoveredItem;\n\n                    this.trigger(\"click\", {\n                        item: item,\n                        point: point,\n                        meta: this._meta(e.event)\n                    });\n\n                    if (selectable && item.options.selectable !== false) {\n                        var multiple = selectable.multiple !== false;\n                        var ctrlPressed = kendo.support.mobileOS || this._meta(e.event).ctrlKey;\n\n                        if (item.isSelected) {\n                            if (ctrlPressed) {\n                                this._destroyToolBar();\n                                item.select(false);\n                            } else {\n                                this._createToolBar(focused);\n                            }\n                        } else {\n                            this._destroyToolBar();\n                            this.select(item, {\n                                addToSelection: multiple && ctrlPressed\n                            });\n                            this._createToolBar(focused);\n                        }\n                    }\n                } else if (selectable) {\n                    this._destroyToolBar();\n                    this.deselect();\n                }\n            },\n\n            _keydown: function (e) {\n                if (this.toolService.keyDown(e.keyCode, this._meta(e))) {\n                    e.preventDefault();\n                }\n            },\n\n            _wheel: function (e) {\n                var delta = mwDelta(e),\n                    p = this._eventPositions(e),\n                    meta = deepExtend(this._meta(e), { delta: delta });\n\n                if (this.toolService.wheel(p, meta)) {\n                    e.preventDefault();\n                }\n            },\n\n            _meta: function (e) {\n                return { ctrlKey: e.ctrlKey, metaKey: e.metaKey, altKey: e.altKey, shiftKey: e.shiftKey, type: e.type };\n            },\n\n            _eventPositions: function (e, start) {\n                var point;\n                if (e.touch) {\n                    var field = start ? \"startLocation\" : \"location\";\n                    point = new Point(e.x[field], e.y[field]);\n                } else {\n                    var event = e.originalEvent;\n                    point = new Point(event.pageX, event.pageY);\n                }\n\n                return this.documentToModel(point);\n            },\n\n            _gestureStart: function(e) {\n                this._destroyToolBar();\n                this.scroller.disable();\n                var initialCenter = this.documentToModel(new Point(e.center.x, e.center.y));\n                var eventArgs = {\n                    point: initialCenter,\n                    zoom: this.zoom()\n                };\n\n                if (this.trigger(ZOOM_START, eventArgs)) {\n                    return;\n                }\n\n                this._gesture = e;\n                this._initialCenter = initialCenter;\n            },\n\n            _gestureChange: function(e) {\n                var previousGesture = this._gesture;\n                var initialCenter = this._initialCenter;\n                var center = this.documentToView(new Point(e.center.x, e.center.y));\n                var scaleDelta = e.distance / previousGesture.distance;\n                var zoom = this._zoom;\n                var updateZoom = false;\n\n                if (math.abs(scaleDelta - 1) >= MOBILE_ZOOM_RATE) {\n                    this._zoom = zoom = this._getValidZoom(zoom * scaleDelta);\n                    this.options.zoom = zoom;\n                    this._gesture = e;\n                    updateZoom = true;\n                }\n\n                var zoomedPoint = initialCenter.times(zoom);\n                var pan = center.minus(zoomedPoint);\n                if (updateZoom || this._pan.distanceTo(pan) >= MOBILE_PAN_DISTANCE) {\n                    this._panTransform(pan);\n                    this._updateAdorners();\n                }\n\n                e.preventDefault();\n            },\n\n            _doubleTap: function(e) {\n                var diagram = this;\n                var pointPosition = this._eventPositions(e);\n                var options = diagram.options;\n                var zoomRate = options.zoomRate;\n                var zoom = diagram.zoom() + zoomRate;\n                var meta = this._meta(e);\n                var zoomOptions = { point: pointPosition, meta: meta, zoom: zoom };\n\n\n                if (diagram.trigger(ZOOM_START, zoomOptions)) {\n                    return;\n                }\n\n                zoom = kendo.dataviz.round(Math.max(options.zoomMin, Math.min(options.zoomMax, zoom)), 2);\n                zoomOptions.zoom = zoom;\n\n                diagram.zoom(zoom, zoomOptions);\n                diagram.trigger(ZOOM_END, zoomOptions);\n            },\n\n            _gestureEnd: function() {\n                if (this.options.pannable !== false)  {\n                    this.scroller.enable();\n                }\n                this.trigger(ZOOM_END, {\n                    point: this._initialCenter,\n                    zoom: this.zoom()\n                });\n            },\n\n            _resize: function() {\n                var viewport = this.viewport();\n                if (this.canvas) {\n                    this.canvas.size(viewport);\n                }\n\n                if (this.scrollable && this.toolBar) {\n                    this.scrollable.height(viewport.height);\n                }\n            },\n\n            _mouseover: function(e) {\n                var node = e.target._kendoNode;\n                if (node && node.srcElement._hover) {\n                    node.srcElement._hover(true, node.srcElement);\n                }\n            },\n\n            _mouseout: function(e) {\n                var node = e.target._kendoNode;\n                if (node && node.srcElement._hover) {\n                    node.srcElement._hover(false, node.srcElement);\n                }\n            },\n\n            _initTheme: function() {\n                var that = this;\n                var themeName = ((that.options || {}).theme || \"\").toLowerCase();\n                var themes = dataviz.ui.themes || {};\n                var themeOptions;\n\n                if(dataviz.SASS_THEMES.indexOf(themeName) != -1) {\n                    themeOptions = dataviz.autoTheme().diagram;\n                }\n                else {\n                    themeOptions = (themes[themeName] || {}).diagram;\n                }\n\n                that.options = deepExtend({}, themeOptions, that.options);\n                if (that.options.editable === true) {\n                    deepExtend(that.options, {\n                        editable: (themeOptions || {}).editable\n                    });\n                }\n            },\n\n            _createOptionElements: function() {\n                var options = this.options;\n                var shapesLength = options.shapes.length;\n\n                if (shapesLength) {\n                    this._createShapes();\n                }\n\n                if (options.connections.length) {\n                    this._createConnections();\n                }\n\n                if (shapesLength && options.layout) {\n                    this.layout(options.layout);\n                }\n            },\n\n            _createShapes: function() {\n                var that = this,\n                    options = that.options,\n                    shapes = options.shapes,\n                    shape, i;\n\n                for (i = 0; i < shapes.length; i++) {\n                    shape = shapes[i];\n                    that.addShape(shape);\n                }\n            },\n\n            _createConnections: function() {\n                var diagram = this,\n                    options = diagram.options,\n                    defaults = options.connectionDefaults,\n                    connections = options.connections,\n                    conn, source, target, i;\n\n                for(i = 0; i < connections.length; i++) {\n                    conn = connections[i];\n                    source = diagram._findConnectionTarget(conn.from);\n                    target = diagram._findConnectionTarget(conn.to);\n\n                    diagram.connect(source, target, deepExtend({}, defaults, conn));\n                }\n            },\n\n            _findConnectionTarget: function(options) {\n                options = options || {};\n                var diagram = this;\n                var shapeId = isString(options) ? options : options.shapeId || options.id;\n                var target;\n                if (shapeId) {\n                    target = diagram.getShapeById(shapeId);\n                    if (options.connector) {\n                        target = target.getConnector(options.connector);\n                    }\n                } else {\n                    target = new Point(options.x || 0, options.y || 0);\n                }\n\n                return target;\n            },\n\n            destroy: function () {\n                var that = this;\n                Widget.fn.destroy.call(that);\n\n                if (this._userEvents) {\n                    this._userEvents.destroy();\n                }\n\n                kendo.unbindResize(that._resizeHandler);\n\n                that.clear();\n                that.element.off(NS);\n                that.scroller.wrapper.off(NS);\n                that.canvas.destroy(true);\n                that.canvas = undefined;\n\n                that._destroyEditor();\n                that.destroyScroller();\n                that._destroyGlobalToolBar();\n                that._destroyToolBar();\n            },\n\n            destroyScroller: function () {\n                var scroller = this.scroller;\n\n                if (!scroller) {\n                    return;\n                }\n\n                scroller.destroy();\n                scroller.element.remove();\n                this.scroller = null;\n            },\n\n            save: function () {\n                var json = {\n                    shapes: [],\n                    connections: []\n                };\n                var i, connection, shape;\n\n                for (i = 0; i < this.shapes.length; i++) {\n                    shape = this.shapes[i];\n                    if (shape.options.serializable) {\n                        json.shapes.push(shape.options);\n                    }\n                }\n\n                for (i = 0; i < this.connections.length; i++) {\n                    connection = this.connections[i];\n\n                    json.connections.push(deepExtend({}, connection.options, connection.toJSON()));\n                }\n\n                return json;\n            },\n\n            focus: function() {\n                if (!this.element.is(kendo._activeElement())) {\n                    var element = this.element,\n                        scrollContainer = element[0],\n                        containers = [],\n                        offsets = [],\n                        documentElement = document.documentElement,\n                        i;\n\n                    do {\n                        scrollContainer = scrollContainer.parentNode;\n\n                        if (scrollContainer.scrollHeight > scrollContainer.clientHeight) {\n                            containers.push(scrollContainer);\n                            offsets.push(scrollContainer.scrollTop);\n                        }\n                    } while (scrollContainer != documentElement);\n\n                    element.trigger(\"focus\");\n\n                    for (i = 0; i < containers.length; i++) {\n                        containers[i].scrollTop = offsets[i];\n                    }\n                    return true;\n                }\n            },\n\n            load: function(options) {\n                this.clear();\n\n                this.setOptions(options);\n                this._createShapes();\n                this._createConnections();\n            },\n\n            setOptions: function(options) {\n                deepExtend(this.options, options);\n            },\n\n            clear: function () {\n                var that = this;\n\n                that.select(false);\n                that.mainLayer.clear();\n                that._shapesQuadTree.clear();\n                that._initialize();\n            },\n            /**\n             * Connects two items.\n             * @param source Shape, Connector, Point.\n             * @param target Shape, Connector, Point.\n             * @param options Connection options that will be passed to the newly created connection.\n             * @returns The newly created connection.\n             */\n            connect: function (source, target, options) {\n                var connection;\n                if (this.connectionsDataSource && this._isEditable) {\n                    var dataItem = this.connectionsDataSource.add({});\n                    connection = this._connectionsDataMap[dataItem.uid];\n                    connection.source(source);\n                    connection.target(target);\n                    connection.redraw(options);\n                    connection.updateModel();\n                } else {\n                    connection = new Connection(source, target,\n                        deepExtend({ }, this.options.connectionDefaults, options));\n\n                    this.addConnection(connection);\n                }\n\n                return connection;\n            },\n            /**\n             * Determines whether the the two items are connected.\n             * @param source Shape, Connector, Point.\n             * @param target Shape, Connector, Point.\n             * @returns true if the two items are connected.\n             */\n            connected: function (source, target) {\n                for (var i = 0; i < this.connections.length; i++) {\n                    var c = this.connections[i];\n                    if (c.from == source && c.to == target) {\n                        return true;\n                    }\n                }\n\n                return false;\n            },\n            /**\n             * Adds connection to the diagram.\n             * @param connection Connection.\n             * @param undoable Boolean.\n             * @returns The newly created connection.\n             */\n            addConnection: function (connection, undoable) {\n                if (undoable !== false) {\n                    this.undoRedoService.add(\n                        new diagram.AddConnectionUnit(connection, this), false);\n                }\n\n                connection.diagram = this;\n                connection._setOptionsFromModel();\n                connection.refresh();\n                this.mainLayer.append(connection.visual);\n                this.connections.push(connection);\n\n                this.trigger(CHANGE, {\n                    added: [connection],\n                    removed: []\n                });\n\n                return connection;\n            },\n\n            _addConnection: function (connection, undoable) {\n                var connectionsDataSource = this.connectionsDataSource;\n                var dataItem;\n                if (connectionsDataSource && this._isEditable) {\n                    dataItem = createModel(connectionsDataSource, cloneDataItem(connection.dataItem));\n                    connection.dataItem = dataItem;\n                    connection.updateModel();\n\n                    if (!this.trigger(\"add\", { connection: connection })) {\n                        this._connectionsDataMap[dataItem.uid] = connection;\n\n                        connectionsDataSource.add(dataItem);\n                        this.addConnection(connection, undoable);\n                        connection._updateConnectors();\n\n                        return connection;\n                    }\n                } else if (!this.trigger(\"add\", { connection: connection })) {\n                    this.addConnection(connection, undoable);\n                    connection._updateConnectors();\n                    return connection;\n                }\n            },\n\n            /**\n             * Adds shape to the diagram.\n             * @param item Shape, Point. If point is passed it will be created new Shape and positioned at that point.\n             * @param options. The options to be passed to the newly created Shape.\n             * @returns The newly created shape.\n             */\n            addShape: function(item, undoable) {\n                var shape,\n                    shapeDefaults = this.options.shapeDefaults;\n\n                if (item instanceof Shape) {\n                    shape = item;\n                    this._parseBounds(shape.bounds());\n                } else if (!(item instanceof kendo.Class)) {\n                    shapeDefaults = deepExtend({}, shapeDefaults, item || {});\n                    shape = new Shape(shapeDefaults, this);\n                    this._parseBounds(shape.bounds());\n                } else {\n                    return;\n                }\n\n                if (undoable !== false) {\n                    this.undoRedoService.add(new diagram.AddShapeUnit(shape, this), false);\n                }\n\n                this.shapes.push(shape);\n                if (shape.diagram !== this) {\n                    this._shapesQuadTree.insert(shape);\n                    shape.diagram = this;\n                }\n                this.mainLayer.append(shape.visual);\n\n                this.trigger(CHANGE, {\n                    added: [shape],\n                    removed: []\n                });\n\n                return shape;\n            },\n\n            _addShape: function(shape, undoable) {\n                var that = this;\n                var dataSource = that.dataSource;\n                var dataItem;\n                if (dataSource && this._isEditable) {\n                    dataItem = createModel(dataSource, cloneDataItem(shape.dataItem));\n                    shape.dataItem = dataItem;\n                    shape.updateModel();\n\n                    if (!this.trigger(\"add\", { shape: shape })) {\n                        this.dataSource.add(dataItem);\n                        var inactiveItem = this._inactiveShapeItems.getByUid(dataItem.uid);\n                        inactiveItem.element = shape;\n                        inactiveItem.undoable = undoable;\n                        return shape;\n                    }\n                } else if (!this.trigger(\"add\", { shape: shape })) {\n                    return this.addShape(shape, undoable);\n                }\n            },\n\n            _parseBounds: function(bounds) {\n                bounds.x = typeof(bounds.x) == \"string\" ? parseFloat(bounds.x) : bounds.x;\n                bounds.y = typeof(bounds.y) == \"string\" ? parseFloat(bounds.y) : bounds.y;\n            },\n            /**\n             * Removes items (or single item) from the diagram.\n             * @param items DiagramElement, Array of Items.\n             * @param undoable.\n             */\n\n           remove: function(items, undoable) {\n                items = isArray(items) ? items.slice(0) : [items];\n                var elements = splitDiagramElements(items);\n                var shapes = elements.shapes;\n                var connections = elements.connections;\n                var i;\n\n                if (!defined(undoable)) {\n                    undoable = true;\n                }\n\n                if (undoable) {\n                    this.undoRedoService.begin();\n                }\n\n                this._suspendModelRefresh();\n                for (i = shapes.length - 1; i >= 0; i--) {\n                   this._removeItem(shapes[i], undoable, connections);\n                }\n\n                for (i = connections.length - 1; i >= 0; i--) {\n                    this._removeItem(connections[i], undoable);\n                }\n\n                this._resumeModelRefresh();\n\n                if (undoable) {\n                    this.undoRedoService.commit(false);\n                }\n\n                this.trigger(CHANGE, {\n                    added: [],\n                    removed: items\n                });\n            },\n\n            _removeShapeDataItem: function(item) {\n                if (this._isEditable) {\n                    this.dataSource.remove(item.dataItem);\n                    delete this._dataMap[item.dataItem.id];\n                }\n            },\n\n            _removeConnectionDataItem: function(item) {\n                if (this._isEditable) {\n                    this.connectionsDataSource.remove(item.dataItem);\n                    delete this._connectionsDataMap[item.dataItem.uid];\n                }\n            },\n\n            _triggerRemove: function(items){\n                var toRemove = [];\n                var item, args, editable;\n\n                for (var idx = 0; idx < items.length; idx++) {\n                    item = items[idx];\n                    editable = item.options.editable;\n                    if (item instanceof Shape) {\n                        args = { shape: item };\n                    } else {\n                        args = { connection: item };\n                    }\n                    if (editable && editable.remove !== false && !this.trigger(\"remove\", args)) {\n                        toRemove.push(item);\n                    }\n                }\n                return toRemove;\n            },\n\n            /**\n             * Executes the next undoable action on top of the undo stack if any.\n             */\n            undo: function () {\n                this.undoRedoService.undo();\n            },\n            /**\n             * Executes the previous undoable action on top of the redo stack if any.\n             */\n            redo: function () {\n                this.undoRedoService.redo();\n            },\n            /**\n             * Selects items on the basis of the given input or returns the current selection if none.\n             * @param itemsOrRect DiagramElement, Array of elements, \"All\", false or Rect. A value 'false' will deselect everything.\n             * @param options\n             * @returns {Array}\n             */\n            select: function (item, options) {\n                if (isDefined(item)) {\n                    options = deepExtend({ addToSelection: false }, options);\n\n                    var addToSelection = options.addToSelection,\n                        items = [],\n                        selected = [],\n                        i, element;\n\n                    if (!addToSelection) {\n                        this.deselect();\n                    }\n\n                    this._internalSelection = true;\n\n                    if (item instanceof Array) {\n                        items = item;\n                    } else if (item instanceof DiagramElement) {\n                        items = [ item ];\n                    }\n\n                    for (i = 0; i < items.length; i++) {\n                        element = items[i];\n                        if (element.select(true)) {\n                            selected.push(element);\n                        }\n                    }\n\n                    this._selectionChanged(selected, []);\n\n                    this._internalSelection = false;\n                } else {\n                    return this._selectedItems;\n                }\n            },\n\n            selectAll: function() {\n                this.select(this.shapes.concat(this.connections));\n            },\n\n            selectArea: function(rect) {\n                var i, items, item;\n                this._internalSelection = true;\n                var selected = [];\n                if (rect instanceof Rect) {\n                    items = this.shapes.concat(this.connections);\n                    for (i = 0; i < items.length; i++) {\n                        item = items[i];\n                        if ((!rect || item._hitTest(rect)) && item.options.enable) {\n                            if (item.select(true)) {\n                                selected.push(item);\n                            }\n                        }\n                    }\n                }\n\n                this._selectionChanged(selected, []);\n                this._internalSelection = false;\n            },\n\n            deselect: function(item) {\n                this._internalSelection = true;\n                var deselected = [],\n                    items = [],\n                    element, i;\n\n                if (item instanceof Array) {\n                    items = item;\n                } else if (item instanceof DiagramElement) {\n                    items.push(item);\n                } else if (!isDefined(item)) {\n                    items = this._selectedItems.slice(0);\n                }\n\n                for (i = 0; i < items.length; i++) {\n                    element = items[i];\n                    if (element.select(false)) {\n                        deselected.push(element);\n                    }\n                }\n\n                this._selectionChanged([], deselected);\n                this._internalSelection = false;\n            },\n            /**\n             * Brings to front the passed items.\n             * @param items DiagramElement, Array of Items.\n             * @param undoable. By default the action is undoable.\n             */\n            toFront: function (items, undoable) {\n                if (!items) {\n                    items = this._selectedItems.slice();\n                }\n\n                var result = this._getDiagramItems(items), indices;\n                if (!defined(undoable) || undoable) {\n                    indices = indicesOfItems(this.mainLayer, result.visuals);\n                    var unit = new ToFrontUnit(this, items, indices);\n                    this.undoRedoService.add(unit);\n                } else {\n                    this.mainLayer.toFront(result.visuals);\n                    this._fixOrdering(result, true);\n                }\n            },\n            /**\n             * Sends to back the passed items.\n             * @param items DiagramElement, Array of Items.\n             * @param undoable. By default the action is undoable.\n             */\n            toBack: function (items, undoable) {\n                if (!items) {\n                    items = this._selectedItems.slice();\n                }\n\n                var result = this._getDiagramItems(items), indices;\n                if (!defined(undoable) || undoable) {\n                    indices = indicesOfItems(this.mainLayer, result.visuals);\n                    var unit = new ToBackUnit(this, items, indices);\n                    this.undoRedoService.add(unit);\n                } else {\n                    this.mainLayer.toBack(result.visuals);\n                    this._fixOrdering(result, false);\n                }\n            },\n            /**\n             * Bring into view the passed item(s) or rectangle.\n             * @param items DiagramElement, Array of Items, Rect.\n             * @param options. align - controls the position of the calculated rectangle relative to the viewport.\n             * \"Center middle\" will position the items in the center. animate - controls if the pan should be animated.\n             */\n            bringIntoView: function (item, options) { // jQuery|Item|Array|Rect\n                var viewport = this.viewport();\n                var aligner = new diagram.RectAlign(viewport);\n                var current, rect, original, newPan;\n\n                if (viewport.width === 0 || viewport.height === 0) {\n                    return;\n                }\n\n                options = deepExtend({animate: false, align: \"center middle\"}, options);\n                if (options.align == \"none\") {\n                    options.align = \"center middle\";\n                }\n\n                if (item instanceof DiagramElement) {\n                    rect = item.bounds(TRANSFORMED);\n                } else if (isArray(item)) {\n                    rect = this.boundingBox(item);\n                } else if (item instanceof Rect) {\n                    rect = item.clone();\n                }\n\n                original = rect.clone();\n\n                rect.zoom(this._zoom);\n\n                if (rect.width > viewport.width || rect.height > viewport.height) {\n                    this._zoom = this._getValidZoom(math.min(viewport.width / original.width, viewport.height / original.height));\n                    rect = original.clone().zoom(this._zoom);\n                }\n\n                this._zoomMainLayer();\n\n                current = rect.clone();\n                aligner.align(rect, options.align);\n\n                newPan = rect.topLeft().minus(current.topLeft());\n                this.pan(newPan.times(-1), options.animate);\n            },\n\n            alignShapes: function (direction) {\n                if (isUndefined(direction)) {\n                    direction = \"Left\";\n                }\n                var items = this.select(),\n                    val,\n                    item,\n                    i;\n\n                if (items.length === 0) {\n                    return;\n                }\n\n                switch (direction.toLowerCase()) {\n                    case \"left\":\n                    case \"top\":\n                        val = MAX_VALUE;\n                        break;\n                    case \"right\":\n                    case \"bottom\":\n                        val = MIN_VALUE;\n                        break;\n                }\n\n                for (i = 0; i < items.length; i++) {\n                    item = items[i];\n                    if (item instanceof Shape) {\n                        switch (direction.toLowerCase()) {\n                            case \"left\":\n                                val = math.min(val, item.options.x);\n                                break;\n                            case \"top\":\n                                val = math.min(val, item.options.y);\n                                break;\n                            case \"right\":\n                                val = math.max(val, item.options.x);\n                                break;\n                            case \"bottom\":\n                                val = math.max(val, item.options.y);\n                                break;\n                        }\n                    }\n                }\n                var undoStates = [];\n                var shapes = [];\n                for (i = 0; i < items.length; i++) {\n                    item = items[i];\n                    if (item instanceof Shape) {\n                        shapes.push(item);\n                        undoStates.push(item.bounds());\n                        switch (direction.toLowerCase()) {\n                            case \"left\":\n                            case \"right\":\n                                item.position(new Point(val, item.options.y));\n                                break;\n                            case \"top\":\n                            case \"bottom\":\n                                item.position(new Point(item.options.x, val));\n                                break;\n                        }\n                    }\n                }\n                var unit = new diagram.TransformUnit(shapes, undoStates);\n                this.undoRedoService.add(unit, false);\n            },\n\n            zoom: function (zoom, options) {\n                if (zoom) {\n                    var staticPoint = options ? options.point : new diagram.Point(0, 0);\n                    // var meta = options ? options.meta : 0;\n                    zoom = this._zoom = this._getValidZoom(zoom);\n\n                    if (!isUndefined(staticPoint)) {//Viewpoint vector is constant\n                        staticPoint = new diagram.Point(math.round(staticPoint.x), math.round(staticPoint.y));\n                        var zoomedPoint = staticPoint.times(zoom);\n                        var viewportVector = this.modelToView(staticPoint);\n                        var raw = viewportVector.minus(zoomedPoint);//pan + zoomed point = viewpoint vector\n                        this._storePan(new diagram.Point(math.round(raw.x), math.round(raw.y)));\n                    }\n\n                    if (options) {\n                        options.zoom = zoom;\n                    }\n\n                    this._panTransform();\n\n                    this.canvas.surface.hideTooltip();\n\n                    this._updateAdorners();\n                }\n\n                return this._zoom;\n            },\n\n            _getPan: function(pan) {\n                var canvas = this.canvas;\n                if (!canvas.translate) {\n                    pan = pan.plus(this._pan);\n                }\n                return pan;\n            },\n\n            pan: function (pan, animate) {\n                if (pan instanceof Point) {\n                    var that = this;\n                    var scroller = that.scroller;\n                    pan = that._getPan(pan);\n                    pan = pan.times(-1);\n\n                    if (animate) {\n                        scroller.animatedScrollTo(pan.x, pan.y, function() {\n                            that._updateAdorners();\n                        });\n                    } else {\n                        scroller.scrollTo(pan.x, pan.y);\n                        that._updateAdorners();\n                    }\n                } else {\n                    return this._pan.times(-1);\n                }\n            },\n\n            viewport: function () {\n                var element = this.element;\n                var width = element.width();\n                var height = element.height();\n\n                if (this.toolBar) {\n                    height -= outerHeight(this.toolBar.element);\n                }\n\n                return new Rect(0, 0, width, height);\n            },\n            copy: function () {\n                if (this.options.copy.enabled) {\n                    this._clipboard = [];\n                    this._copyOffset = 1;\n                    for (var i = 0; i < this._selectedItems.length; i++) {\n                        var item = this._selectedItems[i];\n                        this._clipboard.push(item);\n                    }\n                }\n            },\n            cut: function () {\n                if (this.options.copy.enabled) {\n                    this._clipboard = [];\n                    this._copyOffset = 0;\n                    for (var i = 0; i < this._selectedItems.length; i++) {\n                        var item = this._selectedItems[i];\n                        this._clipboard.push(item);\n                    }\n                    this.remove(this._clipboard, true);\n                }\n            },\n\n            paste: function () {\n                if (this._clipboard.length > 0) {\n                    var item, copied, i;\n                    var mapping = {};\n                    var elements = splitDiagramElements(this._clipboard);\n                    var connections = elements.connections;\n                    var shapes = elements.shapes;\n                    var offset = {\n                        x: this._copyOffset * this.options.copy.offsetX,\n                        y: this._copyOffset * this.options.copy.offsetY\n                    };\n                    this.deselect();\n                    // first the shapes\n                    for (i = 0; i < shapes.length; i++) {\n                        item = shapes[i];\n                        copied = item.clone();\n                        mapping[item.id] = copied;\n                        copied.position(new Point(item.options.x + offset.x, item.options.y + offset.y));\n                        copied.diagram = this;\n                        copied = this._addShape(copied);\n                        if (copied) {\n                            copied.select();\n                        }\n                    }\n                    // then the connections\n                    for (i = 0; i < connections.length; i++) {\n                        item = connections[i];\n                        copied = this._addConnection(item.clone());\n                        if (copied) {\n                            this._updateCopiedConnection(copied, item, \"source\", mapping, offset);\n                            this._updateCopiedConnection(copied, item, \"target\", mapping, offset);\n\n                            copied.select(true);\n                            copied.updateModel();\n                        }\n                    }\n\n                    this._syncChanges();\n\n                    this._copyOffset += 1;\n                }\n            },\n\n            _updateCopiedConnection: function(connection, sourceConnection, connectorName, mapping, offset) {\n                var onActivate, inactiveItem, targetShape;\n                var target = sourceConnection[connectorName]();\n                var diagram = this;\n                if (target instanceof Connector && mapping[target.shape.id]) {\n                    targetShape = mapping[target.shape.id];\n                    if (diagram.getShapeById(targetShape.id)) {\n                        connection[connectorName](targetShape.getConnector(target.options.name));\n                    } else {\n                        inactiveItem = diagram._inactiveShapeItems.getByUid(targetShape.dataItem.uid);\n                        if (inactiveItem) {\n                            onActivate = function(item) {\n                                targetShape = diagram._dataMap[item.id];\n                                connection[connectorName](targetShape.getConnector(target.options.name));\n                                connection.updateModel();\n                            };\n                            diagram._deferredConnectionUpdates.push(inactiveItem.onActivate(onActivate));\n                        }\n                    }\n                } else {\n                    connection[connectorName](new Point(sourceConnection[connectorName + \"Point\"]().x + offset.x, sourceConnection[connectorName + \"Point\"]().y + offset.y));\n                }\n            },\n            /**\n             * Gets the bounding rectangle of the given items.\n             * @param items DiagramElement, Array of elements.\n             * @param origin Boolean. Pass 'true' if you need to get the bounding box of the shapes without their rotation offset.\n             * @returns {Rect}\n             */\n            boundingBox: function (items, origin) {\n                var rect = Rect.empty(), temp,\n                    di = isDefined(items) ? this._getDiagramItems(items) : {shapes: this.shapes};\n                if (di.shapes.length > 0) {\n                    var item = di.shapes[0];\n                    rect = item.bounds(ROTATED);\n                    for (var i = 1; i < di.shapes.length; i++) {\n                        item = di.shapes[i];\n                        temp = item.bounds(ROTATED);\n                        if (origin === true) {\n                            temp.x -= item._rotationOffset.x;\n                            temp.y -= item._rotationOffset.y;\n                        }\n                        rect = rect.union(temp);\n                    }\n                }\n                return rect;\n            },\n\n            _containerOffset: function() {\n                var containerOffset = this.element.offset();\n                if (this.toolBar) {\n                    containerOffset.top += outerHeight(this.toolBar.element);\n                }\n                return containerOffset;\n            },\n\n            documentToView: function(point) {\n                var containerOffset = this._containerOffset();\n\n                return new Point(point.x - containerOffset.left, point.y - containerOffset.top);\n            },\n            viewToDocument: function(point) {\n                var containerOffset = this._containerOffset();\n\n                return new Point(point.x + containerOffset.left, point.y + containerOffset.top);\n            },\n            viewToModel: function(point) {\n                return this._transformWithMatrix(point, this._matrixInvert);\n            },\n            modelToView: function(point) {\n                return this._transformWithMatrix(point, this._matrix);\n            },\n            modelToLayer: function(point) {\n                return this._transformWithMatrix(point, this._layerMatrix);\n            },\n            layerToModel: function(point) {\n                return this._transformWithMatrix(point, this._layerMatrixInvert);\n            },\n            documentToModel: function(point) {\n                var viewPoint = this.documentToView(point);\n                if (!this.canvas.translate) {\n                    viewPoint.x = viewPoint.x + this.scroller.scrollLeft;\n                    viewPoint.y = viewPoint.y + this.scroller.scrollTop;\n                }\n                return this.viewToModel(viewPoint);\n            },\n            modelToDocument: function(point) {\n                return this.viewToDocument(this.modelToView(point));\n            },\n            _transformWithMatrix: function(point, matrix) {\n                var result = point;\n                if (point instanceof Point) {\n                    if (matrix) {\n                        result = matrix.apply(point);\n                    }\n                }\n                else {\n                    var tl = this._transformWithMatrix(point.topLeft(), matrix),\n                        br = this._transformWithMatrix(point.bottomRight(), matrix);\n                    result = Rect.fromPoints(tl, br);\n                }\n                return result;\n            },\n\n            setDataSource: function(dataSource) {\n                this.options.dataSource = dataSource;\n                this._dataSource();\n                if (this.options.autoBind) {\n                    this.dataSource.fetch();\n                }\n            },\n\n            setConnectionsDataSource: function(dataSource) {\n                this.options.connectionsDataSource = dataSource;\n                this._connectionDataSource();\n                if (this.options.autoBind) {\n                    this.connectionsDataSource.fetch();\n                }\n            },\n\n            /**\n             * Performs a diagram layout of the given type.\n             * @param layoutType The layout algorithm to be applied (TreeLayout, LayeredLayout, SpringLayout).\n             * @param options Layout-specific options.\n             */\n            layout: function (options) {\n                this._layouting = true;\n                // TODO: raise layout event?\n                var type;\n                if(isUndefined(options)) {\n                    options = this.options.layout;\n                }\n                if (isUndefined(options) || isUndefined(options.type)) {\n                    type = \"Tree\";\n                }\n                else {\n                    type = options.type;\n                }\n                var l;\n                switch (type.toLowerCase()) {\n                    case \"tree\":\n                        l = new diagram.TreeLayout(this);\n                        break;\n\n                    case \"layered\":\n                        l = new diagram.LayeredLayout(this);\n                        break;\n\n                    case \"forcedirected\":\n                    case \"force\":\n                    case \"spring\":\n                    case \"springembedder\":\n                        l = new diagram.SpringLayout(this);\n                        break;\n                    default:\n                        throw \"Layout algorithm '\" + type + \"' is not supported.\";\n                }\n                var initialState = new diagram.LayoutState(this);\n                var finalState = l.layout(options);\n                if (finalState) {\n                    var unit = new diagram.LayoutUndoUnit(initialState, finalState, options ? options.animate : null);\n                    this.undoRedoService.add(unit);\n                }\n                this._layouting = false;\n                this._redrawConnections();\n            },\n            /**\n             * Gets a shape on the basis of its identifier.\n             * @param id (string) the identifier of a shape.\n             * @returns {Shape}\n             */\n            getShapeById: function (id) {\n                var found;\n                found = Utils.first(this.shapes, function (s) {\n                    return s.visual.id === id;\n                });\n                if (found) {\n                    return found;\n                }\n                found = Utils.first(this.connections, function (c) {\n                    return c.visual.id === id;\n                });\n                return found;\n            },\n\n            getShapeByModelId: function (id) {\n                var shape;\n                if (this._isEditable) {\n                    shape = this._dataMap[id];\n                } else {\n                    shape = Utils.first(this.shapes, function(shape) {\n                        return (shape.dataItem || {}).id === id;\n                    });\n                }\n                return shape;\n            },\n\n            getShapeByModelUid: function(uid) {\n                var shape;\n                if (this._isEditable) {\n                    shape = Utils.first(this.shapes, function(shape) {\n                        return (shape.dataItem || {}).uid === uid;\n                    });\n                } else {\n                    shape = this._dataMap[uid];\n                }\n                return shape;\n            },\n\n            getConnectionByModelId: function(id) {\n                var connection;\n                if (this.connectionsDataSource) {\n                    connection = Utils.first(this.connections, function(connection) {\n                        return (connection.dataItem || {}).id === id;\n                    });\n                }\n                return connection;\n            },\n\n            getConnectionByModelUid: function(uid) {\n                var connection;\n                if (this.connectionsDataSource) {\n                    connection = this._connectionsDataMap[uid];\n                }\n                return connection;\n            },\n\n            _extendLayoutOptions: function(options) {\n                if(options.layout) {\n                    options.layout = deepExtend({}, diagram.LayoutBase.fn.defaultOptions || {}, options.layout);\n                }\n            },\n\n            _selectionChanged: function (selected, deselected) {\n                if (selected.length || deselected.length) {\n                    this.trigger(SELECT, { selected: selected, deselected: deselected });\n                }\n            },\n            _getValidZoom: function (zoom) {\n                return math.min(math.max(zoom, this.options.zoomMin), this.options.zoomMax);\n            },\n            _panTransform: function (pos) {\n                var diagram = this,\n                    pan = pos || diagram._pan;\n\n                if (diagram.canvas.translate) {\n                    diagram.scroller.scrollTo(pan.x, pan.y);\n                    diagram._zoomMainLayer();\n                } else {\n                    diagram._storePan(pan);\n                    diagram._transformMainLayer();\n                }\n            },\n\n            _finishPan: function () {\n                this.trigger(PAN, {total: this._pan, delta: Number.NaN});\n            },\n            _storePan: function (pan) {\n                this._pan = pan;\n                this._storeViewMatrix();\n            },\n            _zoomMainLayer: function () {\n                var zoom = this._zoom;\n\n                var transform = new CompositeTransform(0, 0, zoom, zoom);\n                transform.render(this.mainLayer);\n                this._storeLayerMatrix(transform);\n                this._storeViewMatrix();\n            },\n            _transformMainLayer: function () {\n                var pan = this._pan,\n                    zoom = this._zoom;\n\n                var transform = new CompositeTransform(pan.x, pan.y, zoom, zoom);\n                transform.render(this.mainLayer);\n                this._storeLayerMatrix(transform);\n                this._storeViewMatrix();\n            },\n            _storeLayerMatrix: function(canvasTransform) {\n                this._layerMatrix = canvasTransform.toMatrix();\n                this._layerMatrixInvert = canvasTransform.invert().toMatrix();\n            },\n            _storeViewMatrix: function() {\n                var pan = this._pan,\n                    zoom = this._zoom;\n\n                var transform = new CompositeTransform(pan.x, pan.y, zoom, zoom);\n                this._matrix = transform.toMatrix();\n                this._matrixInvert = transform.invert().toMatrix();\n            },\n            _toIndex: function (items, indices) {\n                var result = this._getDiagramItems(items);\n                this.mainLayer.toIndex(result.visuals, indices);\n                this._fixOrdering(result, false);\n            },\n            _fixOrdering: function (result, toFront) {\n                var shapePos = toFront ? this.shapes.length - 1 : 0,\n                    conPos = toFront ? this.connections.length - 1 : 0,\n                    i, item;\n                for (i = 0; i < result.shapes.length; i++) {\n                    item = result.shapes[i];\n                    Utils.remove(this.shapes, item);\n                    Utils.insert(this.shapes, item, shapePos);\n                }\n                for (i = 0; i < result.cons.length; i++) {\n                    item = result.cons[i];\n                    Utils.remove(this.connections, item);\n                    Utils.insert(this.connections, item, conPos);\n                }\n            },\n            _getDiagramItems: function (items) {\n                var i, result = {}, args = items;\n                result.visuals = [];\n                result.shapes = [];\n                result.cons = [];\n\n                if (!items) {\n                    args = this._selectedItems.slice();\n                } else if (!isArray(items)) {\n                    args = [items];\n                }\n\n                for (i = 0; i < args.length; i++) {\n                    var item = args[i];\n                    if (item instanceof Shape) {\n                        result.shapes.push(item);\n                        result.visuals.push(item.visual);\n                    } else if (item instanceof Connection) {\n                        result.cons.push(item);\n                        result.visuals.push(item.visual);\n                    }\n                }\n\n                return result;\n            },\n\n            _removeItem: function (item, undoable, removedConnections) {\n                item.select(false);\n                if (item instanceof Shape) {\n                    this._removeShapeDataItem(item);\n                    this._removeShape(item, undoable, removedConnections);\n                } else if (item instanceof Connection) {\n                    this._removeConnectionDataItem(item);\n                    this._removeConnection(item, undoable);\n                }\n\n                this.mainLayer.remove(item.visual);\n            },\n\n            _removeShape: function (shape, undoable, removedConnections) {\n                var i, connection, connector,\n                    sources = [], targets = [];\n                this.toolService._removeHover();\n\n                if (undoable) {\n                    this.undoRedoService.addCompositeItem(new DeleteShapeUnit(shape));\n                }\n                Utils.remove(this.shapes, shape);\n                this._shapesQuadTree.remove(shape);\n\n                for (i = 0; i < shape.connectors.length; i++) {\n                    connector = shape.connectors[i];\n                    for (var j = 0; j < connector.connections.length; j++) {\n                        connection = connector.connections[j];\n                        if (!removedConnections || !dataviz.inArray(connection, removedConnections)) {\n                            if (connection.sourceConnector == connector) {\n                                sources.push(connection);\n                            } else if (connection.targetConnector == connector) {\n                                targets.push(connection);\n                            }\n                        }\n                    }\n                }\n\n                for (i = 0; i < sources.length; i++) {\n                    sources[i].source(null, undoable);\n                    sources[i].updateModel();\n                }\n                for (i = 0; i < targets.length; i++) {\n                    targets[i].target(null, undoable);\n                    targets[i].updateModel();\n                }\n            },\n\n            _removeConnection: function (connection, undoable) {\n                if (connection.sourceConnector) {\n                    Utils.remove(connection.sourceConnector.connections, connection);\n                }\n                if (connection.targetConnector) {\n                    Utils.remove(connection.targetConnector.connections, connection);\n                }\n                if (undoable) {\n                    this.undoRedoService.addCompositeItem(new DeleteConnectionUnit(connection));\n                }\n\n                Utils.remove(this.connections, connection);\n            },\n\n            _removeDataItems: function(items, recursive) {\n                var item, children, shape, idx;\n                items = isArray(items) ? items : [items];\n\n                while (items.length) {\n                    item = items.shift();\n                    shape = this._dataMap[item.uid];\n                    if (shape) {\n                        this._removeShapeConnections(shape);\n                        this._removeItem(shape, false);\n                        delete this._dataMap[item.uid];\n                        if (recursive && item.hasChildren && item.loaded()) {\n                            children = item.children.data();\n                            for (idx = 0; idx < children.length; idx++) {\n                                items.push(children[idx]);\n                            }\n                        }\n                    }\n                }\n            },\n\n            _removeShapeConnections: function(shape) {\n                var connections = shape.connections();\n                var idx;\n\n                if (connections) {\n                    for (idx = 0; idx < connections.length; idx++) {\n                        this._removeItem(connections[idx], false);\n                    }\n                }\n            },\n\n            _addDataItem: function(dataItem, undoable) {\n                if (!defined(dataItem)) {\n                    return;\n                }\n\n                var shape = this._dataMap[dataItem.id];\n                if (shape) {\n                    return shape;\n                }\n\n                var options = deepExtend({}, this.options.shapeDefaults);\n                options.dataItem = dataItem;\n                shape = new Shape(options, this);\n                this.addShape(shape, undoable !== false);\n                this._dataMap[dataItem.id] = shape;\n                return shape;\n            },\n\n            _addDataItemByUid: function(dataItem) {\n                if (!defined(dataItem)) {\n                    return;\n                }\n\n                var shape = this._dataMap[dataItem.uid];\n                if (shape) {\n                    return shape;\n                }\n\n                var options = deepExtend({}, this.options.shapeDefaults);\n                options.dataItem = dataItem;\n                shape = new Shape(options, this);\n                this.addShape(shape);\n                this._dataMap[dataItem.uid] = shape;\n                return shape;\n            },\n\n            _addDataItems: function(items, parent) {\n                var item, idx, shape, parentShape, connection;\n                for (idx = 0; idx < items.length; idx++) {\n                    item = items[idx];\n                    shape = this._addDataItemByUid(item);\n                    parentShape = this._addDataItemByUid(parent);\n                    if (parentShape && !this.connected(parentShape, shape)) { // check if connected to not duplicate connections.\n                        connection = this.connect(parentShape, shape);\n                    }\n                }\n            },\n\n            _refreshSource: function (e) {\n                var that = this,\n                    node = e.node,\n                    action = e.action,\n                    items = e.items,\n                    options = that.options,\n                    idx,\n                    dataBound;\n\n                if (e.field) {\n                    for (idx = 0; idx < items.length; idx++) {\n                        if (this._dataMap[items[idx].uid]) {\n                            this._dataMap[items[idx].uid].redrawVisual();\n                        }\n                    }\n                    return;\n                }\n\n                if (action == \"remove\") {\n                    this._removeDataItems(e.items, true);\n                } else {\n\n                    if ((!action || action === \"itemloaded\") && !this._bindingRoots) {\n                        this._bindingRoots = true;\n                        dataBound = true;\n                    }\n\n                    if (!action && !node) {\n                        that.clear();\n                    }\n\n                    this._addDataItems(items, node);\n\n                    for (idx = 0; idx < items.length; idx++) {\n                        items[idx].load();\n                    }\n                }\n\n                if (options.layout && (dataBound || action == \"remove\" || action == \"add\")) {\n                    that.layout(options.layout);\n                }\n\n                if (dataBound) {\n                    this.trigger(\"dataBound\");\n                    this._bindingRoots = false;\n                }\n            },\n\n            _addItem: function (item) {\n                if (item instanceof Shape) {\n                    this.addShape(item);\n                } else if (item instanceof Connection) {\n                    this.addConnection(item);\n                }\n            },\n\n            _createToolBar: function(preventClosing) {\n                var diagram = this.toolService.diagram;\n\n                if (!this.singleToolBar && diagram.select().length === 1) {\n                    var element = diagram.select()[0];\n                    if (element && element.options.editable !== false) {\n                        var editable = element.options.editable;\n                        var tools = editable.tools;\n                        if (this._isEditable && tools.length === 0) {\n                            if (element instanceof Shape) {\n                                tools = [\"edit\", \"rotateClockwise\", \"rotateAnticlockwise\"];\n                            } else if (element instanceof Connection) {\n                                tools = [\"edit\"];\n                            }\n\n                            if (editable && editable.remove !== false) {\n                                tools.push(\"delete\");\n                            }\n                        }\n\n                        if (tools && tools.length) {\n                            var padding = 20;\n                            var point;\n                            this.singleToolBar = new DiagramToolBar(diagram, {\n                                tools: tools,\n                                click: proxy(this._toolBarClick, this),\n                                modal: true,\n                                popupZIndex: parseInt(diagram.element.closest(\".k-window\").css(\"zIndex\"), 10) + 10\n                            });\n                            var popupWidth = outerWidth(this.singleToolBar._popup.element);\n                            var popupHeight = outerHeight(this.singleToolBar._popup.element);\n                            if (element instanceof Shape) {\n                                var shapeBounds = this.modelToView(element.bounds(ROTATED));\n                                point = new Point(shapeBounds.x, shapeBounds.y).minus(new Point(\n                                    (popupWidth - shapeBounds.width) / 2,\n                                    popupHeight + padding));\n                            } else if (element instanceof Connection) {\n                                var connectionBounds = this.modelToView(element.bounds());\n\n                                point = new Point(connectionBounds.x, connectionBounds.y)\n                                    .minus(new Point(\n                                        (popupWidth - connectionBounds.width - 20) / 2,\n                                        popupHeight + padding\n                                    ));\n                            }\n\n                            if (point) {\n                                if (!this.canvas.translate) {\n                                    point = point.minus(new Point(this.scroller.scrollLeft, this.scroller.scrollTop));\n                                }\n                                point = this.viewToDocument(point);\n                                point = new Point(math.max(point.x, 0), math.max(point.y, 0));\n                                this.singleToolBar.showAt(point);\n                                if (preventClosing) {\n                                    this.singleToolBar._popup.one(\"close\", preventDefault);\n                                }\n                            } else {\n                                this._destroyToolBar();\n                            }\n                        }\n                    }\n                }\n            },\n\n            _toolBarClick: function(e) {\n                this.trigger(\"toolBarClick\", e);\n                this._destroyToolBar();\n            },\n\n            _normalizePointZoom: function (point) {\n                return point.times(1 / this.zoom());\n            },\n\n            _initialize: function () {\n                this.shapes = [];\n                this._selectedItems = [];\n                this.connections = [];\n                this._dataMap = {};\n                this._connectionsDataMap = {};\n                this._inactiveShapeItems = new InactiveItemsCollection();\n                this._deferredConnectionUpdates = [];\n                this.undoRedoService = new UndoRedoService({\n                    undone: this._syncHandler,\n                    redone: this._syncHandler\n                });\n                this.id = diagram.randomId();\n            },\n\n            _fetchFreshData: function () {\n                var that = this;\n                that._dataSource();\n\n                if (that._isEditable) {\n                    that._connectionDataSource();\n                }\n\n                if (that.options.autoBind) {\n                    if (that._isEditable) {\n                        this._loadingShapes = true;\n                        this._loadingConnections = true;\n                        that.dataSource.fetch();\n                        that.connectionsDataSource.fetch();\n                    } else {\n                        that.dataSource.fetch();\n                    }\n                }\n            },\n\n            _dataSource: function() {\n                if (defined(this.options.connectionsDataSource)) {\n                    this._isEditable = true;\n                    var dsOptions = this.options.dataSource || {};\n                    var ds = isArray(dsOptions) ? { data: dsOptions } : dsOptions;\n\n                    if (this.dataSource && this._shapesRefreshHandler) {\n                        this.dataSource\n                            .unbind(\"change\", this._shapesRefreshHandler)\n                            .unbind(\"requestStart\", this._shapesRequestStartHandler)\n                            .unbind(\"error\", this._shapesErrorHandler);\n                    } else {\n                        this._shapesRefreshHandler = proxy(this._refreshShapes, this);\n                        this._shapesRequestStartHandler = proxy(this._shapesRequestStart, this);\n                        this._shapesErrorHandler = proxy(this._error, this);\n                    }\n\n                    this.dataSource = kendo.data.DataSource.create(ds)\n                        .bind(\"change\", this._shapesRefreshHandler)\n                        .bind(\"requestStart\", this._shapesRequestStartHandler)\n                        .bind(\"error\", this._shapesErrorHandler);\n                } else {\n                    this._treeDataSource();\n                    this._isEditable = false;\n                }\n            },\n\n            _connectionDataSource: function() {\n                var dsOptions = this.options.connectionsDataSource;\n                if (dsOptions) {\n                    var ds = isArray(dsOptions) ? { data: dsOptions } : dsOptions;\n\n                    if (this.connectionsDataSource && this._connectionsRefreshHandler) {\n                        this.connectionsDataSource\n                            .unbind(\"change\", this._connectionsRefreshHandler)\n                            .unbind(\"requestStart\", this._connectionsRequestStartHandler)\n                            .unbind(\"error\", this._connectionsErrorHandler);\n                    } else {\n                        this._connectionsRefreshHandler = proxy(this._refreshConnections, this);\n                        this._connectionsRequestStartHandler = proxy(this._connectionsRequestStart, this);\n                        this._connectionsErrorHandler = proxy(this._connectionsError, this);\n                    }\n\n                    this.connectionsDataSource = kendo.data.DataSource.create(ds)\n                        .bind(\"change\", this._connectionsRefreshHandler)\n                        .bind(\"requestStart\", this._connectionsRequestStartHandler)\n                        .bind(\"error\", this._connectionsErrorHandler);\n                }\n            },\n\n            _shapesRequestStart: function(e) {\n                if (e.type == \"read\") {\n                    this._loadingShapes = true;\n                }\n            },\n\n            _connectionsRequestStart: function(e) {\n                if (e.type == \"read\") {\n                    this._loadingConnections = true;\n                }\n            },\n\n            _error: function () {\n                this._loadingShapes = false;\n            },\n\n            _connectionsError: function() {\n                this._loadingConnections = false;\n            },\n\n            _refreshShapes: function(e) {\n                if (e.action === \"remove\") {\n                    if (this._shouldRefresh()) {\n                        this._removeShapes(e.items);\n                    }\n                } else if (e.action === \"itemchange\") {\n                    if (this._shouldRefresh()) {\n                        this._updateShapes(e.items, e.field);\n                    }\n                } else if (e.action === \"add\") {\n                    this._inactiveShapeItems.add(e.items);\n                } else if (e.action === \"sync\") {\n                    this._syncShapes(e.items);\n                } else {\n                    this.refresh();\n                }\n            },\n\n            _shouldRefresh: function() {\n                return !this._suspended;\n            },\n\n            _suspendModelRefresh: function() {\n                this._suspended = (this._suspended || 0) + 1;\n            },\n\n            _resumeModelRefresh: function() {\n                this._suspended = math.max((this._suspended || 0) - 1, 0);\n            },\n\n            refresh: function() {\n                this._loadingShapes = false;\n                if (!this._loadingConnections) {\n                    this._rebindShapesAndConnections();\n                }\n            },\n\n            _rebindShapesAndConnections: function() {\n                this.clear();\n                this._addShapes(this.dataSource.view());\n                if (this.connectionsDataSource) {\n                    this._addConnections(this.connectionsDataSource.view(), false);\n                }\n\n                if (this.options.layout) {\n                    this.layout(this.options.layout);\n                } else {\n                    this._redrawConnections();\n                }\n                this.trigger(\"dataBound\");\n            },\n\n            refreshConnections: function() {\n                this._loadingConnections = false;\n                if (!this._loadingShapes) {\n                    this._rebindShapesAndConnections();\n                }\n            },\n\n            _redrawConnections: function() {\n                var connections = this.connections;\n                for (var idx = 0; idx < connections.length; idx++) {\n                    connections[idx].refresh();\n                }\n            },\n\n            _removeShapes: function(items) {\n                var dataMap = this._dataMap;\n                var item, i;\n                for (i = 0; i < items.length; i++) {\n                    item = items[i];\n                    if (dataMap[item.id]) {\n                        this.remove(dataMap[item.id], false);\n                        dataMap[item.id] = null;\n                    }\n                }\n            },\n\n            _syncShapes: function() {\n                var diagram = this;\n                var inactiveItems = diagram._inactiveShapeItems;\n                inactiveItems.forEach(function(inactiveItem) {\n                    var dataItem = inactiveItem.dataItem;\n                    var shape = inactiveItem.element;\n                    if (!dataItem.isNew()) {\n                        if (shape) {\n                            shape._setOptionsFromModel();\n                            diagram.addShape(shape, inactiveItem.undoable);\n                            diagram._dataMap[dataItem.id] = shape;\n                        } else {\n                            diagram._addDataItem(dataItem);\n                        }\n                        inactiveItem.activate();\n                        inactiveItems.remove(dataItem);\n                    }\n                });\n            },\n\n            _updateShapes: function(items, field) {\n                for (var i = 0; i < items.length; i++) {\n                    var dataItem = items[i];\n\n                    var shape = this._dataMap[dataItem.id];\n                    if (shape) {\n                        shape.updateOptionsFromModel(dataItem, field);\n                    }\n                }\n            },\n\n            _addShapes: function(dataItems) {\n                for (var i = 0; i < dataItems.length; i++) {\n                    this._addDataItem(dataItems[i], false);\n                }\n            },\n\n            _refreshConnections: function(e) {\n                if (e.action === \"remove\") {\n                    if (this._shouldRefresh()) {\n                        this._removeConnections(e.items);\n                    }\n                } else if (e.action === \"add\") {\n                    this._addConnections(e.items);\n                } else if (e.action === \"sync\") {\n                    //TO DO: include logic to update the connections with different values returned from the server.\n                } else if (e.action === \"itemchange\") {\n                    if (this._shouldRefresh()) {\n                        this._updateConnections(e.items);\n                    }\n                } else {\n                    this.refreshConnections();\n                }\n            },\n\n            _removeConnections: function(items) {\n                for (var i = 0; i < items.length; i++) {\n                    this.remove(this._connectionsDataMap[items[i].uid], false);\n                    this._connectionsDataMap[items[i].uid] = null;\n                }\n            },\n\n            _updateConnections: function(items) {\n                for (var i = 0; i < items.length; i++) {\n                    var dataItem = items[i];\n\n                    var connection = this._connectionsDataMap[dataItem.uid];\n                    connection.updateOptionsFromModel(dataItem);\n                }\n            },\n\n            _addConnections: function(connections, undoable) {\n                var length = connections.length;\n\n                for (var i = 0; i < length; i++) {\n                    var dataItem = connections[i];\n                    this._addConnectionDataItem(dataItem, undoable);\n                }\n            },\n\n            _addConnectionDataItem: function(dataItem, undoable) {\n                if (!this._connectionsDataMap[dataItem.uid]) {\n                    var from = this._validateConnector(dataItem.from);\n                    if (!defined(from) || from === null) {\n                        from = new Point(dataItem.fromX, dataItem.fromY);\n                    }\n\n                    var to = this._validateConnector(dataItem.to);\n                    if (!defined(to) || to === null) {\n                        to = new Point(dataItem.toX, dataItem.toY);\n                    }\n\n                    if (defined(from) && defined(to)) {\n                        var options = deepExtend({}, this.options.connectionDefaults);\n                        options.dataItem = dataItem;\n                        var connection = new Connection(from, to, options);\n\n                        this._connectionsDataMap[dataItem.uid] = connection;\n                        this.addConnection(connection, undoable);\n                    }\n                }\n            },\n\n            _validateConnector: function(value) {\n                var connector;\n\n                if (defined(value) && value !== null) {\n                    connector = this._dataMap[value];\n                }\n\n                return connector;\n            },\n\n            _treeDataSource: function () {\n                var that = this,\n                    options = that.options,\n                    dataSource = options.dataSource;\n\n                dataSource = isArray(dataSource) ? { data: dataSource } : dataSource;\n\n                if (dataSource instanceof kendo.data.DataSource && !(dataSource instanceof kendo.data.HierarchicalDataSource)) {\n                    throw new Error(\"Incorrect DataSource type. If a single dataSource instance is set to the diagram then it should be a HierarchicalDataSource. You should set only the options instead of an instance or a HierarchicalDataSource instance or supply connectionsDataSource as well.\");\n                }\n\n                if (!dataSource.fields) {\n                    dataSource.fields = [\n                        { field: \"text\" },\n                        { field: \"url\" },\n                        { field: \"spriteCssClass\" },\n                        { field: \"imageUrl\" }\n                    ];\n                }\n                if (that.dataSource && that._refreshHandler) {\n                    that._unbindDataSource();\n                }\n\n                that._refreshHandler = proxy(that._refreshSource, that);\n                that._errorHandler = proxy(that._error, that);\n\n                that.dataSource = HierarchicalDataSource.create(dataSource)\n                    .bind(CHANGE, that._refreshHandler)\n                    .bind(ERROR, that._errorHandler);\n            },\n\n            _unbindDataSource: function () {\n                var that = this;\n\n                that.dataSource.unbind(CHANGE, that._refreshHandler).unbind(ERROR, that._errorHandler);\n            },\n\n            _adorn: function (adorner, isActive) {\n                if (isActive !== undefined && adorner) {\n                    if (isActive) {\n                        this._adorners.push(adorner);\n                        this.adornerLayer.append(adorner.visual);\n                    }\n                    else {\n                        Utils.remove(this._adorners, adorner);\n                        this.adornerLayer.remove(adorner.visual);\n                    }\n                }\n            },\n\n            _showConnectors: function (shape, value) {\n                if (value) {\n                    this._connectorsAdorner.show(shape);\n                } else {\n                    this._connectorsAdorner.destroy();\n                }\n            },\n\n            _updateAdorners: function() {\n                var adorners = this._adorners;\n\n                for(var i = 0; i < adorners.length; i++) {\n                    var adorner = adorners[i];\n\n                    if (adorner.refreshBounds) {\n                        adorner.refreshBounds();\n                    }\n                    adorner.refresh();\n                }\n            },\n\n            _refresh: function () {\n                for (var i = 0; i < this.connections.length; i++) {\n                    this.connections[i].refresh();\n                }\n            },\n\n            _destroyToolBar: function() {\n                if (this.singleToolBar) {\n                    this.singleToolBar.hide();\n                    this.singleToolBar.destroy();\n                    this.singleToolBar = null;\n                }\n            },\n\n            _destroyGlobalToolBar: function() {\n                if (this.toolBar) {\n                    this.toolBar.hide();\n                    this.toolBar.destroy();\n                    this.toolBar = null;\n                }\n            },\n\n            exportDOMVisual: function() {\n                var viewBox = this.canvas._viewBox;\n                var scrollOffset = geom.transform()\n                                       .translate(-viewBox.x, -viewBox.y);\n\n                var viewRect = new geom.Rect([0, 0], [viewBox.width, viewBox.height]);\n                var clipPath = draw.Path.fromRect(viewRect);\n                var wrap = new draw.Group({ transform: scrollOffset });\n                var clipWrap = new draw.Group({ clip: clipPath });\n                var root = this.canvas.drawingElement.children[0];\n\n                clipWrap.append(wrap);\n\n                // Don't reparent the root\n                wrap.children.push(root);\n\n                return clipWrap;\n            },\n\n            exportVisual: function() {\n                var scale = geom.transform().scale(1 / this._zoom);\n                var wrap = new draw.Group({\n                    transform: scale\n                });\n\n                var root = this.mainLayer.drawingElement;\n                wrap.children.push(root);\n\n                return wrap;\n            },\n\n            _syncChanges: function() {\n                this._syncShapeChanges();\n                this._syncConnectionChanges();\n            },\n\n            _syncShapeChanges: function() {\n                if (this.dataSource && this._isEditable) {\n                    this.dataSource.sync();\n                }\n            },\n\n            _syncConnectionChanges: function() {\n                var that = this;\n                if (that.connectionsDataSource && that._isEditable) {\n                    $.when.apply($, that._deferredConnectionUpdates).then(function() {\n                        that.connectionsDataSource.sync();\n                    });\n                    that.deferredConnectionUpdates = [];\n                }\n            }\n        });\n\n        dataviz.ExportMixin.extend(Diagram.fn, true);\n\n        if (kendo.PDFMixin) {\n            kendo.PDFMixin.extend(Diagram.fn);\n        }\n\n        function filterShapeDataItem(dataItem) {\n            var result = {};\n\n            dataItem = dataItem || {};\n\n            if (defined(dataItem.text) && dataItem.text !== null) {\n                result.text = dataItem.text;\n            }\n\n            if (defined(dataItem.x) && dataItem.x !== null) {\n                result.x = dataItem.x;\n            }\n\n            if (defined(dataItem.y) && dataItem.y !== null) {\n                result.y = dataItem.y;\n            }\n\n            if (defined(dataItem.width) && dataItem.width !== null) {\n                result.width = dataItem.width;\n            }\n\n            if (defined(dataItem.height) && dataItem.height !== null) {\n                result.height = dataItem.height;\n            }\n\n            if (defined(dataItem.type) && dataItem.type !== null) {\n                result.type = dataItem.type;\n            }\n\n            return result;\n        }\n\n        function filterConnectionDataItem(dataItem) {\n            var result = {};\n\n            dataItem = dataItem || {};\n\n            if (defined(dataItem.text) && dataItem.text !== null) {\n                result.content = dataItem.text;\n            }\n\n            if (defined(dataItem.type) && dataItem.type !== null) {\n                result.type = dataItem.type;\n            }\n\n            if (defined(dataItem.from) && dataItem.from !== null) {\n                result.from = dataItem.from;\n            }\n\n            if (defined(dataItem.fromConnector) && dataItem.fromConnector !== null) {\n                result.fromConnector = dataItem.fromConnector;\n            }\n\n            if (defined(dataItem.fromX) && dataItem.fromX !== null) {\n                result.fromX = dataItem.fromX;\n            }\n\n            if (defined(dataItem.fromY) && dataItem.fromY !== null) {\n                result.fromY = dataItem.fromY;\n            }\n\n            if (defined(dataItem.to) && dataItem.to !== null) {\n                result.to = dataItem.to;\n            }\n\n            if (defined(dataItem.toConnector) && dataItem.toConnector !== null) {\n                result.toConnector = dataItem.toConnector;\n            }\n\n            if (defined(dataItem.toX) && dataItem.toX !== null) {\n                result.toX = dataItem.toX;\n            }\n\n            if (defined(dataItem.toY) && dataItem.toY !== null) {\n                result.toY = dataItem.toY;\n            }\n\n            return result;\n        }\n\n\n        var DiagramToolBar = kendo.Observable.extend({\n            init: function(diagram, options) {\n                kendo.Observable.fn.init.call(this);\n                this.diagram = diagram;\n                this.options = deepExtend({}, this.options, options);\n                this._tools = [];\n                this.createToolBar();\n                this.createTools();\n                this.appendTools();\n\n                if (this.options.modal) {\n                    this.createPopup();\n                }\n\n                this.bind(this.events, options);\n            },\n\n            events: [\"click\"],\n\n            createPopup: function() {\n                this.container = $(\"<div/>\").append(this.element);\n                this._popup = this.container.kendoPopup({}).getKendoPopup();\n            },\n\n            appendTools: function() {\n                for (var i = 0; i < this._tools.length; i++) {\n                    var tool = this._tools[i];\n                    if (tool.buttons && tool.buttons.length || !defined(tool.buttons)) {\n                        this._toolBar.add(tool);\n                    }\n                }\n            },\n\n            createToolBar: function() {\n                this.element = $(\"<div/>\");\n                this._toolBar = this.element\n                    .kendoToolBar({\n                        click: proxy(this.click, this),\n                        resizable: false\n                    }).getKendoToolBar();\n\n                this.element.css(\"border\", \"none\");\n            },\n\n            createTools: function() {\n                for (var i = 0; i < this.options.tools.length; i++) {\n                    this.createTool(this.options.tools[i]);\n                }\n            },\n\n            createTool: function(tool) {\n                if (!isPlainObject(tool)) {\n                    tool = {\n                        name: tool\n                    };\n                }\n                var toolName = tool.name + \"Tool\";\n                if (this[toolName]) {\n                    this[toolName](tool);\n                } else {\n                    this._tools.push(deepExtend({}, tool, {\n                        attributes: this._setAttributes({action: tool.name})\n                    }));\n                }\n            },\n\n            showAt: function(point) {\n                var popupZIndex = parseInt(this.options.popupZIndex, 10);\n\n                if (this._popup) {\n                    this._popup.open(point.x, point.y);\n\n                    if (popupZIndex) {\n                        this._popup.wrapper.css(\"zIndex\", popupZIndex);\n                    }\n                }\n            },\n\n            hide: function() {\n                if (this._popup) {\n                    this._popup.close();\n                }\n            },\n\n            newGroup: function() {\n                return {\n                    type: \"buttonGroup\",\n                    buttons: []\n                };\n            },\n\n            editTool: function() {\n                this._tools.push({\n                    icon: \"edit\",\n                    showText: \"overflow\",\n                    type: \"button\",\n                    text: \"Edit\",\n                    attributes: this._setAttributes({ action: \"edit\" })\n                });\n            },\n\n            deleteTool: function() {\n                this._tools.push({\n                    icon: \"close\",\n                    showText: \"overflow\",\n                    type: \"button\",\n                    text: \"Delete\",\n                    attributes: this._setAttributes({ action: \"delete\" })\n                });\n            },\n\n            rotateAnticlockwiseTool: function(options) {\n                this._appendGroup(\"rotate\");\n                this._rotateGroup.buttons.push({\n                    icon: \"rotate-left\",\n                    showText: \"overflow\",\n                    text: \"RotateAnticlockwise\",\n                    group: \"rotate\",\n                    attributes: this._setAttributes({ action: \"rotateAnticlockwise\", step: options.step })\n                });\n            },\n\n            rotateClockwiseTool: function(options) {\n                this._appendGroup(\"rotate\");\n                this._rotateGroup.buttons.push({\n                    icon: \"rotate-right\",\n                    attributes: this._setAttributes({ action: \"rotateClockwise\", step: options.step }),\n                    showText: \"overflow\",\n                    text: \"RotateClockwise\",\n                    group: \"rotate\"\n                });\n            },\n\n            createShapeTool: function() {\n                this._appendGroup(\"create\");\n                this._createGroup.buttons.push({\n                    icon: \"shape\",\n                    showText: \"overflow\",\n                    text: \"CreateShape\",\n                    group: \"create\",\n                    attributes: this._setAttributes({ action: \"createShape\" })\n                });\n            },\n\n            createConnectionTool: function() {\n                this._appendGroup(\"create\");\n                this._createGroup.buttons.push({\n                    icon: \"connector\",\n                    showText: \"overflow\",\n                    text: \"CreateConnection\",\n                    group: \"create\",\n                    attributes: this._setAttributes({ action: \"createConnection\" })\n                });\n            },\n\n            undoTool: function() {\n                this._appendGroup(\"history\");\n                this._historyGroup.buttons.push({\n                    icon: \"undo\",\n                    showText: \"overflow\",\n                    text: \"Undo\",\n                    group: \"history\",\n                    attributes: this._setAttributes({ action: \"undo\" })\n                });\n            },\n\n            redoTool: function() {\n                this._appendGroup(\"history\");\n                this._historyGroup.buttons.push({\n                    icon: \"redo\",\n                    showText: \"overflow\",\n                    text: \"Redo\",\n                    group: \"history\",\n                    attributes: this._setAttributes({ action: \"redo\" })\n                });\n            },\n\n            _appendGroup: function(name) {\n                var prop = \"_\" + name + \"Group\";\n                if (!this[prop]) {\n                    this[prop] = this.newGroup();\n                    this._tools.push(this[prop]);\n                }\n            },\n\n            _setAttributes: function(attributes) {\n                var attr = {};\n\n                if (attributes.action) {\n                    attr[kendo.attr(\"action\")] = attributes.action;\n                }\n\n                if (attributes.step) {\n                    attr[kendo.attr(\"step\")] = attributes.step;\n                }\n\n                return attr;\n            },\n\n            _getAttributes: function(element) {\n                var attr = {};\n\n                var action = element.attr(kendo.attr(\"action\"));\n                if (action) {\n                    attr.action = action;\n                }\n\n                var step = element.attr(kendo.attr(\"step\"));\n                if (step) {\n                    attr.step = step;\n                }\n\n                return attr;\n            },\n\n            click: function(e) {\n                var attributes = this._getAttributes($(e.target));\n                var action = attributes.action;\n\n                if (action && this[action]) {\n                    this[action](attributes);\n                }\n\n                this.trigger(\"click\", this.eventData(action, e.target));\n            },\n\n            eventData: function(action, target) {\n                var elements = this.selectedElements(),\n                    length = elements.length,\n                    shapes = [], connections = [], element;\n\n                for (var idx = 0; idx < length; idx++) {\n                    element = elements[idx];\n                    if (element instanceof Shape) {\n                        shapes.push(element);\n                    } else {\n                        connections.push(element);\n                    }\n                }\n\n                return {\n                    shapes: shapes,\n                    connections: connections,\n                    action: action,\n                    target: target\n                };\n            },\n\n            \"delete\": function() {\n                var diagram = this.diagram;\n                var toRemove = diagram._triggerRemove(this.selectedElements());\n                if (toRemove.length) {\n                    this.diagram.remove(toRemove, true);\n                    this.diagram._syncChanges();\n                }\n            },\n\n            edit: function() {\n                var selectedElemens = this.selectedElements();\n                if (selectedElemens.length === 1) {\n                    this.diagram.edit(selectedElemens[0]);\n                }\n            },\n\n            rotateClockwise: function(options) {\n                var angle = parseFloat(options.step || 90);\n                this._rotate(angle);\n            },\n\n            rotateAnticlockwise: function(options) {\n                var angle = parseFloat(options.step || 90);\n                this._rotate(-angle);\n            },\n\n            _rotate: function(angle) {\n                var adorner = this.diagram._resizingAdorner;\n                adorner.angle(adorner.angle() + angle);\n                adorner.rotate();\n            },\n\n            selectedElements: function() {\n                return this.diagram.select();\n            },\n\n            createShape: function() {\n                this.diagram.createShape();\n            },\n\n            createConnection: function() {\n                this.diagram.createConnection();\n            },\n\n            undo: function() {\n                this.diagram.undo();\n            },\n\n            redo: function() {\n                this.diagram.redo();\n            },\n\n            destroy: function() {\n                this.diagram = null;\n                this.element = null;\n                this.options = null;\n\n                if (this._toolBar) {\n                    this._toolBar.destroy();\n                }\n\n                if (this._popup) {\n                    this._popup.destroy();\n                }\n            }\n        });\n\n        var Editor = kendo.Observable.extend({\n            init: function(element, options) {\n                kendo.Observable.fn.init.call(this);\n\n                this.options = extend(true, {}, this.options, options);\n                this.element = element;\n                this.model = this.options.model;\n                this.fields = this._getFields();\n                this._initContainer();\n                this.createEditable();\n            },\n\n            options: {\n                editors: {}\n            },\n\n            _initContainer: function() {\n                this.wrapper = this.element;\n            },\n\n            createEditable: function() {\n                var options = this.options;\n\n                this.editable = new kendo.ui.Editable(this.wrapper, {\n                    fields: this.fields,\n                    target: options.target,\n                    clearContainer: false,\n                    model: this.model\n                });\n            },\n\n            _isEditable: function(field) {\n                return this.model.editable && this.model.editable(field);\n            },\n\n            _getFields: function() {\n                var fields = [];\n                var modelFields = this.model.fields;\n\n                for (var field in modelFields) {\n                    var result = {};\n                    if (this._isEditable(field)) {\n                        var editor = this.options.editors[field];\n                        if (editor) {\n                            result.editor = editor;\n                        }\n                        result.field = field;\n                        fields.push(result);\n                    }\n                }\n\n                return fields;\n            },\n\n            end: function() {\n                return this.editable.end();\n            },\n\n            destroy: function() {\n                this.editable.destroy();\n                this.editable.element.find(\"[\" + kendo.attr(\"container-for\") + \"]\").empty();\n                this.model = this.wrapper = this.element = this.columns = this.editable = null;\n            }\n        });\n\n        var PopupEditor = Editor.extend({\n            init: function(element, options) {\n                Editor.fn.init.call(this, element, options);\n                this.bind(this.events, this.options);\n\n                this.open();\n            },\n\n            events: [ \"update\", \"cancel\" ],\n\n            options: {\n                window: {\n                    modal: true,\n                    resizable: false,\n                    draggable: true,\n                    title: \"Edit\",\n                    visible: false\n                }\n            },\n\n            _initContainer: function() {\n                var that = this;\n                this.wrapper = $('<div class=\"k-popup-edit-form\"/>')\n                    .attr(kendo.attr(\"uid\"), this.model.uid);\n\n                var formContent = \"\";\n\n                if (this.options.template) {\n                    formContent += this._renderTemplate();\n                    this.fields = [];\n                } else {\n                    formContent += this._renderFields();\n                }\n\n                formContent += this._renderButtons();\n\n                this.wrapper.append(\n                    $('<div class=\"k-edit-form-container\"/>').append(formContent));\n\n                this.window = new kendo.ui.Window(this.wrapper.appendTo(this.element), this.options.window);\n                this.window.bind(\"close\", function(e) {\n                    //The bellow line is required due to: draggable window in IE, change event will be triggered while the window is closing\n                    if (e.userTriggered) {\n                        e.sender.element.trigger(\"focus\");\n                        that._cancelClick(e);\n                    }\n                });\n\n                this._attachButtonEvents();\n            },\n\n            _renderTemplate: function() {\n                var template = this.options.template;\n\n                if (typeof template === \"string\") {\n                    template = kendo.unescape(template);\n                }\n\n                template = kendo.template(template)(this.model);\n\n                return template;\n            },\n\n            _renderFields: function() {\n                var form = \"\";\n                for (var i = 0; i < this.fields.length; i++) {\n                    var field = this.fields[i];\n\n                    form += '<div class=\"k-edit-label\"><label for=\"' + field.field + '\">' + (field.field || \"\") + '</label></div>';\n\n                    if (this._isEditable(field.field)) {\n                        form += '<div ' + kendo.attr(\"container-for\") + '=\"' + field.field +\n                        '\" class=\"k-edit-field\"></div>';\n                    }\n                }\n\n                return form;\n            },\n\n            _renderButtons: function() {\n                var form = '<div class=\"k-edit-buttons\">';\n                form += this._createButton(\"update\");\n                form += this._createButton(\"cancel\");\n                form += '</div>';\n                return form;\n            },\n\n            _createButton: function(name) {\n                return kendo.template(BUTTON_TEMPLATE)(defaultButtons[name]);\n            },\n\n            _attachButtonEvents: function() {\n                this._cancelClickHandler = proxy(this._cancelClick, this);\n                this.window.element.on(CLICK + NS, \"a.k-diagram-cancel\", this._cancelClickHandler);\n\n                this._updateClickHandler = proxy(this._updateClick, this);\n                this.window.element.on(CLICK + NS, \"a.k-diagram-update\", this._updateClickHandler);\n            },\n\n            _updateClick: function(e) {\n                e.preventDefault();\n                this.trigger(\"update\");\n            },\n\n            _cancelClick: function (e) {\n                e.preventDefault();\n                this.trigger(\"cancel\");\n            },\n\n            open: function() {\n                this.window.center().open();\n            },\n\n            close: function() {\n                this.window.bind(\"deactivate\", proxy(this.destroy, this)).close();\n            },\n\n            destroy: function() {\n                this.window.close().destroy();\n                this.window.element.off(CLICK + NS, \"a.k-diagram-cancel\", this._cancelClickHandler);\n                this.window.element.off(CLICK + NS, \"a.k-diagram-update\", this._updateClickHandler);\n                this._cancelClickHandler = null;\n                this._editUpdateClickHandler = null;\n                this.window = null;\n                Editor.fn.destroy.call(this);\n            }\n        });\n\n        function connectionSelector(container, options) {\n            var model = this.dataSource.reader.model;\n            if (model) {\n                var textField = model.fn.fields.text ? \"text\": model.idField;\n                $(\"<input name='\" + options.field + \"' />\")\n                    .appendTo(container).kendoDropDownList({\n                        dataValueField: model.idField,\n                        dataTextField: textField,\n                        dataSource: this.dataSource.data().toJSON(),\n                        optionLabel: \" \",\n                        valuePrimitive: true\n                    });\n            }\n        }\n\n        function InactiveItem(dataItem) {\n            this.dataItem = dataItem;\n            this.callbacks = [];\n        }\n\n        InactiveItem.fn = InactiveItem.prototype = {\n            onActivate: function(callback) {\n                var deffered = $.Deferred();\n                this.callbacks.push({\n                    callback: callback,\n                    deferred: deffered\n                });\n                return deffered;\n            },\n\n            activate: function() {\n                var callbacks = this.callbacks;\n                var item;\n                for (var idx = 0; idx < callbacks.length; idx++) {\n                    item = this.callbacks[idx];\n                    item.callback(this.dataItem);\n                    item.deferred.resolve();\n                }\n                this.callbacks = [];\n            }\n        };\n\n        function InactiveItemsCollection() {\n            this.items = {};\n        }\n\n        InactiveItemsCollection.fn = InactiveItemsCollection.prototype = {\n            add: function(items) {\n                for(var idx = 0; idx < items.length; idx++) {\n                    this.items[items[idx].uid] = new InactiveItem(items[idx]);\n                }\n            },\n\n            forEach: function(callback){\n                for (var uid in this.items) {\n                    callback(this.items[uid]);\n                }\n            },\n\n            getByUid: function(uid) {\n                return this.items[uid];\n            },\n\n            remove: function(item) {\n                delete this.items[item.uid];\n            }\n        };\n\n        var QuadRoot = Class.extend({\n            init: function() {\n                this.shapes = [];\n            },\n\n            _add: function(shape, bounds) {\n                this.shapes.push({\n                    bounds: bounds,\n                    shape: shape\n                });\n                shape._quadNode = this;\n            },\n\n            insert: function(shape, bounds) {\n                this._add(shape, bounds);\n            },\n\n            remove: function(shape) {\n                var shapes = this.shapes;\n                var length = shapes.length;\n\n                for (var idx = 0; idx < length; idx++) {\n                    if (shapes[idx].shape === shape) {\n                        shapes.splice(idx, 1);\n                        break;\n                    }\n                }\n            },\n\n            hitTestRect: function(rect, exclude) {\n                var shapes = this.shapes;\n                var length = shapes.length;\n\n                for (var i = 0; i < length; i++) {\n                    if (this._testRect(shapes[i].shape, rect) && !dataviz.inArray(shapes[i].shape, exclude)) {\n                        return true;\n                    }\n                }\n            },\n\n            _testRect: function(shape, rect) {\n                var angle = shape.rotate().angle;\n                var bounds = shape.bounds();\n                var hit;\n                if (!angle) {\n                    hit = bounds.overlaps(rect);\n                } else {\n                    hit = Intersect.rects(rect, bounds, -angle);\n                }\n                return hit;\n            }\n        });\n\n        var QuadNode = QuadRoot.extend({\n            init: function(rect) {\n                QuadRoot.fn.init.call(this);\n                this.children = [];\n                this.rect = rect;\n            },\n\n            inBounds: function(rect) {\n                var nodeRect = this.rect;\n                var nodeBottomRight = nodeRect.bottomRight();\n                var bottomRight = rect.bottomRight();\n                var inBounds = nodeRect.x <= rect.x && nodeRect.y <= rect.y && bottomRight.x <= nodeBottomRight.x &&\n                    bottomRight.y <= nodeBottomRight.y;\n                return inBounds;\n            },\n\n            overlapsBounds: function(rect) {\n                return this.rect.overlaps(rect);\n            },\n\n            insert: function (shape, bounds) {\n                var inserted = false;\n                var children = this.children;\n                var length = children.length;\n                if (this.inBounds(bounds)) {\n                    if (!length && this.shapes.length < 4) {\n                        this._add(shape, bounds);\n                    } else {\n                        if (!length) {\n                            this._initChildren();\n                        }\n\n                        for (var idx = 0; idx < children.length; idx++) {\n                            if (children[idx].insert(shape, bounds)) {\n                                inserted = true;\n                                break;\n                            }\n                        }\n\n                        if (!inserted) {\n                            this._add(shape, bounds);\n                        }\n                    }\n                    inserted = true;\n                }\n\n                return inserted;\n            },\n\n            _initChildren: function() {\n                var rect = this.rect,\n                    children = this.children,\n                    shapes = this.shapes,\n                    center = rect.center(),\n                    halfWidth = rect.width / 2,\n                    halfHeight = rect.height / 2,\n                    childIdx, shapeIdx;\n\n                children.push(\n                    new QuadNode(new Rect(rect.x, rect.y, halfWidth, halfHeight)),\n                    new QuadNode(new Rect(center.x, rect.y, halfWidth, halfHeight)),\n                    new QuadNode(new Rect(rect.x, center.y, halfWidth, halfHeight)),\n                    new QuadNode(new Rect(center.x, center.y, halfWidth, halfHeight))\n                );\n                for (shapeIdx = shapes.length - 1; shapeIdx >= 0; shapeIdx--) {\n                    for (childIdx = 0; childIdx < children.length; childIdx++) {\n                        if (children[childIdx].insert(shapes[shapeIdx].shape, shapes[shapeIdx].bounds)) {\n                            shapes.splice(shapeIdx, 1);\n                            break;\n                        }\n                    }\n                }\n            },\n\n            hitTestRect: function(rect, exclude) {\n                var idx;\n                var children = this.children;\n                var length = children.length;\n                var hit = false;\n\n                if (this.overlapsBounds(rect)) {\n                    if (QuadRoot.fn.hitTestRect.call(this, rect, exclude)) {\n                        hit = true;\n                    } else {\n                         for (idx = 0; idx < length; idx++) {\n                            if (children[idx].hitTestRect(rect, exclude)) {\n                               hit = true;\n                               break;\n                            }\n                        }\n                    }\n                }\n\n                return hit;\n            }\n        });\n\n        var ShapesQuadTree = Class.extend({\n            ROOT_SIZE: 1000,\n\n            init: function(diagram) {\n                var boundsChangeHandler = proxy(this._boundsChange, this);\n                diagram.bind(ITEMBOUNDSCHANGE, boundsChangeHandler);\n                diagram.bind(ITEMROTATE, boundsChangeHandler);\n                this.initRoots();\n            },\n\n            initRoots: function() {\n                this.rootMap = {};\n                this.root = new QuadRoot();\n            },\n\n            clear: function() {\n                this.initRoots();\n            },\n\n            _boundsChange: function(e) {\n                if (e.item._quadNode) {\n                    e.item._quadNode.remove(e.item);\n                }\n                this.insert(e.item);\n            },\n\n            insert: function(shape) {\n                var bounds = shape.bounds(ROTATED);\n                var rootSize = this.ROOT_SIZE;\n                var sectors = this.getSectors(bounds);\n                var x = sectors[0][0];\n                var y = sectors[1][0];\n\n                if (this.inRoot(sectors)) {\n                    this.root.insert(shape, bounds);\n                } else {\n                    if (!this.rootMap[x]) {\n                        this.rootMap[x] = {};\n                    }\n\n                    if (!this.rootMap[x][y]) {\n                        this.rootMap[x][y] = new QuadNode(\n                            new Rect(x * rootSize, y * rootSize, rootSize, rootSize)\n                        );\n                    }\n\n                    this.rootMap[x][y].insert(shape, bounds);\n                }\n            },\n\n            remove: function(shape) {\n                if (shape._quadNode) {\n                    shape._quadNode.remove(shape);\n                }\n            },\n\n            inRoot: function(sectors) {\n                return sectors[0].length > 1 || sectors[1].length > 1;\n            },\n\n            getSectors: function(rect) {\n                var rootSize = this.ROOT_SIZE;\n                var bottomRight = rect.bottomRight();\n                var bottomX = math.floor(bottomRight.x / rootSize);\n                var bottomY = math.floor(bottomRight.y / rootSize);\n                var sectors = [[],[]];\n                for (var x = math.floor(rect.x / rootSize); x <= bottomX; x++) {\n                    sectors[0].push(x);\n                }\n                for (var y = math.floor(rect.y / rootSize); y <= bottomY; y++) {\n                    sectors[1].push(y);\n                }\n                return sectors;\n            },\n\n            hitTestRect: function(rect, exclude) {\n                var sectors = this.getSectors(rect);\n                var xIdx, yIdx, x, y;\n                var root;\n\n                if (this.root.hitTestRect(rect, exclude)) {\n                    return true;\n                }\n\n                for (xIdx = 0; xIdx < sectors[0].length; xIdx++) {\n                    x = sectors[0][xIdx];\n                    for (yIdx = 0; yIdx < sectors[1].length; yIdx++) {\n                        y = sectors[1][yIdx];\n                        root = (this.rootMap[x] || {})[y];\n                        if (root && root.hitTestRect(rect, exclude)) {\n                            return true;\n                        }\n                    }\n                }\n\n                return false;\n            }\n        });\n\n        function cloneDataItem(dataItem) {\n            var result = dataItem;\n            if (dataItem instanceof kendo.data.Model) {\n                result = dataItem.toJSON();\n                result[dataItem.idField] = dataItem._defaultId;\n            }\n            return result;\n        }\n\n        function splitDiagramElements(elements) {\n            var connections = [];\n            var shapes = [];\n            var element, idx;\n            for (idx = 0; idx < elements.length; idx++) {\n                element = elements[idx];\n                if (element instanceof Shape) {\n                    shapes.push(element);\n                } else {\n                    connections.push(element);\n                }\n            }\n            return {\n                shapes: shapes,\n                connections: connections\n            };\n        }\n\n        function createModel(dataSource, model) {\n            if (dataSource.reader.model) {\n                return new dataSource.reader.model(model);\n            }\n\n            return new kendo.data.ObservableObject(model);\n        }\n\n        function clearField(field, model) {\n            if (defined(model[field])) {\n                model.set(field, null);\n            }\n        }\n\n        function copyDefaultOptions(mainOptions, elementOptions, fields) {\n            var field;\n            for (var idx = 0; idx < fields.length; idx++) {\n                field = fields[idx];\n                if (elementOptions && !defined(elementOptions[field])) {\n                    elementOptions[field] = mainOptions[field];\n                }\n            }\n        }\n\n        function translateToOrigin(visual) {\n            var bbox = visual.drawingContainer().clippedBBox(null);\n            if (bbox.origin.x !== 0 || bbox.origin.y !== 0) {\n                visual.position(-bbox.origin.x, -bbox.origin.y);\n            }\n        }\n\n        function preventDefault(e) {\n            e.preventDefault();\n        }\n\n        dataviz.ui.plugin(Diagram);\n\n        deepExtend(diagram, {\n            Shape: Shape,\n            Connection: Connection,\n            Connector: Connector,\n            DiagramToolBar: DiagramToolBar,\n            QuadNode: QuadNode,\n            QuadRoot: QuadRoot,\n            ShapesQuadTree: ShapesQuadTree,\n            PopupEditor: PopupEditor\n        });\n})(window.kendo.jQuery);\n\n}, typeof define == 'function' && define.amd ? define : function(a1, a2, a3){ (a3 || a2)(); });\n\n(function(f, define){\r\n    define('kendo.dataviz.diagram',[\r\n        \"./kendo.data\", \"./kendo.draganddrop\", \"./kendo.userevents\", \"./kendo.mobile.scroller\",\r\n        \"./kendo.drawing\",\r\n\r\n       \"./dataviz/diagram/utils\",\r\n       \"./dataviz/diagram/math\",\r\n       \"./dataviz/diagram/svg\",\r\n       \"./dataviz/diagram/services\",\r\n       \"./dataviz/diagram/layout\",\r\n       \"./dataviz/diagram/dom\"\r\n    ], f);\r\n})(function(){\r\n\r\n    var __meta__ = { // jshint ignore:line\r\n        id: \"dataviz.diagram\",\r\n        name: \"Diagram\",\r\n        category: \"dataviz\",\r\n        description: \"The Kendo DataViz Diagram \",\r\n        depends: [ \"data\", \"userevents\", \"mobile.scroller\", \"draganddrop\", \"drawing\", \"dataviz.core\", \"dataviz.themes\", \"toolbar\" ],\r\n        features: [{\r\n            id: \"dataviz.diagram-pdf-export\",\r\n            name: \"PDF export\",\r\n            description: \"Export Diagram as PDF\",\r\n            depends: [ \"pdf\" ]\r\n        },{\r\n            id: \"dataviz.diagram-editing\",\r\n            name: \"Editing\",\r\n            description: \"Support for model editing\",\r\n            depends: [ \"editable\", \"window\", \"dropdownlist\" ]\r\n        }]\r\n    };\r\n\r\n    return window.kendo;\r\n\r\n}, typeof define == 'function' && define.amd ? define : function(a1, a2, a3){ (a3 || a2)(); });\r\n\n"],"names":["define","$","window","kendo","jQuery","undefined","diagram","dataviz","deepExtend","isArray","Array","EPSILON","Utils","Range","start","stop","step","sign","Infinity","range","i","j","rangeIntegerScale","x","k","Math","abs","push","findRadian","end","sngXComp","sngYComp","y","atan","PI","isNearZero","num","isDefined","obj","isUndefined","isObject","Object","has","key","hasOwnProperty","call","isString","prototype","toString","isBoolean","isType","type","isNumber","isNaN","parseFloat","isFinite","isEmpty","length","simpleExtend","destination","source","name","initArray","createIdArray","size","value","array","serializePoints","points","res","p","join","deserializePoints","s","v","split","Point","parseInt","randomInteger","lower","upper","floor","random","DFT","el","func","childNodes","item","this","getMatrixAngle","m","d","atan2","b","getMatrixScaling","sX","sqrt","a","c","sY","number","findAngle","center","forEach","arr","iterator","thisRef","any","predicate","remove","what","ax","indexOf","splice","contains","inArray","fold","list","acc","context","initial","arguments","find","result","index","first","constraint","insert","element","position","all","clear","bisort","sortfunc","sort","n","addRange","apply","Easing","easeInOut","pos","cos","Ticker","Class","extend","init","adapters","target","tick","interval","duration","lastTime","handlers","_this","transition","timerDelegate","onTimerEvent","addAdapter","onComplete","handler","removeHandler","grep","h","trigger","caller","onStep","seekTo","to","seekFromTo","from","max","min","Date","getTime","intervalId","setInterval","clearInterval","play","origin","initState","reverse","propagate","update","now","timePassed","movement","ui","amd","a1","a2","a3","Point2D","isFunction","map","HITTESTAREA","PathDefiner","fn","plus","minus","offset","times","normalize","lengthSquared","middleOf","MiddleOf","q","toPolar","useDegrees","factor","halfpi","len","Polar","isOnLine","temp","r1","Rect","inflate","r2","o1","u1","union","height","width","parse","str","tempStr","slice","xy","left","right","point","dx","dy","r","x1","y1","x2","y2","top","bottom","topLeft","topRight","bottomLeft","bottomRight","clone","equals","rect","rotatedBounds","angle","rotatedPoints","tl","tr","br","bl","rotate","delimiter","scale","scaleX","scaleY","staicPoint","adornerCenter","thisCenter","delta","scaled","zoom","overlaps","rectBottomRight","Size","intersectLine","start1","end1","start2","end2","isSegment","tangensdiff","num1","num2","Empty","toRect","empty","fromPoints","Intersect","lines","segments","rectWithLine","rects","rect1","rect2","intersect","reverseAngle","RectAlign","container","align","content","alignment","alignValues","toLowerCase","_singleAlign","_align","_left","_center","_right","stretch","_stretch","_top","middle","_middle","_bottom","alignCalc","Matrix","e","f","applyRect","MatrixVector","fromSVGMatrix","vm","fromMatrixVector","fromList","translation","unit","rotation","sin","scaling","parts","nums","trim","substr","fromMatrix","FromMatrix","normalVariable","mean","deviation","log","randomId","chars","charAt","round","Geometry","_distanceToLineSquared","d2","pt1","pt2","vx","vy","dot","distanceToLine","distanceToPolyline","minimum","Number","MAX_VALUE","p1","p2","HashTable","_buckets","add","_createGetBucket","get","_bucketExists","set","containsKey","hashId","_hash","hashes","_hashes","hash","bucket","ht","_hashString","_objectHashId","ch","charCodeAt","id","_hashId","Dictionary","Observable","dictionary","that","_hashTable","entry","Error","forEachValue","forEachKey","keys","Queue","_tail","_head","enqueue","next","dequeue","current","Set","resource","kv","toArray","Node","shape","links","outgoing","incoming","weight","associatedShape","bounds","data","shortForm","isVirtual","isIsolated","isLinkedTo","node","link","getComplement","getChildren","children","getParents","parents","copy","balance","owner","adjacentTo","removeLink","hasLinkTo","degree","incidentWith","getLinksWith","getNeighbors","neighbors","Link","connection","sourceFound","targetFound","associatedConnection","getCommonNode","isBridging","v1","v2","getNodes","changeSource","changeTarget","changesNodes","w","oldSource","oldTarget","directTo","createReverseEdge","reversed","Graph","idOrDiagram","nodes","_nodeMap","_root","_hasCachedRelationships","cacheRelationships","forceRebuild","assignLevels","startNode","visited","level","child","root","found","getConnectedComponents","componentIndex","setItemIndices","componentId","_collectConnectedNodes","components","graph","addNodeAndOutgoings","setIds","nodeIndex","nextId","calcBounds","getSpanningTree","tree","remaining","_addNode","levelCount","pop","ni","cn","newLink","addLink","treeLevels","takeRandomNode","excludedNodes","incidenceLessThan","pool","isHealthy","hasNode","sourceOrLink","addExistingLink","foundSource","getNode","addNode","foundTarget","removeAllLinks","hasLink","t","linkOrId","nodeOrId","_removeNode","removeNode","areConnected","n1","n2","layoutRect","newNode","newLinks","saveMapping","save","nodeMap","linkMap","nOriginal","nCopy","linkOriginal","linkCopy","linearize","addIds","depthFirstTraversal","action","foundNode","_dftIterator","breadthFirstTraversal","queue","_stronglyConnectedComponents","excludeSingleItems","indices","lowLinks","connected","stack","component","findCycles","isAcyclic","isSubGraph","other","otherArray","thisArray","makeAcyclic","oneLink","oneNode","rev","N","intensityCatalog","flowIntensity","catalogEqualIntensity","intensity","sourceStack","targetStack","targets","li","targetLink","unshift","sources","si","sourceLink","maxdiff","ri","ril","u","concat","vertexOrder","kk","reversedEdges","Predefined","EightGraph","Mindmap","ThreeGraph","BinaryTree","levels","createBalancedTree","Linear","Tree","siblingsCount","Forest","trees","createBalancedForest","Workflow","Grid","g","previous","graphString","previousLink","part","lin","_addShape","kendoDiagram","shapeDefaults","radius","fill","undoable","addShape","_addConnection","options","connect","createDiagramFromGraph","doLayout","randomSize","clientWidth","clientHeight","opt","color","gli","sourceShape","targetShape","l","SpringLayout","layoutGraph","limitToView","shi","counter","lastAdded","news","parent","treeCount","createRandomConnectedGraph","nodeCount","maxIncidence","isTree","poolNode","randomAdditions","randomDiagram","shapeCount","geometry","drawing","defined","util","TRANSPARENT","Markers","none","arrowStart","filledCircle","arrowEnd","FULL_CIRCLE_ANGLE","START","END","WIDTH","HEIGHT","X","Y","diffNumericOptions","fields","elementOptions","hasChanges","field","Scale","toMatrix","format","invert","Translation","toMatrixVector","Length","Rotation","CompositeTransform","ZERO","create","values","translate","transform","render","visual","_transform","_renderTransform","rotateMatrix","scaleMatrix","translatePoint","AutoSizeableMixin","_setScale","originWidth","_originWidth","originHeight","_originHeight","_setTranslate","_initSize","autoSize","_measure","_updateSize","_diffNumericOptions","Element","_originSize","visible","drawingContainer","redraw","drawingElement","matrix","_hover","force","_measured","box","_boundingBox","startPoint","rawBBox","VisualBase","normalizeDrawingOptions","stroke","opacity","_fill","getColor","_stroke","show","hover","strokeOptions","dashType","fillOptions","gradient","GradientClass","RadialGradient","LinearGradient","TextBlock","_textColor","_font","_initText","fontSize","fontFamily","Text","text","font","fontOptions","fontStyle","fontWeight","sizeChanged","textOptions","Rectangle","_initPath","_setPosition","_drawPath","Path","closed","sizeOptions","sizeOptionsOrDefault","elements","createSegment","MarkerBase","anchor","createElement","_transformToPath","path","transformCopy","CircleMarker","Circle","positionMarker","targetSegment","ArrowMarker","_linePoints","lineAngle","endPoint","controlOut","nextSegment","controlIn","prevSegment","MarkerPathMixin","_getPath","MultiPath","paths","_normalizeMarkerOptions","startCap","endCap","_removeMarker","marker","_markers","_createMarkers","_createMarker","markerType","append","_positionMarker","_capMap","_redrawMarker","pathChange","pathOptions","cap","pathCapType","optionsCap","created","_redrawMarkers","Group","_createElements","_setData","multipath","Line","Polyline","_updatePath","_pointsDiffer","currentPoints","differ","Image","_initImage","src","_rect","_childrenChange","_remove","removeAt","toFront","visuals","toBack","_reorderChildren","toIndex","group","drawingChildren","fixedPosition","boundingBox","childBoundingBox","_includeInBBox","clippedBBox","Layout","toDrawingRect","drawingRect","reflow","_initCircle","circleOptions","move","_circle","setRadius","Canvas","surface","Surface","_translate","_viewBox","viewBox","setSize","draw","insertBefore","destroy","clearHtml","drawingOptions","Color","toHex","xDiff","yDiff","deg","Segment","Movable","proxy","Cursors","arrow","grip","cross","select","south","east","west","north","rowresize","colresize","HIT_TEST_DISTANCE","AUTO","TOP","RIGHT","LEFT","BOTTOM","DEFAULT_SNAP_SIZE","DEFAULT_SNAP_ANGLE","DRAG_START","DRAG","DRAG_END","ITEMROTATE","ITEMBOUNDSCHANGE","MIN_SNAP_SIZE","MIN_SNAP_ANGLE","MOUSE_ENTER","MOUSE_LEAVE","ZOOM_START","ZOOM_END","SCROLL_MIN","SCROLL_MAX","FRICTION","FRICTION_MOBILE","VELOCITY_MULTIPLIER","PAN","ROTATED","SOURCE","TARGET","HANDLE_NAMES","-1","1","PositionAdapter","layoutState","froms","tos","subjects","pusher","getShapeById","LayoutUndoUnit","initialState","finalState","animate","_initialState","_finalState","title","undo","setState","redo","state","conn","ticker","CompositeUnit","units","undoUnit","ConnectionEditUnit","redoSource","redoTarget","_redoSource","_redoTarget","_undoSource","_undoTarget","_updateConnector","updateModel","ConnectionEditUndoUnit","undoSource","undoTarget","DeleteConnectionUnit","targetConnector","DeleteShapeUnit","TransformUnit","shapes","undoStates","adorner","redoStates","layout","refreshBounds","refresh","AddConnectionUnit","AddShapeUnit","deselect","PanUndoUnit","initialPosition","finalPosition","finalPos","pan","RotateUnit","undoRotates","redoRotates","redoAngle","_angle","_innerBounds","_initialize","ToFrontUnit","items","initialIndices","_toIndex","ToBackUnit","UndoRedoService","bind","events","capacity","begin","composite","cancel","commit","execute","_restart","addCompositeItem","count","EmptyTool","toolService","tryActivate","getCursor","ScrollerTool","tool","friction","support","mobileOS","canvas","scroller","scrollable","kendoMobileScroller","velocityMultiplier","mousewheelScrolling","scroll","_move","movableCanvas","virtualScroll","dimension","makeVirtual","virtualSize","dimensions","disable","meta","pannable","enabled","ctrlKey","noMeta","hoveredItem","hoveredAdorner","_hoveredConnector","enable","args","scrollPos","scrollLeft","scrollTop","_storePan","moveTo","_pan","PointerTool","selectSingle","handle","_hitTest","_resizingAdorner","isDragHandle","connections","undoRedoService","_getCursor","SelectionTool","selectable","multiple","selector","isSelected","selectArea","ConnectionTool","connector","_createConnection","_c","canDrag","connectionHandle","_connectionManipulation","_removeHover","activeConnection","_cachedTouchTarget","cachedTouchTarget","sourceConnector","Shape","getConnector","_syncConnectionChanges","_connectorsAdorner","ConnectionEditTool","isActive","handleName","testKey","toUpperCase","ToolService","tools","activeTool","_updateHoveredItem","_activateTool","_updateCursor","focus","suspendTracking","updateHovered","resumeTracking","keyDown","metaKey","altKey","selectAll","_destroyToolBar","cut","paste","toRemove","_triggerRemove","_syncChanges","_discardNewConnection","wheel","z","zoomRate","zoomOptions","zoomMin","zoomMax","setTool","addToSelection","newConnection","cursor","css","disabledShape","isNew","hit","_visible","selectedConnections","_selectedItems","Connection","_hitTestItems","_hitTestElements","shapeHit","connectionHit","hitTestShapeConnectors","mainLayer","shapeIdx","connectionIdx","ConnectionRouterBase","LinearConnectionRouter","hitTest","rec","getBounds","allPoints","PolylineRouter","route","CascadingRouter","SAME_SIDE_DISTANCE_RATIO","routePoints","_connectorPoints","_floatingPoints","_resolvedSourceConnector","_resolvedTargetConnector","sourcePoint","targetPoint","_connectorSides","axis","boundsPoint","secondarySign","_connectorSide","shapeBounds","sides","MAX_NUM","sideDistance","minSide","side","idx","_sameSideDistance","sourceConnectorSide","targetConnectorSide","deltaX","deltaY","sameSideDistance","pointX","pointY","cascadeStartHorizontal","_startHorizontal","shiftX","shiftY","sourceSide","horizontal","AdornerBase","_adorners","ConnectionEditAdorner","_ts","sp","tp","spVisual","handles","epVisual","_initialSource","_initialTarget","ts","radiusX","radiusY","sourcePointDistance","distanceTo","targetPointDistance","sourceHandle","targetHandle","modelToLayer","ConnectorsAdorner","_refreshHandler","ctr","connectors","_clearVisual","ConnectorVisual","_keepCachedTouchTarget","visualChildren","childrenCount","unbind","each","hitToOppositeSide","ResizingAdorner","_manipulating","_initSelection","_createHandles","selected","_internalChange","_rotatedHandler","_resizable","editable","resize","_handleOptions","_bounds","handleBounds","handlesCount","_getHandleBounds","_rotationOffset","_startAngle","_rotates","_positions","initialRotates","initialStates","handleOptions","_sp","_cp","_lp","shapeStates","visibleHandles","currentAngle","dragging","dtl","dbr","newBounds","changed","staticPoint","_truncateAngle","_rotating","shouldSnap","thr","_truncateDistance","_displaceBounds","newCenter","minWidth","minHeight","oldBounds","states","_truncatePositionToGuides","ruler","truncatePositionToGuides","_truncateSizeToGuides","truncateSizeToGuides","snap","snapOptions","snapAngle","snapSize","drag","_diffStates","_syncShapeChanges","rotationThumb","thumb","_rotationThumbBounds","Selector","_ep","_adorn","visualBounds","modelToView","relative","_visualBounds","shiftKey","HyperTree","DEG_TO_RAD","LayoutBase","defaultOptions","subtype","roots","nodeDistance","iterations","horizontalSeparation","verticalSeparation","underneathVerticalTopOffset","underneathHorizontalOffset","underneathVerticalSeparation","grid","offsetX","offsetY","componentSpacingX","componentSpacingY","layerSeparation","layeredIterations","startRadialAngle","endRadialAngle","radialSeparation","radialFirstLevelSeparation","keepComponentsInOneRadialLayout","ignoreContainers","layoutContainerChildren","ignoreInvisible","animateTransitions","gridLayoutComponents","maxWidth","startX","startY","resultLinkSet","resultNodeSet","moveToOffset","boundingRect","currentHeight","currentWidth","deltax","deltay","nodeBounds","newpoints","pt","currentHorizontalOffset","transferOptions","DiagramToHyperTreeAdapter","shapeMap","edges","edgeMap","finalNodes","finalLinks","ignoredConnections","ignoredShapes","hyperMap","hyperTree","finalGraph","convert","_renormalizeShapes","_renormalizeConnections","mapConnection","mapShape","getEdge","listToRoot","containerGraph","parentContainer","firstNonIgnorableContainer","isContainer","_isIgnorableItem","isContainerConnection","isDescendantOf","scope","containers","isIgnorableItem","isCollapsed","_isVisible","_isTop","isShapeMapped","leastCommonAncestor","al","xa","xb","_isCollapsed","sink","sourceNode","sinkNode","areConnectedAlready","newEdge","adapter","finalNodeSet","LayoutState","initialTemperature","temperature","guessBounds","_expectedBounds","refineStage","_repulsion","_attraction","_shake","rho","alpha","_InverseSquareForce","pow","wn","hn","wm","hm","_SquareForce","distance","ratio","multiplier","area","av","squareSize","ceil","TreeLayoutProcessor","treeGraph","layoutSwitch","layoutLeft","setChildrenDirection","setChildrenLayout","TreeDirection","measure","Width","arrange","layoutRight","layoutUp","up","layoutDown","down","treeDirection","layoutRadialTree","previousRoot","startAngle","endAngle","maxDepth","calculateAngularWidth","radialLayout","Angle","tipOverTree","startFromLevel","aw","diameter","sectorAngle","sortChildren","basevalue","pl","nl","normalizeAngle","col","deltaTheta","deltaThetaHalf","parentSector","fraction","sorted","childNode","cp","childAngleFraction","setPolarLocation","BoundingRectangle","direction","includeStart","rootDirection","rootLayout","childrenLayout","givenSize","shapeWidth","shapeHeight","AngleToParent","SectorAngle","pp","childrenwidth","selfLocation","single","male","female","leftcount","tipOverTreeStartLevel","TreeLayout","layoutComponents","getTree","givenRootShape","getTreeForRoot","LayeredLayout","_initRuntimeProperties","layer","downstreamLinkCount","upstreamLinkCount","uBaryCenter","dBaryCenter","upstreamPriority","downstreamPriority","gridPosition","_prepare","layerMap","layerCount","targetLayer","shift","sortedNodes","o2","o1layer","o2layer","minLayer","layers","linksTo","_dummify","_optimizeCrossings","_swapPairs","arrangeNodes","_moveThingsAround","_dedummify","setMinDist","minDist","layerIndex","minDistances","getMinDist","dist","i1","i2","placeLeftToRight","leftClasses","leftPos","classNodes","placeLeft","POSITIVE_INFINITY","rightSibling","nodeLeftClass","D","upNodes","downNodes","neighbor","intDiv","placeRightToLeft","rightClasses","rightPos","placeRight","NEGATIVE_INFINITY","leftSibling","nodeRightClass","_getLeftWing","leftWing","computeClasses","_getRightWing","rightWing","wingPair","currentWing","wing","ndsinl","_nodesInLink","vnode","wings","classIndex","_isVerticalLayout","_isHorizontalLayout","_isIncreasingLayout","_gridPositionComparer","dest","currentNode","currDown","downNode","order","placed","sequenceStart","sequenceEnd","directions","virtualStartIndex","_firstVirtualNode","virtualStart","sequence","_sequencer","virtualEnd","nextVirtualNode","virtualEndIndex","adjustDirections","fromLayerIndex","reachedFinalLayerIndex","ctx","layerIncrement","maximumHeight","MIN_VALUE","prevBridge","prevBridgeTarget","nextBridge","nextBridgeTarget","getNeighborOnLayer","clayer","j1","j2","dir","_sequenceSingle","combineSequences","leftHeap","pair","_positionDescendingComparer","rightHeap","_positionAscendingComparer","leftRes","rightRes","leftClass","_getComposite","rightClass","maxLayoutIterations","it","layoutLayer","gridPos","iconsidered","considered","n1Priority","n2Priority","nodeGridPos","nodeBaryCenter","calcBaryCenter","nodePriority","moveRight","moveLeft","calcDownData","calcUpData","priority","rightNode","rightNodePriority","leftNode","leftNodePriority","mapVirtualNode","nodeToLinkMap","linkToNodeMap","addLinkBetweenLayers","upLayer","downLayer","o","oLayer","dLayer","oPos","dPos","depthOfDumminess","dedum","prevLink","moves","maxIterations","iter","optimizeLayerCrossings","sum","total","presorted","n1BaryCenter","n2BaryCenter","compareByIndex","compareValue","inode","downwards","secondPass","hasSwapped","calcCrossings","memCrossings","crossBefore","countLinksCrossingBetweenTwoLayers","node1","node2","node1GridPos","node2GridPos","crossAfter","revert","ulayer","dlayer","link1","link2","n11","n12","n21","n22","l1","l2","crossings","n11gp","n12gp","n21gp","n22gp","numerator","denominator","graphOrNodes","capture","diagramOrGraphOrNodes","GraphAdapter","geom","Widget","outerWidth","_outerWidth","outerHeight","_outerHeight","HierarchicalDataSource","isPlainObject","math","NS","CASCADING","CHANGE","CLICK","ERROR","MAXINT","SELECT","NONE","DEFAULT_CANVAS_WIDTH","DEFAULT_CANVAS_HEIGHT","DEFAULT_SHAPE_TYPE","DEFAULT_SHAPE_WIDTH","DEFAULT_SHAPE_HEIGHT","DEFAULT_SHAPE_MINWIDTH","DEFAULT_SHAPE_MINHEIGHT","DEFAULT_SHAPE_POSITION","DEFAULT_CONNECTION_BACKGROUND","ABSOLUTE","TRANSFORMED","MOUSEWHEEL_NS","MOBILE_ZOOM_RATE","MOBILE_PAN_DISTANCE","BUTTON_TEMPLATE","CONNECTION_CONTENT_OFFSET","defaultButtons","DefaultConnectors","getPosition","imageClass","className","iconClass","mwDelta","origEvent","originalEvent","wheelDelta","detail","isAutoConnector","closestConnector","minimumDistance","resCtr","indicesOfItems","extra","defaults","DiagramElement","dataItem","_template","serializable","serialize","json","_content","contentOptions","contentVisual","_contentVisual","_createContentVisual","_updateContentVisual","template","elementTemplate","paramName","_canSelect","toJSON","Connector","shapeId","updateOptionsFromModel","createShapeVisual","updateBounds","_createConnectors","_setOptionsFromModel","model","modelOptions","filterShapeDataItem","redrawVisual","_isEditable","_redrawVisual","syncChanges","_suspendModelRefresh","_resumeModelRefresh","_rotate","_alignContent","containerRect","aligner","contentBounds","bbox","contentRect","alignedBounds","connectorDefaults","_transformedBounds","_rotatedBounds","_setBounds","_triggerBoundsChange","_layouting","refreshConnections","cloneDataItem","deselected","_internalSelection","_selectionChanged","sc","deltaAngle","newPosition","con","cons","nameOrPoint","toLocaleLowerCase","fnName","_transformPoint","shapeOptions","boundsChange","shapeVisual","_visualOptions","_updateConnectors","_showConnectors","rotatedPoint","visualOptions","visualTemplate","translateToOrigin","_initRouter","_sourcePoint","_targetPoint","_setSource","_setTarget","definers","fromConnector","toConnector","dataMap","_dataMap","filterConnectionDataItem","fromX","fromY","toX","toY","connectionsDataSource","getByUid","uid","clearField","shapeSource","defaultConnector","_removeFromSourceConnector","_clearSourceConnector","_setFromOptions","fromPoint","sourceDefiner","_sourceDefiner","shapeTarget","_removeFromTargetConnector","_clearTargetConnector","_setToOptions","toPoint","targetDefiner","_targetDefiner","instance","connectorName","setNewTarget","inactiveItem","_inactiveShapeItems","_deferredConnectionUpdates","onActivate","endIdx","startIdx","alignToPath","midIdx","selection","_router","definition","pts","_resolveConnectors","_refreshPath","sourceConnectors","targetConnectors","_resolveAutoConnectors","minNonConflict","minNonConflictSource","minNonConflictTarget","minSource","minTarget","sourceIdx","targetIdx","_testRoutePoints","router","passRoute","exclude","_getRouteExclude","_shapesQuadTree","hitTestRect","_isPointInsideShape","boundsX","boundsY","Diagram","userOptions","_initTheme","_initElements","_extendLayoutOptions","_initDefaults","_interactionDefaults","_initCanvas","ShapesQuadTree","adornerLayer","_createHandlers","_clipboard","pauseMouseHandlers","_fetchFreshData","_createGlobalToolBar","_createOptionElements","theme","dataSource","draggable","autoBind","tooltip","connectionDefaults","toolBar","DiagramToolBar","click","_toolBarClick","modal","textAlign","prepend","_resize","createShape","editor","view","createModel","_createShape","edit","createConnection","_connectionsDataMap","addConnection","editModel","editorType","cancelEdit","editors","shapeEditors","shapeTemplate","connectionSelectorHandler","connectionSelector","connectionEditors","connectionTemplate","PopupEditor","_update","_cancel","_editArgs","_getEditDataSource","cancelChanges","_destroyEditor","saveEdit","sync","wrapper","close","attr","addClass","appendTo","userShapeDefaults","copyDefaultOptions","mobile","canvasContainer","viewPort","viewport","on","_wheel","_keydown","_userEvents","UserEvents","multiTouch","fastTap","tap","_tap","_dragStart","_drag","_dragEnd","gesturestart","_gestureStart","gesturechange","_gestureChange","gestureend","_gestureEnd","doubleTap","_doubleTap","supportDoubleTap","_mouseover","_mouseout","_mouseMove","_mouseDown","_mouseUp","_syncHandler","_resizeHandler","onResize","_pauseMouseHandlers","_eventPositions","event","_meta","preventDefault","_createToolBar","focused","ctrlPressed","keyCode","touch","pageX","pageY","documentToModel","initialCenter","eventArgs","_gesture","_initialCenter","previousGesture","documentToView","scaleDelta","_zoom","updateZoom","_getValidZoom","zoomedPoint","_panTransform","_updateAdorners","pointPosition","_kendoNode","srcElement","themeName","themes","themeOptions","SASS_THEMES","autoTheme","shapesLength","_createShapes","_createConnections","_findConnectionTarget","unbindResize","off","destroyScroller","_destroyGlobalToolBar","is","_activeElement","scrollContainer","offsets","documentElement","document","parentNode","scrollHeight","load","setOptions","added","removed","_parseBounds","splitDiagramElements","_removeItem","_removeShapeDataItem","_removeConnectionDataItem","_getDiagramItems","_fixOrdering","bringIntoView","original","newPan","_zoomMainLayer","alignShapes","val","viewportVector","raw","hideTooltip","_getPan","animatedScrollTo","scrollTo","_copyOffset","copied","mapping","_updateCopiedConnection","sourceConnection","di","_containerOffset","containerOffset","viewToDocument","viewToModel","_transformWithMatrix","_matrixInvert","_matrix","_layerMatrix","layerToModel","_layerMatrixInvert","viewPoint","modelToDocument","setDataSource","_dataSource","fetch","setConnectionsDataSource","_connectionDataSource","_redrawConnections","getShapeByModelId","getShapeByModelUid","getConnectionByModelId","getConnectionByModelUid","_transformMainLayer","_finishPan","NaN","_storeViewMatrix","_storeLayerMatrix","canvasTransform","shapePos","conPos","removedConnections","_removeShape","_removeConnection","_removeDataItems","recursive","_removeShapeConnections","hasChildren","loaded","_addDataItem","_addDataItemByUid","_addDataItems","parentShape","_refreshSource","dataBound","_bindingRoots","_addItem","preventClosing","singleToolBar","padding","popupZIndex","closest","popupWidth","_popup","popupHeight","connectionBounds","showAt","one","_normalizePointZoom","InactiveItemsCollection","undone","redone","_loadingShapes","_loadingConnections","dsOptions","ds","_shapesRefreshHandler","_shapesRequestStartHandler","_shapesErrorHandler","_refreshShapes","_shapesRequestStart","_error","DataSource","_treeDataSource","_connectionsRefreshHandler","_connectionsRequestStartHandler","_connectionsErrorHandler","_refreshConnections","_connectionsRequestStart","_connectionsError","_shouldRefresh","_removeShapes","_updateShapes","_syncShapes","_suspended","_rebindShapesAndConnections","_addShapes","_addConnections","inactiveItems","activate","dataItems","_removeConnections","_updateConnections","_addConnectionDataItem","_validateConnector","_unbindDataSource","_errorHandler","adorners","_refresh","hide","exportDOMVisual","scrollOffset","viewRect","clipPath","fromRect","wrap","clipWrap","clip","exportVisual","when","then","deferredConnectionUpdates","ExportMixin","PDFMixin","_tools","createToolBar","createTools","appendTools","createPopup","kendoPopup","getKendoPopup","buttons","_toolBar","kendoToolBar","resizable","getKendoToolBar","createTool","toolName","attributes","_setAttributes","open","newGroup","editTool","icon","showText","deleteTool","rotateAnticlockwiseTool","_appendGroup","_rotateGroup","rotateClockwiseTool","createShapeTool","_createGroup","createConnectionTool","undoTool","_historyGroup","redoTool","prop","_getAttributes","eventData","selectedElements","delete","selectedElemens","rotateClockwise","rotateAnticlockwise","Editor","_getFields","_initContainer","createEditable","Editable","clearContainer","modelFields","columns","formContent","_renderTemplate","_renderFields","_renderButtons","Window","userTriggered","sender","_cancelClick","_attachButtonEvents","unescape","form","_createButton","_cancelClickHandler","_updateClickHandler","_updateClick","_editUpdateClickHandler","reader","textField","idField","kendoDropDownList","dataValueField","dataTextField","optionLabel","valuePrimitive","InactiveItem","callbacks","callback","deffered","Deferred","deferred","resolve","QuadRoot","_add","_quadNode","_testRect","QuadNode","inBounds","nodeRect","nodeBottomRight","overlapsBounds","inserted","_initChildren","halfWidth","halfHeight","childIdx","ROOT_SIZE","boundsChangeHandler","_boundsChange","initRoots","rootMap","rootSize","sectors","getSectors","inRoot","bottomX","bottomY","xIdx","yIdx","Model","_defaultId","ObservableObject","mainOptions","plugin","__meta__","category","description","depends","features"],"mappings":"CAwBA,SAAaA,QACTA,OAAO,wBAAwB,CAAE,oBAClC,WAEH,IAAWC,EAyfRC,OAAOC,MAAMC,OAzfFC,OAAd,EACQF,EAAQD,OAAOC,MACfG,EAAUH,EAAMI,QAAQD,QAAU,GAClCE,EACAC,EAAUC,MAAMD,QAChBE,EAAU,KAGVC,EAAQ,GAyJZ,SAASC,EAAMC,EAAOC,EAAMC,GACxB,UAAWF,GAAS,oBAAsBC,GAAQ,YAC9C,MAAO,GAEX,GAAIC,GAAQJ,EAAMK,KAAKF,EAAOD,IAAUF,EAAMK,KAAKD,GAC/C,KAAM,kEAEVA,EAAOA,GAAQ,EACfF,EAAQA,GAAS,EACjBC,EAAOA,GAAQD,EACf,IAAKC,EAAOD,GAASE,IAASE,SAC1B,KAAM,0BAEV,IAAIC,EAAQ,GAAIC,GAAK,EAAGC,EAExB,SAASC,EAAkBC,GACvB,IAAIC,EAAI,EACR,MAAOD,EAAIC,EAAI,EACXA,GAAK,GAET,OAAOA,EAGX,IAAIA,EAAIF,EAAkBG,KAAKC,IAAIV,IACnCF,GAASU,EACTT,GAAQS,EACRR,GAAQQ,EACR,GAAIV,EAAQC,GAAQC,EAAO,EACvBA,GAAQA,EAEZ,GAAIA,EAAO,EACP,OAAQK,EAAIP,EAAQE,IAASI,IAAML,EAC/BI,EAAMQ,KAAKN,EAAIG,QAInB,OAAQH,EAAIP,EAAQE,IAASI,IAAML,EAC/BI,EAAMQ,KAAKN,EAAIG,GAGvB,OAAOL,EAKX,SAASS,EAAWd,EAAOe,GACvB,GAAIf,GAASe,EACT,OAAO,EAEX,IAAIC,EAAWD,EAAIN,EAAIT,EAAMS,EACzBQ,EAAWjB,EAAMkB,EAAIH,EAAIG,EACzBC,EAAOR,KAAKQ,KAAKH,EAAWC,GAChC,GAAIA,GAAY,EACZ,OAAOD,EAAW,EAAIG,EAAQ,EAAIR,KAAKS,GAAMD,EAEjD,OAAOA,EAAOR,KAAKS,IA7MvB1B,EARiBL,EAAMK,YAQZI,EAAO,CACduB,WAAY,SAAUC,GAClB,OAAOX,KAAKC,IAAIU,GAAOzB,GAE3B0B,UAAW,SAAUC,GACjB,cAAcA,IAAQ,aAG1BC,YAAa,SAAUD,GACnB,cAAeA,IAAQ,aAAgBA,IAAQ,MAKnDE,SAAU,SAAUF,GAChB,OAAOA,IAAQG,OAAOH,IAK1BI,IAAK,SAAUJ,EAAKK,GAChB,OAAOF,OAAOG,eAAeC,KAAKP,EAAKK,IAK3CG,SAAU,SAAUR,GAChB,OAAOG,OAAOM,UAAUC,SAASH,KAAKP,IAAQ,mBAElDW,UAAW,SAAUX,GACjB,OAAOG,OAAOM,UAAUC,SAASH,KAAKP,IAAQ,oBAElDY,OAAQ,SAAUZ,EAAKa,GACnB,OAAOV,OAAOM,UAAUC,SAASH,KAAKP,IAAQ,WAAaa,EAAO,KAKtEC,SAAU,SAAUd,GAChB,OAAQe,MAAMC,WAAWhB,KAASiB,SAASjB,IAK/CkB,QAAS,SAAUlB,GACf,GAAIA,IAAQ,KACR,OAAO,KAEX,GAAI7B,EAAQ6B,IAAQ1B,EAAMkC,SAASR,GAC/B,OAAOA,EAAImB,SAAW,EAE1B,IAAK,IAAId,KAAOL,EACZ,GAAI1B,EAAM8B,IAAIJ,EAAKK,GACf,OAAO,MAGf,OAAO,MAEXe,aAAc,SAASC,EAAaC,GAChC,IAAIhD,EAAM4B,SAASoB,GACf,OAGJ,IAAI,IAAIC,KAAQD,EACZD,EAAYE,GAAQD,EAAOC,IASnCC,UAAW,SAASC,EAAcC,EAAMC,GACpC,IAAIC,EAAQ,GACZ,IAAK,IAAI9C,EAAI,EAAGA,EAAI4C,IAAQ5C,EACxB8C,EAAM9C,GAAK6C,EAEf,OAAOC,GAEXC,gBAAiB,SAAUC,GACvB,IAAIC,EAAM,GACV,IAAK,IAAIjD,EAAI,EAAGA,EAAIgD,EAAOX,OAAQrC,IAAK,CACpC,IAAIkD,EAAIF,EAAOhD,GACfiD,EAAI1C,KAAK2C,EAAE/C,EAAI,IAAM+C,EAAEtC,GAE3B,OAAOqC,EAAIE,KAAK,MAEpBC,kBAAmB,SAAUC,GACzB,IAAIC,EAAID,EAAEE,MAAM,KAAMP,EAAS,GAC/B,GAAIM,EAAEjB,OAAS,IAAM,EACjB,KAAM,0BAEV,IAAK,IAAIrC,EAAI,EAAGA,EAAIsD,EAAEjB,OAAQrC,GAAK,EAC/BgD,EAAOzC,KAAK,IAAIrB,EAAQsE,MACpBC,SAASH,EAAEtD,GAAI,IACfyD,SAASH,EAAEtD,EAAI,GAAI,MAG3B,OAAOgD,GAQXU,cAAe,SAAUC,EAAOC,GAC5B,OAAOH,SAASpD,KAAKwD,MAAMxD,KAAKyD,SAAWF,GAASD,EAAO,KAK/DI,IAAK,SAAUC,EAAIC,GACfA,EAAKD,GACL,GAAIA,EAAGE,WACH,IAAK,IAAIlE,EAAI,EAAGA,EAAIgE,EAAGE,WAAW7B,OAAQrC,IAAK,CAC3C,IAAImE,EAAOH,EAAGE,WAAWlE,GACzBoE,KAAKL,IAAII,EAAMF,KAO3BI,eAAgB,SAAUC,GACtB,GAAIA,IAAM,MAAQA,EAAEC,IAAM,EACtB,OAAO,EAEX,OAAOlE,KAAKmE,MAAMF,EAAEG,EAAGH,EAAEC,GAAK,IAAMlE,KAAKS,IAM7C4D,iBAAkB,SAAUJ,GACxB,IAAIK,EAAKtE,KAAKuE,KAAKN,EAAEO,EAAIP,EAAEO,EAAIP,EAAEQ,EAAIR,EAAEQ,GACvC,IAAIC,EAAK1E,KAAKuE,KAAKN,EAAEG,EAAIH,EAAEG,EAAIH,EAAEC,EAAID,EAAEC,GACvC,MAAO,CAACI,EAAII,MAsEpBvF,EAAMK,KAAO,SAASmF,GAClB,OAAOA,EAASA,EAAS,GAAK,EAAI,EAAI,GAG1CxF,EAAMyF,UAAY,SAASC,EAAQzE,GAC/B,OAAOD,EAAW0E,EAAQzE,GAAO,IAAMJ,KAAKS,IAKhDtB,EAAM2F,QAAU,SAASC,EAAKC,EAAUC,GACpC,IAAK,IAAItF,EAAI,EAAGA,EAAIoF,EAAI/C,OAAQrC,IAC5BqF,EAAS5D,KAAK6D,EAASF,EAAIpF,GAAIA,EAAGoF,IAI1C5F,EAAM+F,IAAM,SAASH,EAAKI,GACtB,IAAK,IAAIxF,EAAI,EAAGA,EAAIoF,EAAI/C,SAAUrC,EAC9B,GAAIwF,EAAUJ,EAAIpF,IACd,OAAOoF,EAAIpF,GAGnB,OAAO,MAGXR,EAAMiG,OAAS,SAAUL,EAAKM,GAC1B,IAAIC,EACJ,OAAQA,EAAKnG,EAAMoG,QAAQR,EAAKM,OAAY,EACxCN,EAAIS,OAAOF,EAAI,GAEnB,OAAOP,GAGX5F,EAAMsG,SAAW,SAAUV,EAAKlE,GAC5B,OAAO1B,EAAMoG,QAAQR,EAAKlE,MAAU,GAGxC1B,EAAMoG,QAAU,SAASR,EAAKM,GAC1B,OAAO7G,EAAEkH,QAAQL,EAAMN,IAG3B5F,EAAMwG,KAAO,SAAUC,EAAMZ,EAAUa,EAAKC,GACxC,IAAIC,EAAUC,UAAUhE,OAAS,EAEjC,IAAK,IAAIrC,EAAI,EAAGA,EAAIiG,EAAK5D,OAAQrC,IAAK,CAClC,IAAI6C,EAAQoD,EAAKjG,GACjB,IAAKoG,EAAS,CACVF,EAAMrD,EACNuD,EAAU,UAGVF,EAAMb,EAAS5D,KAAK0E,EAASD,EAAKrD,EAAO7C,EAAGiG,GAIpD,IAAKG,EACD,KAAM,8CAGV,OAAOF,GAGX1G,EAAM8G,KAAO,SAAUlB,EAAKC,EAAUc,GAClC,IAAII,EACJ/G,EAAM+F,IAAIH,EAAK,SAAUvC,EAAO2D,EAAOP,GACnC,GAAIZ,EAAS5D,KAAK0E,EAAStD,EAAO2D,EAAOP,GAAO,CAC5CM,EAAS1D,EACT,OAAO,KAEX,OAAO,QAEX,OAAO0D,GAGX/G,EAAMiH,MAAQ,SAAUrB,EAAKsB,EAAYP,GACrC,GAAIf,EAAI/C,SAAW,EACf,OAAO,KAEX,GAAI7C,EAAM2B,YAAYuF,GAClB,OAAOtB,EAAI,GAGf,OAAO5F,EAAM8G,KAAKlB,EAAKsB,EAAYP,IAMvC3G,EAAMmH,OAAS,SAAUvB,EAAKwB,EAASC,GACnCzB,EAAIS,OAAOgB,EAAU,EAAGD,GACxB,OAAOxB,GAGX5F,EAAMsH,IAAM,SAAU1B,EAAKC,EAAUc,GACjC,IAAII,EAAS,KACb,IAAI1D,EAEJ,IAAK,IAAI7C,EAAI,EAAGA,EAAIoF,EAAI/C,OAAQrC,IAAK,CACjC6C,EAAQuC,EAAIpF,GACZuG,EAASA,GAAUlB,EAAS5D,KAAK0E,EAAStD,EAAO7C,EAAGoF,GAEpD,IAAKmB,EACD,MAIR,OAAOA,GAGX/G,EAAMuH,MAAQ,SAAU3B,GACpBA,EAAIS,OAAO,EAAGT,EAAI/C,SAStB7C,EAAMwH,OAAS,SAAUnC,EAAGJ,EAAGwC,GAC3B,GAAIzH,EAAM2B,YAAY0D,GAClB,KAAM,gCAEV,GAAIrF,EAAM2B,YAAYsD,GAClB,KAAM,iCAEV,GAAII,EAAExC,QAAUoC,EAAEpC,OACd,KAAM,0CAGV,IAAIyE,EAAM,GAAI9G,EAEd,IAAKA,EAAI,EAAGA,EAAI6E,EAAExC,OAAQrC,IACtB8G,EAAIvG,KAAK,CAAEJ,EAAK0E,EAAE7E,GAAIY,EAAK6D,EAAEzE,KAEjC,GAAIR,EAAM2B,YAAY8F,GAClBH,EAAII,KAAK,SAAU5C,EAAG6C,GAClB,OAAO7C,EAAEnE,EAAIgH,EAAEhH,SAInB2G,EAAII,KAAK,SAAU5C,EAAG6C,GAClB,OAAOF,EAAS3C,EAAEnE,EAAGgH,EAAEhH,KAI/BX,EAAMuH,MAAMlC,GACZrF,EAAMuH,MAAMtC,GAEZ,IAAKzE,EAAI,EAAGA,EAAI8G,EAAIzE,OAAQrC,IAAK,CAC7B6E,EAAEtE,KAAKuG,EAAI9G,GAAGG,GACdsE,EAAElE,KAAKuG,EAAI9G,GAAGY,KAItBpB,EAAM4H,SAAW,SAAUhC,EAAKrF,GAC5BqF,EAAI7E,KAAK8G,MAAMjC,EAAKrF,IAGxB,IAAIuH,EAAS,CACTC,UAAW,SAAUC,GACjB,OAAUnH,KAAKoH,IAAID,EAAMnH,KAAKS,IAAM,EAAK,KAS7C4G,EAAS3I,EAAM4I,MAAMC,OAAO,CAC5BC,KAAM,WACFzD,KAAK0D,SAAW,GAChB1D,KAAK2D,OAAS,EACd3D,KAAK4D,KAAO,EACZ5D,KAAK6D,SAAW,GAChB7D,KAAK8D,SAAW,IAChB9D,KAAK+D,SAAW,KAChB/D,KAAKgE,SAAW,GAChB,IAAIC,EAAQjE,KACZA,KAAKkE,WAAahB,EAAOC,UACzBnD,KAAKmE,cAAgB,WACjBF,EAAMG,iBAGdC,WAAY,SAAU5D,GAClBT,KAAK0D,SAASvH,KAAKsE,IAEvB6D,WAAY,SAAUC,GAClBvE,KAAKgE,SAAS7H,KAAKoI,IAEvBC,cAAe,SAAUD,GACrBvE,KAAKgE,SAAWvJ,EAAEgK,KAAKzE,KAAKgE,SAAU,SAAUU,GAC5C,OAAOA,IAAMH,KAGrBI,QAAS,WACL,IAAIV,EAAQjE,KACZ,GAAIA,KAAKgE,SACL5I,EAAM2F,QAAQf,KAAKgE,SAAU,SAAUU,GACnC,OAAOA,EAAErH,KAAK4G,EAAMW,SAAW,KAAOX,EAAMW,OAASX,MAIjEY,OAAQ,aAERC,OAAQ,SAAUC,GACd/E,KAAKgF,WAAWhF,KAAK4D,KAAMmB,IAE/BC,WAAY,SAAUC,EAAMF,GACxB/E,KAAK2D,OAAS1H,KAAKiJ,IAAI,EAAGjJ,KAAKkJ,IAAI,EAAGJ,IACtC/E,KAAK4D,KAAO3H,KAAKiJ,IAAI,EAAGjJ,KAAKkJ,IAAI,EAAGF,IACpCjF,KAAK+D,UAAW,IAAIqB,MAAOC,UAC3B,IAAKrF,KAAKsF,WACNtF,KAAKsF,WAAa5K,OAAO6K,YAAYvF,KAAKmE,cAAenE,KAAK6D,WAGtEtI,KAAM,WACF,GAAIyE,KAAKsF,WAAY,CACjB5K,OAAO8K,cAAcxF,KAAKsF,YAC1BtF,KAAKsF,WAAa,KAGlBtF,KAAK2E,YAIbc,KAAM,SAAUC,GACZ,GAAI1F,KAAK0D,SAASzF,SAAW,EACzB,OAEJ,GAAIyH,IAAW,KACX1F,KAAK4E,OAASc,EAElB1F,KAAK2F,YACL3F,KAAKgF,WAAW,EAAG,IAEvBY,QAAS,WACL5F,KAAKgF,WAAW,EAAG,IAEvBW,UAAW,WACP,GAAI3F,KAAK0D,SAASzF,SAAW,EACzB,OAEJ,IAAK,IAAIrC,EAAI,EAAGA,EAAIoE,KAAK0D,SAASzF,OAAQrC,IACtCoE,KAAK0D,SAAS9H,GAAG+J,aAGzBE,UAAW,WACP,IAAIpH,EAAQuB,KAAKkE,WAAWlE,KAAK4D,MAEjC,IAAK,IAAIhI,EAAI,EAAGA,EAAIoE,KAAK0D,SAASzF,OAAQrC,IACtCoE,KAAK0D,SAAS9H,GAAGkK,OAAOrH,IAGhC2F,aAAc,WACV,IAAI2B,GAAM,IAAIX,MAAOC,UACrB,IAAIW,EAAaD,EAAM/F,KAAK+D,SAC5B/D,KAAK+D,SAAWgC,EAChB,IAAIE,EAAYD,EAAahG,KAAK8D,UAAa9D,KAAK4D,KAAO5D,KAAK2D,OAAS,GAAK,GAC9E,GAAI1H,KAAKC,IAAI+J,IAAahK,KAAKC,IAAI8D,KAAK4D,KAAO5D,KAAK2D,QAChD3D,KAAK4D,KAAO5D,KAAK2D,YAEjB3D,KAAK4D,MAAQqC,EAGjB,IACIjG,KAAK6F,YACP,QACE7F,KAAK6E,OAAOxH,KAAK2C,MACjB,GAAIA,KAAK2D,QAAU3D,KAAK4D,KACpB5D,KAAKzE,WAMrBZ,EAAMK,WAAWF,EAAS,CACtB2I,KAAM,SAAUjB,GACZ7H,EAAM8I,KAAKjB,EAAS1H,EAAQoL,KAGhC9K,MAAOA,EACPC,MAAOA,EACPiI,OAAQA,MA3fhB,CA+foB,mBAAV9I,QAAwBA,OAAO2L,IAAM3L,OAAS,SAAS4L,EAAIC,EAAIC,IAAMA,GAAMD,OAErF,SAAa7L,QACTA,OAAO,uBAAuB,CAAE,UAAW,4BAC5C,WAEH,IAAWC,EAohGRC,OAAOC,MAAMC,OAphGFC,OAAd,EAEQF,EAAQD,OAAOC,MACfG,EAAUH,EAAMI,QAAQD,QACxByI,EAAQ5I,EAAM4I,MACdvI,EAAaL,EAAMK,WACnBD,EACAK,EAAQN,EAAQM,MAChBgE,EAFUzE,EAAMI,QAEAwL,QAChBC,EAAa7L,EAAM6L,WACnB9E,EAAWtG,EAAMsG,SACjB+E,EAAMhM,EAAEgM,IAGRC,EAAc,EACdvL,EAAU,KAwHVwL,GAtHJ3L,EAAWoE,EAAMwH,GAAI,CACjBC,KAAM,SAAU/H,GACZ,OAAO,IAAIM,EAAMY,KAAKjE,EAAI+C,EAAE/C,EAAGiE,KAAKxD,EAAIsC,EAAEtC,IAE9CsK,MAAO,SAAUhI,GACb,OAAO,IAAIM,EAAMY,KAAKjE,EAAI+C,EAAE/C,EAAGiE,KAAKxD,EAAIsC,EAAEtC,IAE9CuK,OAAQ,SAAUtI,GACd,OAAO,IAAIW,EAAMY,KAAKjE,EAAI0C,EAAOuB,KAAKxD,EAAIiC,IAE9CuI,MAAO,SAAU/H,GACb,OAAO,IAAIG,EAAMY,KAAKjE,EAAIkD,EAAGe,KAAKxD,EAAIyC,IAE1CgI,UAAW,WACP,GAAIjH,KAAK/B,WAAa,EAClB,OAAO,IAAImB,EAEf,OAAOY,KAAKgH,MAAM,EAAIhH,KAAK/B,WAE/BA,OAAQ,WACJ,OAAOhC,KAAKuE,KAAKR,KAAKjE,EAAIiE,KAAKjE,EAAIiE,KAAKxD,EAAIwD,KAAKxD,IAErDgB,SAAU,WACN,MAAO,IAAMwC,KAAKjE,EAAI,IAAMiE,KAAKxD,EAAI,KAEzC0K,cAAe,WACX,OAAQlH,KAAKjE,EAAIiE,KAAKjE,EAAIiE,KAAKxD,EAAIwD,KAAKxD,GAE5C2K,SAAU,SAASC,EAAStI,EAAGuI,GAC3B,OAAO,IAAIjI,EAAMiI,EAAEtL,EAAI+C,EAAE/C,EAAGsL,EAAE7K,EAAIsC,EAAEtC,GAAGwK,MAAM,IAAKH,KAAK/H,IAE3DwI,QAAS,SAAUC,GACf,IAAIC,EAAS,EACb,GAAID,EACAC,EAAS,IAAMvL,KAAKS,GAExB,IAAI+D,EAAIxE,KAAKmE,MAAMnE,KAAKC,IAAI8D,KAAKxD,GAAIP,KAAKC,IAAI8D,KAAKjE,IACnD,IAAI0L,EAASxL,KAAKS,GAAK,EACvB,IAAIgL,EAAM1H,KAAK/B,SACf,GAAI+B,KAAKjE,IAAM,EAAG,CAGd,GAAIiE,KAAKxD,IAAM,EACX,OAAO,IAAImL,EAAM,EAAG,GAExB,GAAI3H,KAAKxD,EAAI,EACT,OAAO,IAAImL,EAAMD,EAAKF,EAASC,GAEnC,GAAIzH,KAAKxD,EAAI,EACT,OAAO,IAAImL,EAAMD,EAAKF,EAAS,EAAIC,QAGtC,GAAIzH,KAAKjE,EAAI,EAAG,CACjB,GAAIiE,KAAKxD,IAAM,EACX,OAAO,IAAImL,EAAMD,EAAK,GAE1B,GAAI1H,KAAKxD,EAAI,EACT,OAAO,IAAImL,EAAMD,EAAKF,EAAS/G,GAEnC,GAAIT,KAAKxD,EAAI,EACT,OAAO,IAAImL,EAAMD,EAAKF,GAAU,EAAIC,EAAShH,QAGhD,CACD,GAAIT,KAAKxD,IAAM,EACX,OAAO,IAAImL,EAAMD,EAAK,EAAID,GAE9B,GAAIzH,KAAKxD,EAAI,EACT,OAAO,IAAImL,EAAMD,EAAKF,GAAU,EAAIC,EAAShH,IAEjD,GAAIT,KAAKxD,EAAI,EACT,OAAO,IAAImL,EAAMD,EAAKF,GAAU,EAAIC,EAAShH,MAIzDmH,SAAU,SAAU3C,EAAMF,GACtB,GAAIE,EAAKlJ,EAAIgJ,EAAGhJ,EAAG,CACf,IAAI8L,EAAO9C,EACXA,EAAKE,EACLA,EAAO4C,EAEX,IAAIC,EAAK,IAAIC,EAAK9C,EAAKlJ,EAAGkJ,EAAKzI,GAAGwL,QAAQtB,EAAaA,GACnDuB,EAAK,IAAIF,EAAKhD,EAAGhJ,EAAGgJ,EAAGvI,GAAGwL,QAAQtB,EAAaA,GAAcwB,EAAIC,EACrE,GAAIL,EAAGM,MAAMH,GAAIvG,SAAS1B,MAAO,CAC7B,GAAIiF,EAAKlJ,IAAMgJ,EAAGhJ,GAAKkJ,EAAKzI,IAAMuI,EAAGvI,EACjC,OAAO,UAEN,GAAIyI,EAAKzI,EAAIuI,EAAGvI,EAAG,CACpB0L,EAAKJ,EAAG/L,GAAOkM,EAAGlM,EAAI+L,EAAG/L,IAAMiE,KAAKxD,GAAKsL,EAAGtL,EAAIsL,EAAGO,UAAcJ,EAAGzL,EAAIyL,EAAGI,QAAWP,EAAGtL,EAAIsL,EAAGO,SAChGF,EAAML,EAAG/L,EAAI+L,EAAGQ,OAAaL,EAAGlM,EAAIkM,EAAGK,OAAUR,EAAG/L,EAAI+L,EAAGQ,SAAWtI,KAAKxD,EAAIsL,EAAGtL,IAAOyL,EAAGzL,EAAIsL,EAAGtL,OAElG,CACD0L,EAAKJ,EAAG/L,GAAOkM,EAAGlM,EAAI+L,EAAG/L,IAAMiE,KAAKxD,EAAIsL,EAAGtL,IAAOyL,EAAGzL,EAAIsL,EAAGtL,GAC5D2L,EAAML,EAAG/L,EAAI+L,EAAGQ,OAAaL,EAAGlM,EAAIkM,EAAGK,OAAUR,EAAG/L,EAAI+L,EAAGQ,SAAWtI,KAAKxD,GAAKsL,EAAGtL,EAAIsL,EAAGO,UAAcJ,EAAGzL,EAAIyL,EAAGI,QAAWP,EAAGtL,EAAIsL,EAAGO,SAE3I,OAAQrI,KAAKjE,EAAImM,GAAMlI,KAAKjE,EAAIoM,EAEpC,OAAO,SAIfnN,EAAWoE,EAAO,CACdmJ,MAAO,SAAUC,GACb,IAAIC,EAAUD,EAAIE,MAAM,EAAGF,EAAIvK,OAAS,GACpC0K,EAAKF,EAAQtJ,MAAM,KACnBpD,EAAIsD,SAASsJ,EAAG,GAAI,IACpBnM,EAAI6C,SAASsJ,EAAG,GAAI,IACxB,IAAK9K,MAAM9B,KAAO8B,MAAMrB,GACpB,OAAO,IAAI4C,EAAMrD,EAAGS,MAUd+G,EAAMC,OACpB,CACIC,KAAM,SAAU3E,EAAG8J,EAAMC,GACrB7I,KAAK8I,MAAQhK,EACbkB,KAAK4I,KAAOA,EACZ5I,KAAK6I,MAAQA,MAQrBd,EAAOxE,EAAMC,OAAO,CACpBC,KAAM,SAAU1H,EAAGS,EAAG8L,EAAOD,GACzBrI,KAAKjE,EAAIA,GAAK,EACdiE,KAAKxD,EAAIA,GAAK,EACdwD,KAAKsI,MAAQA,GAAS,EACtBtI,KAAKqI,OAASA,GAAU,GAE5B3G,SAAU,SAAUoH,GAChB,OAASA,EAAM/M,GAAKiE,KAAKjE,GAAO+M,EAAM/M,GAAMiE,KAAKjE,EAAIiE,KAAKsI,OAAYQ,EAAMtM,GAAKwD,KAAKxD,GAAOsM,EAAMtM,GAAMwD,KAAKxD,EAAIwD,KAAKqI,QAE3HL,QAAS,SAAUe,EAAIC,GACnB,GAAIA,IAAOnO,EACPmO,EAAKD,EAGT/I,KAAKjE,GAAKgN,EACV/I,KAAKxD,GAAKwM,EACVhJ,KAAKsI,OAAS,EAAIS,EAAK,EACvB/I,KAAKqI,QAAU,EAAIW,EAAK,EACxB,OAAOhJ,MAEX+G,OAAQ,SAAUgC,EAAIC,GAClB,IAAIjN,EAAIgN,EAAIvM,EAAIwM,EAChB,GAAID,aAAc3J,EAAO,CACrBrD,EAAIgN,EAAGhN,EACPS,EAAIuM,EAAGvM,EAEXwD,KAAKjE,GAAKA,EACViE,KAAKxD,GAAKA,EACV,OAAOwD,MAEXoI,MAAO,SAAUa,GACb,IAAIC,EAAKjN,KAAKkJ,IAAInF,KAAKjE,EAAGkN,EAAElN,GAC5B,IAAIoN,EAAKlN,KAAKkJ,IAAInF,KAAKxD,EAAGyM,EAAEzM,GAC5B,IAAI4M,EAAKnN,KAAKiJ,IAAKlF,KAAKjE,EAAIiE,KAAKsI,MAASW,EAAElN,EAAIkN,EAAEX,OAClD,IAAIe,EAAKpN,KAAKiJ,IAAKlF,KAAKxD,EAAIwD,KAAKqI,OAAUY,EAAEzM,EAAIyM,EAAEZ,QACnD,OAAO,IAAIN,EAAKmB,EAAIC,EAAIC,EAAKF,EAAIG,EAAKF,IAE1CrI,OAAQ,WACJ,OAAO,IAAI1B,EAAMY,KAAKjE,EAAIiE,KAAKsI,MAAQ,EAAGtI,KAAKxD,EAAIwD,KAAKqI,OAAS,IAErEiB,IAAK,WACD,OAAO,IAAIlK,EAAMY,KAAKjE,EAAIiE,KAAKsI,MAAQ,EAAGtI,KAAKxD,IAEnDqM,MAAO,WACH,OAAO,IAAIzJ,EAAMY,KAAKjE,EAAIiE,KAAKsI,MAAOtI,KAAKxD,EAAIwD,KAAKqI,OAAS,IAEjEkB,OAAQ,WACJ,OAAO,IAAInK,EAAMY,KAAKjE,EAAIiE,KAAKsI,MAAQ,EAAGtI,KAAKxD,EAAIwD,KAAKqI,SAE5DO,KAAM,WACF,OAAO,IAAIxJ,EAAMY,KAAKjE,EAAGiE,KAAKxD,EAAIwD,KAAKqI,OAAS,IAEpDmB,QAAS,WACL,OAAO,IAAIpK,EAAMY,KAAKjE,EAAGiE,KAAKxD,IAElCiN,SAAU,WACN,OAAO,IAAIrK,EAAMY,KAAKjE,EAAIiE,KAAKsI,MAAOtI,KAAKxD,IAE/CkN,WAAY,WACR,OAAO,IAAItK,EAAMY,KAAKjE,EAAGiE,KAAKxD,EAAIwD,KAAKqI,SAE3CsB,YAAa,WACT,OAAO,IAAIvK,EAAMY,KAAKjE,EAAIiE,KAAKsI,MAAOtI,KAAKxD,EAAIwD,KAAKqI,SAExDuB,MAAO,WACH,OAAO,IAAI7B,EAAK/H,KAAKjE,EAAGiE,KAAKxD,EAAGwD,KAAKsI,MAAOtI,KAAKqI,SAErDrK,QAAS,WACL,OAAQgC,KAAKsI,QAAUtI,KAAKqI,QAEhCwB,OAAQ,SAAUC,GACd,OAAO9J,KAAKjE,IAAM+N,EAAK/N,GAAKiE,KAAKxD,IAAMsN,EAAKtN,GAAKwD,KAAKsI,QAAUwB,EAAKxB,OAAStI,KAAKqI,SAAWyB,EAAKzB,QAEvG0B,cAAe,SAAUC,GACrB,IAAIF,EAAO9J,KAAK4J,QACZhL,EAASoB,KAAKiK,cAAcD,GAC5BE,EAAKtL,EAAO,GACZuL,EAAKvL,EAAO,GACZwL,EAAKxL,EAAO,GACZyL,EAAKzL,EAAO,GAEhBkL,EAAK/N,EAAIE,KAAKkJ,IAAIiF,EAAGrO,EAAGmO,EAAGnO,EAAGoO,EAAGpO,EAAGsO,EAAGtO,GACvC+N,EAAKtN,EAAIP,KAAKkJ,IAAIiF,EAAG5N,EAAG0N,EAAG1N,EAAG2N,EAAG3N,EAAG6N,EAAG7N,GACvCsN,EAAKxB,MAAQrM,KAAKiJ,IAAIkF,EAAGrO,EAAGmO,EAAGnO,EAAGoO,EAAGpO,EAAGsO,EAAGtO,GAAK+N,EAAK/N,EACrD+N,EAAKzB,OAASpM,KAAKiJ,IAAIkF,EAAG5N,EAAG0N,EAAG1N,EAAG2N,EAAG3N,EAAG6N,EAAG7N,GAAKsN,EAAKtN,EAEtD,OAAOsN,GAEXG,cAAe,SAAUD,GACrB,IAAIF,EAAO9J,KACPU,EAAIoJ,EAAKhJ,SACTsJ,EAAKN,EAAKH,cAAcW,OAAO5J,EAAG,IAAMsJ,GACxCE,EAAKJ,EAAKN,UAAUc,OAAO5J,EAAG,IAAMsJ,GACpCG,EAAKL,EAAKL,WAAWa,OAAO5J,EAAG,IAAMsJ,GACrCK,EAAKP,EAAKJ,aAAaY,OAAO5J,EAAG,IAAMsJ,GAE3C,MAAO,CAACE,EAAIC,EAAIC,EAAIC,IAExB7M,SAAU,SAAU+M,GAChBA,EAAYA,GAAa,IAEzB,OAAOvK,KAAKjE,EAAIwO,EAAYvK,KAAKxD,EAAI+N,EAAYvK,KAAKsI,MAAQiC,EAAYvK,KAAKqI,QAEnFmC,MAAO,SAAUC,EAAQC,EAAQC,EAAYC,EAAeZ,GACxD,IAAIE,EAAKlK,KAAKwJ,UACd,IAAIqB,EAAa7K,KAAKc,SACtBoJ,EAAGI,OAAOO,EAAY,IAAMb,GAAOM,OAAOM,EAAeZ,GAEzD,IAAIc,EAAQH,EAAW7D,MAAMoD,GAC7B,IAAIa,EAAS,IAAI3L,EAAM0L,EAAM/O,EAAI0O,EAAQK,EAAMtO,EAAIkO,GACnD,IAAIjI,EAAWqI,EAAMhE,MAAMiE,GAC3Bb,EAAKA,EAAGrD,KAAKpE,GACbyH,EAAGI,OAAOM,EAAe,IAAMZ,GAAOM,OAAOO,EAAYb,GAEzDhK,KAAKjE,EAAImO,EAAGnO,EACZiE,KAAKxD,EAAI0N,EAAG1N,EAEZwD,KAAKsI,OAASmC,EACdzK,KAAKqI,QAAUqC,GAGnBM,KAAM,SAASA,GACXhL,KAAKjE,GAAKiP,EACVhL,KAAKxD,GAAKwO,EACVhL,KAAKsI,OAAS0C,EACdhL,KAAKqI,QAAU2C,EACf,OAAOhL,MAGXiL,SAAU,SAASnB,GACf,IAAIH,EAAc3J,KAAK2J,cACvB,IAAIuB,EAAkBpB,EAAKH,cAC3B,IAAIsB,IAAatB,EAAY5N,EAAI+N,EAAK/N,GAAK4N,EAAYnN,EAAIsN,EAAKtN,GAC5D0O,EAAgBnP,EAAIiE,KAAKjE,GAAKmP,EAAgB1O,EAAIwD,KAAKxD,GAC3D,OAAOyO,KAIXE,EAAO5H,EAAMC,OAAO,CACpBC,KAAM,SAAU6E,EAAOD,GACnBrI,KAAKsI,MAAQA,EACbtI,KAAKqI,OAASA,KAyBtB,SAAS1L,EAAWC,GAChB,OAAOX,KAAKC,IAAIU,GAAOzB,EAG3B,SAASiQ,EAAcC,EAAQC,EAAMC,EAAQC,EAAMC,GAC/C,IAAIC,GAAgBJ,EAAKvP,EAAIsP,EAAOtP,IAAMyP,EAAKhP,EAAI+O,EAAO/O,IAAQ8O,EAAK9O,EAAI6O,EAAO7O,IAAMgP,EAAKzP,EAAIwP,EAAOxP,GACxG,GAAIY,EAAW+O,GAEX,OAGJ,IAAIC,GAASN,EAAO7O,EAAI+O,EAAO/O,IAAMgP,EAAKzP,EAAIwP,EAAOxP,IAAQsP,EAAOtP,EAAIwP,EAAOxP,IAAMyP,EAAKhP,EAAI+O,EAAO/O,GACrG,IAAIoP,GAASP,EAAO7O,EAAI+O,EAAO/O,IAAM8O,EAAKvP,EAAIsP,EAAOtP,IAAQsP,EAAOtP,EAAIwP,EAAOxP,IAAMuP,EAAK9O,EAAI6O,EAAO7O,GACrG,IAAIyM,EAAI0C,EAAOD,EACf,IAAIzM,EAAI2M,EAAOF,EAEf,GAAID,IAAcxC,EAAI,GAAKA,EAAI,GAAKhK,EAAI,GAAKA,EAAI,GAK7C,OAGJ,OAAO,IAAIG,EAAMiM,EAAOtP,EAAKkN,GAAKqC,EAAKvP,EAAIsP,EAAOtP,GAAKsP,EAAO7O,EAAKyM,GAAKqC,EAAK9O,EAAI6O,EAAO7O,IA7C5F2O,EAAK5N,UAAUsO,MAAQ,IAAIV,EAAK,EAAG,GAEnCpD,EAAK+D,OAAS,SAAUhC,GACpB,KAAMA,aAAgB/B,GAClB+B,EAAO,IAAI/B,EAAK+B,EAAK/N,EAAG+N,EAAKtN,EAAGsN,EAAKxB,MAAOwB,EAAKzB,QAGrD,OAAOyB,GAGX/B,EAAKgE,MAAQ,WACT,OAAO,IAAIhE,EAAK,EAAG,EAAG,EAAG,IAG7BA,EAAKiE,WAAa,SAAUlN,EAAGuI,GAC3B,GAAIxJ,MAAMiB,EAAE/C,IAAM8B,MAAMiB,EAAEtC,IAAMqB,MAAMwJ,EAAEtL,IAAM8B,MAAMwJ,EAAE7K,GAClD,KAAM,uBAEV,OAAO,IAAIuL,EAAK9L,KAAKkJ,IAAIrG,EAAE/C,EAAGsL,EAAEtL,GAAIE,KAAKkJ,IAAIrG,EAAEtC,EAAG6K,EAAE7K,GAAIP,KAAKC,IAAI4C,EAAE/C,EAAIsL,EAAEtL,GAAIE,KAAKC,IAAI4C,EAAEtC,EAAI6K,EAAE7K,KA8BlG,IAAIyP,EAAY,CACZC,MAAO,SAAUb,EAAQC,EAAMC,EAAQC,GACnC,OAAOJ,EAAcC,EAAQC,EAAMC,EAAQC,IAE/CW,SAAU,SAAUd,EAAQC,EAAMC,EAAQC,GACtC,OAAOJ,EAAcC,EAAQC,EAAMC,EAAQC,EAAM,OAErDY,aAAc,SAAUtC,EAAMxO,EAAOe,GACjC,OAAQ4P,EAAUE,SAAS7Q,EAAOe,EAAKyN,EAAKN,UAAWM,EAAKL,aACxDwC,EAAUE,SAAS7Q,EAAOe,EAAKyN,EAAKL,WAAYK,EAAKH,gBACrDsC,EAAUE,SAAS7Q,EAAOe,EAAKyN,EAAKJ,aAAcI,EAAKH,gBACvDsC,EAAUE,SAAS7Q,EAAOe,EAAKyN,EAAKN,UAAWM,EAAKJ,eAE5D2C,MAAO,SAAUC,EAAOC,EAAOvC,GAC3B,IAAIE,EAAKqC,EAAM/C,UACXW,EAAKoC,EAAM9C,WACXY,EAAKkC,EAAM7C,aACXU,EAAKmC,EAAM5C,cACf,IAAI7I,EAASyL,EAAMzL,SACnB,GAAIkJ,EAAO,CACPE,EAAKA,EAAGI,OAAOxJ,EAAQkJ,GACvBG,EAAKA,EAAGG,OAAOxJ,EAAQkJ,GACvBK,EAAKA,EAAGC,OAAOxJ,EAAQkJ,GACvBI,EAAKA,EAAGE,OAAOxJ,EAAQkJ,GAG3B,IAAIwC,EAAYF,EAAM5K,SAASwI,IAC3BoC,EAAM5K,SAASyI,IACfmC,EAAM5K,SAAS2I,IACfiC,EAAM5K,SAAS0I,IACf6B,EAAUG,aAAaE,EAAOpC,EAAIC,IAClC8B,EAAUG,aAAaE,EAAOpC,EAAIG,IAClC4B,EAAUG,aAAaE,EAAOnC,EAAIC,IAClC6B,EAAUG,aAAaE,EAAOjC,EAAID,GAEtC,IAAKoC,EAAW,CACZtC,EAAKoC,EAAM9C,UACXW,EAAKmC,EAAM7C,WACXY,EAAKiC,EAAM5C,aACXU,EAAKkC,EAAM3C,cAEX,GAAIK,EAAO,CACP,IAAIyC,EAAe,IAAMzC,EACzBE,EAAKA,EAAGI,OAAOxJ,EAAQ2L,GACvBtC,EAAKA,EAAGG,OAAOxJ,EAAQ2L,GACvBpC,EAAKA,EAAGC,OAAOxJ,EAAQ2L,GACvBrC,EAAKA,EAAGE,OAAOxJ,EAAQ2L,GAG3BD,EAAYD,EAAM7K,SAASwI,IACvBqC,EAAM7K,SAASyI,IACfoC,EAAM7K,SAAS2I,IACfkC,EAAM7K,SAAS0I,GAGvB,OAAOoC,IAOXE,EAAYnJ,EAAMC,OAAO,CACzBC,KAAM,SAAUkJ,GACZ3M,KAAK2M,UAAY5E,EAAK+D,OAAOa,IAGjCC,MAAO,SAAUC,EAASC,GACtB,IAAIC,EAAcD,EAAUE,cAAc7N,MAAM,KAEhD,IAAK,IAAIvD,EAAI,EAAGA,EAAImR,EAAY9O,OAAQrC,IACpCiR,EAAU7M,KAAKiN,aAAaJ,EAASE,EAAYnR,IAGrD,OAAOiR,GAEXI,aAAc,SAAUJ,EAASC,GAC7B,GAAItG,EAAWxG,KAAK8M,IAChB,OAAO9M,KAAK8M,GAAWD,QAGvB,OAAOA,GAIfjE,KAAM,SAAUiE,GACZ,OAAO7M,KAAKkN,OAAOL,EAAS7M,KAAKmN,QAErCrM,OAAQ,SAAU+L,GACd,OAAO7M,KAAKkN,OAAOL,EAAS7M,KAAKoN,UAErCvE,MAAO,SAAUgE,GACb,OAAO7M,KAAKkN,OAAOL,EAAS7M,KAAKqN,SAErCC,QAAS,SAAUT,GACf,OAAO7M,KAAKkN,OAAOL,EAAS7M,KAAKuN,WAErCjE,IAAK,SAAUuD,GACX,OAAO7M,KAAKkN,OAAOL,EAAS7M,KAAKwN,OAErCC,OAAQ,SAAUZ,GACd,OAAO7M,KAAKkN,OAAOL,EAAS7M,KAAK0N,UAErCnE,OAAQ,SAAUsD,GACd,OAAO7M,KAAKkN,OAAOL,EAAS7M,KAAK2N,UAGrCR,MAAO,SAAUR,EAAWE,GACxBA,EAAQ9Q,EAAI4Q,EAAU5Q,GAE1BqR,QAAS,SAAUT,EAAWE,GAC1BA,EAAQ9Q,GAAM4Q,EAAUrE,MAAQuE,EAAQvE,OAAS,GAAM,GAE3D+E,OAAQ,SAAUV,EAAWE,GACzBA,EAAQ9Q,EAAI4Q,EAAUrE,MAAQuE,EAAQvE,OAE1CkF,KAAM,SAAUb,EAAWE,GACvBA,EAAQrQ,EAAImQ,EAAUnQ,GAE1BkR,QAAS,SAAUf,EAAWE,GAC1BA,EAAQrQ,GAAMmQ,EAAUtE,OAASwE,EAAQxE,QAAU,GAAM,GAE7DsF,QAAS,SAAUhB,EAAWE,GAC1BA,EAAQrQ,EAAImQ,EAAUtE,OAASwE,EAAQxE,QAE3CkF,SAAU,SAAUZ,EAAWE,GAC3BA,EAAQ9Q,EAAI,EACZ8Q,EAAQrQ,EAAI,EACZqQ,EAAQxE,OAASsE,EAAUtE,OAC3BwE,EAAQvE,MAAQqE,EAAUrE,OAE9B4E,OAAQ,SAAUL,EAASe,GACvBf,EAAU9E,EAAK+D,OAAOe,GACtBe,EAAU5N,KAAK2M,UAAWE,GAE1B,OAAOA,KAIXlF,EAAQpE,EAAMC,OAAO,CACrBC,KAAM,SAAUwF,EAAGxI,GACfT,KAAKiJ,EAAIA,EACTjJ,KAAKgK,MAAQvJ,KAOjBoN,EAAStK,EAAMC,OAAO,CACtBC,KAAM,SAAUhD,EAAGJ,EAAGK,EAAGP,EAAG2N,EAAGC,GAC3B/N,KAAKS,EAAIA,GAAK,EACdT,KAAKK,EAAIA,GAAK,EACdL,KAAKU,EAAIA,GAAK,EACdV,KAAKG,EAAIA,GAAK,EACdH,KAAK8N,EAAIA,GAAK,EACd9N,KAAK+N,EAAIA,GAAK,GAElBlH,KAAM,SAAU3G,GACZF,KAAKS,GAAKP,EAAEO,EACZT,KAAKK,GAAKH,EAAEG,EACZL,KAAKU,GAAKR,EAAEQ,EACZV,KAAKG,GAAKD,EAAEC,EACZH,KAAK8N,GAAK5N,EAAE4N,EACZ9N,KAAK+N,GAAK7N,EAAE6N,GAEhBjH,MAAO,SAAU5G,GACbF,KAAKS,GAAKP,EAAEO,EACZT,KAAKK,GAAKH,EAAEG,EACZL,KAAKU,GAAKR,EAAEQ,EACZV,KAAKG,GAAKD,EAAEC,EACZH,KAAK8N,GAAK5N,EAAE4N,EACZ9N,KAAK+N,GAAK7N,EAAE6N,GAEhB/G,MAAO,SAAU9G,GACb,OAAO,IAAI2N,EACP7N,KAAKS,EAAIP,EAAEO,EAAIT,KAAKU,EAAIR,EAAEG,EAC1BL,KAAKK,EAAIH,EAAEO,EAAIT,KAAKG,EAAID,EAAEG,EAC1BL,KAAKS,EAAIP,EAAEQ,EAAIV,KAAKU,EAAIR,EAAEC,EAC1BH,KAAKK,EAAIH,EAAEQ,EAAIV,KAAKG,EAAID,EAAEC,EAC1BH,KAAKS,EAAIP,EAAE4N,EAAI9N,KAAKU,EAAIR,EAAE6N,EAAI/N,KAAK8N,EACnC9N,KAAKK,EAAIH,EAAE4N,EAAI9N,KAAKG,EAAID,EAAE6N,EAAI/N,KAAK+N,IAG3C9K,MAAO,SAAUnE,GACb,OAAO,IAAIM,EAAMY,KAAKS,EAAI3B,EAAE/C,EAAIiE,KAAKU,EAAI5B,EAAEtC,EAAIwD,KAAK8N,EAAG9N,KAAKK,EAAIvB,EAAE/C,EAAIiE,KAAKG,EAAIrB,EAAEtC,EAAIwD,KAAK+N,IAE9FC,UAAW,SAAU/E,GACjB,OAAOlB,EAAKiE,WAAWhM,KAAKiD,MAAMgG,EAAEO,WAAYxJ,KAAKiD,MAAMgG,EAAEU,iBAEjEnM,SAAU,WACN,MAAO,UAAYwC,KAAKS,EAAI,IAAMT,KAAKK,EAAI,IAAML,KAAKU,EAAI,IAAMV,KAAKG,EAAI,IAAMH,KAAK8N,EAAI,IAAM9N,KAAK+N,EAAI,OAuH3GE,GAnHJjT,EAAW6S,EAAQ,CACfK,cAAe,SAAUC,GACrB,IAAIjO,EAAI,IAAI2N,EACZ3N,EAAEO,EAAI0N,EAAG1N,EACTP,EAAEG,EAAI8N,EAAG9N,EACTH,EAAEQ,EAAIyN,EAAGzN,EACTR,EAAEC,EAAIgO,EAAGhO,EACTD,EAAE4N,EAAIK,EAAGL,EACT5N,EAAE6N,EAAII,EAAGJ,EACT,OAAO7N,GAEXkO,iBAAkB,SAAUlP,GACxB,IAAIgB,EAAI,IAAI2N,EACZ3N,EAAEO,EAAIvB,EAAEuB,EACRP,EAAEG,EAAInB,EAAEmB,EACRH,EAAEQ,EAAIxB,EAAEwB,EACRR,EAAEC,EAAIjB,EAAEiB,EACRD,EAAE4N,EAAI5O,EAAE4O,EACR5N,EAAE6N,EAAI7O,EAAE6O,EACR,OAAO7N,GAEXmO,SAAU,SAAUnP,GAChB,GAAIA,EAAEjB,SAAW,EACb,KAAM,iDAEV,IAAIiC,EAAI,IAAI2N,EACZ3N,EAAEO,EAAIvB,EAAE,GACRgB,EAAEG,EAAInB,EAAE,GACRgB,EAAEQ,EAAIxB,EAAE,GACRgB,EAAEC,EAAIjB,EAAE,GACRgB,EAAE4N,EAAI5O,EAAE,GACRgB,EAAE6N,EAAI7O,EAAE,GACR,OAAOgB,GAEXoO,YAAa,SAAUvS,EAAGS,GACtB,IAAI0D,EAAI,IAAI2N,EACZ3N,EAAEO,EAAI,EACNP,EAAEG,EAAI,EACNH,EAAEQ,EAAI,EACNR,EAAEC,EAAI,EACND,EAAE4N,EAAI/R,EACNmE,EAAE6N,EAAIvR,EACN,OAAO0D,GAEXqO,KAAM,WACF,OAAO,IAAIV,EAAO,EAAG,EAAG,EAAG,EAAG,EAAG,IAErCW,SAAU,SAAUxE,EAAOjO,EAAGS,GAC1B,IAAI0D,EAAI,IAAI2N,EACZ3N,EAAEO,EAAIxE,KAAKoH,IAAI2G,EAAQ/N,KAAKS,GAAK,KACjCwD,EAAEG,EAAIpE,KAAKwS,IAAIzE,EAAQ/N,KAAKS,GAAK,KACjCwD,EAAEQ,GAAKR,EAAEG,EACTH,EAAEC,EAAID,EAAEO,EACRP,EAAE4N,EAAK/R,EAAIA,EAAImE,EAAEO,EAAIjE,EAAI0D,EAAEG,GAAM,EACjCH,EAAE6N,EAAKvR,EAAIA,EAAI0D,EAAEO,EAAI1E,EAAImE,EAAEG,GAAM,EACjC,OAAOH,GAEXwO,QAAS,SAAUjE,EAAQC,GACvB,IAAIxK,EAAI,IAAI2N,EACZ3N,EAAEO,EAAIgK,EACNvK,EAAEG,EAAI,EACNH,EAAEQ,EAAI,EACNR,EAAEC,EAAIuK,EACNxK,EAAE4N,EAAI,EACN5N,EAAE6N,EAAI,EACN,OAAO7N,GAEXqI,MAAO,SAAUrJ,GACb,IAAIyP,EAAOC,EACX,GAAI1P,EAAG,CACHA,EAAIA,EAAE2P,OAEN,GAAI3P,EAAEwJ,MAAM,EAAG,GAAGsE,gBAAkB,SAAU,CAC1C4B,EAAO1P,EAAEwJ,MAAM,EAAGxJ,EAAEjB,OAAS,GAAG4Q,OAChCF,EAAQC,EAAKzP,MAAM,KACnB,GAAIwP,EAAM1Q,SAAW,EACjB,OAAO4P,EAAOQ,SAAS5H,EAAIkI,EAAO,SAAU7P,GACxC,OAAOhB,WAAWgB,MAG1B6P,EAAQC,EAAKzP,MAAM,KACnB,GAAIwP,EAAM1Q,SAAW,EACjB,OAAO4P,EAAOQ,SAAS5H,EAAIkI,EAAO,SAAU7P,GACxC,OAAOhB,WAAWgB,MAK9B,GAAII,EAAEwJ,MAAM,EAAG,KAAO,KAAOxJ,EAAEwJ,MAAMxJ,EAAEjB,OAAS,KAAO,IACnDiB,EAAIA,EAAE4P,OAAO,EAAG5P,EAAEjB,OAAS,GAE/B,GAAIiB,EAAEsC,QAAQ,KAAO,EAAG,CACpBmN,EAAQzP,EAAEC,MAAM,KAChB,GAAIwP,EAAM1Q,SAAW,EACjB,OAAO4P,EAAOQ,SAAS5H,EAAIkI,EAAO,SAAU7P,GACxC,OAAOhB,WAAWgB,MAI9B,GAAII,EAAEsC,QAAQ,KAAO,EAAG,CACpBmN,EAAQzP,EAAEC,MAAM,KAChB,GAAIwP,EAAM1Q,SAAW,EACjB,OAAO4P,EAAOQ,SAAS5H,EAAIkI,EAAO,SAAU7P,GACxC,OAAOhB,WAAWgB,OAKlC,OAAO6P,KAOIpL,EAAMC,OAAO,CAC5BC,KAAM,SAAUhD,EAAGJ,EAAGK,EAAGP,EAAG2N,EAAGC,GAC3B/N,KAAKS,EAAIA,GAAK,EACdT,KAAKK,EAAIA,GAAK,EACdL,KAAKU,EAAIA,GAAK,EACdV,KAAKG,EAAIA,GAAK,EACdH,KAAK8N,EAAIA,GAAK,EACd9N,KAAK+N,EAAIA,GAAK,GAElBgB,WAAY,SAASC,EAAW9O,GAC5B,IAAIhB,EAAI,IAAI+O,EACZ/O,EAAEuB,EAAIP,EAAEO,EACRvB,EAAEmB,EAAIH,EAAEG,EACRnB,EAAEwB,EAAIR,EAAEQ,EACRxB,EAAEiB,EAAID,EAAEC,EACRjB,EAAE4O,EAAI5N,EAAE4N,EACR5O,EAAE6O,EAAI7N,EAAE6N,EACR,OAAO7O,MAUf,SAAS+P,EAAeC,EAAMC,GAC1B,IAAIpT,EAAGS,EAAGyM,EACV,EAAG,CACClN,EAAIE,KAAKyD,SAAW,EAAI,EACxBlD,EAAIP,KAAKyD,SAAW,EAAI,EACxBuJ,EAAIlN,EAAIA,EAAIS,EAAIA,SAEZyM,GAAKA,EAAI,GACjB,OAAOiG,EAAOC,EAAYpT,EAAIE,KAAKuE,MAAM,EAAIvE,KAAKmT,IAAInG,GAAKA,GAO/D,SAASoG,EAASpR,GACd,GAAI7C,EAAM2B,YAAYkB,GAClBA,EAAS,GAGb,IAAIkE,EAAS,GACb,IAAImN,EAAQ,iEACZ,IAAK,IAAI1T,EAAIqC,EAAQrC,EAAI,IAAKA,EAC1BuG,GAAUmN,EAAMC,OAAOtT,KAAKuT,MAAMvT,KAAKyD,UAAY4P,EAAMrR,OAAS,KAEtE,OAAOkE,EAGX,IAAIsN,EAAW,CAQXC,uBAAwB,SAAU5Q,EAAG2B,EAAGJ,GACpC,SAASsP,EAAGC,EAAKC,GACb,OAAQD,EAAI7T,EAAI8T,EAAI9T,IAAM6T,EAAI7T,EAAI8T,EAAI9T,IAAM6T,EAAIpT,EAAIqT,EAAIrT,IAAMoT,EAAIpT,EAAIqT,EAAIrT,GAG9E,GAAIiE,IAAMJ,EACN,OAAOsP,EAAG7Q,EAAG2B,GAGjB,IAAIqP,EAAKzP,EAAEtE,EAAI0E,EAAE1E,EACbgU,EAAK1P,EAAE7D,EAAIiE,EAAEjE,EACbwT,GAAOlR,EAAE/C,EAAI0E,EAAE1E,GAAK+T,GAAMhR,EAAEtC,EAAIiE,EAAEjE,GAAKuT,EAC3C,GAAIC,EAAM,EACN,OAAOL,EAAGlP,EAAG3B,GAGjBkR,GAAO3P,EAAEtE,EAAI+C,EAAE/C,GAAK+T,GAAMzP,EAAE7D,EAAIsC,EAAEtC,GAAKuT,EACvC,GAAIC,EAAM,EACN,OAAOL,EAAGtP,EAAGvB,GAGjBkR,GAAO3P,EAAEtE,EAAI+C,EAAE/C,GAAKgU,GAAM1P,EAAE7D,EAAIsC,EAAEtC,GAAKsT,EACvC,OAAOE,EAAMA,GAAOF,EAAKA,EAAKC,EAAKA,IASvCE,eAAgB,SAAUnR,EAAG2B,EAAGJ,GAC5B,OAAOpE,KAAKuE,KAAKR,KAAK0P,uBAAuB5Q,EAAG2B,EAAGJ,KASvD6P,mBAAoB,SAAUpR,EAAGF,GAC7B,IAAIuR,EAAUC,OAAOC,UACrB,GAAIjV,EAAM2B,YAAY6B,IAAWA,EAAOX,SAAW,EAC/C,OAAOmS,OAAOC,UAElB,IAAK,IAAIpR,EAAI,EAAGA,EAAIL,EAAOX,OAAS,EAAGgB,IAAK,CACxC,IAAIqR,EAAK1R,EAAOK,GAChB,IAAIsR,EAAK3R,EAAOK,EAAI,GAEpB,IAAIkB,EAAIH,KAAK0P,uBAAuB5Q,EAAGwR,EAAIC,GAC3C,GAAIpQ,EAAIgQ,EACJA,EAAUhQ,EAGlB,OAAOlE,KAAKuE,KAAK2P,KAYrBK,EAAY7V,EAAM4I,MAAMC,OAAO,CAC/BC,KAAM,WACFzD,KAAKyQ,SAAW,GAChBzQ,KAAK/B,OAAS,GAMlByS,IAAK,SAAUvT,EAAKsB,GAEhB,IAAI3B,EAAMkD,KAAK2Q,iBAAiBxT,GAChC,GAAI/B,EAAMyB,UAAU4B,GAChB3B,EAAI2B,MAAQA,EAEhB,OAAO3B,GAMX8T,IAAK,SAAUzT,GACX,GAAI6C,KAAK6Q,cAAc1T,GACnB,OAAO6C,KAAK2Q,iBAAiBxT,GAEjC,OAAO,MAQX2T,IAAK,SAAU3T,EAAKsB,GAChBuB,KAAK0Q,IAAIvT,EAAKsB,IAMlBsS,YAAa,SAAU5T,GACnB,OAAO6C,KAAK6Q,cAAc1T,IAO9BkE,OAAQ,SAAUlE,GACd,GAAI6C,KAAK6Q,cAAc1T,GAAM,CACzB,IAAI6T,EAAShR,KAAKiR,MAAM9T,UACjB6C,KAAKyQ,SAASO,GACrBhR,KAAK/B,SACL,OAAOd,IAQf4D,QAAS,SAAUlB,GACf,IAAIqR,EAASlR,KAAKmR,UAClB,IAAK,IAAIvV,EAAI,EAAG8L,EAAMwJ,EAAOjT,OAAQrC,EAAI8L,EAAK9L,IAAK,CAC/C,IAAIwV,EAAOF,EAAOtV,GAClB,IAAIyV,EAASrR,KAAKyQ,SAASW,GAC3B,GAAIhW,EAAM2B,YAAYsU,GAClB,SAEJxR,EAAKwR,KAQbzH,MAAO,WACH,IAAI0H,EAAK,IAAId,EACb,IAAIU,EAASlR,KAAKmR,UAClB,IAAK,IAAIvV,EAAI,EAAG8L,EAAMwJ,EAAOjT,OAAQrC,EAAI8L,EAAK9L,IAAK,CAC/C,IAAIwV,EAAOF,EAAOtV,GAClB,IAAIyV,EAASrR,KAAKyQ,SAASW,GAC3B,GAAIhW,EAAM2B,YAAYsU,GAClB,SAEJC,EAAGZ,IAAIW,EAAOlU,IAAKkU,EAAO5S,OAE9B,OAAO6S,GAQXH,QAAS,WACL,IAAID,EAAS,GACb,IAAK,IAAIE,KAAQpR,KAAKyQ,SAClB,GAAIzQ,KAAKyQ,SAASrT,eAAegU,GAC7BF,EAAO/U,KAAKiV,GAGpB,OAAOF,GAGXL,cAAe,SAAU1T,GACrB,IAAI6T,EAAShR,KAAKiR,MAAM9T,GACxB,OAAO/B,EAAMyB,UAAUmD,KAAKyQ,SAASO,KAQzCL,iBAAkB,SAAUxT,GACxB,IAAI6T,EAAShR,KAAKiR,MAAM9T,GACxB,IAAIkU,EAASrR,KAAKyQ,SAASO,GAC3B,GAAI5V,EAAM2B,YAAYsU,GAAS,CAC3BA,EAAS,CAAElU,IAAKA,GAChB6C,KAAKyQ,SAASO,GAAUK,EACxBrR,KAAK/B,SAET,OAAOoT,GAMXJ,MAAO,SAAU9T,GACb,GAAI/B,EAAMwC,SAAST,GACf,OAAOA,EAEX,GAAI/B,EAAMkC,SAASH,GACf,OAAO6C,KAAKuR,YAAYpU,GAE5B,GAAI/B,EAAM4B,SAASG,GACf,OAAO6C,KAAKwR,cAAcrU,GAE9B,KAAM,yBAMVoU,YAAa,SAAUtS,GAEnB,IAAIkD,EAAS,EACb,GAAIlD,EAAEhB,SAAW,EACb,OAAOkE,EAEX,IAAK,IAAIvG,EAAI,EAAGA,EAAIqD,EAAEhB,OAAQrC,IAAK,CAC/B,IAAI6V,EAAKxS,EAAEyS,WAAW9V,GACtBuG,EAAWA,EAAS,GAAMA,EAAUsP,EAExC,OAAOtP,GAMXqP,cAAe,SAAUrU,GACrB,IAAIwU,EAAKxU,EAAIyU,QACb,GAAIxW,EAAM2B,YAAY4U,GAAK,CACvBA,EAAKtC,IACLlS,EAAIyU,QAAUD,EAElB,OAAOA,KAUXE,EAAalX,EAAMmX,WAAWtO,OAAO,CAKrCC,KAAM,SAAUsO,GACZ,IAAIC,EAAOhS,KACXrF,EAAMmX,WAAWlL,GAAGnD,KAAKpG,KAAK2U,GAC9BhS,KAAKiS,WAAa,IAAIzB,EACtBxQ,KAAK/B,OAAS,EACd,GAAI7C,EAAMyB,UAAUkV,GAChB,GAAI7W,MAAMD,QAAQ8W,GACd,IAAK,IAAInW,EAAI,EAAGA,EAAImW,EAAW9T,OAAQrC,IACnCoE,KAAK0Q,IAAIqB,EAAWnW,SAGxBmW,EAAWhR,QAAQ,SAAU/E,EAAGkD,GAC5Bc,KAAK0Q,IAAI1U,EAAGkD,IACbc,OASf0Q,IAAK,SAAUvT,EAAKsB,GAChB,IAAIyT,EAAQlS,KAAKiS,WAAWrB,IAAIzT,GAChC,IAAK+U,EAAO,CACRA,EAAQlS,KAAKiS,WAAWvB,IAAIvT,GAC5B6C,KAAK/B,SACL+B,KAAK2E,QAAQ,WAEjBuN,EAAMzT,MAAQA,GAQlBqS,IAAK,SAAU3T,EAAKsB,GAChBuB,KAAK0Q,IAAIvT,EAAKsB,IAMlBmS,IAAK,SAAUzT,GACX,IAAI+U,EAAQlS,KAAKiS,WAAWrB,IAAIzT,GAChC,GAAI+U,EACA,OAAOA,EAAMzT,MAEjB,MAAM,IAAI0T,MAAM,mBAAqBhV,IAMzC4T,YAAa,SAAU5T,GACnB,OAAO6C,KAAKiS,WAAWlB,YAAY5T,IAMvCkE,OAAQ,SAAUlE,GACd,GAAI6C,KAAK+Q,YAAY5T,GAAM,CACvB6C,KAAK2E,QAAQ,WACb3E,KAAK/B,SACL,OAAO+B,KAAKiS,WAAW5Q,OAAOlE,KAOtC4D,QAAS,SAAUlB,EAAMqB,GACrBlB,KAAKiS,WAAWlR,QAAQ,SAAUmR,GAC9BrS,EAAKxC,KAAK6D,EAASgR,EAAM/U,IAAK+U,EAAMzT,UAO5C2T,aAAc,SAAUvS,EAAMqB,GAC1BlB,KAAKiS,WAAWlR,QAAQ,SAAUmR,GAC9BrS,EAAKxC,KAAK6D,EAASgR,EAAMzT,UAOjC4T,WAAY,SAAUxS,EAAMqB,GACxBlB,KAAKiS,WAAWlR,QAAQ,SAAUmR,GAC9BrS,EAAKxC,KAAK6D,EAASgR,EAAM/U,QAOjCmV,KAAM,WACF,IAAIA,EAAO,GACXtS,KAAKqS,WAAW,SAAUlV,GACtBmV,EAAKnW,KAAKgB,KAEd,OAAOmV,KAMXC,EAAQ5X,EAAM4I,MAAMC,OAAO,CAE3BC,KAAM,WACFzD,KAAKwS,MAAQ,KACbxS,KAAKyS,MAAQ,KACbzS,KAAK/B,OAAS,GAMlByU,QAAS,SAAUjU,GACf,IAAIyT,EAAQ,CAAEzT,MAAOA,EAAOkU,KAAM,MAClC,IAAK3S,KAAKyS,MAAO,CACbzS,KAAKyS,MAAQP,EACblS,KAAKwS,MAAQxS,KAAKyS,UAEjB,CACDzS,KAAKwS,MAAMG,KAAOT,EAClBlS,KAAKwS,MAAQxS,KAAKwS,MAAMG,KAE5B3S,KAAK/B,UAMT2U,QAAS,WACL,GAAI5S,KAAK/B,OAAS,EACd,MAAM,IAAIkU,MAAM,uBAEpB,IAAI1T,EAAQuB,KAAKyS,MAAMhU,MACvBuB,KAAKyS,MAAQzS,KAAKyS,MAAME,KACxB3S,KAAK/B,SACL,OAAOQ,GAGXiD,SAAU,SAAU3B,GAChB,IAAI8S,EAAU7S,KAAKyS,MACnB,MAAOI,EAAS,CACZ,GAAIA,EAAQpU,QAAUsB,EAClB,OAAO,KAEX8S,EAAUA,EAAQF,KAEtB,OAAO,SAUXG,EAAMnY,EAAMmX,WAAWtO,OAAO,CAC9BC,KAAM,SAAUsP,GACZ,IAAIf,EAAOhS,KACXrF,EAAMmX,WAAWlL,GAAGnD,KAAKpG,KAAK2U,GAC9BhS,KAAKiS,WAAa,IAAIzB,EACtBxQ,KAAK/B,OAAS,EACd,GAAI7C,EAAMyB,UAAUkW,GAChB,GAAIA,aAAoBvC,EACpBuC,EAAShS,QAAQ,SAAUZ,GACvBH,KAAK0Q,IAAIvQ,UAGZ,GAAI4S,aAAoBlB,EACzBkB,EAAShS,QAAQ,SAAU/E,EAAGkD,GAC1Bc,KAAK0Q,IAAI,CAACvT,IAAKnB,EAAGyC,MAAOS,KAC1Bc,OAKf0B,SAAU,SAAU3B,GAChB,OAAOC,KAAKiS,WAAWlB,YAAYhR,IAGvC2Q,IAAK,SAAU3Q,GACX,IAAImS,EAAQlS,KAAKiS,WAAWrB,IAAI7Q,GAChC,IAAKmS,EAAO,CACRlS,KAAKiS,WAAWvB,IAAI3Q,EAAMA,GAC1BC,KAAK/B,SACL+B,KAAK2E,QAAQ,aAIrBiM,IAAK,SAAU7Q,GACX,GAAIC,KAAK0B,SAAS3B,GACd,OAAOC,KAAKiS,WAAWrB,IAAI7Q,GAAMtB,WAGjC,OAAO,MASf2S,KAAM,SAAUrR,GACZ,OAAOC,KAAKiS,WAAWhB,MAAMlR,IAOjCsB,OAAQ,SAAUtB,GACd,GAAIC,KAAK0B,SAAS3B,GAAO,CACrBC,KAAKiS,WAAW5Q,OAAOtB,GACvBC,KAAK/B,SACL+B,KAAK2E,QAAQ,aAOrB5D,QAAS,SAAUlB,EAAMkC,GACrB/B,KAAKiS,WAAWlR,QAAQ,SAAUiS,GAC9BnT,EAAKmT,EAAGvU,QACTsD,IAEPkR,QAAS,WACL,IAAIhK,EAAI,GACRjJ,KAAKe,QAAQ,SAAUZ,GACnB8I,EAAE9M,KAAKgE,KAEX,OAAO8I,KASXiK,EAAOvY,EAAM4I,MAAMC,OAAO,CAE1BC,KAAM,SAAUkO,EAAIwB,GAMhBnT,KAAKoT,MAAQ,GAMbpT,KAAKqT,SAAW,GAMhBrT,KAAKsT,SAAW,GAKhBtT,KAAKuT,OAAS,EAEd,GAAInY,EAAMyB,UAAU8U,GAChB3R,KAAK2R,GAAKA,OAGV3R,KAAK2R,GAAKtC,IAEd,GAAIjU,EAAMyB,UAAUsW,GAAQ,CACxBnT,KAAKwT,gBAAkBL,EAEvB,IAAI9S,EAAI8S,EAAMM,SACdzT,KAAKsI,MAAQjI,EAAEiI,MACftI,KAAKqI,OAAShI,EAAEgI,OAChBrI,KAAKjE,EAAIsE,EAAEtE,EACXiE,KAAKxD,EAAI6D,EAAE7D,OAGXwD,KAAKwT,gBAAkB,KAM3BxT,KAAK0T,KAAO,KACZ1T,KAAKrC,KAAO,OACZqC,KAAK2T,UAAY,SAAW3T,KAAK2R,GAAK,IAKtC3R,KAAK4T,UAAY,OAMrBC,WAAY,WACR,OAAOzY,EAAM4C,QAAQgC,KAAKoT,QAO9BK,OAAQ,SAAUxK,GACd,IAAK7N,EAAMyB,UAAUoM,GACjB,OAAO,IAAInO,EAAQiN,KAAK/H,KAAKjE,EAAGiE,KAAKxD,EAAGwD,KAAKsI,MAAOtI,KAAKqI,QAG7DrI,KAAKjE,EAAIkN,EAAElN,EACXiE,KAAKxD,EAAIyM,EAAEzM,EACXwD,KAAKsI,MAAQW,EAAEX,MACftI,KAAKqI,OAASY,EAAEZ,QAOpByL,WAAY,SAAUC,GAClB,IAAI/B,EAAOhS,KACX,OAAO5E,EAAM+F,IAAI6Q,EAAKoB,MAAO,SAAUY,GACnC,OAAOA,EAAKC,cAAcjC,KAAU+B,KAQ5CG,YAAa,WACT,GAAIlU,KAAKqT,SAASpV,SAAW,EACzB,MAAO,GAEX,IAAIkW,EAAW,GACf,IAAK,IAAIvY,EAAI,EAAG8L,EAAM1H,KAAKqT,SAASpV,OAAQrC,EAAI8L,EAAK9L,IAAK,CACtD,IAAIoY,EAAOhU,KAAKqT,SAASzX,GACzBuY,EAAShY,KAAK6X,EAAKC,cAAcjU,OAErC,OAAOmU,GAOXC,WAAY,WACR,GAAIpU,KAAKsT,SAASrV,SAAW,EACzB,MAAO,GAEX,IAAIoW,EAAU,GACd,IAAK,IAAIzY,EAAI,EAAG8L,EAAM1H,KAAKsT,SAASrV,OAAQrC,EAAI8L,EAAK9L,IAAK,CACtD,IAAIoY,EAAOhU,KAAKsT,SAAS1X,GACzByY,EAAQlY,KAAK6X,EAAKC,cAAcjU,OAEpC,OAAOqU,GAOXzK,MAAO,WACH,IAAI0K,EAAO,IAAIpB,EACf,GAAI9X,EAAMyB,UAAUmD,KAAKuT,QACrBe,EAAKf,OAASvT,KAAKuT,OAEvB,GAAInY,EAAMyB,UAAUmD,KAAKuU,SACrBD,EAAKC,QAAUvU,KAAKuU,QAExB,GAAInZ,EAAMyB,UAAUmD,KAAKwU,OACrBF,EAAKE,MAAQxU,KAAKwU,MAEtBF,EAAKd,gBAAkBxT,KAAKwT,gBAC5Bc,EAAKvY,EAAIiE,KAAKjE,EACduY,EAAK9X,EAAIwD,KAAKxD,EACd8X,EAAKhM,MAAQtI,KAAKsI,MAClBgM,EAAKjM,OAASrI,KAAKqI,OACnB,OAAOiM,GAMXG,WAAY,SAAUV,GAClB,OAAO/T,KAAK8T,WAAWC,KAAU,MAOrCW,WAAY,SAAUV,GAClB,GAAIA,EAAK5V,SAAW4B,KAAM,CACtB5E,EAAMiG,OAAOrB,KAAKoT,MAAOY,GACzB5Y,EAAMiG,OAAOrB,KAAKqT,SAAUW,GAC5BA,EAAK5V,OAAS,KAGlB,GAAI4V,EAAKrQ,SAAW3D,KAAM,CACtB5E,EAAMiG,OAAOrB,KAAKoT,MAAOY,GACzB5Y,EAAMiG,OAAOrB,KAAKsT,SAAUU,GAC5BA,EAAKrQ,OAAS,OAOtBgR,UAAW,SAAUZ,GACjB,OAAO3Y,EAAM+F,IAAInB,KAAKqT,SAAU,SAAUW,GACtC,OAAOA,EAAKrQ,SAAWoQ,KAO/Ba,OAAQ,WACJ,OAAO5U,KAAKoT,MAAMnV,QAMtB4W,aAAc,SAAUb,GACpB,OAAOtS,EAAS1B,KAAKoT,MAAOY,IAMhCc,aAAc,SAAUf,GACpB,OAAO3Y,EAAMsH,IAAI1C,KAAKoT,MAAO,SAAUY,GACnC,OAAOA,EAAKC,cAAcjU,QAAU+T,GACrC/T,OAMP+U,aAAc,WACV,IAAIC,EAAY,GAChB5Z,EAAM2F,QAAQf,KAAKsT,SAAU,SAAUxF,GACnCkH,EAAU7Y,KAAK2R,EAAEmG,cAAcjU,QAChCA,MACH5E,EAAM2F,QAAQf,KAAKqT,SAAU,SAAUvF,GACnCkH,EAAU7Y,KAAK2R,EAAEmG,cAAcjU,QAChCA,MACH,OAAOgV,KAOXC,EAAOta,EAAM4I,MAAMC,OAAO,CAE1BC,KAAM,SAAUrF,EAAQuF,EAAQgO,EAAIuD,GAChC,GAAI9Z,EAAM2B,YAAYqB,GAClB,KAAM,yCAEV,GAAIhD,EAAM2B,YAAY4G,GAClB,KAAM,yCAEV,IAAIwR,EAAaC,EACjB,GAAIha,EAAMkC,SAASc,GACf+W,EAAc,IAAIjC,EAAK9U,QAGvB+W,EAAc/W,EAElB,GAAIhD,EAAMkC,SAASqG,GACfyR,EAAc,IAAIlC,EAAKvP,QAGvByR,EAAczR,EAGlB3D,KAAK5B,OAAS+W,EACdnV,KAAK2D,OAASyR,EACdpV,KAAK5B,OAAOgV,MAAMjX,KAAK6D,MACvBA,KAAK2D,OAAOyP,MAAMjX,KAAK6D,MACvBA,KAAK5B,OAAOiV,SAASlX,KAAK6D,MAC1BA,KAAK2D,OAAO2P,SAASnX,KAAK6D,MAC1B,GAAI5E,EAAMyB,UAAU8U,GAChB3R,KAAK2R,GAAKA,OAGV3R,KAAK2R,GAAKtC,IAEd,GAAIjU,EAAMyB,UAAUqY,GAChBlV,KAAKqV,qBAAuBH,OAG5BlV,KAAKqV,qBAAuB,KAEhCrV,KAAKrC,KAAO,OACZqC,KAAK2T,UAAY,SAAW3T,KAAK5B,OAAOuT,GAAK,KAAO3R,KAAK2D,OAAOgO,GAAK,KAMzEsC,cAAe,SAAUF,GACrB,GAAI/T,KAAK5B,SAAW2V,GAAQ/T,KAAK2D,SAAWoQ,EACxC,KAAM,iDAEV,OAAO/T,KAAK5B,SAAW2V,EAAO/T,KAAK2D,OAAS3D,KAAK5B,QAMrDkX,cAAe,SAAUtB,GACrB,GAAIhU,KAAK5B,SAAW4V,EAAK5V,QAAU4B,KAAK5B,SAAW4V,EAAKrQ,OACpD,OAAO3D,KAAK5B,OAEhB,GAAI4B,KAAK2D,SAAWqQ,EAAK5V,QAAU4B,KAAK2D,SAAWqQ,EAAKrQ,OACpD,OAAO3D,KAAK2D,OAEhB,OAAO,MAMX4R,WAAY,SAAUC,EAAIC,GACtB,OAAOzV,KAAK5B,SAAWoX,GAAMxV,KAAK2D,SAAW8R,GAAMzV,KAAK5B,SAAWqX,GAAMzV,KAAK2D,SAAW6R,GAM7FE,SAAU,WACN,MAAO,CAAC1V,KAAK5B,OAAQ4B,KAAK2D,SAM9BkR,aAAc,SAAUd,GACpB,OAAO/T,KAAK5B,SAAW2V,GAAQ/T,KAAK2D,SAAWoQ,GAOnDU,WAAY,SAAUT,GAClB,OAAOtS,EAAS1B,KAAK5B,OAAOgV,MAAOY,IAAStS,EAAS1B,KAAK2D,OAAOyP,MAAOY,IAM5E2B,aAAc,SAAU5B,GACpB3Y,EAAMiG,OAAOrB,KAAK5B,OAAOgV,MAAOpT,MAChC5E,EAAMiG,OAAOrB,KAAK5B,OAAOiV,SAAUrT,MAEnC+T,EAAKX,MAAMjX,KAAK6D,MAChB+T,EAAKV,SAASlX,KAAK6D,MAEnBA,KAAK5B,OAAS2V,GAOlB6B,aAAc,SAAU7B,GACpB3Y,EAAMiG,OAAOrB,KAAK2D,OAAOyP,MAAOpT,MAChC5E,EAAMiG,OAAOrB,KAAK2D,OAAO2P,SAAUtT,MAEnC+T,EAAKX,MAAMjX,KAAK6D,MAChB+T,EAAKT,SAASnX,KAAK6D,MAEnBA,KAAK2D,OAASoQ,GAMlB8B,aAAc,SAAU3W,EAAG4W,GACvB,GAAI9V,KAAK5B,SAAWc,EAChBc,KAAK2V,aAAaG,QAEjB,GAAI9V,KAAK2D,SAAWzE,EACrBc,KAAK4V,aAAaE,IAO1BlQ,QAAS,WACL,IAAImQ,EAAY/V,KAAK5B,OACrB,IAAI4X,EAAYhW,KAAK2D,OAErB3D,KAAK5B,OAAS4X,EACd5a,EAAMiG,OAAO0U,EAAU1C,SAAUrT,MACjCA,KAAK5B,OAAOiV,SAASlX,KAAK6D,MAE1BA,KAAK2D,OAASoS,EACd3a,EAAMiG,OAAO2U,EAAU1C,SAAUtT,MACjCA,KAAK2D,OAAO2P,SAASnX,KAAK6D,MAC1B,OAAOA,MAMXiW,SAAU,SAAUtS,GAChB,GAAI3D,KAAK5B,SAAWuF,GAAU3D,KAAK2D,SAAWA,EAC1C,KAAM,iDAEV,GAAI3D,KAAK2D,SAAWA,EAChB3D,KAAK4F,WAObsQ,kBAAmB,WACf,IAAIjN,EAAIjJ,KAAK4J,QACbX,EAAErD,UACFqD,EAAEkN,SAAW,KACb,OAAOlN,GAMXW,MAAO,WACH,IAAIA,EAAQ,IAAIqL,EAAKjV,KAAK5B,OAAQ4B,KAAK2D,QACvC,OAAOiG,KAUXwM,EAAQzb,EAAM4I,MAAMC,OAAO,CAC3BC,KAAM,SAAU4S,GAKZrW,KAAKoT,MAAQ,GAKbpT,KAAKsW,MAAQ,GAEbtW,KAAKuW,SAAW,IAAI1E,EAKpB7R,KAAKlF,QAAU,KAOfkF,KAAKwW,MAAQ,KACb,GAAIpb,EAAMyB,UAAUwZ,GAChB,GAAIjb,EAAMkC,SAAS+Y,GACfrW,KAAK2R,GAAK0E,MAET,CACDrW,KAAKlF,QAAUub,EACfrW,KAAK2R,GAAK0E,EAAY1E,QAI1B3R,KAAK2R,GAAKtC,IAOdrP,KAAKyT,OAAS,IAAI1L,EAElB/H,KAAKyW,wBAA0B,MAC/BzW,KAAKrC,KAAO,SAOhB+Y,mBAAoB,SAAUC,GAC1B,GAAIvb,EAAM2B,YAAY4Z,GAClBA,EAAe,MAEnB,GAAI3W,KAAKyW,0BAA4BE,EACjC,OAEJ,IAAK,IAAI/a,EAAI,EAAG8L,EAAM1H,KAAKsW,MAAMrY,OAAQrC,EAAI8L,EAAK9L,IAAK,CACnD,IAAImY,EAAO/T,KAAKsW,MAAM1a,GACtBmY,EAAKI,SAAWnU,KAAKkU,YAAYH,GACjCA,EAAKM,QAAUrU,KAAKoU,WAAWL,GAEnC/T,KAAKyW,wBAA0B,MAWnCG,aAAc,SAAUC,EAAW9P,EAAQ+P,GACvC,IAAKD,EACD,KAAM,4BAEV,GAAIzb,EAAM2B,YAAYgK,GAClBA,EAAS,EAGb/G,KAAK0W,qBACL,GAAItb,EAAM2B,YAAY+Z,GAAU,CAC5BA,EAAU,IAAIjF,EACdzW,EAAM2F,QAAQf,KAAKsW,MAAO,SAAUvT,GAChC+T,EAAQpG,IAAI3N,EAAG,SAGvB+T,EAAQhG,IAAI+F,EAAW,MACvBA,EAAUE,MAAQhQ,EAClB,IAAIoN,EAAW0C,EAAU1C,SACzB,IAAK,IAAIvY,EAAI,EAAG8L,EAAMyM,EAASlW,OAAQrC,EAAI8L,EAAK9L,IAAK,CACjD,IAAIob,EAAQ7C,EAASvY,GACrB,IAAKob,GAASF,EAAQlG,IAAIoG,GACtB,SAEJhX,KAAK4W,aAAaI,EAAOjQ,EAAS,EAAG+P,KAU7CG,KAAM,SAAUxY,GACZ,GAAIrD,EAAM2B,YAAY0B,GAClB,IAAKuB,KAAKwW,MAAO,CAEb,IAAIU,EAAQ9b,EAAMiH,MAAMrC,KAAKsW,MAAO,SAAUvT,GAC1C,OAAOA,EAAEuQ,SAASrV,SAAW,IAEjC,GAAIiZ,EACA,OAAOA,EAEX,OAAO9b,EAAMiH,MAAMrC,KAAKsW,YAGxB,OAAOtW,KAAKwW,WAIhBxW,KAAKwW,MAAQ/X,GAUrB0Y,uBAAwB,WACpBnX,KAAKoX,eAAiB,EACtBpX,KAAKqX,iBACL,IAAIC,EAAclc,EAAMkD,UAAU0B,KAAKsW,MAAMrY,QAAS,GAEtD,IAAK,IAAIiB,EAAI,EAAGA,EAAIc,KAAKsW,MAAMrY,OAAQiB,IACnC,GAAIoY,EAAYpY,MAAQ,EAAG,CACvBc,KAAKuX,uBAAuBD,EAAapY,GACzCc,KAAKoX,iBAIb,IAAII,EAAa,GAAI5b,EACrB,IAAKA,EAAI,EAAGA,EAAIoE,KAAKoX,iBAAkBxb,EACnC4b,EAAW5b,GAAK,IAAIwa,EAExB,IAAKxa,EAAI,EAAGA,EAAI0b,EAAYrZ,SAAUrC,EAAG,CACrC,IAAI6b,EAAQD,EAAWF,EAAY1b,IACnC6b,EAAMC,oBAAoB1X,KAAKsW,MAAM1a,IAGzC4b,EAAW1U,KAAK,SAAUrC,EAAGJ,GACzB,OAAOA,EAAEiW,MAAMrY,OAASwC,EAAE6V,MAAMrY,SAEpC,OAAOuZ,GAGXD,uBAAwB,SAAUI,EAAQC,GACtCD,EAAOC,GAAa5X,KAAKoX,eACzB,IAAIrD,EAAO/T,KAAKsW,MAAMsB,GACtBxc,EAAM2F,QAAQgT,EAAKX,MACf,SAAUY,GACN,IAAIrB,EAAOqB,EAAKC,cAAcF,GAC9B,IAAI8D,EAASlF,EAAKvQ,MAClB,GAAIuV,EAAOE,MAAa,EACpB7X,KAAKuX,uBAAuBI,EAAQE,IAEzC7X,OAOX8X,WAAY,WACR,GAAI9X,KAAKhC,UAAW,CAChBgC,KAAKyT,OAAS,IAAI1L,EAClB,OAAO/H,KAAKyT,OAEhB,IAAIpT,EAAI,KACR,IAAK,IAAIzE,EAAI,EAAG8L,EAAM1H,KAAKsW,MAAMrY,OAAQrC,EAAI8L,EAAK9L,IAAK,CACnD,IAAImY,EAAO/T,KAAKsW,MAAM1a,GACtB,IAAKyE,EACDA,EAAI0T,EAAKN,cAGTpT,EAAIA,EAAE+H,MAAM2L,EAAKN,UAGzBzT,KAAKyT,OAASpT,EACd,OAAOL,KAAKyT,QAWhBsE,gBAAiB,SAAUd,GACvB,IAAIe,EAAO,IAAI5B,EACf,IAAI3P,EAAM,IAAIoL,EAAczT,EAAQuF,EACpCqU,EAAKf,KAAOA,EAAKrN,QACjBoO,EAAKf,KAAKF,MAAQ,EAClBiB,EAAKf,KAAKtF,GAAKsF,EAAKtF,GACpBlL,EAAIiK,IAAIuG,EAAMe,EAAKf,MACnBA,EAAKF,MAAQ,EAEb,IAAID,EAAU,GACd,IAAImB,EAAY,GAChBD,EAAKE,SAASF,EAAKf,MACnBH,EAAQ3a,KAAK8a,GACbgB,EAAU9b,KAAK8a,GAEf,IAAIkB,EAAa,EACjB,MAAOF,EAAUha,OAAS,EAAG,CACzB,IAAI0U,EAAOsF,EAAUG,MACrB,IAAK,IAAIC,EAAK,EAAGA,EAAK1F,EAAKS,MAAMnV,OAAQoa,IAAM,CAC3C,IAAIrE,EAAOrB,EAAKS,MAAMiF,GACtB,IAAIC,EAAKtE,EAAKC,cAActB,GAC5B,GAAIjR,EAASoV,EAASwB,GAClB,SAGJA,EAAGvB,MAAQpE,EAAKoE,MAAQ,EACxB,GAAIoB,EAAaG,EAAGvB,MAAQ,EACxBoB,EAAaG,EAAGvB,MAAQ,EAE5B,IAAKrV,EAASuW,EAAWK,GACrBL,EAAU9b,KAAKmc,GAEnB,IAAK5W,EAASoV,EAASwB,GACnBxB,EAAQ3a,KAAKmc,GAEjB,GAAI7R,EAAIsK,YAAY4B,GAChBvU,EAASqI,EAAImK,IAAI+B,OAEhB,CACDvU,EAASuU,EAAK/I,QACdxL,EAAO2Y,MAAQpE,EAAKoE,MACpB3Y,EAAOuT,GAAKgB,EAAKhB,GACjBlL,EAAIiK,IAAIiC,EAAMvU,GAElB,GAAIqI,EAAIsK,YAAYuH,GAChB3U,EAAS8C,EAAImK,IAAI0H,OAEhB,CACD3U,EAAS2U,EAAG1O,QACZjG,EAAOoT,MAAQuB,EAAGvB,MAClBpT,EAAOgO,GAAK2G,EAAG3G,GACflL,EAAIiK,IAAI4H,EAAI3U,GAEhB,IAAI4U,EAAU,IAAItD,EAAK7W,EAAQuF,GAC/BqU,EAAKQ,QAAQD,IAKrB,IAAIE,EAAa,GACjB,IAAK,IAAI7c,EAAI,EAAGA,EAAIuc,EAAYvc,IAC5B6c,EAAWtc,KAAK,IAGpBf,EAAM2F,QAAQiX,EAAK1B,MAAO,SAAUvC,GAChC0E,EAAW1E,EAAKgD,OAAO5a,KAAK4X,KAGhCiE,EAAKS,WAAaA,EAClBT,EAAKtB,qBACL,OAAOsB,GASXU,eAAgB,SAAUC,EAAeC,GACrC,GAAIxd,EAAM2B,YAAY4b,GAClBA,EAAgB,GAEpB,GAAIvd,EAAM2B,YAAY6b,GAClBA,EAAoB,EAExB,GAAI5Y,KAAKsW,MAAMrY,SAAW,EACtB,OAAO,KAEX,GAAI+B,KAAKsW,MAAMrY,SAAW,EACtB,OAAOyD,EAASiX,EAAe3Y,KAAKsW,MAAM,IAAM,KAAOtW,KAAKsW,MAAM,GAEtE,IAAIuC,EAAOpe,EAAEgK,KAAKzE,KAAKsW,MAAO,SAAUvC,GACpC,OAAQrS,EAASiX,EAAe5E,IAASA,EAAKa,UAAYgE,IAE9D,GAAIxd,EAAM4C,QAAQ6a,GACd,OAAO,KAEX,OAAOA,EAAKzd,EAAMkE,cAAc,EAAGuZ,EAAK5a,UAM5CD,QAAS,WACL,OAAO5C,EAAM4C,QAAQgC,KAAKsW,QAM9BwC,UAAW,WACP,OAAO1d,EAAMsH,IAAI1C,KAAKoT,MAAO,SAAUY,GACnC,OAAOtS,EAAS1B,KAAKsW,MAAOtC,EAAK5V,SAAWsD,EAAS1B,KAAKsW,MAAOtC,EAAKrQ,SACvE3D,OAOPoU,WAAY,SAAUrR,GAClB,IAAK/C,KAAK+Y,QAAQhW,GACd,KAAM,4CAEV,OAAOA,EAAEqR,cAObF,YAAa,SAAUnR,GACnB,IAAK/C,KAAK+Y,QAAQhW,GACd,KAAM,4CAEV,OAAOA,EAAEmR,eAMbsE,QAAS,SAAUQ,EAAcrV,EAAQ6Q,GAErC,GAAIpZ,EAAM2B,YAAYic,GAClB,KAAM,yCAEV,GAAI5d,EAAM2B,YAAY4G,GAElB,GAAIvI,EAAMyB,UAAUmc,EAAarb,OAASqb,EAAarb,OAAS,OAAQ,CACpEqC,KAAKiZ,gBAAgBD,GACrB,YAGA,KAAM,yCAId,IAAIE,EAAclZ,KAAKmZ,QAAQH,GAC/B,GAAI5d,EAAM2B,YAAYmc,GAClBA,EAAclZ,KAAKoZ,QAAQJ,GAE/B,IAAIK,EAAcrZ,KAAKmZ,QAAQxV,GAC/B,GAAIvI,EAAM2B,YAAYsc,GAClBA,EAAcrZ,KAAKoZ,QAAQzV,GAG/B,IAAI4U,EAAU,IAAItD,EAAKiE,EAAaG,GAEpC,GAAIje,EAAMyB,UAAU2X,GAChB+D,EAAQ/D,MAAQA,EAQpBxU,KAAKoT,MAAMjX,KAAKoc,GAEhB,OAAOA,GAMXe,eAAgB,WACZ,MAAOtZ,KAAKoT,MAAMnV,OAAS,EAAG,CAC1B,IAAI+V,EAAOhU,KAAKoT,MAAM,GACtBpT,KAAK0U,WAAWV,KAOxBiF,gBAAiB,SAAUjF,GAEvB,GAAIhU,KAAKuZ,QAAQvF,GACb,OAEJhU,KAAKoT,MAAMjX,KAAK6X,GAChB,GAAIhU,KAAK+Y,QAAQ/E,EAAK5V,OAAOuT,IAAK,CAE9B,IAAI1S,EAAIe,KAAKmZ,QAAQnF,EAAK5V,OAAOuT,IACjCqC,EAAK2B,aAAa1W,QAGlBe,KAAKoZ,QAAQpF,EAAK5V,QAGtB,GAAI4B,KAAK+Y,QAAQ/E,EAAKrQ,OAAOgO,IAAK,CAC9B,IAAI6H,EAAIxZ,KAAKmZ,QAAQnF,EAAKrQ,OAAOgO,IACjCqC,EAAK4B,aAAa4D,QAGlBxZ,KAAKoZ,QAAQpF,EAAKrQ,SAsB1B4V,QAAS,SAAUE,GACf,GAAIre,EAAMkC,SAASmc,GACf,OAAOre,EAAM+F,IAAInB,KAAKoT,MAAO,SAAUY,GACnC,OAAOA,EAAKrC,KAAO8H,IAG3B,GAAIA,EAAS9b,OAAS,OAClB,OAAO+D,EAAS1B,KAAKoT,MAAOqG,GAEhC,KAAM,yDAKVN,QAAS,SAAUO,GACf,IAAI/H,EAAK+H,EAAS/H,IAAM+H,EACxB,GAAI1Z,KAAKuW,SAASxF,YAAYY,GAC1B,OAAO3R,KAAKuW,SAAS3F,IAAIe,IAOjCoH,QAAS,SAAUW,GACf,IAAI/H,EAAK+H,EAAS/H,IAAM+H,EACxB,OAAO1Z,KAAKuW,SAASxF,YAAYY,IAGrCuG,SAAU,SAASnE,GACf/T,KAAKsW,MAAMna,KAAK4X,GAChB/T,KAAKuW,SAAS7F,IAAIqD,EAAKpC,GAAIoC,IAG/B4F,YAAa,SAAS5F,GAClB3Y,EAAMiG,OAAOrB,KAAKsW,MAAOvC,GACzB/T,KAAKuW,SAASlV,OAAO0S,EAAKpC,KAO9BiI,WAAY,SAAUF,GAClB,IAAI3W,EAAI2W,EACR,GAAIte,EAAMkC,SAASoc,GACf3W,EAAI/C,KAAKmZ,QAAQO,GAGrB,GAAIte,EAAMyB,UAAUkG,GAAI,CACpB,IAAIqQ,EAAQrQ,EAAEqQ,MACdrQ,EAAEqQ,MAAQ,GACV,IAAK,IAAIxX,EAAI,EAAG8L,EAAM0L,EAAMnV,OAAQrC,EAAI8L,EAAK9L,IAAK,CAC9C,IAAIoY,EAAOZ,EAAMxX,GACjBoE,KAAK0U,WAAWV,GAEpBhU,KAAK2Z,YAAY5W,QAGjB,KAAM,iEAOd8W,aAAc,SAAUC,EAAIC,GACxB,OAAO3e,EAAM+F,IAAInB,KAAKoT,MAAO,SAAUY,GACnC,OAAOA,EAAK5V,QAAU0b,GAAM9F,EAAKrQ,QAAUoW,GAAM/F,EAAK5V,QAAU2b,GAAM/F,EAAKrQ,QAAUmW,KAO7FpF,WAAY,SAAUV,GAKlB5Y,EAAMiG,OAAOrB,KAAKoT,MAAOY,GAEzB5Y,EAAMiG,OAAO2S,EAAK5V,OAAOiV,SAAUW,GACnC5Y,EAAMiG,OAAO2S,EAAK5V,OAAOgV,MAAOY,GAChC5Y,EAAMiG,OAAO2S,EAAKrQ,OAAO2P,SAAUU,GACnC5Y,EAAMiG,OAAO2S,EAAKrQ,OAAOyP,MAAOY,IAQpCoF,QAAS,SAAUM,EAAUM,EAAYxF,GAErC,IAAIyF,EAAU,KAEd,IAAK7e,EAAMyB,UAAU6c,GACjB,KAAM,iDAGV,GAAIte,EAAMkC,SAASoc,GAAW,CAC1B,GAAI1Z,KAAK+Y,QAAQW,GACb,OAAO1Z,KAAKmZ,QAAQO,GAExBO,EAAU,IAAI/G,EAAKwG,OAElB,CACD,GAAI1Z,KAAK+Y,QAAQW,GACb,OAAO1Z,KAAKmZ,QAAQO,GAGxBO,EAAUP,EAGd,GAAIte,EAAMyB,UAAUmd,GAChBC,EAAQxG,OAAOuG,GAGnB,GAAI5e,EAAMyB,UAAU2X,GAChByF,EAAQzF,MAAQA,EAEpBxU,KAAKkY,SAAS+B,GACd,OAAOA,GAMXvC,oBAAqB,SAAU3D,GAC3B,IAAK/T,KAAK+Y,QAAQhF,GACd/T,KAAKkY,SAASnE,GAGlB,IAAImG,EAAWnG,EAAKV,SACpBU,EAAKV,SAAW,GAChBjY,EAAM2F,QAAQmZ,EAAU,SAAUlG,GAC9BhU,KAAKiZ,gBAAgBjF,IACtBhU,OAMPqX,eAAgB,WACZ,IAAIzb,EACJ,IAAKA,EAAI,EAAGA,EAAIoE,KAAKsW,MAAMrY,SAAUrC,EACjCoE,KAAKsW,MAAM1a,GAAGwG,MAAQxG,EAG1B,IAAKA,EAAI,EAAGA,EAAIoE,KAAKoT,MAAMnV,SAAUrC,EACjCoE,KAAKoT,MAAMxX,GAAGwG,MAAQxG,GAO9BgO,MAAO,SAAUuQ,GACb,IAAI7F,EAAO,IAAI8B,EACf,IAAIgE,EAAOhf,EAAMyB,UAAUsd,IAAgBA,IAAgB,KAC3D,GAAIC,EAAM,CACN9F,EAAK+F,QAAU,IAAIxI,EACnByC,EAAKgG,QAAU,IAAIzI,EAGvB,IAAIpL,EAAM,IAAIoL,EACdzW,EAAM2F,QAAQf,KAAKsW,MAAO,SAAUiE,GAChC,IAAIC,EAAQD,EAAU3Q,QACtBnD,EAAIqK,IAAIyJ,EAAWC,GACnBlG,EAAK4D,SAASsC,GAEd,GAAIJ,EACA9F,EAAK+F,QAAQvJ,IAAI0J,EAAOD,KAIhCnf,EAAM2F,QAAQf,KAAKoT,MAAO,SAAUqH,GAChC,GAAIhU,EAAIsK,YAAY0J,EAAarc,SAAWqI,EAAIsK,YAAY0J,EAAa9W,QAAS,CAC9E,IAAI+W,EAAWpG,EAAKkE,QAAQ/R,EAAImK,IAAI6J,EAAarc,QAASqI,EAAImK,IAAI6J,EAAa9W,SAC/E,GAAIyW,EACA9F,EAAKgG,QAAQxJ,IAAI4J,EAAUD,MAKvC,OAAOnG,GAQXqG,UAAW,SAAUC,GACjB,OAAOxE,EAAMhb,MAAMuf,UAAU3a,KAAM4a,IAQvCC,oBAAqB,SAAUhE,EAAWiE,GACtC,GAAI1f,EAAM2B,YAAY8Z,GAClB,KAAM,sCAEV,GAAIzb,EAAM2B,YAAY+d,GAClB,KAAM,gCAEV,IAAK9a,KAAK+Y,QAAQlC,GACd,KAAM,iDAEV,IAAIkE,EAAY/a,KAAKmZ,QAAQtC,GAC7B,IAAIC,EAAU,GACd9W,KAAKgb,aAAaD,EAAWD,EAAQhE,IAGzCkE,aAAc,SAAUjH,EAAM+G,EAAQhE,GAElCgE,EAAO/G,GACP+C,EAAQ3a,KAAK4X,GACb,IAAII,EAAWJ,EAAKG,cACpB,IAAK,IAAItY,EAAI,EAAG8L,EAAMyM,EAASlW,OAAQrC,EAAI8L,EAAK9L,IAAK,CACjD,IAAIob,EAAQ7C,EAASvY,GACrB,GAAI8F,EAASoV,EAASE,GAClB,SAEJhX,KAAKgb,aAAahE,EAAO8D,EAAQhE,KASzCmE,sBAAuB,SAAUpE,EAAWiE,GAExC,GAAI1f,EAAM2B,YAAY8Z,GAClB,KAAM,sCAEV,GAAIzb,EAAM2B,YAAY+d,GAClB,KAAM,gCAGV,IAAK9a,KAAK+Y,QAAQlC,GACd,KAAM,iDAEV,IAAIkE,EAAY/a,KAAKmZ,QAAQtC,GAC7B,IAAIqE,EAAQ,IAAI3I,EAChB,IAAIuE,EAAU,GACdoE,EAAMxI,QAAQqI,GAEd,MAAOG,EAAMjd,OAAS,EAAG,CACrB,IAAI8V,EAAOmH,EAAMtI,UACjBkI,EAAO/G,GACP+C,EAAQ3a,KAAK4X,GACb,IAAII,EAAWJ,EAAKG,cACpB,IAAK,IAAItY,EAAI,EAAG8L,EAAMyM,EAASlW,OAAQrC,EAAI8L,EAAK9L,IAAK,CACjD,IAAIob,EAAQ7C,EAASvY,GACrB,GAAI8F,EAASoV,EAASE,IAAUtV,EAASwZ,EAAOlE,GAC5C,SAEJkE,EAAMxI,QAAQsE,MAiB1BmE,6BAA8B,SAAUC,EAAoBrH,EAAMsH,EAASC,EAAUC,EAAWC,EAAOpZ,GACnGiZ,EAAQ3K,IAAIqD,EAAM3R,GAClBkZ,EAAS5K,IAAIqD,EAAM3R,GACnBA,IAEAoZ,EAAMrf,KAAK4X,GAEX,IAAII,EAAWJ,EAAKG,cAAevB,EACnC,IAAK,IAAI/W,EAAI,EAAG8L,EAAMyM,EAASlW,OAAQrC,EAAI8L,EAAK9L,IAAK,CACjD+W,EAAOwB,EAASvY,GAChB,IAAKyf,EAAQtK,YAAY4B,GAAO,CAC5B3S,KAAKmb,6BAA6BC,EAAoBzI,EAAM0I,EAASC,EAAUC,EAAWC,EAAOpZ,GACjGkZ,EAAS5K,IAAIqD,EAAM9X,KAAKkJ,IAAImW,EAAS1K,IAAImD,GAAOuH,EAAS1K,IAAI+B,UAE5D,GAAIjR,EAAS8Z,EAAO7I,GACrB2I,EAAS5K,IAAIqD,EAAM9X,KAAKkJ,IAAImW,EAAS1K,IAAImD,GAAOsH,EAAQzK,IAAI+B,KAIpE,GAAI2I,EAAS1K,IAAImD,KAAUsH,EAAQzK,IAAImD,GAAO,CAC1C,IAAI0H,EAAY,GAChB,EAAG,CACC9I,EAAO6I,EAAMpD,MACbqD,EAAUtf,KAAKwW,SAEZA,IAASoB,GAChB,IAAKqH,GAAuBK,EAAUxd,OAAS,EAC3Csd,EAAUpf,KAAKsf,KAW3BC,WAAY,SAAUN,GAClB,GAAIhgB,EAAM2B,YAAYqe,GAClBA,EAAqB,KAEzB,IAAIC,EAAU,IAAIxJ,EAClB,IAAIyJ,EAAW,IAAIzJ,EACnB,IAAI0J,EAAY,GAChB,IAAIC,EAAQ,GACZ,IAAK,IAAI5f,EAAI,EAAG8L,EAAM1H,KAAKsW,MAAMrY,OAAQrC,EAAI8L,EAAK9L,IAAK,CACnD,IAAImY,EAAO/T,KAAKsW,MAAM1a,GACtB,GAAIyf,EAAQtK,YAAYgD,GACpB,SAEJ/T,KAAKmb,6BAA6BC,EAAoBrH,EAAMsH,EAASC,EAAUC,EAAWC,EAAO,GAErG,OAAOD,GAOXI,UAAW,WACP,OAAOvgB,EAAM4C,QAAQgC,KAAK0b,eAO9BE,WAAY,SAAUC,GAClB,IAAIC,EAAaD,EAAMlB,YACvB,IAAIoB,EAAY/b,KAAK2a,YACrB,OAAOvf,EAAMsH,IAAIoZ,EAAY,SAAU7c,GACnC,OAAOyC,EAASqa,EAAW9c,MAQnC+c,YAAa,WAET,GAAIhc,KAAKhC,WAAagC,KAAKsW,MAAMrY,QAAU,GAAK+B,KAAKoT,MAAMnV,QAAU,EACjE,MAAO,GAGX,GAAI+B,KAAKsW,MAAMrY,QAAU,EAAG,CACxB,IAAIkE,EAAS,GACb,GAAInC,KAAKoT,MAAMnV,OAAS,EAAG,CACvB,IAAIge,EAAUjc,KAAKoT,MAAM,GACzB,IAAI8I,EAAUD,EAAQ7d,OACtB,IAAK,IAAIxC,EAAI,EAAG8L,EAAM1H,KAAKoT,MAAMnV,OAAQrC,EAAI8L,EAAK9L,IAAK,CACnD,IAAIoY,EAAOhU,KAAKoT,MAAMxX,GACtB,GAAIoY,EAAK5V,QAAU8d,EACf,SAEJ,IAAIC,EAAMnI,EAAKpO,UACfzD,EAAOhG,KAAKggB,IAGpB,OAAOha,EAGX,IAAImS,EAAOtU,KAAK4J,MAAM,MACtB,IAAIwS,EAAIpc,KAAKsW,MAAMrY,OAEnB,IAAIoe,EAAmB,IAAIxK,EAQ3B,IAAIyK,EAAgB,SAAUvI,GAC1B,GAAIA,EAAKV,SAASpV,SAAW,EACzB,OAAQ,EAAIme,OAEX,GAAIrI,EAAKT,SAASrV,SAAW,EAC9B,OAAQme,EAAI,OAGZ,OAAOrI,EAAKV,SAASpV,OAAS8V,EAAKT,SAASrV,QASpD,IAAIse,EAAwB,SAAUxI,EAAMsI,GACxC,IAAIG,EAAYF,EAAcvI,EAAMqI,GACpC,IAAKC,EAAiBtL,YAAYyL,GAC9BH,EAAiBvL,IAAI0L,EAAW,IAEpCH,EAAiBzL,IAAI4L,GAAWrgB,KAAK4X,IAGzC3Y,EAAM2F,QAAQuT,EAAKgC,MAAO,SAAUpX,GAChCqd,EAAsBrd,EAAGmd,KAG7B,IAAII,EAAc,GAClB,IAAIC,EAAc,GAElB,MAAOpI,EAAKgC,MAAMrY,OAAS,EAAG,CAC1B,IAAIG,EAAQuF,EAAQ6Y,EACpB,GAAIH,EAAiBtL,YAAY,EAAIqL,GAAI,CACrC,IAAIO,EAAUN,EAAiBzL,IAAI,EAAIwL,GACvC,MAAOO,EAAQ1e,OAAS,EAAG,CACvB0F,EAASgZ,EAAQvE,MACjB,IAAK,IAAIwE,EAAK,EAAGA,EAAKjZ,EAAOyP,MAAMnV,OAAQ2e,IAAM,CAC7C,IAAIC,EAAalZ,EAAOyP,MAAMwJ,GAC9Bxe,EAASye,EAAW5I,cAActQ,GAClC6Y,EAAYF,EAAcle,EAAQge,GAClChhB,EAAMiG,OAAOgb,EAAiBzL,IAAI4L,GAAYpe,GAC9CA,EAAOsW,WAAWmI,GAClBN,EAAsBne,EAAQie,GAElC/H,EAAKqF,YAAYhW,GACjB+Y,EAAYI,QAAQnZ,IAK5B,GAAI0Y,EAAiBtL,YAAYqL,EAAI,GAAI,CACrC,IAAIW,EAAUV,EAAiBzL,IAAIwL,EAAI,GACvC,MAAOW,EAAQ9e,OAAS,EAAG,CACvBG,EAAS2e,EAAQ3E,MACjB,IAAK,IAAI4E,EAAK,EAAGA,EAAK5e,EAAOgV,MAAMnV,OAAQ+e,IAAM,CAC7C,IAAIC,EAAa7e,EAAOgV,MAAM4J,GAC9BrZ,EAASsZ,EAAWhJ,cAAc7V,GAClCoe,EAAYF,EAAc3Y,EAAQyY,GAClChhB,EAAMiG,OAAOgb,EAAiBzL,IAAI4L,GAAY7Y,GAC9CA,EAAO+Q,WAAWuI,GAClBV,EAAsB5Y,EAAQ0Y,GAElCI,EAAYtgB,KAAKiC,GACjBkW,EAAKqF,YAAYvb,IAIzB,GAAIkW,EAAKgC,MAAMrY,OAAS,EACpB,IAAK,IAAIjC,EAAIogB,EAAI,EAAGpgB,EAAI,EAAIogB,EAAGpgB,IAC3B,GAAIqgB,EAAiBtL,YAAY/U,IAC7BqgB,EAAiBzL,IAAI5U,GAAGiC,OAAS,EAAG,CACpC,IAAIif,EAAUb,EAAiBzL,IAAI5U,GACnC,IAAIkD,EAAIge,EAAQ9E,MAChB,IAAK,IAAI+E,EAAK,EAAGA,EAAKje,EAAEkU,MAAMnV,OAAQkf,IAAM,CACxC,IAAIC,EAAMle,EAAEkU,MAAM+J,GAClB,IAAIE,EAAID,EAAInJ,cAAc/U,GAC1Bsd,EAAYF,EAAce,EAAGjB,GAC7BhhB,EAAMiG,OAAOgb,EAAiBzL,IAAI4L,GAAYa,GAC9CA,EAAE3I,WAAW0I,GACbb,EAAsBc,EAAGhB,GAE7BI,EAAYtgB,KAAK+C,GACjBoV,EAAKqF,YAAYza,GACjB,OAMhBud,EAAcA,EAAYa,OAAOZ,GAEjC,IAAIa,EAAc,IAAI1L,EACtB,IAAK,IAAI2L,EAAK,EAAGA,EAAKxd,KAAKsW,MAAMrY,OAAQuf,IACrCD,EAAYzM,IAAIwD,EAAK+F,QAAQzJ,IAAI6L,EAAYe,IAAMA,GAGvD,IAAIC,EAAgB,GACpBriB,EAAM2F,QAAQf,KAAKoT,MAAO,SAAUY,GAChC,GAAIuJ,EAAY3M,IAAIoD,EAAK5V,QAAUmf,EAAY3M,IAAIoD,EAAKrQ,QAAS,CAC7DqQ,EAAKpO,UACL6X,EAActhB,KAAK6X,MAG3B,OAAOyJ,KAOfrH,EAAMsH,WAAa,CAMfC,WAAY,WACR,OAAOvH,EAAMhb,MAAMmN,MAAM,CAAE,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,UAQvFqV,QAAS,WACL,OAAOxH,EAAMhb,MAAMmN,MAAM,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QAAS,QAAS,QAChH,SAAU,SAAU,QAAS,QAAS,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,QAAS,SAAU,SAAU,WAQvIsV,WAAY,WACR,OAAOzH,EAAMhb,MAAMmN,MAAM,CAAE,OAAQ,OAAQ,UAS/CuV,WAAY,SAAUC,GAClB,GAAI3iB,EAAM2B,YAAYghB,GAClBA,EAAS,EAEb,OAAO3H,EAAMhb,MAAM4iB,mBAAmBD,EAAQ,IASlDE,OAAQ,SAAUhgB,GACd,GAAI7C,EAAM2B,YAAYkB,GAClBA,EAAS,GAEb,OAAOmY,EAAMhb,MAAM4iB,mBAAmB/f,EAAQ,IAalDigB,KAAM,SAAUH,EAAQI,GACpB,OAAO/H,EAAMhb,MAAM4iB,mBAAmBD,EAAQI,IAclDC,OAAQ,SAAUL,EAAQI,EAAeE,GACrC,OAAOjI,EAAMhb,MAAMkjB,qBAAqBP,EAAQI,EAAeE,IAQnEE,SAAU,WACN,OAAOnI,EAAMhb,MAAMmN,MACf,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,UAYjFiW,KAAM,SAAUzb,EAAG7C,GACf,IAAIue,EAAI,IAAI3jB,EAAQsb,MACpB,GAAIrT,GAAK,GAAK7C,GAAK,EACf,OAAOue,EAGX,IAAK,IAAI7iB,EAAI,EAAGA,EAAImH,EAAI,EAAGnH,IAAK,CAC5B,IAAI8iB,EAAW,KACf,IAAK,IAAI7iB,EAAI,EAAGA,EAAIqE,EAAI,EAAGrE,IAAK,CAE5B,IAAIkY,EAAO,IAAIb,EAAKtX,EAAE4B,WAAa,IAAM3B,EAAE2B,YAC3CihB,EAAErF,QAAQrF,GACV,GAAI2K,EACAD,EAAEjG,QAAQkG,EAAU3K,GAExB,GAAInY,EAAI,EAAG,CACP,IAAIgN,EAAO6V,EAAEtF,SAASvd,EAAI,GAAG4B,WAAa,IAAM3B,EAAE2B,YAClDihB,EAAEjG,QAAQ5P,EAAMmL,GAEpB2K,EAAW3K,GAGnB,OAAO0K,IAQfrI,EAAMhb,MAAQ,CAMVmN,MAAO,SAAUoW,GAEb,IAAIC,EAAcnH,EAAQ,IAAI3c,EAAQsb,MAASzH,EAAQgQ,EAAYjW,QACnE,IAAK,IAAI9M,EAAI,EAAG8L,EAAMiH,EAAM1Q,OAAQrC,EAAI8L,EAAK9L,IAAK,CAC9C,IAAIijB,EAAOlQ,EAAM/S,GACjB,GAAIR,EAAMkC,SAASuhB,GACnB,CACI,GAAIA,EAAKrd,QAAQ,MAAQ,EACrB,KAAM,0CAEV,IAAI1C,EAAI+f,EAAK1f,MAAM,MACnB,GAAIL,EAAEb,QAAU,EACZ,KAAM,0CAEV2gB,EAAe,IAAI3J,EAAKnW,EAAE,GAAIA,EAAE,IAChC2Y,EAAMe,QAAQoG,GAElB,GAAIxjB,EAAM4B,SAAS6hB,GAAO,CACtB,IAAKD,EACD,KAAM,8CAEVjkB,EAAMK,WAAW4jB,EAAcC,IAGvC,OAAOpH,GAOXkD,UAAW,SAAUlD,EAAOmD,GACxB,GAAIxf,EAAM2B,YAAY0a,GAClB,KAAM,sDAEV,GAAIrc,EAAM2B,YAAY6d,GAClBA,EAAS,MAEb,IAAIkE,EAAM,GACV,IAAK,IAAIljB,EAAI,EAAG8L,EAAM+P,EAAMrE,MAAMnV,OAAQrC,EAAI8L,EAAK9L,IAAK,CACpD,IAAIoY,EAAOyD,EAAMrE,MAAMxX,GACvBkjB,EAAI3iB,KAAK6X,EAAK5V,OAAOuT,GAAK,KAAOqC,EAAKrQ,OAAOgO,IAC7C,GAAIiJ,EACAkE,EAAI3iB,KAAK,CAACwV,GAAIqC,EAAKrC,KAG3B,OAAOmN,GAYXC,UAAW,SAAUC,EAAclgB,EAAG6S,EAAIsN,GACtC,GAAI7jB,EAAM2B,YAAY+B,GAClBA,EAAI,IAAIhE,EAAQsE,MAAM,EAAG,GAG7B,GAAIhE,EAAM2B,YAAY4U,GAClBA,EAAKtC,IAGT4P,EAAgBtkB,EAAMK,WAAW,CAC7BsN,MAAO,GACPD,OAAQ,GACRsJ,GAAIA,EACJuN,OAAQ,GACRC,KAAM,UACNzL,KAAM,SACN0L,SAAU,MACVrjB,EAAG+C,EAAE/C,EACLS,EAAGsC,EAAEtC,GACNyiB,GAEH,OAAOD,EAAaK,SAASJ,IAWjCK,eAAgB,SAAUxkB,EAASmK,EAAMF,EAAIwa,GACzC,OAAOzkB,EAAQ0kB,QAAQva,EAAMF,EAAIwa,IAQrCE,uBAAwB,SAAU3kB,EAAS2c,EAAOiI,EAAUC,GAExD,GAAIvkB,EAAM2B,YAAYjC,GAClB,KAAM,oCAEV,GAAIM,EAAM2B,YAAY0a,GAClB,KAAM,kCAEV,GAAIrc,EAAM2B,YAAY2iB,GAClBA,EAAW,KAEf,GAAItkB,EAAM2B,YAAY4iB,GAClBA,EAAa,MAGjB,IAAIrX,EAAQxN,EAAQ0H,QAAQod,aAAe,IAC3C,IAAIvX,EAASvN,EAAQ0H,QAAQqd,cAAgB,IAC7C,IAAIpZ,EAAM,GAAIsN,EAAMZ,EACpB,IAAK,IAAIvX,EAAI,EAAG8L,EAAM+P,EAAMnB,MAAMrY,OAAQrC,EAAI8L,EAAK9L,IAAK,CACpDmY,EAAO0D,EAAMnB,MAAM1a,GACnB,IAAIkD,EAAIiV,EAAKtR,SACb,GAAIrH,EAAM2B,YAAY+B,GAClB,GAAI1D,EAAMyB,UAAUkX,EAAKhY,IAAMX,EAAMyB,UAAUkX,EAAKvX,GAChDsC,EAAI,IAAIM,EAAM2U,EAAKhY,EAAGgY,EAAKvX,QAG3BsC,EAAI,IAAIM,EAAMhE,EAAMkE,cAAc,GAAIgJ,EAAQ,IAAKlN,EAAMkE,cAAc,GAAI+I,EAAS,KAG5F,IAAIyX,EAAM,GAEV,GAAI/L,EAAKpC,KAAO,UAUX,GAAIgO,EACLhlB,EAAMK,WAAW8kB,EAAK,CAClBxX,MAAOrM,KAAKyD,SAAW,IAAM,GAC7B2I,OAAQpM,KAAKyD,SAAW,GAAK,GAC7BgU,KAAM,YACNyL,KAAM,CACFY,MAAO,aAKnB5M,EAAQnT,KAAK+e,UAAUjkB,EAASgE,EAAGiV,EAAKpC,GAAImO,GAG5C,IAAIrM,EAASN,EAAMM,SACnB,GAAIrY,EAAMyB,UAAU4W,GAAS,CACzBM,EAAKhY,EAAI0X,EAAO1X,EAChBgY,EAAKvX,EAAIiX,EAAOjX,EAChBuX,EAAKzL,MAAQmL,EAAOnL,MACpByL,EAAK1L,OAASoL,EAAOpL,OAEzB5B,EAAIsN,EAAKpC,IAAMwB,EAEnB,IAAK,IAAI6M,EAAM,EAAGA,EAAMvI,EAAMrE,MAAMnV,OAAQ+hB,IAAO,CAC/C,IAAIhM,EAAOyD,EAAMrE,MAAM4M,GACvB,IAAIC,EAAcxZ,EAAIuN,EAAK5V,OAAOuT,IAClC,GAAIvW,EAAM2B,YAAYkjB,GAClB,SAEJ,IAAIC,EAAczZ,EAAIuN,EAAKrQ,OAAOgO,IAClC,GAAIvW,EAAM2B,YAAYmjB,GAClB,SAEJlgB,KAAKsf,eAAexkB,EAASmlB,EAAaC,EAAa,CAACvO,GAAIqC,EAAKrC,KAGrE,GAAI+N,EAAU,CACV,IAAIS,EAAI,IAAIrlB,EAAQslB,aAAatlB,GACjCqlB,EAAEE,YAAY5I,EAAO,CAAC6I,YAAa,QACnC,IAAK,IAAIC,EAAM,EAAGA,EAAM9I,EAAMnB,MAAMrY,OAAQsiB,IAAO,CAC/CxM,EAAO0D,EAAMnB,MAAMiK,GACnBpN,EAAQ1M,EAAIsN,EAAKpC,IACjBwB,EAAMM,OAAO,IAAI1L,EAAKgM,EAAKhY,EAAGgY,EAAKvX,EAAGuX,EAAKzL,MAAOyL,EAAK1L,YAcnE2V,mBAAoB,SAAUD,EAAQI,GAClC,GAAI/iB,EAAM2B,YAAYghB,GAClBA,EAAS,EAEb,GAAI3iB,EAAM2B,YAAYohB,GAClBA,EAAgB,EAGpB,IAAIM,EAAI,IAAI3jB,EAAQsb,MAASoK,GAAW,EAAGC,EAAY,GAAIC,EAC3D,GAAI3C,GAAU,GAAKI,GAAiB,EAChC,OAAOM,EAEX,IAAIxH,EAAO,IAAI/D,KAAQsN,GAAShjB,YAChCihB,EAAErF,QAAQnC,GACVwH,EAAExH,KAAOA,EACTwJ,EAAUtkB,KAAK8a,GACf,IAAK,IAAIrb,EAAI,EAAGA,EAAImiB,EAAQniB,IAAK,CAC7B8kB,EAAO,GACP,IAAK,IAAI7kB,EAAI,EAAGA,EAAI4kB,EAAUxiB,OAAQpC,IAAK,CACvC,IAAI8kB,EAASF,EAAU5kB,GACvB,IAAK,IAAIG,EAAI,EAAGA,EAAImiB,EAAeniB,IAAK,CACpC,IAAI+D,EAAO,IAAImT,KAAQsN,GAAShjB,YAChCihB,EAAEjG,QAAQmI,EAAQ5gB,GAClB2gB,EAAKvkB,KAAK4D,IAGlB0gB,EAAYC,EAEhB,OAAOjC,GAaXH,qBAAsB,SAAUP,EAAQI,EAAeyC,GACnD,GAAIxlB,EAAM2B,YAAYghB,GAClBA,EAAS,EAEb,GAAI3iB,EAAM2B,YAAYohB,GAClBA,EAAgB,EAEpB,GAAI/iB,EAAM2B,YAAY6jB,GAClBA,EAAY,EAEhB,IAAInC,EAAI,IAAI3jB,EAAQsb,MAASoK,GAAW,EAAGC,EAAY,GAAIC,EAC3D,GAAI3C,GAAU,GAAKI,GAAiB,GAAKyC,GAAa,EAClD,OAAOnC,EAGX,IAAK,IAAIjF,EAAI,EAAGA,EAAIoH,EAAWpH,IAAK,CAChC,IAAIvC,EAAO,IAAI/D,KAAQsN,GAAShjB,YAChCihB,EAAErF,QAAQnC,GACVwJ,EAAY,CAACxJ,GACb,IAAK,IAAIrb,EAAI,EAAGA,EAAImiB,EAAQniB,IAAK,CAC7B8kB,EAAO,GACP,IAAK,IAAI7kB,EAAI,EAAGA,EAAI4kB,EAAUxiB,OAAQpC,IAAK,CACvC,IAAI8kB,EAASF,EAAU5kB,GACvB,IAAK,IAAIG,EAAI,EAAGA,EAAImiB,EAAeniB,IAAK,CACpC,IAAI+D,EAAO,IAAImT,KAAQsN,GAAShjB,YAChCihB,EAAEjG,QAAQmI,EAAQ5gB,GAClB2gB,EAAKvkB,KAAK4D,IAGlB0gB,EAAYC,GAGpB,OAAOjC,GAUXoC,2BAA4B,SAAUC,EAAWC,EAAcC,GAW3D,GAAI5lB,EAAM2B,YAAY+jB,GAClBA,EAAY,GAEhB,GAAI1lB,EAAM2B,YAAYgkB,GAClBA,EAAe,EAEnB,GAAI3lB,EAAM2B,YAAYikB,GAClBA,EAAS,MAGb,IAAIvC,EAAI,IAAI3jB,EAAQsb,MAASoK,GAAW,EACxC,GAAIM,GAAa,EACb,OAAOrC,EAGX,IAAIxH,EAAO,IAAI/D,KAAQsN,GAAShjB,YAChCihB,EAAErF,QAAQnC,GACV,GAAI6J,IAAc,EACd,OAAOrC,EAEX,GAAIqC,EAAY,EAAG,CAEf,IAAK,IAAIllB,EAAI,EAAGA,EAAIklB,EAAWllB,IAAK,CAChC,IAAIqlB,EAAWxC,EAAE/F,eAAe,GAAIqI,GACpC,IAAKE,EAED,MAEJ,IAAIhH,EAAUwE,EAAErF,QAAQxd,EAAE4B,YAC1BihB,EAAEjG,QAAQyI,EAAUhH,GAExB,IAAK+G,GAAUF,EAAY,EAAG,CAC1B,IAAII,EAAkB9lB,EAAMkE,cAAc,EAAGwhB,GAC7C,IAAK,IAAI3D,EAAK,EAAGA,EAAK+D,EAAiB/D,IAAM,CACzC,IAAIrD,EAAK2E,EAAE/F,eAAe,GAAIqI,GAC9B,IAAIhH,EAAK0E,EAAE/F,eAAe,GAAIqI,GAC9B,GAAIjH,GAAMC,IAAO0E,EAAE5E,aAAaC,EAAIC,GAChC0E,EAAEjG,QAAQsB,EAAIC,IAI1B,OAAO0E,IAYf0C,cAAe,SAAUrmB,EAASsmB,EAAYL,EAAcC,EAAQrB,GAChE,IAAIlB,EAAI9jB,EAAMI,QAAQD,QAAQsb,MAAMhb,MAAMylB,2BAA2BO,EAAYL,EAAcC,GAC/F5K,EAAMhb,MAAMqkB,uBAAuB3kB,EAAS2jB,EAAG,MAAOkB,KAI9DhlB,EAAMK,WAAWF,EAAS,CACtB2I,KAAM,SAAUjB,GACZ7H,EAAM8I,KAAKjB,EAAS1H,EAAQoL,KAGhC9G,MAAOA,EACP6M,UAAWA,EACXwD,SAAUA,EACV1H,KAAMA,EACNoD,KAAMA,EACNuB,UAAWA,EACXmB,OAAQA,EACRI,aAAcA,EACdgB,eAAgBA,EAChBI,SAAUA,EACVwC,WAAYA,EACZrB,UAAWA,EACX+B,MAAOA,EACPO,IAAKA,EACLI,KAAMA,EACN+B,KAAMA,EACNmB,MAAOA,EACPzP,YAAaA,MAthGrB,CA0hGoB,mBAAVnM,QAAwBA,OAAO2L,IAAM3L,OAAS,SAAS4L,EAAIC,EAAIC,IAAMA,GAAMD,OAErF,SAAa7L,QACTA,OAAO,sBAAsB,CAAE,sBAAuB,UACvD,WAEH,IAAWC,EAy9CRC,OAAOC,MAAMC,OAz9CFC,OAAd,EAEQF,EAAQD,OAAOC,MACfG,EAAUH,EAAMI,QAAQD,QACxByI,EAAQ5I,EAAM4I,MACdvI,EAAaL,EAAMK,WACnBoE,EAAQtE,EAAQsE,MAChB2I,EAAOjN,EAAQiN,KACf8F,EAAS/S,EAAQ+S,OACjBzS,EAAQN,EAAQM,MAChBwC,EAAWxC,EAAMwC,SACjBN,EAAWlC,EAAMkC,SACjB2Q,EAAenT,EAAQmT,aAEvBwQ,EAAI9jB,EAAM0mB,SACVlhB,EAAIxF,EAAM2mB,QAEVC,EAAUphB,EAAEqhB,KAAKD,QAEjB5f,EAAUlH,EAAEkH,QAGZ8f,EAAc,cACdC,EAAU,CACNC,KAAM,OACNC,WAAY,aACZC,aAAc,eACdC,SAAU,YAEdC,EAAoB,IACpBC,EAAQ,QACRC,EAAM,MACNC,EAAQ,QACRC,EAAS,SACTC,EAAI,IACJC,EAAI,IAIR,SAASC,EAAmB/C,EAASgD,GACjC,IAAIC,EAAiBxiB,KAAKuf,QAC1B,IAAIkD,EAAa,MACjB,IAAIhkB,EAAOikB,EACX,IAAK,IAAI9mB,EAAI,EAAGA,EAAI2mB,EAAOtkB,OAAQrC,IAAK,CACpC8mB,EAAQH,EAAO3mB,GACf6C,EAAQ8gB,EAAQmD,GAChB,GAAI9kB,EAASa,IAAU+jB,EAAeE,KAAWjkB,EAAO,CACpD+jB,EAAeE,GAASjkB,EACxBgkB,EAAa,MAIrB,OAAOA,EAfX3nB,EAAQ4mB,QAAUA,EAkBlB,IAAIiB,EAAQpf,EAAMC,OAAO,CACrBC,KAAM,SAAU1H,EAAGS,GACfwD,KAAKjE,EAAIA,EACTiE,KAAKxD,EAAIA,GAEbomB,SAAU,WACN,OAAO/U,EAAOa,QAAQ1O,KAAKjE,EAAGiE,KAAKxD,IAEvCgB,SAAU,WACN,OAAO7C,EAAMkoB,OAAO,iBAAkB7iB,KAAKjE,EAAGiE,KAAKxD,IAEvDsmB,OAAQ,WACJ,OAAO,IAAIH,EAAM,EAAE3iB,KAAKjE,EAAG,EAAEiE,KAAKxD,MAItCumB,EAAcxf,EAAMC,OAAO,CAC3BC,KAAM,SAAU1H,EAAGS,GACfwD,KAAKjE,EAAIA,EACTiE,KAAKxD,EAAIA,GAEbwmB,eAAgB,WACZ,OAAO,IAAI/U,EAAa,EAAG,EAAG,EAAG,EAAGjO,KAAKjE,EAAGiE,KAAKxD,IAErDomB,SAAU,WACN,OAAO/U,EAAOS,YAAYtO,KAAKjE,EAAGiE,KAAKxD,IAE3CgB,SAAU,WACN,OAAO7C,EAAMkoB,OAAO,qBAAsB7iB,KAAKjE,EAAGiE,KAAKxD,IAE3DqK,KAAM,SAAUiE,GACZ9K,KAAKjE,GAAK+O,EAAM/O,EAChBiE,KAAKxD,GAAKsO,EAAMtO,GAEpBwK,MAAO,SAAUQ,GACbxH,KAAKjE,GAAKyL,EACVxH,KAAKxD,GAAKgL,GAEdvJ,OAAQ,WACJ,OAAOhC,KAAKuE,KAAKR,KAAKjE,EAAIiE,KAAKjE,EAAIiE,KAAKxD,EAAIwD,KAAKxD,IAErDyK,UAAW,WACP,GAAIjH,KAAKijB,SAAW,EAChB,OAEJjjB,KAAKgH,MAAM,EAAIhH,KAAK/B,WAExB6kB,OAAQ,WACJ,OAAO,IAAIC,GAAa/iB,KAAKjE,GAAIiE,KAAKxD,MAI1C0mB,EAAW3f,EAAMC,OAAO,CACxBC,KAAM,SAAUuG,EAAOjO,EAAGS,GACtBwD,KAAKjE,EAAIA,GAAK,EACdiE,KAAKxD,EAAIA,GAAK,EACdwD,KAAKgK,MAAQA,GAEjBxM,SAAU,WACN,GAAIwC,KAAKjE,GAAKiE,KAAKxD,EACf,OAAO7B,EAAMkoB,OAAO,sBAAuB7iB,KAAKgK,MAAOhK,KAAKjE,EAAGiE,KAAKxD,QAEpE,OAAO7B,EAAMkoB,OAAO,cAAe7iB,KAAKgK,QAGhD4Y,SAAU,WACN,OAAO/U,EAAOW,SAASxO,KAAKgK,MAAOhK,KAAKjE,EAAGiE,KAAKxD,IAEpDsE,OAAQ,WACJ,OAAO,IAAI1B,EAAMY,KAAKjE,EAAGiE,KAAKxD,IAElCsmB,OAAQ,WACJ,OAAO,IAAII,EAASnB,EAAoB/hB,KAAKgK,MAAOhK,KAAKjE,EAAGiE,KAAKxD,MAmBrE2mB,GAfJD,EAASE,KAAO,IAAIF,EAAS,GAE7BA,EAASG,OAAS,SAAU7U,GACxB,OAAO,IAAI0U,EAAS1U,EAASxE,MAAOwE,EAASzS,EAAGyS,EAAShS,IAG7D0mB,EAAS3a,MAAQ,SAAUC,GACvB,IAAI8a,EAAS9a,EAAIE,MAAM,EAAGF,EAAIvK,OAAS,GAAGkB,MAAM,KAC5C6K,EAAQsZ,EAAO,GACfvnB,EAAIunB,EAAO,GACX9mB,EAAI8mB,EAAO,GACf,IAAI9U,EAAW,IAAI0U,EAASlZ,EAAOjO,EAAGS,GACtC,OAAOgS,GAGcjL,EAAMC,OAAO,CAClCC,KAAM,SAAU1H,EAAGS,EAAGiO,EAAQC,EAAQV,EAAOlJ,GACzCd,KAAKujB,UAAY,IAAIR,EAAYhnB,EAAGS,GACpC,GAAIiO,IAAW5P,GAAa6P,IAAW7P,EACnCmF,KAAKwK,MAAQ,IAAImY,EAAMlY,EAAQC,GAEnC,GAAIV,IAAUnP,EACVmF,KAAKsK,OAASxJ,EAAS,IAAIoiB,EAASlZ,EAAOlJ,EAAO/E,EAAG+E,EAAOtE,GAAK,IAAI0mB,EAASlZ,IAGtFxM,SAAU,WACN,IAAIA,EAAW,SAAUgmB,GACrB,OAAOA,EAAYA,EAAUhmB,WAAa,IAG9C,OAAOA,EAASwC,KAAKujB,WACjB/lB,EAASwC,KAAKsK,QACd9M,EAASwC,KAAKwK,QAGtBiZ,OAAQ,SAAUC,GACdA,EAAOC,WAAa3jB,KACpB0jB,EAAOE,oBAGXhB,SAAU,WACN,IAAI1iB,EAAI2N,EAAOU,OAEf,GAAIvO,KAAKujB,UACLrjB,EAAIA,EAAE8G,MAAMhH,KAAKujB,UAAUX,YAE/B,GAAI5iB,KAAKsK,OACLpK,EAAIA,EAAE8G,MAAMhH,KAAKsK,OAAOsY,YAE5B,GAAI5iB,KAAKwK,MACLtK,EAAIA,EAAE8G,MAAMhH,KAAKwK,MAAMoY,YAE3B,OAAO1iB,GAEX4iB,OAAQ,WACJ,IAAIxY,EAAStK,KAAKsK,OAAStK,KAAKsK,OAAOwY,SAAWjoB,EAC9CgpB,EAAevZ,EAASA,EAAOsY,WAAa/U,EAAOU,OACnD/D,EAAQxK,KAAKwK,MAAQxK,KAAKwK,MAAMsY,SAAWjoB,EAC3CipB,EAActZ,EAAQA,EAAMoY,WAAa/U,EAAOU,OAEpD,IAAIwV,EAAiB,IAAI3kB,GAAOY,KAAKujB,UAAUxnB,GAAIiE,KAAKujB,UAAU/mB,GAClEunB,EAAiBF,EAAa7c,MAAM8c,GAAa7gB,MAAM8gB,GACvD,IAAIR,EAAY,IAAIR,EAAYgB,EAAehoB,EAAGgoB,EAAevnB,GAEjE,IAAIgnB,EAAY,IAAIL,EACpBK,EAAUD,UAAYA,EACtBC,EAAUlZ,OAASA,EACnBkZ,EAAUhZ,MAAQA,EAElB,OAAOgZ,MAIXQ,EAAoB,CACpBC,UAAW,WACP,IAAI1E,EAAUvf,KAAKuf,QACnB,IAAI2E,EAAclkB,KAAKmkB,aACvB,IAAIC,EAAepkB,KAAKqkB,cACxB,IAAI5Z,EAAS8U,EAAQjX,MAAQ4b,EAC7B,IAAIxZ,EAAS6U,EAAQlX,OAAS+b,EAE9B,IAAKxmB,EAAS6M,GACVA,EAAS,EAEb,IAAK7M,EAAS8M,GACVA,EAAS,EAGb1K,KAAK2jB,WAAWnZ,MAAQ,IAAImY,EAAMlY,EAAQC,IAG9C4Z,cAAe,WACX,IAAI/E,EAAUvf,KAAKuf,QACnB,IAAIxjB,EAAIwjB,EAAQxjB,GAAK,EACrB,IAAIS,EAAI+iB,EAAQ/iB,GAAK,EACrBwD,KAAK2jB,WAAWJ,UAAY,IAAIR,EAAYhnB,EAAGS,IAGnD+nB,UAAW,WACP,IAAIhF,EAAUvf,KAAKuf,QACnB,IAAIiE,EAAY,MAChB,GAAIjE,EAAQiF,WAAa,QAAUjD,EAAQhC,EAAQjX,QAAUiZ,EAAQhC,EAAQlX,SAAU,CACnFrI,KAAKykB,SAAS,MACdzkB,KAAKikB,YACLT,EAAY,KAGhB,GAAIjC,EAAQhC,EAAQxjB,IAAMwlB,EAAQhC,EAAQ/iB,GAAI,CAC1CwD,KAAKskB,gBACLd,EAAY,KAGhB,GAAIA,EACAxjB,KAAK4jB,oBAIbc,YAAa,SAASnF,GAClB,IAAIzZ,EAAS,MAEb,GAAI9F,KAAKuf,QAAQiF,WAAa,OAASxkB,KAAK2kB,oBAAoBpF,EAAS,CAAC2C,EAAOC,IAAU,CACvFrc,EAAS,KACT9F,KAAKykB,SAAS,MACdzkB,KAAKikB,YAGT,GAAIjkB,KAAK2kB,oBAAoBpF,EAAS,CAAC6C,EAAGC,IAAK,CAC3Cvc,EAAS,KACT9F,KAAKskB,gBAGT,GAAIxe,EACA9F,KAAK4jB,mBAGT,OAAO9d,IAIX8e,EAAUrhB,EAAMC,OAAO,CACvBC,KAAM,SAAU8b,GACZ,IAAI/c,EAAUxC,KACdwC,EAAQ+c,QAAUvkB,EAAW,GAAIwH,EAAQ+c,QAASA,GAClD/c,EAAQmP,GAAKnP,EAAQ+c,QAAQ5N,GAC7BnP,EAAQqiB,YAAc9c,EAAKgE,QAC3BvJ,EAAQmhB,WAAa,IAAIR,GAG7B2B,QAAS,SAAUrmB,GACf,OAAOuB,KAAK+kB,mBAAmBD,QAAQrmB,IAG3CumB,OAAQ,SAAUzF,GACd,GAAIA,GAAWA,EAAQ5N,GAClB3R,KAAK2R,GAAK4N,EAAQ5N,IAI3BlP,SAAU,SAAU1G,EAAGS,GACnB,IAAI+iB,EAAUvf,KAAKuf,QACnB,IAAKgC,EAAQxlB,GACV,OAAO,IAAIqD,EAAMmgB,EAAQxjB,EAAGwjB,EAAQ/iB,GAGvC,GAAI+kB,EAAQ/kB,GAAI,CACZ+iB,EAAQxjB,EAAIA,EACZwjB,EAAQ/iB,EAAIA,OACT,GAAIT,aAAaqD,EAAO,CAC3BmgB,EAAQxjB,EAAIA,EAAEA,EACdwjB,EAAQ/iB,EAAIT,EAAES,EAGlBwD,KAAK2jB,WAAWJ,UAAY,IAAIR,EAAYxD,EAAQxjB,EAAGwjB,EAAQ/iB,GAC/DwD,KAAK4jB,oBAGTtZ,OAAQ,SAAUN,EAAOlJ,GACrB,GAAIygB,EAAQvX,GAAQ,CAChBhK,KAAK2jB,WAAWrZ,OAAS,IAAI4Y,EAASlZ,EAAOlJ,EAAO/E,EAAG+E,EAAOtE,GAC9DwD,KAAK4jB,mBAET,OAAO5jB,KAAK2jB,WAAWrZ,QAAU4Y,EAASE,MAG9C2B,iBAAkB,WACd,OAAO/kB,KAAKilB,gBAGhBrB,iBAAkB,WACd,IAAIsB,EAASllB,KAAK2jB,WAAWf,WAC7B5iB,KAAK+kB,mBAAmBvB,UAAU,IAAI/E,EAAE5Q,OAAOqX,EAAOzkB,EAAGykB,EAAO7kB,EAAG6kB,EAAOxkB,EAAGwkB,EAAO/kB,EAAG+kB,EAAOpX,EAAGoX,EAAOnX,KAG5GoX,OAAQ,aAERR,oBAAqBrC,EAErBmC,SAAU,SAAUW,GAChB,IAAItb,EACJ,IAAK9J,KAAKqlB,WAAaD,EAAO,CAC1B,IAAIE,EAAMtlB,KAAKulB,gBAAkB,IAAI9G,EAAE1W,KACvC,IAAIyd,EAAaF,EAAI9b,UACrBM,EAAO,IAAI/B,EAAKyd,EAAWzpB,EAAGypB,EAAWhpB,EAAG8oB,EAAIhd,QAASgd,EAAIjd,UAC7DrI,KAAK6kB,YAAc/a,EACnB9J,KAAKmkB,aAAera,EAAKxB,MACzBtI,KAAKqkB,cAAgBva,EAAKzB,OAC1BrI,KAAKqlB,UAAY,UAEjBvb,EAAO9J,KAAK6kB,YAEhB,OAAO/a,GAGXyb,aAAc,WACV,OAAOvlB,KAAKilB,eAAeQ,aAI/BC,EAAad,EAAQphB,OAAO,CAC5BC,KAAM,SAAS8b,GACXqF,EAAQhe,GAAGnD,KAAKpG,KAAK2C,KAAMuf,GAE3BA,EAAUvf,KAAKuf,QACfA,EAAQJ,KAAOwG,EAAwBpG,EAAQJ,MAC/CI,EAAQqG,OAASD,EAAwBpG,EAAQqG,SAGrDrG,QAAS,CACLqG,OAAQ,CACJ7F,MAAO,OACPzX,MAAO,GAEX6W,KAAM,CACFY,MAAO0B,IAIftC,KAAM,SAASY,EAAO8F,GAClB7lB,KAAK8lB,MAAM,CACP/F,MAAOgG,EAAShG,GAChB8F,QAASA,KAIjBD,OAAQ,SAAS7F,EAAOzX,EAAOud,GAC3B7lB,KAAKgmB,QAAQ,CACTjG,MAAOgG,EAAShG,GAChBzX,MAAOA,EACPud,QAASA,KAIjBb,OAAQ,SAAUzF,GACd,GAAIA,EAAS,CACT,IAAIqG,EAASrG,EAAQqG,OACrB,IAAIzG,EAAOI,EAAQJ,KACnB,GAAIyG,EACA5lB,KAAKgmB,QAAQL,EAAwBC,IAEzC,GAAIzG,EACAnf,KAAK8lB,MAAMH,EAAwBxG,IAGvCyF,EAAQhe,GAAGoe,OAAO3nB,KAAK2C,KAAMuf,KAIrC4F,OAAQ,SAAUc,GACd,IAAIhB,EAAiBjlB,KAAKilB,eAC1B,IAAI1F,EAAUvf,KAAKuf,QACnB,IAAI2G,EAAQ3G,EAAQ2G,MAEpB,GAAIA,GAASA,EAAM/G,KAAM,CACrB,IAAIA,EAAO8G,EAAON,EAAwBO,EAAM/G,MAAQI,EAAQJ,KAChE8F,EAAe9F,KAAKA,EAAKY,MAAOZ,EAAK0G,WAI7CG,QAAS,SAASG,GACd,IAAI5G,EAAUvf,KAAKuf,QACnBvkB,EAAWukB,EAAS,CAChBqG,OAAQO,IAGZA,EAAgB5G,EAAQqG,OAExB,IAAIA,EAAS,KACb,GAAIO,EAAc7d,MAAQ,EACtBsd,EAAS,CACL7F,MAAOoG,EAAcpG,MACrBzX,MAAO6d,EAAc7d,MACrBud,QAASM,EAAcN,QACvBO,SAAUD,EAAcC,UAIhCpmB,KAAKilB,eAAe1F,QAAQzO,IAAI,SAAU8U,IAG9CE,MAAO,SAASO,GACZ,IAAI9G,EAAUvf,KAAKuf,QACnBvkB,EAAWukB,EAAS,CAChBJ,KAAMkH,GAAe,KAEzB,IAAIlH,EAAOI,EAAQJ,KAEnB,GAAIA,EAAKmH,SAAU,CACf,IAAIA,EAAWnH,EAAKmH,SACpB,IAAIC,EAAiBD,EAAS3oB,OAAS,SAAWwC,EAAEqmB,eAAiBrmB,EAAEsmB,eACvEzmB,KAAKilB,eAAe9F,KAAK,IAAIoH,EAAcD,SAE3CtmB,KAAKilB,eAAe9F,KAAKA,EAAKY,MAAOZ,EAAK0G,YAKlDa,EAAYhB,EAAWliB,OAAO,CAC9BC,KAAM,SAAU8b,GACZA,EAAUvf,KAAK2mB,WAAWpH,GAC1BmG,EAAW9e,GAAGnD,KAAKpG,KAAK2C,KAAMuf,GAE9Bvf,KAAK4mB,QACL5mB,KAAK6mB,YACL7mB,KAAKukB,aAGThF,QAAS,CACLuH,SAAU,GACVC,WAAY,aACZnB,OAAQ,CACJtd,MAAO,GAEX6W,KAAM,CACFY,MAAO,SAEXyE,SAAU,MAGdqC,UAAW,WACP,IAAItH,EAAUvf,KAAKuf,QAEnBvf,KAAKilB,eAAiB,IAAI9kB,EAAE6mB,KAAKzF,EAAQhC,EAAQ0H,MAAQ1H,EAAQ0H,KAAO,GAAI,IAAIxI,EAAErf,MAAS,CACvF8nB,KAAM3H,EAAQ2H,OAGlBlnB,KAAK8lB,QACL9lB,KAAKgmB,WAGTW,WAAY,SAASpH,GACjB,GAAIA,GAAWA,EAAQQ,MACnBR,EAAUvkB,EAAW,GAAIukB,EAAS,CAC9BJ,KAAM,CACFY,MAAOR,EAAQQ,SAI3B,OAAOR,GAGXqH,MAAO,WACH,IAAIrH,EAAUvf,KAAKuf,QACnB,GAAIA,EAAQwH,YAAcxF,EAAQhC,EAAQuH,UAAW,CACjD,IAAIK,EAAc,GAElB,GAAI5H,EAAQ6H,UACRD,EAAYhrB,KAAKojB,EAAQ6H,WAG7B,GAAI7H,EAAQ8H,WACRF,EAAYhrB,KAAKojB,EAAQ8H,YAG7BF,EAAYhrB,KAAKojB,EAAQuH,UAAYlpB,EAAS2hB,EAAQuH,UAAY,KAAO,KACzEK,EAAYhrB,KAAKojB,EAAQwH,YAEzBxH,EAAQ2H,KAAOC,EAAYpoB,KAAK,iBAEzBwgB,EAAQ2H,MAIvBra,QAAS,SAAUoa,GACf,OAAOjnB,KAAKilB,eAAepY,QAAQoa,IAGvCjC,OAAQ,SAAUzF,GACd,GAAIA,EAAS,CACT,IAAI+H,EAAc,MAClB,IAAIC,EAAcvnB,KAAKuf,QAEvBA,EAAUvf,KAAK2mB,WAAWpH,GAE1BmG,EAAW9e,GAAGoe,OAAO3nB,KAAK2C,KAAMuf,GAEhC,GAAIA,EAAQwH,YAAcxF,EAAQhC,EAAQuH,WAAavH,EAAQ6H,WAAa7H,EAAQ8H,WAAY,CAC5FrsB,EAAWusB,EAAa,CACpBR,WAAYxH,EAAQwH,WACpBD,SAAUvH,EAAQuH,SAClBM,UAAW7H,EAAQ6H,UACnBC,WAAY9H,EAAQ8H,aAExBrnB,KAAK4mB,QACL5mB,KAAKilB,eAAe1F,QAAQzO,IAAI,OAAQyW,EAAYL,MACpDI,EAAc,KAGlB,GAAI/H,EAAQ0H,KAAM,CACdjnB,KAAK6M,QAAQ0S,EAAQ0H,MACrBK,EAAc,KAGlB,IAAKtnB,KAAK0kB,YAAYnF,IAAY+H,EAC9BtnB,KAAKukB,gBAQjBiD,GAFJxsB,EAAW0rB,EAAU9f,GAAIod,GAET0B,EAAWliB,OAAO,CAC9BC,KAAM,SAAU8b,GACZmG,EAAW9e,GAAGnD,KAAKpG,KAAK2C,KAAMuf,GAC9Bvf,KAAKynB,YACLznB,KAAK0nB,gBAGTA,aAAc,WACV,IAAInI,EAAUvf,KAAKuf,QACnB,IAAIxjB,EAAIwjB,EAAQxjB,EAChB,IAAIS,EAAI+iB,EAAQ/iB,EAChB,GAAI+kB,EAAQxlB,IAAMwlB,EAAQ/kB,GACtBwD,KAAKyC,SAAS1G,GAAK,EAAGS,GAAK,IAInCwoB,OAAQ,SAAUzF,GACd,GAAIA,EAAS,CACTmG,EAAW9e,GAAGoe,OAAO3nB,KAAK2C,KAAMuf,GAChC,GAAIvf,KAAK2kB,oBAAoBpF,EAAS,CAAC2C,EAAOC,IAC1CniB,KAAK2nB,YAET,GAAI3nB,KAAK2kB,oBAAoBpF,EAAS,CAAC6C,EAAGC,IACtCriB,KAAK0nB,iBAKjBD,UAAW,WACP,IAAIlI,EAAUvf,KAAKuf,QACnBvf,KAAKilB,eAAiB,IAAI9kB,EAAEynB,KAAK,CAC7BhC,OAAQrG,EAAQqG,OAChBiC,OAAQ,OAGZ7nB,KAAK8lB,QACL9lB,KAAK2nB,aAGTA,UAAW,WACP,IAAI1C,EAAiBjlB,KAAKilB,eAC1B,IAAI6C,EAAcC,EAAqB/nB,KAAKuf,SAC5C,IAAIjX,EAAQwf,EAAYxf,MACxB,IAAID,EAASyf,EAAYzf,OAEzB4c,EAAe9Y,SAAS6b,SAAS,CAC7BC,EAAc,EAAG,GACjBA,EAAc3f,EAAO,GACrB2f,EAAc3f,EAAOD,GACrB4f,EAAc,EAAG5f,SAKzB6f,EAAaxC,EAAWliB,OAAO,CAC/BC,KAAM,SAAS8b,GACZmG,EAAW9e,GAAGnD,KAAKpG,KAAK2C,KAAMuf,GAC9B,IAAI4I,EAASnoB,KAAKuf,QAAQ4I,OAC1BnoB,KAAKmoB,OAAS,IAAI1J,EAAErf,MAAM+oB,EAAOpsB,EAAGosB,EAAO3rB,GAC3CwD,KAAKooB,iBAGR7I,QAAS,CACNqG,OAAQ,CACH7F,MAAO0B,EACPnZ,MAAO,GAEZ6W,KAAM,CACDY,MAAO,UAIfsI,iBAAkB,SAASvf,EAAOwf,GAC9B,IAAI9E,EAAY8E,EAAK9E,YACrB,GAAI1a,GAAS0a,EACT1a,EAAQA,EAAMyf,cAAc/E,GAEhC,OAAO1a,GAGXkc,OAAQ,SAASzF,GACb,GAAIA,EAAS,CACT,GAAIA,EAAQ9c,SACRzC,KAAKuf,QAAQ9c,SAAW8c,EAAQ9c,SAGpCijB,EAAW9e,GAAGoe,OAAO3nB,KAAK2C,KAAMuf,OAKxCiJ,EAAeN,EAAW1kB,OAAO,CACjC+b,QAAS,CACLL,OAAQ,EACRiJ,OAAQ,CACJpsB,EAAG,EACHS,EAAG,IAIX4rB,cAAe,WACX,IAAI7I,EAAUvf,KAAKuf,QACnBvf,KAAKilB,eAAiB,IAAI9kB,EAAEsoB,OAAO,IAAIhK,EAAEgK,OAAOzoB,KAAKmoB,OAAQ5I,EAAQL,QAAS,CAC1EC,KAAMI,EAAQJ,KACdyG,OAAQrG,EAAQqG,UAIxB8C,eAAgB,SAASJ,GACrB,IAAI/I,EAAUvf,KAAKuf,QACnB,IAAI9c,EAAW8c,EAAQ9c,SACvB,IAAI0J,EAAWmc,EAAKnc,SACpB,IAAIwc,EACJ,IAAI7f,EAEJ,GAAIrG,GAAYuf,EACZ2G,EAAgBxc,EAAS,QAEzBwc,EAAgBxc,EAASA,EAASlO,OAAS,GAE/C,GAAI0qB,EAAe,CACf7f,EAAQ9I,KAAKqoB,iBAAiBM,EAAcR,SAAUG,GACtDtoB,KAAKilB,eAAezB,UAAU/E,EAAE+E,YAAYD,UAAUza,EAAM/M,EAAG+M,EAAMtM,QAK7EosB,EAAcV,EAAW1kB,OAAO,CAChC+b,QAAS,CACL+I,KAAM,8BACNH,OAAQ,CACJpsB,EAAG,GACHS,EAAG,IAIX4rB,cAAe,WACX,IAAI7I,EAAUvf,KAAKuf,QACnBvf,KAAKilB,eAAiB9kB,EAAEynB,KAAKrf,MAAMgX,EAAQ+I,KAAM,CAC7CnJ,KAAMI,EAAQJ,KACdyG,OAAQrG,EAAQqG,UAIxB8C,eAAgB,SAASJ,GACrB,IAAI1pB,EAASoB,KAAK6oB,YAAYP,GAC9B,IAAIhtB,EAAQsD,EAAOtD,MACnB,IAAIe,EAAMuC,EAAOvC,IACjB,IAAImnB,EAAY/E,EAAE+E,YAClB,GAAIloB,EACAkoB,EAAUlZ,OAAOwe,EAAUxtB,EAAOe,GAAMA,GAG5C,GAAIA,EAAK,CACL,IAAI8rB,EAASnoB,KAAKmoB,OAClB,IAAI5E,EAAYlnB,EAAIuN,QAAQ2Z,WAAW4E,EAAOpsB,GAAIosB,EAAO3rB,GACzDgnB,EAAUD,UAAUA,EAAUxnB,EAAGwnB,EAAU/mB,GAE/CwD,KAAKilB,eAAezB,UAAUA,IAGlCqF,YAAa,SAASP,GAClB,IAAI/I,EAAUvf,KAAKuf,QACnB,IAAIpT,EAAWmc,EAAKnc,SACpB,IAAIqZ,EAAYuD,EAAUJ,EAC1B,GAAIpJ,EAAQ9c,UAAYuf,EAAO,CAC3B2G,EAAgBxc,EAAS,GACzB,GAAIwc,EAAe,CACfI,EAAWJ,EAAcR,SACzB3C,EAAamD,EAAcK,aAC3B,IAAIC,EAAc9c,EAAS,GAC3B,IAAKqZ,GAAcyD,EACfzD,EAAayD,EAAYd,cAG9B,CACHQ,EAAgBxc,EAASA,EAASlO,OAAS,GAC3C,GAAI0qB,EAAe,CACfI,EAAWJ,EAAcR,SACzB3C,EAAamD,EAAcO,YAC3B,IAAIC,EAAchd,EAASA,EAASlO,OAAS,GAC7C,IAAKunB,GAAc2D,EACf3D,EAAa2D,EAAYhB,UAIrC,GAAIY,EACA,MAAO,CACHztB,MAAO0E,KAAKqoB,iBAAiB7C,EAAY8C,GACzCjsB,IAAK2D,KAAKqoB,iBAAiBU,EAAUT,OAMjDc,EAAkB,CAClBC,SAAU,SAAS5mB,GACf,IAAI6lB,EAAOtoB,KAAKilB,eAChB,GAAIqD,aAAgBnoB,EAAEmpB,UAClB,GAAI7mB,GAAYuf,EACZsG,EAAOA,EAAKiB,MAAM,QAElBjB,EAAOA,EAAKiB,MAAMjB,EAAKiB,MAAMtrB,OAAS,GAG9C,GAAIqqB,GAAQA,EAAKnc,SAASlO,OACtB,OAAOqqB,GAIfkB,wBAAyB,SAASjK,GAC9B,IAAIkK,EAAWlK,EAAQkK,SACvB,IAAIC,EAASnK,EAAQmK,OAErB,GAAIpsB,EAASmsB,GACTlK,EAAQkK,SAAW,CACf9rB,KAAM8rB,GAId,GAAInsB,EAASosB,GACTnK,EAAQmK,OAAS,CACb/rB,KAAM+rB,IAKlBC,cAAe,SAASlnB,GACpB,IAAImnB,EAAS5pB,KAAK6pB,SAASpnB,GAC3B,GAAImnB,EAAQ,CACR5pB,KAAK+kB,mBAAmB1jB,OAAOuoB,EAAO3E,uBAC/BjlB,KAAK6pB,SAASpnB,KAI7BqnB,eAAgB,WACZ,IAAIvK,EAAUvf,KAAKuf,QACnBvf,KAAKwpB,wBAAwBjK,GAE7Bvf,KAAK6pB,SAAW,GAChB7pB,KAAK6pB,SAAS7H,GAAShiB,KAAK+pB,cAAcxK,EAAQkK,SAAUzH,GAC5DhiB,KAAK6pB,SAAS5H,GAAOjiB,KAAK+pB,cAAcxK,EAAQmK,OAAQzH,IAG5D8H,cAAe,SAASxK,EAAS9c,GAC7B,IAAI9E,GAAQ4hB,GAAW,IAAI5hB,KAC3B,IAAI2qB,EAAOtoB,KAAKqpB,SAAS5mB,GACzB,IAAIunB,EAAYJ,EAChB,IAAKtB,EAAM,CACPtoB,KAAK2pB,cAAclnB,GACnB,OAGJ,GAAI9E,GAAQ+jB,EAAQG,aAChBmI,EAAaxB,OACV,GAAI7qB,GAAQ+jB,EAAQE,YAAcjkB,GAAQ+jB,EAAQI,SACrDkI,EAAapB,OAEb5oB,KAAK2pB,cAAclnB,GAEvB,GAAIunB,EAAY,CACZJ,EAAS,IAAII,EAAWhvB,EAAW,GAAIukB,EAAS,CAC5C9c,SAAUA,KAEdmnB,EAAOlB,eAAeJ,GACtBtoB,KAAK+kB,mBAAmBkF,OAAOL,EAAO3E,gBAEtC,OAAO2E,IAIfM,gBAAkB,SAASznB,GACvB,IAAImnB,EAAS5pB,KAAK6pB,SAASpnB,GAE3B,GAAImnB,EAAQ,CACR,IAAItB,EAAOtoB,KAAKqpB,SAAS5mB,GACzB,GAAI6lB,EACAsB,EAAOlB,eAAeJ,QAEtBtoB,KAAK2pB,cAAclnB,KAK/B0nB,QAAS,CACL7uB,MAAO,WACPe,IAAK,UAGT+tB,cAAe,SAASC,EAAY5nB,EAAU8c,GAC1Cvf,KAAKwpB,wBAAwBjK,GAE7B,IAAI+K,EAActqB,KAAKuf,QACvB,IAAIgL,EAAMvqB,KAAKmqB,QAAQ1nB,GACvB,IAAI+nB,GAAeF,EAAYC,IAAQ,IAAI5sB,KAC3C,IAAI8sB,EAAalL,EAAQgL,GACzB,IAAIG,EAAU,MACd,GAAID,EAAY,CACZH,EAAYC,GAAOvvB,EAAW,GAAIsvB,EAAYC,GAAME,GACpD,GAAIA,EAAW9sB,MAAQ6sB,GAAeC,EAAW9sB,KAAM,CACnDqC,KAAK2pB,cAAclnB,GACnBzC,KAAK6pB,SAASpnB,GAAYzC,KAAK+pB,cAAcO,EAAYC,GAAM9nB,GAC/DioB,EAAW,UACR,GAAI1qB,KAAK6pB,SAASpnB,GACtBzC,KAAK6pB,SAASpnB,GAAUuiB,OAAOyF,QAE/B,GAAIJ,IAAerqB,KAAK6pB,SAASpnB,IAAa6nB,EAAYC,GAAM,CACnEvqB,KAAK6pB,SAASpnB,GAAYzC,KAAK+pB,cAAcO,EAAYC,GAAM9nB,GAC/DioB,EAAU,KAEd,OAAOA,GAGXC,eAAgB,SAAUN,EAAY9K,GAClC,IAAKvf,KAAKoqB,cAAcC,EAAYrI,EAAOzC,IAAY8K,EACnDrqB,KAAKkqB,gBAAgBlI,GAEzB,IAAKhiB,KAAKoqB,cAAcC,EAAYpI,EAAK1C,IAAY8K,EACjDrqB,KAAKkqB,gBAAgBjI,KAK7B2F,EAAOlC,EAAWliB,OAAO,CACzBC,KAAM,SAAU8b,GACZmG,EAAW9e,GAAGnD,KAAKpG,KAAK2C,KAAMuf,GAC9Bvf,KAAK2M,UAAY,IAAIxM,EAAEyqB,MACvB5qB,KAAK6qB,kBACL7qB,KAAKukB,aAGThF,QAAS,CACLiF,SAAU,MAGdO,iBAAkB,WACd,OAAO/kB,KAAK2M,WAGhB+G,KAAM,SAAUjV,GACZ,IAAI8gB,EAAUvf,KAAKuf,QACnB,GAAI9gB,GACA,GAAI8gB,EAAQ7L,MAAQjV,EAAO,CACxB8gB,EAAQ7L,KAAOjV,EACfuB,KAAK8qB,SAASrsB,GACduB,KAAKukB,YACLvkB,KAAK2qB,eAAe,KAAM,UAG7B,OAAOpL,EAAQ7L,MAIvBsR,OAAQ,SAAUzF,GACd,GAAIA,EAAS,CACTmG,EAAW9e,GAAGoe,OAAO3nB,KAAK2C,KAAMuf,GAEhC,IAAI+K,EAActqB,KAAKuf,QACvB,IAAI7L,EAAO6L,EAAQ7L,KAEnB,GAAI6N,EAAQ7N,IAAS4W,EAAY5W,MAAQA,EAAM,CAC3C4W,EAAY5W,KAAOA,EACnB1T,KAAK8qB,SAASpX,GACd,IAAK1T,KAAK0kB,YAAYnF,GAClBvf,KAAKukB,YAETvkB,KAAK2qB,eAAe,KAAMpL,OACvB,CACHvf,KAAK0kB,YAAYnF,GACjBvf,KAAK2qB,eAAe,MAAOpL,MAKvCsL,gBAAiB,WACb,IAAItL,EAAUvf,KAAKuf,QAEnBvf,KAAKilB,eAAiB9kB,EAAEynB,KAAKrf,MAAMgX,EAAQ7L,MAAQ,GAAI,CACnDkS,OAAQrG,EAAQqG,SAGpB5lB,KAAK8lB,QACL9lB,KAAK2M,UAAUsd,OAAOjqB,KAAKilB,gBAC3BjlB,KAAK8pB,kBAGTgB,SAAU,SAASpX,GACf,IAAIuR,EAAiBjlB,KAAKilB,eAC1B,IAAI8F,EAAY5qB,EAAEynB,KAAKrf,MAAMmL,GAAQ,IACrC,IAAI6V,EAAQwB,EAAUxB,MAAM7gB,MAAM,GAClCqiB,EAAUxB,MAAMvB,SAAS,IACzB/C,EAAesE,MAAMvB,SAASuB,MAOlCyB,GAHJhwB,EAAW4sB,EAAKhhB,GAAIod,GACpBhpB,EAAW4sB,EAAKhhB,GAAIwiB,GAET1D,EAAWliB,OAAO,CACzBC,KAAM,SAAU8b,GACZmG,EAAW9e,GAAGnD,KAAKpG,KAAK2C,KAAMuf,GAC9Bvf,KAAK2M,UAAY,IAAIxM,EAAEyqB,MACvB5qB,KAAKynB,YACLznB,KAAK8pB,kBAGT/E,iBAAkB,WACd,OAAO/kB,KAAK2M,WAGhBqY,OAAQ,SAAUzF,GACd,GAAIA,EAAS,CACTA,EAAUA,GAAW,GACrB,IAAIta,EAAOsa,EAAQta,KACnB,IAAIF,EAAKwa,EAAQxa,GACjB,GAAIE,EACAjF,KAAKuf,QAAQta,KAAOA,EAGxB,GAAIF,EACA/E,KAAKuf,QAAQxa,GAAKA,EAGtB,GAAIE,GAAQF,EAAI,CACZ/E,KAAK2nB,YACL3nB,KAAK2qB,eAAe,KAAMpL,QAE1Bvf,KAAK2qB,eAAe,MAAOpL,GAG/BmG,EAAW9e,GAAGoe,OAAO3nB,KAAK2C,KAAMuf,KAIxCkI,UAAW,WACP,IAAIlI,EAAUvf,KAAKuf,QACnB,IAAI0F,EAAiBjlB,KAAKilB,eAAiB,IAAI9kB,EAAEynB,KAAK,CAClDhC,OAAQrG,EAAQqG,SAGpB5lB,KAAK8lB,QACL9lB,KAAK2nB,YACL3nB,KAAK2M,UAAUsd,OAAOhF,IAG1B0C,UAAW,WACP,IAAIpI,EAAUvf,KAAKuf,QACnB,IAAI0F,EAAiBjlB,KAAKilB,eAC1B,IAAIhgB,EAAOsa,EAAQta,MAAQ,IAAI7F,EAC/B,IAAI2F,EAAKwa,EAAQxa,IAAM,IAAI3F,EAE3B6lB,EAAe9Y,SAAS6b,SAAS,CAC7BC,EAAchjB,EAAKlJ,EAAGkJ,EAAKzI,GAC3ByrB,EAAcljB,EAAGhJ,EAAGgJ,EAAGvI,SAO/ByuB,GAFJjwB,EAAWgwB,EAAKpkB,GAAIwiB,GAEL1D,EAAWliB,OAAO,CAC7BC,KAAM,SAAU8b,GACZmG,EAAW9e,GAAGnD,KAAKpG,KAAK2C,KAAMuf,GAC9Bvf,KAAK2M,UAAY,IAAIxM,EAAEyqB,MACvB5qB,KAAKynB,YACLznB,KAAK8pB,kBAGT/E,iBAAkB,WACd,OAAO/kB,KAAK2M,WAGhB/N,OAAQ,SAAUA,GACd,IAAI2gB,EAAUvf,KAAKuf,QACnB,GAAI3gB,EAAQ,CACR2gB,EAAQ3gB,OAASA,EACjBoB,KAAKkrB,mBAEL,OAAO3L,EAAQ3gB,QAIvBomB,OAAQ,SAAUzF,GACd,GAAIA,EAAS,CACT,IAAI3gB,EAAS2gB,EAAQ3gB,OACrB8mB,EAAW9e,GAAGoe,OAAO3nB,KAAK2C,KAAMuf,GAEhC,GAAI3gB,GAAUoB,KAAKmrB,cAAcvsB,GAAS,CACtCoB,KAAKpB,OAAOA,GACZoB,KAAK2qB,eAAe,KAAMpL,QAE1Bvf,KAAK2qB,eAAe,MAAOpL,KAKvCkI,UAAW,WACP,IAAIlI,EAAUvf,KAAKuf,QACnBvf,KAAKilB,eAAiB,IAAI9kB,EAAEynB,KAAK,CAC7BhC,OAAQrG,EAAQqG,SAGpB5lB,KAAK8lB,QACL9lB,KAAK2M,UAAUsd,OAAOjqB,KAAKilB,gBAE3B,GAAI1F,EAAQ3gB,OACRoB,KAAKkrB,eAIbC,cAAe,SAASvsB,GACpB,IAAIwsB,EAAgBprB,KAAKuf,QAAQ3gB,OACjC,IAAIysB,EAASD,EAAcntB,SAAWW,EAAOX,OAC7C,IAAKotB,EACD,IAAK,IAAIzvB,EAAI,EAAGA,EAAIgD,EAAOX,OAAQrC,IAC/B,GAAIwvB,EAAcxvB,GAAGG,IAAM6C,EAAOhD,GAAGG,GAAKqvB,EAAcxvB,GAAGY,IAAMoC,EAAOhD,GAAGY,EAAG,CAC1E6uB,EAAS,KACT,MAKZ,OAAOA,GAGXH,YAAa,WACT,IAAIjG,EAAiBjlB,KAAKilB,eAC1B,IAAI1F,EAAUvf,KAAKuf,QACnB,IAAI3gB,EAAS2gB,EAAQ3gB,OACrB,IAAIuN,EAAW,GACf,IAAIrD,EACJ,IAAK,IAAIlN,EAAI,EAAGA,EAAIgD,EAAOX,OAAQrC,IAAK,CACpCkN,EAAQlK,EAAOhD,GACfuQ,EAAShQ,KAAK8rB,EAAcnf,EAAM/M,EAAG+M,EAAMtM,IAG/CyoB,EAAe9Y,SAAS6b,SAAS7b,IAGrCoT,QAAS,CACL3gB,OAAQ,OAMZ0sB,GAFJtwB,EAAWiwB,EAASrkB,GAAIwiB,GAEZxE,EAAQphB,OAAO,CACvBC,KAAM,SAAU8b,GACZqF,EAAQhe,GAAGnD,KAAKpG,KAAK2C,KAAMuf,GAE3Bvf,KAAKurB,cAGTvG,OAAQ,SAAUzF,GACd,GAAIA,EAAS,CACT,GAAIA,EAAQnhB,OACR4B,KAAKilB,eAAeuG,IAAIjM,EAAQnhB,QAGpC,GAAI4B,KAAK2kB,oBAAoBpF,EAAS,CAAC2C,EAAOC,EAAQC,EAAGC,IACrDriB,KAAKilB,eAAenb,KAAK9J,KAAKyrB,SAGlC7G,EAAQhe,GAAGoe,OAAO3nB,KAAK2C,KAAMuf,KAIrCgM,WAAY,WACR,IAAIhM,EAAUvf,KAAKuf,QACnB,IAAIzV,EAAO9J,KAAKyrB,QAEhBzrB,KAAKilB,eAAiB,IAAI9kB,EAAEmrB,MAAM/L,EAAQnhB,OAAQ0L,EAAM,KAG5D2hB,MAAO,WACH,IAAI3D,EAAcC,EAAqB/nB,KAAKuf,SAC5C,IAAI7Z,EAAS,IAAI+Y,EAAErf,MAAM0oB,EAAY/rB,EAAG+rB,EAAYtrB,GACpD,IAAIgC,EAAO,IAAIigB,EAAEtT,KAAK2c,EAAYxf,MAAOwf,EAAYzf,QAErD,OAAO,IAAIoW,EAAE1W,KAAKrC,EAAQlH,OAI9BosB,EAAQhG,EAAQphB,OAAO,CACvBC,KAAM,SAAU8b,GACZvf,KAAKmU,SAAW,GAChByQ,EAAQhe,GAAGnD,KAAKpG,KAAK2C,KAAMuf,GAC3Bvf,KAAKilB,eAAiB,IAAI9kB,EAAEyqB,MAC5B5qB,KAAKukB,aAGThF,QAAS,CACLiF,SAAU,OAGdyF,OAAQ,SAAUvG,GACd1jB,KAAKilB,eAAegF,OAAOvG,EAAOqB,oBAClC/kB,KAAKmU,SAAShY,KAAKunB,GACnB1jB,KAAK0rB,gBAAkB,MAG3BrqB,OAAQ,SAAUqiB,GACd,GAAI1jB,KAAK2rB,QAAQjI,GACb1jB,KAAK0rB,gBAAkB,MAI/BC,QAAS,SAASjI,GACd,IAAIthB,EAAQT,EAAQ+hB,EAAQ1jB,KAAKmU,UACjC,GAAI/R,GAAS,EAAG,CACZpC,KAAKilB,eAAe2G,SAASxpB,GAC7BpC,KAAKmU,SAAS1S,OAAOW,EAAO,GAC5B,OAAO,OAIfO,MAAO,WACH3C,KAAKilB,eAAetiB,QACpB3C,KAAKmU,SAAW,GAChBnU,KAAK0rB,gBAAkB,MAG3BG,QAAS,SAAUC,GACf,IAAIpI,EAEJ,IAAK,IAAI9nB,EAAI,EAAGA,EAAIkwB,EAAQ7tB,OAAQrC,IAAK,CACrC8nB,EAASoI,EAAQlwB,GACjB,GAAIoE,KAAK2rB,QAAQjI,GACb1jB,KAAKiqB,OAAOvG,KAKxBqI,OAAQ,SAAUD,GACd9rB,KAAKgsB,iBAAiBF,EAAS,IAGnCG,QAAS,SAAUH,EAASzQ,GACxBrb,KAAKgsB,iBAAiBF,EAASzQ,IAGnC2Q,iBAAkB,SAASF,EAASzQ,GAChC,IAAI6Q,EAAQlsB,KAAKilB,eACjB,IAAIkH,EAAkBD,EAAM/X,SAASzL,MAAM,GAC3C,IAAIyL,EAAWnU,KAAKmU,SACpB,IAAIiY,EAAgBxuB,EAASyd,GAC7B,IAAIzf,EAAGwG,EAAO6pB,EAAShH,EAAgBvB,EAEvC,IAAK9nB,EAAI,EAAGA,EAAIkwB,EAAQ7tB,OAAQrC,IAAK,CACjC8nB,EAASoI,EAAQlwB,GACjBqpB,EAAiBvB,EAAOqB,mBAExB3iB,EAAQT,EAAQ+hB,EAAQvP,GACxB,GAAI/R,GAAS,EAAG,CACZ+pB,EAAgB1qB,OAAOW,EAAO,GAC9B+R,EAAS1S,OAAOW,EAAO,GAEvB6pB,EAAUG,EAAgB/Q,EAAUA,EAAQzf,GAE5CuwB,EAAgB1qB,OAAOwqB,EAAS,EAAGhH,GACnC9Q,EAAS1S,OAAOwqB,EAAS,EAAGvI,IAGpCwI,EAAMvpB,QACNupB,EAAMjC,OAAOhnB,MAAMipB,EAAOC,IAG9BnH,OAAQ,SAAUzF,GACd,GAAIA,EAAS,CACT,GAAIvf,KAAK0rB,gBAAiB,CACtB1rB,KAAK0rB,gBAAkB,MACvB,IAAK1rB,KAAK0kB,YAAYnF,GAClBvf,KAAKukB,iBAGTvkB,KAAK0kB,YAAYnF,GAGrBqF,EAAQhe,GAAGoe,OAAO3nB,KAAK2C,KAAMuf,KAIrCgG,aAAc,WACV,IAAIpR,EAAWnU,KAAKmU,SACpB,IAAIkY,EACJ,IAAI3I,EAAQ4I,EACZ,IAAK,IAAI1wB,EAAI,EAAGA,EAAIuY,EAASlW,OAAQrC,IAAK,CACtC8nB,EAASvP,EAASvY,GAClB,GAAI8nB,EAAOoB,WAAapB,EAAO6I,iBAAmB,MAAO,CACrDD,EAAmB5I,EAAOqB,mBAAmByH,YAAY,MACzD,GAAIF,EACA,GAAID,EACAA,EAAc5N,EAAE1W,KAAKK,MAAMikB,EAAaC,QAExCD,EAAcC,GAM9B,OAAOD,KAMXI,GAFJzxB,EAAW4vB,EAAMhkB,GAAIod,GAER4G,EAAMpnB,OAAO,CACtBC,KAAM,SAAUqG,EAAMyV,GAClBvf,KAAKmU,SAAW,GAChByQ,EAAQhe,GAAGnD,KAAKpG,KAAK2C,KAAMuf,GAC3Bvf,KAAKilB,eAAiB,IAAI9kB,EAAEssB,OAAOC,EAAc5iB,GAAOyV,GACxDvf,KAAKukB,aAGTza,KAAM,SAASA,GACX,GAAIA,EACA9J,KAAKilB,eAAenb,KAAK4iB,EAAc5iB,QACpC,CACH,IAAI6iB,EAAc3sB,KAAKilB,eAAenb,OACtC,GAAI6iB,EACA,OAAO,IAAI5kB,EAAK4kB,EAAYjnB,OAAO3J,EAAG4wB,EAAYjnB,OAAOlJ,EAAGmwB,EAAYnuB,KAAK8J,MAAOqkB,EAAYnuB,KAAK6J,UAKjHukB,OAAQ,WACJ5sB,KAAKilB,eAAe2H,UAGxB5H,OAAQ,SAAUzF,GACd5kB,EAAMK,WAAWgF,KAAKilB,eAAe1F,QAASA,GAC9CqL,EAAMhkB,GAAGoe,OAAO3nB,KAAK2C,KAAMuf,OAI/BkJ,EAAS/C,EAAWliB,OAAO,CAC3BC,KAAM,SAAU8b,GACZmG,EAAW9e,GAAGnD,KAAKpG,KAAK2C,KAAMuf,GAC9Bvf,KAAK6sB,cACL7sB,KAAKukB,aAGTS,OAAQ,SAAUzF,GACd,GAAIA,EAAS,CACT,IAAIuN,EAAgB9sB,KAAKuf,QAEzB,GAAIA,EAAQze,OAAQ,CAChB9F,EAAW8xB,EAAe,CACtBhsB,OAAQye,EAAQze,SAEpBd,KAAKoN,QAAQ2f,KAAKD,EAAchsB,OAAO/E,EAAG+wB,EAAchsB,OAAOtE,GAGnE,GAAIwD,KAAK2kB,oBAAoBpF,EAAS,CAAC,WACnCvf,KAAKgtB,QAAQC,UAAUH,EAAc5N,QAGzClf,KAAK0kB,YAAYnF,GAEjBmG,EAAW9e,GAAGoe,OAAO3nB,KAAK2C,KAAMuf,KAIxCsN,YAAa,WACT,IAAItN,EAAUvf,KAAKuf,QACnB,IAAIjX,EAAQiX,EAAQjX,MACpB,IAAID,EAASkX,EAAQlX,OACrB,IAAI6W,EAASK,EAAQL,OACrB,IAAKqC,EAAQrC,GAAS,CAClB,IAAKqC,EAAQjZ,GACTA,EAAQD,EAEZ,IAAKkZ,EAAQlZ,GACTA,EAASC,EAEbiX,EAAQL,OAASA,EAASjjB,KAAKkJ,IAAImD,EAAOD,GAAU,EAGxD,IAAIvH,EAASye,EAAQze,QAAU,CAAC/E,EAAGmjB,EAAQ1iB,EAAG0iB,GAC9Clf,KAAKoN,QAAU,IAAIqR,EAAErf,MAAM0B,EAAO/E,EAAG+E,EAAOtE,GAC5CwD,KAAKgtB,QAAU,IAAIvO,EAAEgK,OAAOzoB,KAAKoN,QAAS8R,GAC1Clf,KAAKilB,eAAiB,IAAI9kB,EAAEsoB,OAAOzoB,KAAKgtB,QAAS,CAC7CpH,OAAQrG,EAAQqG,SAGpB5lB,KAAK8lB,WAKToH,GAFJlyB,EAAWytB,EAAO7hB,GAAIod,GAETzgB,EAAMC,OAAO,CACtBC,KAAM,SAAUjB,EAAS+c,GACrBA,EAAUA,GAAW,GACrBvf,KAAKwC,QAAUA,EACfxC,KAAKmtB,QAAUhtB,EAAEitB,QAAQ/J,OAAO7gB,EAAS+c,GACzC,GAAI5kB,EAAM6L,WAAWxG,KAAKmtB,QAAQ5J,WAC9BvjB,KAAKujB,UAAYvjB,KAAKqtB,WAG1BrtB,KAAKilB,eAAiB,IAAI9kB,EAAEyqB,MAC5B5qB,KAAKstB,SAAW,IAAIvlB,EAAK,EAAG,EAAGwX,EAAQjX,MAAOiX,EAAQlX,QACtDrI,KAAKxB,KAAKwB,KAAKstB,WAGnB7Z,OAAQ,WACJ,IAAI6R,EAAMtlB,KAAKilB,eAAeuH,cAC9B,OAAO,IAAIzkB,EAAK,EAAG,EAAGud,EAAIhd,QAASgd,EAAIjd,WAG3C7J,KAAM,SAAUA,GACZ,IAAI+uB,EAAUvtB,KAAKstB,SACnB,GAAI/L,EAAQ/iB,GAAO,CACf+uB,EAAQjlB,MAAQ9J,EAAK8J,MACrBilB,EAAQllB,OAAS7J,EAAK6J,OACtBrI,KAAKmtB,QAAQK,QAAQhvB,GAEzB,MAAO,CACH8J,MAAOilB,EAAQjlB,MACfD,OAAQklB,EAAQllB,SAIxBglB,WAAY,SAAUtxB,EAAGS,GACrB,IAAI+wB,EAAUvtB,KAAKstB,SACnB,GAAI/L,EAAQxlB,IAAMwlB,EAAQ/kB,GAAI,CAC1B+wB,EAAQxxB,EAAIA,EACZwxB,EAAQ/wB,EAAIA,EACZwD,KAAKmtB,QAAQ5J,UAAU,CAACxnB,EAAGA,EAAGS,EAAGA,IAErC,MAAO,CACHT,EAAGwxB,EAAQxxB,EACXS,EAAG+wB,EAAQ/wB,IAInBixB,KAAM,WACFztB,KAAKmtB,QAAQM,KAAKztB,KAAKilB,iBAG3BgF,OAAQ,SAAUvG,GACd1jB,KAAKilB,eAAegF,OAAOvG,EAAOqB,oBAClC,OAAO/kB,MAGXqB,OAAQ,SAAUqiB,GACd1jB,KAAKilB,eAAe5jB,OAAOqiB,EAAOqB,qBAGtC2I,aAAc,aAId/qB,MAAO,WACH3C,KAAKilB,eAAetiB,SAGxBgrB,QAAS,SAASC,GACd5tB,KAAKmtB,QAAQQ,UACb,GAAGC,EACCnzB,EAAEuF,KAAKwC,SAASnB,aAO5B,SAAS0mB,EAAqBxI,GAC1B,MAAO,CACHxjB,EAAGwjB,EAAQxjB,GAAK,EAChBS,EAAG+iB,EAAQ/iB,GAAK,EAChB8L,MAAOiX,EAAQjX,OAAS,EACxBD,OAAQkX,EAAQlX,QAAU,GAIlC,SAASsd,EAAwBpG,GAC7B,GAAIA,EAAS,CACT,IAAIsO,EAAiBtO,EAErB,GAAIjiB,EAASuwB,GACTA,EAAiB,CACb9N,MAAO8N,GAIf,GAAIA,EAAe9N,MACf8N,EAAe9N,MAAQgG,EAAS8H,EAAe9N,OAEnD,OAAO8N,GAIf,SAAS9H,EAAStnB,GACd,IAAIshB,EACJ,GAAIthB,GAASgjB,EACT1B,EAAQ,IAAI5f,EAAE2tB,MAAMrvB,GAAOsvB,aAE3BhO,EAAQthB,EAEZ,OAAOshB,EAGX,SAAS+I,EAAUxY,EAAIC,GACnB,IAAIyd,EAAQzd,EAAGxU,EAAIuU,EAAGvU,EACtB,IAAIkyB,EAAQ1d,EAAG/T,EAAI8T,EAAG9T,EACtB,IAAIwN,EAAQ7J,EAAEqhB,KAAK0M,IAAIjyB,KAAKmE,MAAM6tB,EAAOD,IACzC,OAAOhkB,EAGX,SAASie,EAAclsB,EAAGS,GACtB,OAAO,IAAI2D,EAAEguB,QAAQ,IAAI1P,EAAErf,MAAMrD,EAAGS,IAGxC,SAASkwB,EAAc5iB,GACnB,GAAIA,EACA,OAAO,IAAI2U,EAAE1W,KAAK,CAAC+B,EAAK/N,EAAG+N,EAAKtN,GAAI,CAACsN,EAAKxB,MAAOwB,EAAKzB,SAK9D1N,EAAMK,WAAWF,EAAS,CACtB2I,KAAM,SAAUjB,GACZ7H,EAAM8I,KAAKjB,EAAS1H,EAAQoL,KAEhCoc,mBAAoBA,EACpBsC,QAASA,EACTjC,MAAOA,EACPI,YAAaA,EACbG,SAAUA,EACVuF,OAAQA,EACRmC,MAAOA,EACPpD,UAAWA,EACX0F,OAAQA,EACRtF,KAAMA,EACN6E,OAAQA,EACRzB,KAAMA,EACN9C,WAAYA,EACZU,YAAaA,EACbJ,aAAcA,EACdyC,SAAUA,EACV9H,mBAAoBA,EACpBuD,UAAWA,EACX4E,MAAOA,EACP5F,WAAYA,MA39CpB,CA+9CoB,mBAAVlrB,QAAwBA,OAAO2L,IAAM3L,OAAS,SAAS4L,EAAIC,EAAIC,IAAMA,GAAMD,OAErF,SAAc7L,QACVA,OAAO,2BAA2B,CAAE,sBAAuB,SAC5D,WAEC,IAAWC,EAy2EZC,OAAOC,MAAMC,OAz2EEC,OAAd,EAEQF,EAAQD,OAAOC,MACfI,EACAD,EADUH,EAAMI,QACED,QAClByI,EAAQ5I,EAAM4I,MACdqnB,EAAQ9vB,EAAQ8vB,MAChB7iB,EAAOjN,EAAQiN,KACfyf,EAAY1sB,EAAQ0sB,UACpBpsB,EAAQN,EAAQM,MAChB2B,EAAc3B,EAAM2B,YACpBqC,EAAQtE,EAAQsE,MAChBqpB,EAAS3tB,EAAQ2tB,OACjBnlB,EAASxI,EAAQwI,OACjBtI,EAAaL,EAAMK,WACnBozB,EAAUzzB,EAAMuL,GAAGkoB,QACnB5M,EAAO7mB,EAAM2mB,QAAQE,KACrBD,EAAUC,EAAKD,QACf5f,EAAUlH,EAAEkH,QACZ0sB,EAAQ5zB,EAAE4zB,MAGVC,EAAU,CACNC,MAAO,UACPC,KAAM,UACNC,MAAO,UACP/d,IAAK,UACLqc,KAAM,OACN2B,OAAQ,UACRC,MAAO,WACPC,KAAM,WACNC,KAAM,WACNC,MAAO,WACPC,UAAW,aACXC,UAAW,cAEfC,EAAoB,GACpBC,EAAO,OACPC,EAAM,MACNC,EAAQ,QACRC,EAAO,OACPC,EAAS,SACTC,EAAoB,GACpBC,EAAqB,GACrBC,EAAa,YACbC,EAAO,OACPC,EAAW,UACXC,EAAa,aACbC,EAAmB,mBACnBC,EAAgB,EAChBC,EAAiB,EACjBC,EAAc,aACdC,EAAc,aACdC,EAAa,YACbC,EAAW,UACXC,GAAc,IACdC,EAAa,IACbC,EAAW,GACXC,EAAkB,IAClBC,EAAsB,EACtB/O,EAAc,cACdgP,EAAM,MACNC,EAAU,UACVC,EACAC,EAAS,SACTC,EAAe,CACXC,KAHK,SAILC,EAAKH,GAKTI,GAFJl2B,EAAQwzB,QAAUA,EAEI3zB,EAAM4I,MAAMC,OAAO,CACrCC,KAAM,SAAUwtB,GACZjxB,KAAKixB,YAAcA,EACnBjxB,KAAKlF,QAAUm2B,EAAYn2B,SAE/B6K,UAAW,WACP3F,KAAKkxB,MAAQ,GACblxB,KAAKmxB,IAAM,GACXnxB,KAAKoxB,SAAW,GAChB,SAASC,EAAO1f,EAAI8B,GAChB,IAAIN,EAAQnT,KAAKlF,QAAQw2B,aAAa3f,GACtC,GAAIwB,EAAO,CACPnT,KAAKoxB,SAASj1B,KAAKgX,GACnBnT,KAAKkxB,MAAM/0B,KAAKgX,EAAMM,SAASjK,WAC/BxJ,KAAKmxB,IAAIh1B,KAAKsX,EAAOjK,YAI7BxJ,KAAKixB,YAAY5W,QAAQtZ,QAAQswB,EAAQrxB,OAE7C8F,OAAQ,SAAUlC,GACd,GAAI5D,KAAKoxB,SAASnzB,QAAU,EACxB,OAEJ,IAAK,IAAIrC,EAAI,EAAGA,EAAIoE,KAAKoxB,SAASnzB,OAAQrC,IAEtCoE,KAAKoxB,SAASx1B,GAAG6G,SACb,IAAIrD,EAAMY,KAAKkxB,MAAMt1B,GAAGG,GAAKiE,KAAKmxB,IAAIv1B,GAAGG,EAAIiE,KAAKkxB,MAAMt1B,GAAGG,GAAK6H,EAAM5D,KAAKkxB,MAAMt1B,GAAGY,GAAKwD,KAAKmxB,IAAIv1B,GAAGY,EAAIwD,KAAKkxB,MAAMt1B,GAAGY,GAAKoH,QAMxI2tB,EAAiBhuB,EAAMC,OAAO,CAC9BC,KAAM,SAAU+tB,EAAcC,EAAYC,GACtC,GAAI30B,EAAY20B,GACZ1xB,KAAK0xB,QAAU,WAGf1xB,KAAK0xB,QAAUA,EAEnB1xB,KAAK2xB,cAAgBH,EACrBxxB,KAAK4xB,YAAcH,EACnBzxB,KAAK6xB,MAAQ,kBAEjBC,KAAM,WACF9xB,KAAK+xB,SAAS/xB,KAAK2xB,gBAEvBK,KAAM,WACFhyB,KAAK+xB,SAAS/xB,KAAK4xB,cAEvBG,SAAU,SAAUE,GAChB,IAAIn3B,EAAUm3B,EAAMn3B,QACpB,GAAIkF,KAAK0xB,QAAS,CACdO,EAAM3X,QAAQvZ,QACV,SAAU4Q,EAAI/S,GACV,IAAIszB,EAAOp3B,EAAQw2B,aAAa3f,GAChCugB,EAAKpN,QAAQ,OACb,GAAIoN,EACAA,EAAKtzB,OAAOA,KAIxB,IAAIuzB,EAAS,IAAI7uB,EACjB6uB,EAAO9tB,WAAW,IAAI2sB,EAAgBiB,IACtCE,EAAO7tB,WAAW,WACd2tB,EAAM3X,QAAQvZ,QACV,SAAU4Q,GACN,IAAIugB,EAAOp3B,EAAQw2B,aAAa3f,GAChCugB,EAAKpN,QAAQ,UAIzBqN,EAAO1sB,WAEN,CACDwsB,EAAM5X,QAAQtZ,QAAQ,SAAU4Q,EAAI8B,GAChC,IAAIN,EAAQrY,EAAQw2B,aAAa3f,GACjC,GAAIwB,EACAA,EAAM1Q,SAASgR,EAAOjK,aAG9ByoB,EAAM3X,QAAQvZ,QACV,SAAU4Q,EAAI/S,GACV,IAAIszB,EAAOp3B,EAAQw2B,aAAa3f,GAChC,GAAIugB,EACAA,EAAKtzB,OAAOA,SAQhCwzB,GAAgB7uB,EAAMC,OAAO,CAC7BC,KAAM,SAAU8K,GACZvO,KAAKqyB,MAAQ,GACbryB,KAAK6xB,MAAQ,iBACb,GAAItjB,IAAS1T,EACTmF,KAAKqyB,MAAMl2B,KAAKoS,IAGxBmC,IAAK,SAAU4hB,GACXtyB,KAAKqyB,MAAMl2B,KAAKm2B,IAEpBR,KAAM,WACF,IAAK,IAAIl2B,EAAI,EAAGA,EAAIoE,KAAKqyB,MAAMp0B,OAAQrC,IACnCoE,KAAKqyB,MAAMz2B,GAAGk2B,QAGtBE,KAAM,WACF,IAAK,IAAIp2B,EAAI,EAAGA,EAAIoE,KAAKqyB,MAAMp0B,OAAQrC,IACnCoE,KAAKqyB,MAAMz2B,GAAGo2B,UAKtBO,GAAqBhvB,EAAMC,OAAO,CAClCC,KAAM,SAAU1D,EAAMyyB,EAAYC,GAC9BzyB,KAAKD,KAAOA,EACZC,KAAK0yB,YAAcF,EACnBxyB,KAAK2yB,YAAcF,EACnB,GAAIlR,EAAQiR,GACRxyB,KAAK4yB,YAAc7yB,EAAK3B,SAG5B,GAAImjB,EAAQkR,GACRzyB,KAAK6yB,YAAc9yB,EAAK4D,SAE5B3D,KAAK6xB,MAAQ,sBAEjBC,KAAM,WACF,GAAI9xB,KAAK4yB,cAAgB/3B,EACrBmF,KAAKD,KAAK+yB,iBAAiB9yB,KAAK4yB,YAAa,UAGjD,GAAI5yB,KAAK6yB,cAAgBh4B,EACrBmF,KAAKD,KAAK+yB,iBAAiB9yB,KAAK6yB,YAAa,UAGjD7yB,KAAKD,KAAKgzB,eAEdf,KAAM,WACF,GAAIhyB,KAAK0yB,cAAgB73B,EACrBmF,KAAKD,KAAK+yB,iBAAiB9yB,KAAK0yB,YAAa,UAGjD,GAAI1yB,KAAK2yB,cAAgB93B,EACrBmF,KAAKD,KAAK+yB,iBAAiB9yB,KAAK2yB,YAAa,UAGjD3yB,KAAKD,KAAKgzB,iBAIdC,GAAyBzvB,EAAMC,OAAO,CACtCC,KAAM,SAAU1D,EAAMkzB,EAAYC,GAC9BlzB,KAAKD,KAAOA,EACZC,KAAK4yB,YAAcK,EACnBjzB,KAAK6yB,YAAcK,EACnBlzB,KAAK0yB,YAAc3yB,EAAK3B,SACxB4B,KAAK2yB,YAAc5yB,EAAK4D,SACxB3D,KAAK6xB,MAAQ,sBAEjBC,KAAM,WACF9xB,KAAKD,KAAK+yB,iBAAiB9yB,KAAK4yB,YAAa,UAC7C5yB,KAAKD,KAAK+yB,iBAAiB9yB,KAAK6yB,YAAa,UAC7C7yB,KAAKD,KAAKgzB,eAEdf,KAAM,WACFhyB,KAAKD,KAAK+yB,iBAAiB9yB,KAAK0yB,YAAa,UAC7C1yB,KAAKD,KAAK+yB,iBAAiB9yB,KAAK2yB,YAAa,UAC7C3yB,KAAKD,KAAKgzB,iBAIdI,GAAuB5vB,EAAMC,OAAO,CACpCC,KAAM,SAAUyR,GACZlV,KAAKkV,WAAaA,EAClBlV,KAAKlF,QAAUoa,EAAWpa,QAC1BkF,KAAKozB,gBAAkBle,EAAWke,gBAClCpzB,KAAK6xB,MAAQ,qBAEjBC,KAAM,WACF9xB,KAAKlF,QAAQwkB,eAAetf,KAAKkV,WAAY,QAEjD8c,KAAM,WACFhyB,KAAKlF,QAAQuG,OAAOrB,KAAKkV,WAAY,UAIzCme,GAAkB9vB,EAAMC,OAAO,CAC/BC,KAAM,SAAU0P,GACZnT,KAAKmT,MAAQA,EACbnT,KAAKlF,QAAUqY,EAAMrY,QACrBkF,KAAK6xB,MAAQ,YAEjBC,KAAM,WACF9xB,KAAKlF,QAAQikB,UAAU/e,KAAKmT,MAAO,OACnCnT,KAAKmT,MAAMub,OAAO,QAEtBsD,KAAM,WACFhyB,KAAKmT,MAAMub,OAAO,OAClB1uB,KAAKlF,QAAQuG,OAAOrB,KAAKmT,MAAO,UAOpCmgB,GAAgB/vB,EAAMC,OAAO,CAC7BC,KAAM,SAAU8vB,EAAQC,EAAYC,GAChCzzB,KAAKuzB,OAASA,EACdvzB,KAAKwzB,WAAaA,EAClBxzB,KAAK6xB,MAAQ,iBACb7xB,KAAK0zB,WAAa,GAClB1zB,KAAKyzB,QAAUA,EACf,IAAK,IAAI73B,EAAI,EAAGA,EAAIoE,KAAKuzB,OAAOt1B,OAAQrC,IAAK,CACzC,IAAIuX,EAAQnT,KAAKuzB,OAAO33B,GACxBoE,KAAK0zB,WAAWv3B,KAAKgX,EAAMM,YAGnCqe,KAAM,WACF,IAAK,IAAIl2B,EAAI,EAAGA,EAAIoE,KAAKuzB,OAAOt1B,OAAQrC,IAAK,CACzC,IAAIuX,EAAQnT,KAAKuzB,OAAO33B,GACxBuX,EAAMM,OAAOzT,KAAKwzB,WAAW53B,IAC7B,GAAIuX,EAAM/V,eAAe,UACrB+V,EAAMwgB,OAAOxgB,EAAOnT,KAAK0zB,WAAW93B,GAAIoE,KAAKwzB,WAAW53B,IAE5DuX,EAAM4f,cAEV,GAAI/yB,KAAKyzB,QAAS,CACdzzB,KAAKyzB,QAAQG,gBACb5zB,KAAKyzB,QAAQI,YAGrB7B,KAAM,WACF,IAAK,IAAIp2B,EAAI,EAAGA,EAAIoE,KAAKuzB,OAAOt1B,OAAQrC,IAAK,CACzC,IAAIuX,EAAQnT,KAAKuzB,OAAO33B,GACxBuX,EAAMM,OAAOzT,KAAK0zB,WAAW93B,IAE7B,GAAIuX,EAAM/V,eAAe,UACrB+V,EAAMwgB,OAAOxgB,EAAOnT,KAAKwzB,WAAW53B,GAAIoE,KAAK0zB,WAAW93B,IAE5DuX,EAAM4f,cAGV,GAAI/yB,KAAKyzB,QAAS,CACdzzB,KAAKyzB,QAAQG,gBACb5zB,KAAKyzB,QAAQI,cAKrBC,GAAoBvwB,EAAMC,OAAO,CACjCC,KAAM,SAAUyR,EAAYpa,GACxBkF,KAAKkV,WAAaA,EAClBlV,KAAKlF,QAAUA,EACfkF,KAAK6xB,MAAQ,kBAGjBC,KAAM,WACF9xB,KAAKlF,QAAQuG,OAAOrB,KAAKkV,WAAY,QAGzC8c,KAAM,WACFhyB,KAAKlF,QAAQwkB,eAAetf,KAAKkV,WAAY,UAIjD6e,GAAexwB,EAAMC,OAAO,CAC5BC,KAAM,SAAU0P,EAAOrY,GACnBkF,KAAKmT,MAAQA,EACbnT,KAAKlF,QAAUA,EACfkF,KAAK6xB,MAAQ,aAGjBC,KAAM,WACF9xB,KAAKlF,QAAQk5B,WACbh0B,KAAKlF,QAAQuG,OAAOrB,KAAKmT,MAAO,QAGpC6e,KAAM,WACFhyB,KAAKlF,QAAQikB,UAAU/e,KAAKmT,MAAO,UAIvC8gB,GAAc1wB,EAAMC,OAAO,CAC3BC,KAAM,SAAUywB,EAAiBC,EAAer5B,GAC5CkF,KAAKgC,QAAUkyB,EACfl0B,KAAKo0B,SAAWD,EAChBn0B,KAAKlF,QAAUA,EACfkF,KAAK6xB,MAAQ,YAEjBC,KAAM,WACF9xB,KAAKlF,QAAQu5B,IAAIr0B,KAAKgC,UAE1BgwB,KAAM,WACFhyB,KAAKlF,QAAQu5B,IAAIr0B,KAAKo0B,aAI1BE,GAAa/wB,EAAMC,OAAO,CAC1BC,KAAM,SAAUgwB,EAASF,EAAQgB,GAC7Bv0B,KAAKuzB,OAASA,EACdvzB,KAAKu0B,YAAcA,EACnBv0B,KAAK6xB,MAAQ,WACb7xB,KAAKw0B,YAAc,GACnBx0B,KAAKy0B,UAAYhB,EAAQiB,OACzB10B,KAAKyzB,QAAUA,EACfzzB,KAAKc,OAAS2yB,EAAQkB,aAAa7zB,SACnC,IAAK,IAAIlF,EAAI,EAAGA,EAAIoE,KAAKuzB,OAAOt1B,OAAQrC,IAAK,CACzC,IAAIuX,EAAQnT,KAAKuzB,OAAO33B,GACxBoE,KAAKw0B,YAAYr4B,KAAKgX,EAAM7I,SAASN,SAG7C8nB,KAAM,WACF,IAAIl2B,EAAGuX,EACP,IAAKvX,EAAI,EAAGA,EAAIoE,KAAKuzB,OAAOt1B,OAAQrC,IAAK,CACrCuX,EAAQnT,KAAKuzB,OAAO33B,GACpBuX,EAAM7I,OAAOtK,KAAKu0B,YAAY34B,GAAIoE,KAAKc,OAAQ,OAC/C,GAAIqS,EAAM/V,eAAe,UACrB+V,EAAMwgB,OAAOxgB,GAEjBA,EAAM4f,cAEV,GAAI/yB,KAAKyzB,QAAS,CACdzzB,KAAKyzB,QAAQmB,cACb50B,KAAKyzB,QAAQI,YAGrB7B,KAAM,WACF,IAAIp2B,EAAGuX,EACP,IAAKvX,EAAI,EAAGA,EAAIoE,KAAKuzB,OAAOt1B,OAAQrC,IAAK,CACrCuX,EAAQnT,KAAKuzB,OAAO33B,GACpBuX,EAAM7I,OAAOtK,KAAKw0B,YAAY54B,GAAIoE,KAAKc,OAAQ,OAC/C,GAAIqS,EAAM/V,eAAe,UACrB+V,EAAMwgB,OAAOxgB,GAEjBA,EAAM4f,cAEV,GAAI/yB,KAAKyzB,QAAS,CACdzzB,KAAKyzB,QAAQmB,cACb50B,KAAKyzB,QAAQI,cAKrBgB,GAActxB,EAAMC,OAAO,CAC3BC,KAAM,SAAU3I,EAASg6B,EAAOC,GAC5B/0B,KAAKlF,QAAUA,EACfkF,KAAKqb,QAAU0Z,EACf/0B,KAAK80B,MAAQA,EACb90B,KAAK6xB,MAAQ,eAEjBC,KAAM,WACF9xB,KAAKlF,QAAQk6B,SAASh1B,KAAK80B,MAAO90B,KAAKqb,UAE3C2W,KAAM,WACFhyB,KAAKlF,QAAQ+wB,QAAQ7rB,KAAK80B,MAAO,UAIrCG,GAAa1xB,EAAMC,OAAO,CAC1BC,KAAM,SAAU3I,EAASg6B,EAAOC,GAC5B/0B,KAAKlF,QAAUA,EACfkF,KAAKqb,QAAU0Z,EACf/0B,KAAK80B,MAAQA,EACb90B,KAAK6xB,MAAQ,eAEjBC,KAAM,WACF9xB,KAAKlF,QAAQk6B,SAASh1B,KAAK80B,MAAO90B,KAAKqb,UAE3C2W,KAAM,WACFhyB,KAAKlF,QAAQixB,OAAO/rB,KAAK80B,MAAO,UAOpCI,GAAkBv6B,EAAMmX,WAAWtO,OAAO,CAC1CC,KAAM,SAAU8b,GACZ5kB,EAAMmX,WAAWlL,GAAGnD,KAAKpG,KAAK2C,KAAMuf,GACpCvf,KAAKm1B,KAAKn1B,KAAKo1B,OAAQ7V,GACvBvf,KAAKwb,MAAQ,GACbxb,KAAKoC,MAAQ,EACbpC,KAAKq1B,SAAW,KAGpBD,OAAQ,CAAC,SAAU,UAMnBE,MAAO,WACHt1B,KAAKu1B,UAAY,IAAInD,IAMzBoD,OAAQ,WACJx1B,KAAKu1B,UAAY16B,GAMrB46B,OAAQ,SAAUC,GACd,GAAI11B,KAAKu1B,UAAUlD,MAAMp0B,OAAS,EAC9B+B,KAAK21B,SAAS31B,KAAKu1B,UAAWG,GAElC11B,KAAKu1B,UAAY16B,GAOrB+6B,iBAAkB,SAAUtD,GACxB,GAAItyB,KAAKu1B,UACLv1B,KAAKu1B,UAAU7kB,IAAI4hB,QAEnBtyB,KAAK0Q,IAAI4hB,IASjB5hB,IAAK,SAAU4hB,EAAUoD,GACrB11B,KAAK21B,SAASrD,EAAUoD,IAQ5Btd,IAAK,WACD,GAAIpY,KAAKoC,MAAQ,EAAG,CAChBpC,KAAKwb,MAAMpD,MACXpY,KAAKoC,UAIbyzB,MAAO,WACH,OAAO71B,KAAKwb,MAAMvd,QAMtB6zB,KAAM,WACF,GAAI9xB,KAAKoC,MAAQ,EAAG,CAChBpC,KAAKoC,QACLpC,KAAKwb,MAAMxb,KAAKoC,OAAO0vB,OACvB9xB,KAAK2E,QAAQ,YAOrBqtB,KAAM,WACF,GAAIhyB,KAAKwb,MAAMvd,OAAS,GAAK+B,KAAKoC,MAAQpC,KAAKwb,MAAMvd,OAAQ,CACzD+B,KAAKwb,MAAMxb,KAAKoC,OAAO4vB,OACvBhyB,KAAKoC,QACLpC,KAAK2E,QAAQ,YAIrBgxB,SAAU,SAAUJ,EAAWG,GAE3B11B,KAAKwb,MAAM/Z,OAAOzB,KAAKoC,MAAOpC,KAAKwb,MAAMvd,OAAS+B,KAAKoC,OACvDpC,KAAKwb,MAAMrf,KAAKo5B,GAChB,GAAIG,IAAY,MACZ11B,KAAKgyB,YAELhyB,KAAKoC,QAGT,GAAIpC,KAAKwb,MAAMvd,OAAS+B,KAAKq1B,SAAU,CACnCr1B,KAAKwb,MAAM/Z,OAAO,EAAGzB,KAAKwb,MAAMvd,OAAS+B,KAAKq1B,UAC9Cr1B,KAAKoC,MAAQpC,KAAKq1B,WAO1B1yB,MAAO,WACH3C,KAAKwb,MAAQ,GACbxb,KAAKoC,MAAQ,KAMjB0zB,GAAYvyB,EAAMC,OAAO,CACzBC,KAAM,SAAUsyB,GACZ/1B,KAAK+1B,YAAcA,GAEvBz6B,MAAO,aAEPyxB,KAAM,aAEN1wB,IAAK,aAEL25B,YAAa,WACT,OAAO,OAEXC,UAAW,WACP,OAAO3H,EAAQC,SAInB2H,GAAeJ,GAAUtyB,OAAO,CAChCC,KAAM,SAAUsyB,GACZ,IAAII,EAAOn2B,KACX,IAAIo2B,EAAWz7B,EAAM07B,QAAQC,SAAW/F,EAAkBD,EAC1DwF,GAAUlvB,GAAGnD,KAAKpG,KAAK84B,EAAMJ,GAE7B,IAAIj7B,EAAUq7B,EAAKJ,YAAYj7B,QAC3By7B,EAASz7B,EAAQy7B,OAErB,IAAIC,EAAW17B,EAAQ07B,SAAWL,EAAKK,SAAW/7B,EAAEK,EAAQ27B,YAAYC,oBAAoB,CACxFN,SAAUA,EACVO,mBAAoBnG,EACpBoG,oBAAqB,MACrB5rB,KAAM,MACN6rB,OAAQxI,EAAM8H,EAAKW,MAAOX,KAC3BziB,KAAK,uBAER,GAAI6iB,EAAOhT,UACP4S,EAAKY,cAAgB,IAAI3I,EAAQmI,EAAO/zB,SAG5C,IAAIw0B,EAAgB,SAAUC,EAAW9xB,EAAKD,GAC1C+xB,EAAUC,cACVD,EAAUE,YAAYhyB,GAAOirB,EAAYlrB,GAAOmrB,IAGpD2G,EAAcR,EAASY,WAAWr7B,GAClCi7B,EAAcR,EAASY,WAAW56B,GAClCg6B,EAASa,WAGbrB,YAAa,SAAUl3B,EAAGw4B,GACtB,IAAIvB,EAAc/1B,KAAK+1B,YACvB,IAAIxW,EAAUwW,EAAYj7B,QAAQykB,QAAQgY,SAC1C,IAAIC,EAAUF,EAAKG,QAEnB,GAAIlW,EAAQhC,EAAQpiB,KAChB,IAAKoiB,EAAQpiB,KAAOoiB,EAAQpiB,KAAO,OAC/Bq6B,EAAUE,GAAOJ,KAAU/V,EAAQwU,EAAY4B,kBAE/CH,EAAUF,EAAK/X,EAAQpiB,IAAM,OAIrC,OAAQoiB,IAAY,OAASiY,IAAYjW,EAAQwU,EAAY6B,kBAAoBrW,EAAQwU,EAAY8B,oBAGzGv8B,MAAO,WACH0E,KAAKw2B,SAASsB,UAElB/K,KAAM,aAEN+J,MAAO,SAAUiB,GACb,IAAI5B,EAAOn2B,KACPlF,EAAUq7B,EAAKJ,YAAYj7B,QAC3By7B,EAASz7B,EAAQy7B,OACjByB,EAAY,IAAI54B,EAAM24B,EAAKE,WAAYF,EAAKG,WAEhD,GAAI3B,EAAOhT,UAAW,CAClBzoB,EAAQq9B,UAAUH,EAAUhxB,OAAO,IACnCmvB,EAAKY,cAAcqB,OAAOJ,GAC1BzB,EAAOhT,UAAUyU,EAAUj8B,EAAGi8B,EAAUx7B,QAExCw7B,EAAYA,EAAUnxB,KAAK/L,EAAQu9B,KAAKrxB,OAAO,IAGnDlM,EAAQ6J,QAAQ8rB,EAAK,CAAC4D,IAAK2D,KAE/B37B,IAAK,WACD2D,KAAKw2B,SAASa,WAElBpB,UAAW,WACP,OAAO3H,EAAQvB,QAQnBuL,GAAc/0B,EAAMC,OAAO,CAC3BC,KAAM,SAAUsyB,GACZ/1B,KAAK+1B,YAAcA,GAEvBC,YAAa,WACT,OAAO,MAEX16B,MAAO,SAAUwD,EAAGw4B,GAChB,IAAIvB,EAAc/1B,KAAK+1B,YACnBj7B,EAAUi7B,EAAYj7B,QACtB68B,EAAc5B,EAAY4B,YAE9B,GAAIA,EAAa,CACb5B,EAAYwC,aAAaZ,EAAaL,GACtC,GAAIK,EAAYlE,QAAS,CACrBzzB,KAAKyzB,QAAUkE,EAAYlE,QAC3BzzB,KAAKw4B,OAASx4B,KAAKyzB,QAAQgF,SAAS35B,IAI5C,IAAKkB,KAAKw4B,OAAQ,CACdx4B,KAAKw4B,OAAS19B,EAAQ49B,iBAAiBD,SAAS35B,GAChD,GAAIkB,KAAKw4B,OACLx4B,KAAKyzB,QAAU34B,EAAQ49B,iBAI/B,GAAI14B,KAAKyzB,QACL,IAAKzzB,KAAKyzB,QAAQkF,aAAa34B,KAAKw4B,UAAY19B,EAAQ6J,QAAQ8qB,EAAY,CAAE8D,OAAQvzB,KAAKyzB,QAAQF,OAAQqF,YAAa,KACpH54B,KAAKyzB,QAAQn4B,MAAMwD,OAChB,CACHi3B,EAAYvQ,WAAa1mB,EACzBi3B,EAAY15B,IAAIyC,KAK5BiuB,KAAM,SAAUjuB,GACZ,GAAIkB,KAAKyzB,QAAS,CACdzzB,KAAKyzB,QAAQ1G,KAAK/sB,KAAKw4B,OAAQ15B,GAC/B,GAAIkB,KAAKyzB,QAAQkF,aAAa34B,KAAKw4B,QAC/Bx4B,KAAK+1B,YAAYj7B,QAAQ6J,QAAQ+qB,EAAM,CAAE6D,OAAQvzB,KAAKyzB,QAAQF,OAAQqF,YAAa,OAK/Fv8B,IAAK,WACD,IAAIvB,EAAUkF,KAAK+1B,YAAYj7B,QAC3B24B,EAAUzzB,KAAKyzB,QACfllB,EAEJ,GAAIklB,EACA,IAAKA,EAAQkF,aAAa34B,KAAKw4B,UAAY19B,EAAQ6J,QAAQgrB,EAAU,CAAE4D,OAAQE,EAAQF,OAAQqF,YAAa,KAAO,CAC/GrqB,EAAOklB,EAAQl4B,OACf,GAAIgT,EACAzT,EAAQ+9B,gBAAgBnoB,IAAInC,EAAM,YAGtCklB,EAAQ+B,SAIhBx1B,KAAKyzB,QAAU54B,EACfmF,KAAKw4B,OAAS39B,GAElBo7B,UAAW,SAAUn3B,GACjB,OAAOkB,KAAK+1B,YAAY4B,YAAc33B,KAAK+1B,YAAY4B,YAAYmB,WAAWh6B,GAAKwvB,EAAQC,SAI/FwK,GAAgBx1B,EAAMC,OAAO,CAC7BC,KAAM,SAAUsyB,GACZ/1B,KAAK+1B,YAAcA,GAEvBC,YAAa,SAAUl3B,EAAGw4B,GACtB,IAAIvB,EAAc/1B,KAAK+1B,YACvB,IAAIiD,EAAajD,EAAYj7B,QAAQykB,QAAQyZ,WAC7C,IAAIxB,EAAUwB,GAAcA,EAAWC,WAAa,MAEpD,GAAIzB,EACA,GAAIwB,EAAW77B,KAAO67B,EAAW77B,KAAO,OACpCq6B,EAAUF,EAAK0B,EAAW77B,IAAM,YAEhCq6B,EAAUE,GAAOJ,GAIzB,OAAOE,IAAYjW,EAAQwU,EAAY4B,eAAiBpW,EAAQwU,EAAY6B,iBAEhFt8B,MAAO,SAAUwD,GACb,IAAIhE,EAAUkF,KAAK+1B,YAAYj7B,QAC/BA,EAAQk5B,WACRl5B,EAAQo+B,SAAS59B,MAAMwD,IAE3BiuB,KAAM,SAAUjuB,GACZ,IAAIhE,EAAUkF,KAAK+1B,YAAYj7B,QAC/BA,EAAQo+B,SAASnM,KAAKjuB,IAE1BzC,IAAK,SAAUyC,EAAGw4B,GACd,IAAIx8B,EAAUkF,KAAK+1B,YAAYj7B,QAAS68B,EAAc33B,KAAK+1B,YAAY4B,YACvE,IAAI7tB,EAAOhP,EAAQo+B,SAASzlB,SAC5B,KAAMkkB,IAAgBA,EAAYwB,cAAgB7B,EAAKG,QACnD38B,EAAQk5B,WAEZ,IAAKlqB,EAAK9L,UACNlD,EAAQs+B,WAAWtvB,GAEvBhP,EAAQo+B,SAAS78B,OAErB45B,UAAW,WACP,OAAO3H,EAAQC,SAInB8K,GAAiB91B,EAAMC,OAAO,CAC9BC,KAAM,SAAUsyB,GACZ/1B,KAAK+1B,YAAcA,EACnB/1B,KAAKrC,KAAO,kBAEhBq4B,YAAa,WACT,OAAOh2B,KAAK+1B,YAAY8B,mBAE5Bv8B,MAAO,SAAUwD,EAAGw4B,GAChB,IAAIvB,EAAc/1B,KAAK+1B,YACnBj7B,EAAUi7B,EAAYj7B,QACtBw+B,EAAYvD,EAAY8B,kBACxB3iB,EAAapa,EAAQy+B,kBAAkB,GAAID,EAAUE,GAAI16B,GAE7D,GAAI26B,GAAQvkB,KAAgBpa,EAAQ6J,QAAQ8qB,EAAY,CAAE8D,OAAQ,GAAIqF,YAAa,CAAC1jB,GAAawkB,iBAAkB9I,KAAa91B,EAAQwkB,eAAepK,GAAa,CAChK6gB,EAAY4D,wBAAwBzkB,EAAYokB,EAAUE,GAAGrmB,MAAO,MACpE4iB,EAAY6D,eACZ7D,EAAYwC,aAAaxC,EAAY8D,iBAAkBvC,GACvD,GAAIA,EAAK35B,MAAQ,YACb7C,EAAQg/B,mBAAqBR,EAAU5V,WAExC,CACHxO,EAAW9W,OAAO,MAClB23B,EAAY15B,IAAIyC,KAIxBiuB,KAAM,SAAUjuB,GACZ,IAAIi3B,EAAc/1B,KAAK+1B,YACvB,IAAI7gB,EAAa6gB,EAAY8D,iBAE7B3kB,EAAWvR,OAAO7E,GAClBi3B,EAAYj7B,QAAQ6J,QAAQ+qB,EAAM,CAAE6D,OAAQ,GAAIqF,YAAa,CAAC1jB,GAAawkB,iBAAkB9I,IAC7F,OAAO,MAGXv0B,IAAK,SAAUyC,GACX,IAAIi3B,EAAc/1B,KAAK+1B,YACnB51B,EAAI41B,EAAYj7B,QAChBoa,EAAa6gB,EAAY8D,iBACzBlC,EAAc5B,EAAY4B,YAC1B2B,EAAYvD,EAAY8B,kBACxBl0B,EACAo2B,EAAoB55B,EAAE25B,mBAE1B,IAAK5kB,EACD,OAGJ,GAAIokB,GAAaA,EAAUE,IAAMtkB,EAAW8kB,gBACxCr2B,EAAS21B,EAAUE,QAChB,GAAI7B,GAAeA,aAAuB78B,EAAQm/B,MACrDt2B,EAASg0B,EAAYuC,aAAahL,IAASyI,EAAYuC,aAAap7B,QAEpE6E,EAAS7E,EAGboW,EAAWvR,OAAOA,GAElB,IAAKxD,EAAEwE,QAAQgrB,EAAU,CAAE4D,OAAQ,GAAIqF,YAAa,CAAC1jB,GAAawkB,iBAAkB9I,IAAW,CAC3F1b,EAAW6d,cACX5yB,EAAEg6B,6BACC,CACHh6B,EAAEkB,OAAO6T,EAAY,OACrB/U,EAAE04B,gBAAgBzgB,MAEtB2d,EAAY4D,0BAEZ,GAAGI,EAAmB,CAClB55B,EAAEi6B,mBAAmB1W,OAAOriB,OAAO04B,GACnC55B,EAAE25B,mBAAqB,OAI/B7D,UAAW,WACP,OAAO3H,EAAQC,SAInB8L,GAAqB92B,EAAMC,OAAO,CAClCC,KAAM,SAAUsyB,GACZ/1B,KAAK+1B,YAAcA,EACnB/1B,KAAKrC,KAAO,kBAGhBq4B,YAAa,SAAUl3B,EAAGw4B,GACtB,IAAIvB,EAAc/1B,KAAK+1B,YACnBj7B,EAAUi7B,EAAYj7B,QACtBk+B,EAAcl+B,EAAQykB,QAAQyZ,WAC9Bj5B,EAAOg2B,EAAY4B,YACnB2C,EAAWtB,IAAe,OACfj5B,GAAQA,EAAKuoB,QAAUvoB,EAAKo5B,YAAc7B,EAAKG,SAE9D,GAAI6C,EACAt6B,KAAKw5B,GAAKz5B,EAGd,OAAOu6B,GAGXh/B,MAAO,SAAUwD,EAAGw4B,GAChB,IAAIvB,EAAc/1B,KAAK+1B,YACvB,IAAI7gB,EAAalV,KAAKw5B,GAEtBzD,EAAYwC,aAAarjB,EAAYoiB,GAErC,IAAI7D,EAAUve,EAAWue,QAEzB,IAAI+E,EAAQn6B,EACZ,GAAIo1B,EAAS,CACT+E,EAAS/E,EAAQgF,SAAS35B,GAC1BT,EAAOwyB,EAAa2H,GAGxB,GAAIiB,GAAQvkB,IAAeue,IAAYsC,EAAYj7B,QAAQ6J,QAAQ8qB,EAAY,CAAE8D,OAAQ,GAAIqF,YAAa,CAAC1jB,GAAawkB,iBAAkBr7B,IAAS,CAC/I2B,KAAKw4B,OAASA,EACdx4B,KAAKu6B,WAAal8B,EAClBo1B,EAAQn4B,MAAMwD,OACX,CACHi3B,EAAYvQ,WAAa1mB,EACzBi3B,EAAY15B,IAAIyC,KAIxBiuB,KAAM,SAAUjuB,GACZ,IAAI20B,EAAUzzB,KAAKw5B,GAAG/F,QACtB,GAAIgG,GAAQz5B,KAAKw5B,KAAO/F,EAAS,CAC7BA,EAAQ1G,KAAK/sB,KAAKw4B,OAAQ15B,GAC1BkB,KAAK+1B,YAAYj7B,QAAQ6J,QAAQ+qB,EAAM,CAAE6D,OAAQ,GAAIqF,YAAa,CAAC54B,KAAKw5B,IAAKE,iBAAkB15B,KAAKu6B,aAEpG,OAAO,OAIfl+B,IAAK,SAAUyC,GACX,IAAIoW,EAAalV,KAAKw5B,GACtB,IAAI/F,EAAUve,EAAWue,QACzB,IAAIsC,EAAc/1B,KAAK+1B,YACvB,IAAIj7B,EAAUi7B,EAAYj7B,QAE1B,GAAI24B,EACA,GAAIgG,GAAQvkB,GAAa,CACrB,IAAI3G,EAAOklB,EAAQl4B,KAAKuD,GACxB,IAAKhE,EAAQ6J,QAAQgrB,EAAU,CAAE4D,OAAQ,GAAIqF,YAAa,CAAC1jB,GAAawkB,iBAAkB15B,KAAKu6B,aAAe,CAC1Gz/B,EAAQ+9B,gBAAgBnoB,IAAInC,EAAM,OAClC2G,EAAW6d,cACXj4B,EAAQq/B,8BAER5rB,EAAKujB,SAMrBmE,UAAW,WACP,OAAO3H,EAAQvB,QAIvB,SAASyN,EAAQr9B,EAAKqL,GAClB,OAAOA,EAAIkJ,WAAW,IAAMvU,GAAOqL,EAAIiyB,cAAc/oB,WAAW,IAAMvU,EAO1E,IAAIu9B,GAAcn3B,EAAMC,OAAO,CAC3BC,KAAM,SAAU3I,GACZkF,KAAKlF,QAAUA,EACfkF,KAAK26B,MAAQ,CACT,IAAIzE,GAAal2B,MACjB,IAAIq6B,GAAmBr6B,MACvB,IAAIq5B,GAAer5B,MACnB,IAAI+4B,GAAc/4B,MAClB,IAAIs4B,GAAYt4B,OAGpBA,KAAK46B,WAAa//B,GAGtBS,MAAO,SAAUwD,EAAGw4B,GAChBA,EAAOt8B,EAAW,GAAIs8B,GACtB,GAAIt3B,KAAK46B,WACL56B,KAAK46B,WAAWv+B,IAAIyC,EAAGw4B,GAE3Bt3B,KAAK66B,mBAAmB/7B,GACxBkB,KAAK86B,cAAch8B,EAAGw4B,GACtBt3B,KAAK46B,WAAWt/B,MAAMwD,EAAGw4B,GACzBt3B,KAAK+6B,cAAcj8B,GACnBkB,KAAKlF,QAAQkgC,QACbh7B,KAAKlF,QAAQy7B,OAAOpJ,QAAQ8N,kBAC5Bj7B,KAAKwlB,WAAa1mB,EAClB,OAAO,MAGXiuB,KAAM,SAAUjuB,EAAGw4B,GACfA,EAAOt8B,EAAW,GAAIs8B,GACtB,IAAI4D,EAAgB,KACpB,GAAIl7B,KAAK46B,WACLM,EAAgBl7B,KAAK46B,WAAW7N,KAAKjuB,EAAGw4B,GAE5C,GAAI4D,EACAl7B,KAAK66B,mBAAmB/7B,GAE5BkB,KAAK+6B,cAAcj8B,GACnB,OAAO,MAGXzC,IAAK,SAAUyC,EAAGw4B,GACdA,EAAOt8B,EAAW,GAAIs8B,GACtB,GAAIt3B,KAAK46B,WACL56B,KAAK46B,WAAWv+B,IAAIyC,EAAGw4B,GAE3Bt3B,KAAKlF,QAAQy7B,OAAOpJ,QAAQgO,iBAC5Bn7B,KAAK46B,WAAa//B,EAClBmF,KAAK+6B,cAAcj8B,GACnB,OAAO,MAGXs8B,QAAS,SAAUj+B,EAAKm6B,GACpB,IAAIx8B,EAAUkF,KAAKlF,QACnBw8B,EAAOt8B,EAAW,CAAEy8B,QAAS,MAAO4D,QAAS,MAAOC,OAAQ,OAAShE,GACrE,IAAKA,EAAKG,SAAWH,EAAK+D,WAAa/D,EAAKgE,QACxC,GAAId,EAAQr9B,EAAK,KAAM,CACnBrC,EAAQygC,YACRzgC,EAAQ0gC,kBACR,OAAO,UACJ,GAAIhB,EAAQr9B,EAAK,KAAM,CAC1BrC,EAAQg3B,OACRh3B,EAAQ0gC,kBACR,OAAO,UACJ,GAAIhB,EAAQr9B,EAAK,KAAM,CAC1BrC,EAAQk3B,OACRl3B,EAAQ0gC,kBACR,OAAO,UACJ,GAAIhB,EAAQr9B,EAAK,KAAM,CAC1BrC,EAAQwZ,OACRxZ,EAAQ0gC,uBACL,GAAIhB,EAAQr9B,EAAK,KAAM,CAC1BrC,EAAQ2gC,MACR3gC,EAAQ0gC,uBACL,GAAIhB,EAAQr9B,EAAK,KAAM,CAC1BrC,EAAQ4gC,QACR5gC,EAAQ0gC,uBACL,GAAIhB,EAAQr9B,EAAK,KAAM,CAC1BrC,EAAQ64B,SACR74B,EAAQ0gC,uBACL,GAAIhB,EAAQr9B,EAAK,KAAM,CAC1BrC,EAAQ0gC,kBACR1gC,EAAQwZ,OACRxZ,EAAQ4gC,cAET,GAAIv+B,IAAQ,IAAMA,IAAQ,EAAG,CAChC,IAAIw+B,EAAW37B,KAAKlF,QAAQ8gC,eAAe9gC,EAAQ4zB,UACnD,GAAIiN,EAAS19B,OAAQ,CACjB+B,KAAKlF,QAAQuG,OAAOs6B,EAAU,MAC9B37B,KAAKlF,QAAQ+gC,eACb77B,KAAKlF,QAAQ0gC,kBAGjB,OAAO,UACJ,GAAIr+B,IAAQ,GAAI,CACnB6C,KAAK87B,wBACLhhC,EAAQk5B,WACRl5B,EAAQ0gC,kBACR,OAAO,OAIfO,MAAO,SAAUj9B,EAAGw4B,GAChB,IAAIx8B,EAAUkF,KAAKlF,QACfgQ,EAAQwsB,EAAKxsB,MACbkxB,EAAIlhC,EAAQkQ,OACZuU,EAAUzkB,EAAQykB,QAClB0c,EAAW1c,EAAQ0c,SACnBC,EAAc,CAAEpzB,MAAOhK,EAAGw4B,KAAMA,EAAMtsB,KAAMgxB,GAEhD,GAAIlhC,EAAQ6J,QAAQurB,EAAYgM,GAC5B,OAGJ,GAAIpxB,EAAQ,EACRkxB,GAAKC,OAELD,GAAKC,EAGTD,EAAIrhC,EAAMI,QAAQyU,MAAMvT,KAAKiJ,IAAIqa,EAAQ4c,QAASlgC,KAAKkJ,IAAIoa,EAAQ6c,QAASJ,IAAK,GACjFE,EAAYlxB,KAAOgxB,EAEnBlhC,EAAQkQ,KAAKgxB,EAAGE,GAChBphC,EAAQ6J,QAAQwrB,EAAU+L,GAE1B,OAAO,MAEXG,QAAS,SAAUlG,EAAM/zB,GACrB+zB,EAAKJ,YAAc/1B,KACnBA,KAAK26B,MAAMv4B,GAAS+zB,GAGxBoC,aAAc,SAASx4B,EAAMu3B,GACzB,IAAIx8B,EAAUkF,KAAKlF,QACnB,IAAIk+B,EAAal+B,EAAQykB,QAAQyZ,WACjC,GAAIA,IAAej5B,EAAKo5B,YAAcp5B,EAAKwf,QAAQyZ,aAAe,MAAO,CACrE,IAAIsD,EAAiBhF,EAAKG,SAAWuB,EAAWC,WAAa,MAC7Dn+B,EAAQ4zB,OAAO3uB,EAAM,CAAEu8B,eAAgBA,MAI/CR,sBAAuB,WACnB,GAAI97B,KAAKu8B,cAAe,CACpBv8B,KAAKlF,QAAQuG,OAAOrB,KAAKu8B,eACzBv8B,KAAKu8B,cAAgB1hC,IAG7BigC,cAAe,SAAUh8B,EAAGw4B,GACxB,IAAK,IAAI17B,EAAI,EAAGA,EAAIoE,KAAK26B,MAAM18B,OAAQrC,IAAK,CACxC,IAAIu6B,EAAOn2B,KAAK26B,MAAM/+B,GACtB,GAAIu6B,EAAKH,YAAYl3B,EAAGw4B,GAAO,CAC3Bt3B,KAAK46B,WAAazE,EAClB,SAIZ4E,cAAe,SAAUj8B,GACrB,IAAI0D,EAAUxC,KAAKlF,QAAQ0H,QAC3B,IAAIg6B,EAASx8B,KAAK46B,WAAa56B,KAAK46B,WAAW3E,UAAUn3B,GAAMkB,KAAK43B,eAAiB53B,KAAK43B,eAAekB,WAAWh6B,GAAMkB,KAAK23B,YAAc33B,KAAK23B,YAAYmB,WAAWh6B,GAAKwvB,EAAQC,MAEtL/rB,EAAQi6B,IAAI,CAACD,OAAQA,KAEzB7C,wBAAyB,SAAUzkB,EAAYwnB,EAAeC,GAC1D38B,KAAK65B,iBAAmB3kB,EACxBlV,KAAK08B,cAAgBA,EACrB,GAAIC,EACA38B,KAAKu8B,cAAgBv8B,KAAK65B,sBAE1B75B,KAAKu8B,cAAgB1hC,GAG7BggC,mBAAoB,SAAU/7B,GAC1B,IAAI89B,EAAM58B,KAAKy4B,SAAS35B,GACxB,IAAIhE,EAAUkF,KAAKlF,QAEnB,GAAI8hC,GAAO58B,KAAK23B,eAAiB33B,KAAK08B,eAAiBE,GAAO58B,KAAK08B,eAAgB,CAC/E,GAAI18B,KAAK23B,YAAa,CAClB78B,EAAQ6J,QAAQsrB,EAAa,CAAElwB,KAAMC,KAAK23B,cAC1C33B,KAAK23B,YAAYxS,OAAO,OAG5B,GAAIyX,GAAOA,EAAIrd,QAAQuY,OAAQ,CAC3Bh9B,EAAQ6J,QAAQqrB,EAAa,CAAEjwB,KAAM68B,IAErC58B,KAAK23B,YAAciF,EACnB58B,KAAK23B,YAAYxS,OAAO,WAExBnlB,KAAK23B,YAAc98B,IAI/B++B,aAAc,WACV,GAAI55B,KAAK23B,YAAa,CAClB33B,KAAK23B,YAAYxS,OAAO,OACxBnlB,KAAK23B,YAAc98B,IAG3B49B,SAAU,SAAU3vB,GAChB,IAAI8zB,EAAKz8B,EAAIH,KAAKlF,QAASiF,EAAMnE,EAGjC,GAAIoE,KAAK63B,kBAAmB,CACxB73B,KAAK63B,kBAAkB1S,OAAO,OAC9BnlB,KAAK63B,kBAAoBh9B,EAE7B,GAAIsF,EAAEi6B,mBAAmByC,SAAU,CAC/BD,EAAMz8B,EAAEi6B,mBAAmB3B,SAAS3vB,GACpC,GAAI8zB,EACA,OAAOA,EAIfA,EAAM58B,KAAKlF,QAAQ49B,iBAAiBD,SAAS3vB,GAC7C,GAAI8zB,EAAK,CACL58B,KAAK43B,eAAiBz3B,EAAEu4B,iBACxB,GAAIkE,EAAI7gC,IAAM,GAAK6gC,EAAIpgC,IAAM,EACzB,OAEJogC,EAAM/hC,OAENmF,KAAK43B,eAAiB/8B,EAG1B,IAAKmF,KAAK46B,YAAc56B,KAAK46B,WAAWj9B,OAAS,iBAAkB,CAC/D,IAAIm/B,EAAsB,GAE1B,IAAKlhC,EAAI,EAAGA,EAAIuE,EAAE48B,eAAe9+B,OAAQrC,IAAK,CAC1CmE,EAAOI,EAAE48B,eAAenhC,GACxB,GAAImE,aAAgBjF,EAAQkiC,WACxBF,EAAoB3gC,KAAK4D,GAGjC68B,EAAM58B,KAAKi9B,cAAcH,EAAqBh0B,GAGlD,OAAO8zB,GAAO58B,KAAKk9B,iBAAiBp0B,IAGxCo0B,iBAAkB,SAASp0B,GACvB,IAAIhO,EAAUkF,KAAKlF,QACnB,IAAIqiC,EAAWn9B,KAAKi9B,cAAcniC,EAAQy4B,OAAQzqB,GAClD,IAAIs0B,EAAgBp9B,KAAKi9B,cAAcniC,EAAQ89B,YAAa9vB,GAC5D,IAAI8zB,EAEJ,KAAM58B,KAAK46B,YAAc56B,KAAK46B,WAAWj9B,MAAQ,mBAAqBw/B,GAAYC,IAAkBC,GAAuBF,EAAUr0B,GAAQ,CACzI,IAAIw0B,EAAYxiC,EAAQwiC,UACxB,IAAIC,EAAW57B,EAAQw7B,EAASzZ,OAAQ4Z,EAAUnpB,UAClD,IAAIqpB,EAAgB77B,EAAQy7B,EAAc1Z,OAAQ4Z,EAAUnpB,UAC5DyoB,EAAMW,EAAWC,EAAgBL,EAAWC,EAEhD,OAAOR,GAAOO,GAAYC,GAG9BH,cAAe,SAAUv+B,EAAOoK,GAC5B,IAAIlN,EAAGmE,EAAM68B,EACb,IAAKhhC,EAAI8C,EAAMT,OAAS,EAAGrC,GAAK,EAAGA,IAAK,CACpCmE,EAAOrB,EAAM9C,GACbghC,EAAM78B,EAAK04B,SAAS3vB,GACpB,GAAI8zB,EACA,OAAOA,MAWnBa,GAAuB9iC,EAAM4I,MAAMC,OAAO,CAC1CC,KAAM,eAeNi6B,GAAyBD,GAAqBj6B,OAAO,CACrDC,KAAM,SAAUyR,GACZ,IAAIlD,EAAOhS,KACXy9B,GAAqB72B,GAAGnD,KAAKpG,KAAK2U,GAClChS,KAAKkV,WAAaA,GAKtByoB,QAAS,SAAU7+B,GACf,IAAI8+B,EAAM59B,KAAK69B,YAAY71B,QAAQinB,GACnC,IAAK2O,EAAIl8B,SAAS5C,GACd,OAAO,MAEX,OAAOhE,EAAQ2U,SAASS,mBAAmBpR,EAAGkB,KAAKkV,WAAW4oB,aAAe7O,GAOjF4O,UAAW,WACP,IAAIj/B,EAASoB,KAAKkV,WAAW4oB,YACzB7+B,EAAIL,EAAO,GACXkP,EAAIlP,EAAOA,EAAOX,OAAS,GAC3B4K,EAAQ5M,KAAKiJ,IAAIjG,EAAElD,EAAG+R,EAAE/R,GACxB6M,EAAO3M,KAAKkJ,IAAIlG,EAAElD,EAAG+R,EAAE/R,GACvBuN,EAAMrN,KAAKkJ,IAAIlG,EAAEzC,EAAGsR,EAAEtR,GACtB+M,EAAStN,KAAKiJ,IAAIjG,EAAEzC,EAAGsR,EAAEtR,GAE7B,IAAK,IAAIZ,EAAI,EAAGA,EAAIgD,EAAOX,OAAS,IAAKrC,EAAG,CACxCiN,EAAQ5M,KAAKiJ,IAAI2D,EAAOjK,EAAOhD,GAAGG,GAClC6M,EAAO3M,KAAKkJ,IAAIyD,EAAMhK,EAAOhD,GAAGG,GAChCuN,EAAMrN,KAAKkJ,IAAImE,EAAK1K,EAAOhD,GAAGY,GAC9B+M,EAAStN,KAAKiJ,IAAIqE,EAAQ3K,EAAOhD,GAAGY,GAGxC,OAAO,IAAIuL,EAAKa,EAAMU,EAAKT,EAAQD,EAAMW,EAASD,MAStDy0B,GAAiBL,GAAuBl6B,OAAO,CAC/CC,KAAM,SAAUyR,GACZ,IAAIlD,EAAOhS,KACX09B,GAAuB92B,GAAGnD,KAAKpG,KAAK2U,GACpChS,KAAKkV,WAAaA,GAEtB8oB,MAAO,eAKPC,GAAkBP,GAAuBl6B,OAAO,CAChD06B,yBAA0B,EAE1Bz6B,KAAM,SAAUyR,GACZ,IAAIlD,EAAOhS,KACX09B,GAAuB92B,GAAGnD,KAAKpG,KAAK2U,GACpChS,KAAKkV,WAAaA,GAGtBipB,YAAa,SAAS7iC,EAAOe,EAAK29B,EAAiB5G,GAC/C,IAAIjxB,EAEJ,GAAI63B,GAAmB5G,EACnBjxB,EAASnC,KAAKo+B,iBAAiB9iC,EAAOe,EAAK29B,EAAiB5G,QAE5DjxB,EAASnC,KAAKq+B,gBAAgB/iC,EAAOe,EAAK29B,GAE9C,OAAO73B,GAGX67B,MAAO,WACH,IAAIhE,EAAkBh6B,KAAKkV,WAAWopB,yBACtC,IAAIlL,EAAkBpzB,KAAKkV,WAAWqpB,yBACtC,IAAIjjC,EAAQ0E,KAAKkV,WAAWspB,cAC5B,IAAIniC,EAAM2D,KAAKkV,WAAWupB,cAC1B,IAAI7/B,EAASoB,KAAKm+B,YAAY7iC,EAAOe,EAAK29B,EAAiB5G,GAC3DpzB,KAAKkV,WAAWtW,OAAOA,IAG3B8/B,gBAAiB,CAAC,CACdrgC,KAAM,MACNsgC,KAAM,IACNC,YAAa,UACbC,cAAe,GAChB,CACCxgC,KAAM,OACNsgC,KAAM,IACNC,YAAa,UACbC,cAAe,GAChB,CACCxgC,KAAM,SACNsgC,KAAM,IACNC,YAAa,cACbC,eAAgB,GACjB,CACCxgC,KAAM,QACNsgC,KAAM,IACNC,YAAa,cACbC,eAAgB,IAGpBC,eAAgB,SAASxF,EAAWmF,GAChC,IAAIh8B,EAAW62B,EAAU72B,WACzB,IAAIs8B,EAAczF,EAAUnmB,MAAMM,OAAOid,GACzC,IAAIjd,EAAS,CACTjK,QAASu1B,EAAYv1B,UACrBG,YAAao1B,EAAYp1B,eAE7B,IAAIq1B,EAAQh/B,KAAK0+B,gBACjB,IAAIv5B,EAAMqc,EAAKyd,QACf,IAAIC,EACJ,IAAIC,EACJ,IAAIR,EACJ,IAAIS,EACJ,IAAK,IAAIC,EAAM,EAAGA,EAAML,EAAM/gC,OAAQohC,IAAO,CACzCD,EAAOJ,EAAMK,GACbV,EAAOS,EAAKT,KACZO,EAAejjC,KAAKuT,MAAMvT,KAAKC,IAAIuG,EAASk8B,GAAQlrB,EAAO2rB,EAAKR,aAAaD,KAC7E,GAAIO,EAAe/5B,EAAK,CACpBA,EAAM+5B,EACNC,EAAUC,OACP,GAAIF,IAAiB/5B,IACvB1C,EAASk8B,GAAQF,EAAYE,IAASS,EAAKP,eAAiBp8B,EAAS08B,EAAQR,MAAQF,EAAYU,EAAQR,OAASQ,EAAQN,cAC3HM,EAAUC,EAGlB,OAAOD,EAAQ9gC,MAGnBihC,kBAAmB,SAAShG,GACxB,IAAI7lB,EAAS6lB,EAAUnmB,MAAMM,OAAOid,GACpC,OAAOz0B,KAAKkJ,IAAIsO,EAAOnL,MAAOmL,EAAOpL,QAAUrI,KAAKk+B,0BAGxDE,iBAAkB,SAAS9iC,EAAOe,EAAK29B,EAAiB5G,GACpD,IAAImM,EAAsBv/B,KAAK8+B,eAAe9E,EAAiB39B,GAC/D,IAAImjC,EAAsBx/B,KAAK8+B,eAAe1L,EAAiB93B,GAC/D,IAAImkC,EAASpjC,EAAIN,EAAIT,EAAMS,EAC3B,IAAI2jC,EAASrjC,EAAIG,EAAIlB,EAAMkB,EAC3B,IAAImjC,EAAmB3/B,KAAKs/B,kBAAkBtF,GAC9C,IAAI73B,EAAS,GACb,IAAIy9B,EAAQC,EAEZ,GAAIN,IAAwBpQ,GAAOoQ,GAAuBjQ,EACtD,GAAIkQ,GAAuBrQ,GAAOqQ,GAAuBlQ,EACrD,GAAIiQ,GAAuBC,EAAqB,CAC5C,GAAID,GAAuBpQ,EACvB0Q,EAAS5jC,KAAKkJ,IAAI7J,EAAMkB,EAAGH,EAAIG,GAAKmjC,OAEpCE,EAAS5jC,KAAKiJ,IAAI5J,EAAMkB,EAAGH,EAAIG,GAAKmjC,EAExCx9B,EAAS,CAAC,IAAI/C,EAAM9D,EAAMS,EAAG8jC,GAAS,IAAIzgC,EAAM/C,EAAIN,EAAG8jC,SAEvD19B,EAAS,CAAC,IAAI/C,EAAM9D,EAAMS,EAAGT,EAAMkB,EAAIkjC,EAAS,GAAI,IAAItgC,EAAM/C,EAAIN,EAAGT,EAAMkB,EAAIkjC,EAAS,SAG5Fv9B,EAAS,CAAC,IAAI/C,EAAM9D,EAAMS,EAAGM,EAAIG,SAGrC,GAAIgjC,GAAuBnQ,GAAQmQ,GAAuBpQ,EACtD,GAAImQ,GAAuBC,EAAqB,CAC5C,GAAID,GAAuBlQ,EACvBuQ,EAAS3jC,KAAKkJ,IAAI7J,EAAMS,EAAGM,EAAIN,GAAK4jC,OAEpCC,EAAS3jC,KAAKiJ,IAAI5J,EAAMS,EAAGM,EAAIN,GAAK4jC,EAExCx9B,EAAS,CAAC,IAAI/C,EAAMwgC,EAAQtkC,EAAMkB,GAAI,IAAI4C,EAAMwgC,EAAQvjC,EAAIG,SAE5D2F,EAAS,CAAC,IAAI/C,EAAM9D,EAAMS,EAAI0jC,EAAS,EAAGnkC,EAAMkB,GAAI,IAAI4C,EAAM9D,EAAMS,EAAI0jC,EAAS,EAAGnkC,EAAMkB,EAAIkjC,SAGlGv9B,EAAS,CAAC,IAAI/C,EAAM/C,EAAIN,EAAGT,EAAMkB,IAGzC,OAAO2F,GAGXk8B,gBAAiB,SAAS/iC,EAAOe,EAAK29B,GAClC,IAAIuF,EAAsBvF,EAAkBh6B,KAAK8+B,eAAe9E,EAAiB39B,GAAO,KACxF,IAAIyjC,EAAyB9/B,KAAK+/B,iBAAiBzkC,EAAOe,EAAKkjC,GAC/D,IAAI3gC,EAAS,CAACtD,EAAOA,EAAOe,EAAKA,GACjC,IAAIojC,EAASpjC,EAAIN,EAAIT,EAAMS,EAC3B,IAAI2jC,EAASrjC,EAAIG,EAAIlB,EAAMkB,EAC3B,IAAIyB,EAASW,EAAOX,OACpB,IAAI+hC,EACJ,IAAIC,EAGJ,IAAK,IAAIZ,EAAM,EAAGA,EAAMphC,EAAS,IAAKohC,EAAK,CACvC,GAAIS,EACA,GAAIT,EAAM,IAAM,EAAG,CACfW,EAASP,GAAUxhC,EAAS,GAC5BgiC,EAAS,MAER,CACDD,EAAS,EACTC,EAASP,IAAWzhC,EAAS,GAAK,QAItC,GAAIohC,EAAM,IAAM,EAAG,CACfW,EAAS,EACTC,EAASP,GAAUzhC,EAAS,OAE3B,CACD+hC,EAASP,IAAWxhC,EAAS,GAAK,GAClCgiC,EAAS,EAGjBrhC,EAAOygC,GAAO,IAAIjgC,EAAMR,EAAOygC,EAAM,GAAGtjC,EAAIikC,EAAQphC,EAAOygC,EAAM,GAAG7iC,EAAIyjC,GAG5EZ,IACA,GAAKS,GAA2BT,EAAM,IAAM,IAASS,GAA2BT,EAAM,IAAM,EACxFzgC,EAAOX,EAAS,GAAK,IAAImB,EAAMR,EAAOX,EAAS,GAAGlC,EAAG6C,EAAOX,EAAS,GAAGzB,QAExEoC,EAAOX,EAAS,GAAK,IAAImB,EAAMR,EAAOX,EAAS,GAAGlC,EAAG6C,EAAOX,EAAS,GAAGzB,GAG5E,MAAO,CAACoC,EAAO,GAAIA,EAAO,KAG9BmhC,iBAAkB,SAAUzkC,EAAOe,EAAK6jC,GACpC,IAAIC,EACJ,GAAID,IAAe,OAASA,IAAe9Q,GAAS8Q,IAAe7Q,GAC/D8Q,EAAa,UAEbA,EAAalkC,KAAKC,IAAIZ,EAAMS,EAAIM,EAAIN,GAAKE,KAAKC,IAAIZ,EAAMkB,EAAIH,EAAIG,GAGpE,OAAO2jC,KAMXC,GAAc78B,EAAMC,OAAO,CAC3BC,KAAM,SAAU3I,EAASykB,GACrB,IAAIvN,EAAOhS,KACXgS,EAAKlX,QAAUA,EACfkX,EAAKuN,QAAUvkB,EAAW,GAAIgX,EAAKuN,QAASA,GAC5CvN,EAAK0R,OAAS,IAAIkH,EAClB5Y,EAAKlX,QAAQulC,UAAUlkC,KAAK6V,IAEhC6hB,QAAS,eAKTyM,GAAwBF,GAAY58B,OAAO,CAC3CC,KAAM,SAAUyR,EAAYqK,GACxB,IAAIvN,EAAOhS,KAAMlF,EACjBkX,EAAKkD,WAAaA,EAClBpa,EAAUkX,EAAKkD,WAAWpa,QAC1BkX,EAAKuuB,IAAMzlC,EAAQi7B,YACnBqK,GAAYx5B,GAAGnD,KAAKpG,KAAK2U,EAAMlX,EAASykB,GACxC,IAAIihB,EAAKxuB,EAAKkD,WAAWspB,cACzB,IAAIiC,EAAKzuB,EAAKkD,WAAWupB,cACzBzsB,EAAK0uB,SAAW,IAAIjY,EAAOztB,EAAWgX,EAAKuN,QAAQohB,QAAS,CAAE7/B,OAAQ0/B,KACtExuB,EAAK4uB,SAAW,IAAInY,EAAOztB,EAAWgX,EAAKuN,QAAQohB,QAAS,CAAE7/B,OAAQ2/B,KACtEzuB,EAAK0R,OAAOuG,OAAOjY,EAAK0uB,UACxB1uB,EAAK0R,OAAOuG,OAAOjY,EAAK4uB,WAG5BrhB,QAAS,CACLohB,QAAS,IAGb7H,WAAY,WACR,OAAOxK,EAAQvB,MAGnBzxB,MAAO,SAAUwD,GACbkB,KAAKw4B,OAASx4B,KAAKy4B,SAAS35B,GAC5BkB,KAAKwlB,WAAa1mB,EAClBkB,KAAK6gC,eAAiB7gC,KAAKkV,WAAW9W,SACtC4B,KAAK8gC,eAAiB9gC,KAAKkV,WAAWvR,SACtC,OAAQ3D,KAAKw4B,QACT,KAAM,EACF,GAAIx4B,KAAKkV,WAAWke,gBAChBpzB,KAAKugC,IAAI5G,wBAAwB35B,KAAKkV,WAAYlV,KAAKkV,WAAWke,gBAAgBjgB,OAEtF,MACJ,KAAK,EACD,GAAInT,KAAKkV,WAAW8kB,gBAChBh6B,KAAKugC,IAAI5G,wBAAwB35B,KAAKkV,WAAYlV,KAAKkV,WAAW8kB,gBAAgB7mB,OAEtF,QAIZ4Z,KAAM,SAAUyL,EAAQ15B,GACpB,OAAQ05B,GACJ,KAAM,EACFx4B,KAAKkV,WAAW9W,OAAOU,GACvB,MACJ,KAAK,EACDkB,KAAKkV,WAAWvR,OAAO7E,GACvB,MACJ,QACI,IAAIgM,EAAQhM,EAAEgI,MAAM9G,KAAKwlB,YACzBxlB,KAAKwlB,WAAa1mB,EAClB,IAAKkB,KAAKkV,WAAW8kB,gBACjBh6B,KAAKkV,WAAW9W,OAAO4B,KAAKkV,WAAWspB,cAAc33B,KAAKiE,IAE9D,IAAK9K,KAAKkV,WAAWke,gBACjBpzB,KAAKkV,WAAWvR,OAAO3D,KAAKkV,WAAWupB,cAAc53B,KAAKiE,IAE9D,MAER9K,KAAK6zB,UACL,OAAO,MAGXt4B,KAAM,SAAUuD,GACZ,IAAIiiC,EAAK/gC,KAAKlF,QAAQi7B,YAAah2B,EAAOghC,EAAGpJ,YAAah0B,EAC1D,GAAIo9B,EAAGlJ,kBACHl0B,EAASo9B,EAAGlJ,kBAAkB2B,QAC3B,GAAIz5B,GAAQA,aAAgBjF,EAAQm/B,MACvCt2B,EAAS5D,EAAKm6B,aAAahL,IAASnvB,EAAKm6B,aAAap7B,QAEtD6E,EAAS7E,EAGb,GAAIkB,KAAKw4B,UAAY,EACjBx4B,KAAKkV,WAAW9W,OAAOuF,QACpB,GAAI3D,KAAKw4B,SAAW,EACvBx4B,KAAKkV,WAAWvR,OAAOA,GAG3B3D,KAAKw4B,OAAS39B,EACdmF,KAAKugC,IAAI5G,0BACT,OAAO,IAAI3G,GAAuBhzB,KAAKkV,WAAYlV,KAAK6gC,eAAgB7gC,KAAK8gC,iBAGjFrI,SAAU,SAAU3vB,GAChB,IAAI01B,EAAcx+B,KAAKkV,WAAWspB,cAClC,IAAIC,EAAcz+B,KAAKkV,WAAWupB,cAClC,IAAIuC,EAAUhhC,KAAKuf,QAAQohB,QAAQr4B,MAAQ,EAAI2mB,EAC/C,IAAIgS,EAAUjhC,KAAKuf,QAAQohB,QAAQt4B,OAAS,EAAI4mB,EAChD,IAAIiS,EAAsB1C,EAAY2C,WAAWr4B,GACjD,IAAIs4B,EAAsB3C,EAAY0C,WAAWr4B,GACjD,IAAIu4B,EAAe,IAAIt5B,EAAKy2B,EAAYziC,EAAGyiC,EAAYhiC,GAAGwL,QAAQg5B,EAASC,GAASv/B,SAASoH,GAC7F,IAAIw4B,EAAe,IAAIv5B,EAAK02B,EAAY1iC,EAAG0iC,EAAYjiC,GAAGwL,QAAQg5B,EAASC,GAASv/B,SAASoH,GAC7F,IAAI0vB,EAAS,EAEb,GAAI6I,KAAkBC,GAAgBJ,EAAsBE,GACxD5I,GAAU,OACP,GAAI8I,KAAkBD,GAAgBD,EAAsBF,GAC/D1I,EAAS,EAGb,OAAOA,GAGX3E,QAAS,WACL7zB,KAAK0gC,SAAS1b,OAAO,CAAElkB,OAAQd,KAAKlF,QAAQymC,aAAavhC,KAAKkV,WAAWspB,iBACzEx+B,KAAK4gC,SAAS5b,OAAO,CAAElkB,OAAQd,KAAKlF,QAAQymC,aAAavhC,KAAKkV,WAAWupB,oBAI7E+C,GAAoBpB,GAAY58B,OAAO,CACvCC,KAAM,SAAU3I,EAASykB,GACrB,IAAIvN,EAAOhS,KACXogC,GAAYx5B,GAAGnD,KAAKpG,KAAK2U,EAAMlX,EAASykB,GACxCvN,EAAKyvB,gBAAkB,SAAU3zB,GAC7B,GAAIA,EAAE/N,MAAQiS,EAAKmB,MACfnB,EAAK6hB,YAKjB5N,KAAM,SAAU9S,GACZ,IAAInB,EAAOhS,KAAM0H,EAAK9L,EAAG8lC,EACzB1vB,EAAK6qB,SAAW,KAChB7qB,EAAKmB,MAAQA,EACbnB,EAAKlX,QAAQq6B,KAAKtF,EAAkB7d,EAAKyvB,iBACzC/5B,EAAMyL,EAAMwuB,WAAW1jC,OACvB+T,EAAK2vB,WAAa,GAClB3vB,EAAK4vB,eACL,IAAKhmC,EAAI,EAAGA,EAAI8L,EAAK9L,IAAK,CACtB8lC,EAAM,IAAIG,GAAgB1uB,EAAMwuB,WAAW/lC,IAC3CoW,EAAK2vB,WAAWxlC,KAAKulC,GACrB1vB,EAAK0R,OAAOuG,OAAOyX,EAAIhe,QAE3B1R,EAAK0R,OAAOoB,QAAQ,MACpB9S,EAAK6hB,WAGT+N,aAAc,WACV,IAAI5vB,EAAOhS,KACX,GAAGgS,EAAKlX,QAAQg/B,mBACZ9nB,EAAK8vB,8BAEL9vB,EAAK0R,OAAO/gB,SAIpBm/B,uBAAwB,WACpB,IAAI9vB,EAAOhS,KACP+hC,EAAiB/vB,EAAK0R,OAAOvP,SACjC,IAAI6tB,EAAgBD,EAAe9jC,OACnC,IAAImE,EAAQT,EAAQqQ,EAAKlX,QAAQg/B,mBAAoBiI,GACrD,IAAK,IAAInmC,EAAIomC,EAAgB,EAAGpmC,GAAK,EAAGA,IAAK,CACzC,GAAGA,GAAKwG,EACJ,SAEJ4P,EAAK0R,OAAOriB,OAAO0gC,EAAenmC,MAI1C+xB,QAAS,WACL,IAAI3b,EAAOhS,KACXgS,EAAKlX,QAAQmnC,OAAOpS,EAAkB7d,EAAKyvB,iBAC3CzvB,EAAKmB,MAAQtY,EACbmX,EAAK6qB,SAAWhiC,EAChBmX,EAAK0R,OAAOoB,QAAQ,QAGxB2T,SAAU,SAAU35B,GAChB,IAAI4iC,EAAK9lC,EACT,IAAKA,EAAI,EAAGA,EAAIoE,KAAK2hC,WAAW1jC,OAAQrC,IAAK,CACzC8lC,EAAM1hC,KAAK2hC,WAAW/lC,GACtB,GAAI8lC,EAAIjJ,SAAS35B,GAAI,CACjB4iC,EAAIvc,OAAO,MACXnlB,KAAKlF,QAAQi7B,YAAY8B,kBAAoB6J,EAC7C,SAKZ7N,QAAS,WACL,GAAI7zB,KAAKmT,MAAO,CACZ,IAAIM,EAASzT,KAAKmT,MAAMM,SACpBA,EAASzT,KAAKlF,QAAQymC,aAAa9tB,GACvCzT,KAAK0jB,OAAOjhB,SAASgR,EAAOjK,WAC5B/O,EAAEynC,KAAKliC,KAAK2hC,WAAY,WACpB3hC,KAAK6zB,gBAMrB,SAASsO,GAAkBvF,EAAKnpB,GAC5B,IAAItR,EAEJ,GAAIy6B,EAAI7gC,IAAM,GAAK6gC,EAAIpgC,IAAM,EACzB2F,EAASsR,EAAO9J,mBACb,GAAIizB,EAAI7gC,GAAK,GAAK6gC,EAAIpgC,GAAK,EAC9B2F,EAASsR,EAAOjK,eACb,GAAIozB,EAAI7gC,IAAM,GAAK6gC,EAAIpgC,GAAK,EAC/B2F,EAASsR,EAAOhK,gBACb,GAAImzB,EAAI7gC,GAAK,GAAK6gC,EAAIpgC,IAAM,EAC/B2F,EAASsR,EAAO/J,kBACb,GAAIkzB,EAAI7gC,IAAM,GAAK6gC,EAAIpgC,IAAM,EAChC2F,EAASsR,EAAOlK,cACb,GAAIqzB,EAAI7gC,IAAM,GAAK6gC,EAAIpgC,GAAK,EAC/B2F,EAASsR,EAAOnK,WACb,GAAIszB,EAAI7gC,GAAK,GAAK6gC,EAAIpgC,IAAM,EAC/B2F,EAASsR,EAAO7K,YACb,GAAIg0B,EAAI7gC,IAAM,GAAK6gC,EAAIpgC,IAAM,EAChC2F,EAASsR,EAAO5K,QAGpB,OAAO1G,EAGX,IAAIigC,GAAkBhC,GAAY58B,OAAO,CACrCC,KAAM,SAAU3I,EAASykB,GACrB,IAAIvN,EAAOhS,KACXogC,GAAYx5B,GAAGnD,KAAKpG,KAAK2U,EAAMlX,EAASykB,GACxCvN,EAAKqwB,cAAgB,MACrBrwB,EAAKvL,IAAM,GACXuL,EAAKuhB,OAAS,GAEdvhB,EAAKswB,iBACLtwB,EAAKuwB,iBACLvwB,EAAKgT,SACLhT,EAAKlX,QAAQq6B,KAAK,SAAU,SAAUrnB,GAClCkE,EAAK4iB,YAAY9mB,EAAE00B,YAGvBxwB,EAAKyvB,gBAAkB,WACnB,IAAKzvB,EAAKywB,gBAAiB,CACvBzwB,EAAK4hB,gBACL5hB,EAAK6hB,YAIb7hB,EAAK0wB,gBAAkB,WACnB,GAAI1wB,EAAKuhB,OAAOt1B,QAAU,EACtB+T,EAAK0iB,OAAS1iB,EAAKuhB,OAAO,GAAGjpB,SAASN,MAE1CgI,EAAKyvB,mBAGTzvB,EAAKlX,QAAQq6B,KAAKtF,EAAkB7d,EAAKyvB,iBAAiBtM,KAAKvF,EAAY5d,EAAK0wB,iBAChF1wB,EAAK4hB,gBACL5hB,EAAK6hB,WAGTtU,QAAS,CACLohB,QAAS,CACLxhB,KAAM,CACFY,MAAO,QAEX6F,OAAQ,CACJ7F,MAAO,WAEX1X,OAAQ,EACRC,MAAO,EACP4d,MAAO,CACH/G,KAAM,CACFY,MAAO,WAEX6F,OAAQ,CACJ7F,MAAO,aAInBiZ,WAAY,CACRpT,OAAQ,CACJ7F,MAAO,UACPzX,MAAO,EACP8d,SAAU,QAEdjH,KAAM,CACFY,MAAO0B,IAGf1a,OAAQ,IAGZu7B,eAAgB,WACZ,IAAItwB,EAAOhS,KACX,IAAIlF,EAAUkX,EAAKlX,QACnB,IAAIk+B,EAAal+B,EAAQykB,QAAQyZ,WACjC,IAAIzZ,EAAUvkB,EAAW,GAAIgX,EAAKuN,QAAQyZ,WAAYA,GACtDhnB,EAAKlI,KAAO,IAAI0d,EAAUjI,GAC1BvN,EAAK0R,OAAOuG,OAAOjY,EAAKlI,OAG5B64B,WAAY,WACR,OAAO3iC,KAAKuf,QAAQqjB,UAAY5iC,KAAKuf,QAAQqjB,SAASC,SAAW,OAGrEC,eAAgB,WACZ,OAAQ9iC,KAAKuf,QAAQqjB,SAASC,QAAU,IAAIlC,SAAW3gC,KAAKuf,QAAQohB,SAGxE4B,eAAgB,WACZ,IAAI5B,EAAS5gC,EAAMvD,EAAGT,EAEtB,GAAIiE,KAAK2iC,aAAc,CACnBhC,EAAU3gC,KAAK8iC,iBACf,IAAK/mC,GAAK,EAAGA,GAAK,EAAGA,IACjB,IAAKS,GAAK,EAAGA,GAAK,EAAGA,IACjB,GAAKT,IAAM,GAAOS,IAAM,EAAI,CACxBuD,EAAO,IAAIynB,EAAUmZ,GACrB5gC,EAAKklB,eAAeE,OAASkJ,EAAMruB,KAAKmlB,OAAQnlB,MAChDA,KAAKyG,IAAItK,KAAK,CAAEJ,EAAGA,EAAGS,EAAGA,EAAGknB,OAAQ3jB,IACpCC,KAAK0jB,OAAOuG,OAAOlqB,MAOvC0T,OAAQ,SAAUhV,GACd,GAAIA,EAAO,CACPuB,KAAK20B,aAAel2B,EAAMmL,QAC1B5J,KAAK+iC,QAAU/iC,KAAKlF,QAAQymC,aAAa9iC,GAAOuJ,QAAQhI,KAAKuf,QAAQxY,OAAQ/G,KAAKuf,QAAQxY,aAE1F,OAAO/G,KAAK+iC,SAIpBtK,SAAU,SAAU35B,GAChB,IAAI2hC,EAAKzgC,KAAKlF,QAAQymC,aAAaziC,GAC/BlD,EAAGghC,EAAKoG,EAAcC,EAAejjC,KAAKyG,IAAIxI,OAAQu6B,EAE1D,GAAIx4B,KAAK00B,OACL+L,EAAKA,EAAG72B,QAAQU,OAAOtK,KAAK+iC,QAAQjiC,SAAUd,KAAK00B,QAGvD,GAAI10B,KAAK2iC,aACL,IAAK/mC,EAAI,EAAGA,EAAIqnC,EAAcrnC,IAAK,CAC/B48B,EAASx4B,KAAKyG,IAAI7K,GAClBghC,EAAM,IAAIx9B,EAAMo5B,EAAOz8B,EAAGy8B,EAAOh8B,GACjCwmC,EAAehjC,KAAKkjC,iBAAiBtG,GACrCoG,EAAaj8B,OAAO/G,KAAK+iC,QAAQhnC,EAAGiE,KAAK+iC,QAAQvmC,GACjD,GAAIwmC,EAAathC,SAAS++B,GACtB,OAAO7D,EAKnB,GAAI58B,KAAK+iC,QAAQrhC,SAAS++B,GACtB,OAAO,IAAIrhC,EAAM,EAAG,IAI5B8jC,iBAAkB,SAAUpkC,GACxB,GAAIkB,KAAK2iC,aAAc,CACnB,IAAIhC,EAAU3gC,KAAK8iC,iBACfhtB,EAAI6qB,EAAQr4B,MACZ5D,EAAIi8B,EAAQt4B,OACZY,EAAI,IAAIlB,EAAK,EAAG,EAAG+N,EAAGpR,GAE1B,GAAI5F,EAAE/C,EAAI,EACNkN,EAAElN,GAAM+Z,EAAI,OACT,GAAIhX,EAAE/C,IAAM,EACfkN,EAAElN,EAAIE,KAAKwD,MAAMO,KAAK+iC,QAAQz6B,MAAQ,GAAKwN,EAAI,OAC5C,GAAIhX,EAAE/C,EAAI,EACbkN,EAAElN,EAAIiE,KAAK+iC,QAAQz6B,MAAQ,EAAMwN,EAAI,EACvC,GAAIhX,EAAEtC,EAAI,EACRyM,EAAEzM,GAAMkI,EAAI,OACT,GAAI5F,EAAEtC,IAAM,EACfyM,EAAEzM,EAAIP,KAAKwD,MAAMO,KAAK+iC,QAAQ16B,OAAS,GAAK3D,EAAI,OAC7C,GAAI5F,EAAEtC,EAAI,EACbyM,EAAEzM,EAAIwD,KAAK+iC,QAAQ16B,OAAS,EAAM3D,EAAI,EAG1C,OAAOuE,IAIf6vB,WAAY,SAAUhwB,GAClB,IAAI8zB,EAAM58B,KAAKy4B,SAAS3vB,GACxB,GAAI8zB,GAAQA,EAAI7gC,IAAM,GAAO6gC,EAAI7gC,GAAK,GAAO6gC,EAAIpgC,IAAM,GAAOogC,EAAIpgC,GAAK,GAAMwD,KAAK2iC,aAAc,CAC5F,IAAI34B,EAAQhK,KAAK00B,OACjB,GAAI1qB,EAAO,CACPA,EAAQ,IAAMA,EACd4yB,EAAItyB,OAAO,IAAIlL,EAAM,EAAG,GAAI4K,GAC5B4yB,EAAM,IAAIx9B,EAAMnD,KAAKuT,MAAMotB,EAAI7gC,GAAIE,KAAKuT,MAAMotB,EAAIpgC,IAGtD,GAAIogC,EAAI7gC,IAAM,GAAK6gC,EAAIpgC,IAAM,EACzB,MAAO,YAEX,GAAIogC,EAAI7gC,GAAK,GAAK6gC,EAAIpgC,GAAK,EACvB,MAAO,YAEX,GAAIogC,EAAI7gC,IAAM,GAAK6gC,EAAIpgC,GAAK,EACxB,MAAO,YAEX,GAAIogC,EAAI7gC,GAAK,GAAK6gC,EAAIpgC,IAAM,EACxB,MAAO,YAEX,GAAIogC,EAAI7gC,IAAM,GAAK6gC,EAAIpgC,IAAM,EACzB,MAAO,WAEX,GAAIogC,EAAI7gC,IAAM,GAAK6gC,EAAIpgC,GAAK,EACxB,MAAO,WAEX,GAAIogC,EAAI7gC,GAAK,GAAK6gC,EAAIpgC,IAAM,EACxB,MAAO,WAEX,GAAIogC,EAAI7gC,IAAM,GAAK6gC,EAAIpgC,IAAM,EACzB,MAAO,WAGf,OAAOwD,KAAKqiC,cAAgB/T,EAAQvB,KAAOuB,EAAQI,QAGvDkG,YAAa,WACT,IAAI5iB,EAAOhS,KAAMpE,EAAGmE,EAChB+0B,EAAQ9iB,EAAKlX,QAAQ4zB,SAEzB1c,EAAKuhB,OAAS,GACd,IAAK33B,EAAI,EAAGA,EAAIk5B,EAAM72B,OAAQrC,IAAK,CAC/BmE,EAAO+0B,EAAMl5B,GACb,GAAImE,aAAgBjF,EAAQm/B,MAAO,CAC/BjoB,EAAKuhB,OAAOp3B,KAAK4D,GACjBA,EAAKojC,gBAAkB,IAAI/jC,GAInC4S,EAAK0iB,OAAS1iB,EAAKuhB,OAAOt1B,QAAU,EAAI+T,EAAKuhB,OAAO,GAAGjpB,SAASN,MAAQ,EACxEgI,EAAKoxB,YAAcpxB,EAAK0iB,OACxB1iB,EAAKqxB,WACLrxB,EAAKsxB,aACLtxB,EAAK4hB,gBACL5hB,EAAK6hB,UACL7hB,EAAKgT,UAGTqe,SAAU,WACN,IAAIrxB,EAAOhS,KAAMpE,EAAGuX,EACpBnB,EAAKuxB,eAAiB,GACtB,IAAK3nC,EAAI,EAAGA,EAAIoW,EAAKuhB,OAAOt1B,OAAQrC,IAAK,CACrCuX,EAAQnB,EAAKuhB,OAAO33B,GACpBoW,EAAKuxB,eAAepnC,KAAKgX,EAAM7I,SAASN,SAIhDs5B,WAAY,WACR,IAAItxB,EAAOhS,KAAMpE,EAAGuX,EACpBnB,EAAKwxB,cAAgB,GACrB,IAAK5nC,EAAI,EAAGA,EAAIoW,EAAKuhB,OAAOt1B,OAAQrC,IAAK,CACrCuX,EAAQnB,EAAKuhB,OAAO33B,GACpBoW,EAAKwxB,cAAcrnC,KAAKgX,EAAMM,YAItC0R,OAAQ,SAAS1mB,EAAO+D,GACpB,GAAIxC,KAAK2iC,aAAc,CACnB,IAAIc,EAAgBzjC,KAAK8iC,iBACrB5c,EAAQud,EAAcvd,MACtBN,EAAS6d,EAAc7d,OACvBzG,EAAOskB,EAActkB,KAEzB,GAAI1gB,GAASrD,EAAMyB,UAAUqpB,EAAMN,QAC/BA,EAAS5qB,EAAW,GAAI4qB,EAAQM,EAAMN,QAG1C,GAAInnB,GAASrD,EAAMyB,UAAUqpB,EAAM/G,MAC/BA,EAAO+G,EAAM/G,KAEjB3c,EAAQojB,OAAOA,EAAO7F,MAAO6F,EAAOtd,MAAOsd,EAAOC,SAClDrjB,EAAQ2c,KAAKA,EAAKY,MAAOZ,EAAK0G,WAItCvqB,MAAO,SAAUwD,GACbkB,KAAK0jC,IAAM5kC,EACXkB,KAAK2jC,IAAM7kC,EACXkB,KAAK4jC,IAAM9kC,EACXkB,KAAKqiC,cAAgB,KACrBriC,KAAKyiC,gBAAkB,KACvBziC,KAAK6jC,YAAc,GACnB,IAAK,IAAIjoC,EAAI,EAAGA,EAAIoE,KAAKuzB,OAAOt1B,OAAQrC,IAAK,CACzC,IAAIuX,EAAQnT,KAAKuzB,OAAO33B,GACxBoE,KAAK6jC,YAAY1nC,KAAKgX,EAAMM,YAIpCuR,OAAQ,WACJ,IAAIppB,EAAG48B,EACHsL,EAAiB9jC,KAAK2iC,aAE1B,IAAK/mC,EAAI,EAAGA,EAAIoE,KAAKyG,IAAIxI,OAAQrC,IAAK,CAClC48B,EAASx4B,KAAKyG,IAAI7K,GAClB48B,EAAO9U,OAAOoB,QAAQgf,KAI9B95B,MAAO,SAASvL,GACZ,GAAI8iB,EAAQ9iB,GACRuB,KAAK00B,OAASj2B,EAGlB,OAAOuB,KAAK00B,QAGhBpqB,OAAQ,WACJ,IAAIxJ,EAASd,KAAK20B,aAAa7zB,SAC/B,IAAIijC,EAAe/jC,KAAKgK,QACxBhK,KAAKyiC,gBAAkB,KACvB,IAAK,IAAI7mC,EAAI,EAAGA,EAAIoE,KAAKuzB,OAAOt1B,OAAQrC,IAAK,CACzC,IAAIuX,EAAQnT,KAAKuzB,OAAO33B,GACxBmoC,GAAgBA,EAAe/jC,KAAKujC,eAAe3nC,GAAKoE,KAAKojC,aAAe,IAC5EjwB,EAAM7I,OAAOy5B,EAAcjjC,GAE/Bd,KAAK6zB,WAGT9G,KAAM,SAAUyL,EAAQ15B,GACpB,IAAIgM,EAAOk5B,EACPC,EAAM,IAAI7kC,EACV8kC,EAAM,IAAI9kC,EACVqU,EAAQ3S,EAAQqS,EAChBvX,EAAGoO,EAAOm6B,EACVC,EAAU,EAAGC,EACb55B,EAAQC,EAEZ,GAAI8tB,EAAOh8B,KAAO,GAAKg8B,EAAOz8B,KAAO,EAAG,CACpC+E,EAASd,KAAK20B,aAAa7zB,SAC3Bd,KAAK00B,OAAS10B,KAAKskC,eAAelpC,EAAMyF,UAAUC,EAAQhC,IAC1D,IAAKlD,EAAI,EAAGA,EAAIoE,KAAKuzB,OAAOt1B,OAAQrC,IAAK,CACrCuX,EAAQnT,KAAKuzB,OAAO33B,GACpBoO,GAAShK,KAAK00B,OAAS10B,KAAKujC,eAAe3nC,GAAKoE,KAAKojC,aAAe,IACpEjwB,EAAM7I,OAAON,EAAOlJ,GACpB,GAAIqS,EAAM/V,eAAe,UACrB+V,EAAMwgB,OAAOxgB,GAEjBnT,KAAKukC,UAAY,KAErBvkC,KAAK6zB,cACF,CACH,GAAI7zB,KAAKwkC,aAAc,CACnB,IAAIC,EAAMzkC,KAAK0kC,kBAAkB5lC,EAAEgI,MAAM9G,KAAK4jC,MAE9C,GAAIa,EAAI1oC,IAAM,GAAK0oC,EAAIjoC,IAAM,EAAG,CAC5BwD,KAAK2jC,IAAM7kC,EACX,OAEJgM,EAAQ25B,EACRzkC,KAAK4jC,IAAM,IAAIxkC,EAAMY,KAAK4jC,IAAI7nC,EAAI0oC,EAAI1oC,EAAGiE,KAAK4jC,IAAIpnC,EAAIioC,EAAIjoC,QAE1DsO,EAAQhM,EAAEgI,MAAM9G,KAAK2jC,KAGzB,GAAI3jC,KAAK24B,aAAaH,GAAS,CAC3B0L,EAAMD,EAAMn5B,EACZk5B,EAAW,SACR,CACH,GAAIhkC,KAAK00B,OACL5pB,EAAMR,OAAO,IAAIlL,EAAM,EAAG,GAAIY,KAAK00B,QAEvC,GAAI8D,EAAOz8B,IAAM,EACbkoC,EAAIloC,EAAI+O,EAAM/O,OACX,GAAIy8B,EAAOz8B,GAAK,EACnBmoC,EAAInoC,EAAI+O,EAAM/O,EAElB,GAAIy8B,EAAOh8B,IAAM,EACbynC,EAAIznC,EAAIsO,EAAMtO,OACX,GAAIg8B,EAAOh8B,GAAK,EACnB0nC,EAAI1nC,EAAIsO,EAAMtO,EAItB,IAAKwnC,EAAU,CACXK,EAAclC,GAAkB3J,EAAQx4B,KAAK20B,cAC7ClqB,GAAUzK,KAAK20B,aAAarsB,MAAQwC,EAAM/O,EAAIy8B,EAAOz8B,GAAKiE,KAAK20B,aAAarsB,MAC5EoC,GAAU1K,KAAK20B,aAAatsB,OAASyC,EAAMtO,EAAIg8B,EAAOh8B,GAAKwD,KAAK20B,aAAatsB,OAGjF,IAAKzM,EAAI,EAAGA,EAAIoE,KAAKuzB,OAAOt1B,OAAQrC,IAAK,CACrCuX,EAAQnT,KAAKuzB,OAAO33B,GACpB6X,EAASN,EAAMM,SACf,GAAIuwB,EAAU,CACV,IAAKvK,GAAQtmB,GACT,SAEJgxB,EAAYnkC,KAAK2kC,gBAAgBlxB,EAAQwwB,EAAKC,EAAKF,OAChD,CACHG,EAAY1wB,EAAO7J,QACnBu6B,EAAU35B,MAAMC,EAAQC,EAAQ25B,EAAarkC,KAAK20B,aAAa7zB,SAAUqS,EAAM7I,SAASN,OACxF,IAAI46B,EAAYT,EAAUrjC,SAC1B8jC,EAAUt6B,OAAOmJ,EAAO3S,UAAWd,KAAK00B,QACxCyP,EAAY,IAAIp8B,EAAK68B,EAAU7oC,EAAIooC,EAAU77B,MAAQ,EAAGs8B,EAAUpoC,EAAI2nC,EAAU97B,OAAS,EAAG87B,EAAU77B,MAAO67B,EAAU97B,QAE3H,GAAI87B,EAAU77B,OAAS6K,EAAMoM,QAAQslB,UAAYV,EAAU97B,QAAU8K,EAAMoM,QAAQulB,UAAW,CAC1F,IAAIC,EAAYtxB,EAChBN,EAAMM,OAAO0wB,GACb,GAAIhxB,EAAM/V,eAAe,UACrB+V,EAAMwgB,OAAOxgB,EAAO4xB,EAAWZ,GAEnC,GAAIY,EAAUz8B,QAAU67B,EAAU77B,OAASy8B,EAAU18B,SAAW87B,EAAU97B,OACtE8K,EAAM7I,OAAO6I,EAAM7I,SAASN,OAEhCo6B,GAAW,GAInB,GAAIA,EAAS,CACT,GAAIA,GAAWxoC,EAAG,CACduoC,EAAYnkC,KAAK2kC,gBAAgB3kC,KAAK20B,aAAcsP,EAAKC,EAAKF,GAC9DhkC,KAAKyT,OAAO0wB,QAEZnkC,KAAK4zB,gBAET5zB,KAAK6zB,UAGT7zB,KAAKsjC,aAGTtjC,KAAK2jC,IAAM7kC,GAGf65B,aAAc,SAASH,GACnB,OAAOA,EAAOz8B,IAAM,GAAKy8B,EAAOh8B,IAAM,GAG1Cg5B,OAAQ,WACJ,IAAIjC,EAASvzB,KAAKuzB,OAClB,IAAIyR,EAAShlC,KAAK6jC,YAClB,IAAK,IAAIxE,EAAM,EAAGA,EAAM9L,EAAOt1B,OAAQohC,IACnC9L,EAAO8L,GAAK5rB,OAAOuxB,EAAO3F,IAE9Br/B,KAAK4zB,gBACL5zB,KAAK6zB,UACL7zB,KAAKqiC,cAAgBxnC,EACrBmF,KAAKyiC,gBAAkB5nC,EACvBmF,KAAKukC,UAAY1pC,GAGrBoqC,0BAA2B,SAAUxxB,GACjC,GAAIzT,KAAKlF,QAAQoqC,MACb,OAAOllC,KAAKlF,QAAQoqC,MAAMC,yBAAyB1xB,GAEvD,OAAOA,GAGX2xB,sBAAuB,SAAU3xB,GAC7B,GAAIzT,KAAKlF,QAAQoqC,MACb,OAAOllC,KAAKlF,QAAQoqC,MAAMG,qBAAqB5xB,GAEnD,OAAOA,GAGX6wB,eAAgB,SAAU7jC,GACtB,IAAI6kC,EAAOtlC,KAAKulC,cAChB,IAAIC,EAAYvpC,KAAKiJ,IAAIogC,EAAKt7B,OAASwlB,EAAoBO,GAC3D,OAAOuV,EAAOrpC,KAAKwD,MAAOgB,EAAI,IAAO+kC,GAAaA,EAAa/kC,EAAI,KAGvEikC,kBAAmB,SAAUvkC,GACzB,GAAIA,aAAarF,EAAQsE,MACrB,OAAO,IAAItE,EAAQsE,MAAMY,KAAK0kC,kBAAkBvkC,EAAEpE,GAAIiE,KAAK0kC,kBAAkBvkC,EAAE3D,QAC5E,CACH,IAAI8oC,EAAOtlC,KAAKulC,eAAiB,GACjC,IAAIE,EAAWxpC,KAAKiJ,IAAIogC,EAAK9mC,MAAQ+wB,EAAmBO,GACxD,OAAOwV,EAAOrpC,KAAKwD,MAAMU,EAAIslC,GAAYA,EAAWtlC,IAI5DolC,YAAa,WACT,IAAI3C,EAAW5iC,KAAKlF,QAAQykB,QAAQqjB,SACpC,IAAI0C,IAAS1C,GAAY,IAAI8C,MAAQ,IAAIJ,MAAQ,GACjD,OAAOA,GAGXd,WAAY,WACR,IAAI5B,EAAW5iC,KAAKlF,QAAQykB,QAAQqjB,SACpC,IAAI8C,GAAQ9C,GAAY,IAAI8C,KAC5B,IAAIJ,GAAQI,GAAQ,IAAIJ,KACxB,OAAO1C,IAAa,OAAS8C,IAAS,OAASJ,IAAS,OAG5DX,gBAAiB,SAAUlxB,EAAQwwB,EAAKC,EAAKF,GACzC,IAAI95B,EAAKuJ,EAAOjK,UAAU3C,KAAKo9B,GAC3B75B,EAAKqJ,EAAO9J,cAAc9C,KAAKq9B,GAC/BC,EAAYp8B,EAAKiE,WAAW9B,EAAIE,GAChCw6B,EACJ,IAAKZ,EAAU,CACXY,EAAYT,EAAUrjC,SACtB8jC,EAAUt6B,OAAOmJ,EAAO3S,UAAWd,KAAK00B,QACxCyP,EAAY,IAAIp8B,EAAK68B,EAAU7oC,EAAIooC,EAAU77B,MAAQ,EAAGs8B,EAAUpoC,EAAI2nC,EAAU97B,OAAS,EAAG87B,EAAU77B,MAAO67B,EAAU97B,QAE3H,OAAO87B,GAGX5oC,KAAM,WACF,IAAIgT,EAAM3S,EAAGuX,EACb,GAAInT,KAAK2jC,KAAO3jC,KAAK0jC,IACjB,GAAI1jC,KAAKukC,UAAW,CAChBh2B,EAAO,IAAI+lB,GAAWt0B,KAAMA,KAAKuzB,OAAQvzB,KAAKujC,gBAC9CvjC,KAAKukC,UAAY,WACd,GAAIvkC,KAAK2lC,cAAe,CAC3B,GAAI3lC,KAAKlF,QAAQoqC,MACb,IAAKtpC,EAAI,EAAGA,EAAIoE,KAAKuzB,OAAOt1B,OAAQrC,IAAK,CACrCuX,EAAQnT,KAAKuzB,OAAO33B,GACpB,IAAI6X,EAASN,EAAMM,SACnBA,EAASzT,KAAKolC,sBAAsBplC,KAAKilC,0BAA0BxxB,IACnEN,EAAMM,OAAOA,GACbzT,KAAK4zB,gBACL5zB,KAAK6zB,UAGb,IAAKj4B,EAAI,EAAGA,EAAIoE,KAAKuzB,OAAOt1B,OAAQrC,IAAK,CACrCuX,EAAQnT,KAAKuzB,OAAO33B,GACpBuX,EAAM4f,cAEVxkB,EAAO,IAAI+kB,GAActzB,KAAKuzB,OAAQvzB,KAAK6jC,YAAa7jC,MACxDA,KAAKlF,QAAQ8qC,oBAIrB5lC,KAAKqiC,cAAgBxnC,EACrBmF,KAAKyiC,gBAAkB5nC,EACvBmF,KAAKukC,UAAY1pC,EACjB,OAAO0T,GAGXo3B,YAAa,WACT,IAAIpS,EAASvzB,KAAKuzB,OAClB,IAAIyR,EAAShlC,KAAK6jC,YAClB,IAAK,IAAIxE,EAAM,EAAGA,EAAM9L,EAAOt1B,OAAQohC,IACnC,IAAK9L,EAAO8L,GAAK5rB,SAAS5J,OAAOm7B,EAAO3F,IACpC,OAAO,KAGf,OAAO,OAGXzL,cAAe,WACX,IAAIngB,EAASzT,KAAKuzB,OAAOt1B,QAAU,EAC/B+B,KAAKuzB,OAAO,GAAG9f,SAAS7J,QACxB5J,KAAKlF,QAAQuxB,YAAYrsB,KAAKuzB,OAAQ,MAE1CvzB,KAAKyT,OAAOA,IAGhBogB,QAAS,WACL,IAAI7hB,EAAOhS,KAAMK,EAAGoT,EACpB,GAAIzT,KAAKuzB,OAAOt1B,OAAS,EAAG,CACxBwV,EAASzT,KAAKyT,SACdzT,KAAK0jB,OAAOoB,QAAQ,MACpB9kB,KAAK0jB,OAAOjhB,SAASgR,EAAOjK,WAC5B/O,EAAEynC,KAAKliC,KAAKyG,IAAK,WACbpG,EAAI2R,EAAKkxB,iBAAiB,IAAI9jC,EAAMY,KAAKjE,EAAGiE,KAAKxD,IACjDwD,KAAK0jB,OAAOjhB,SAASpC,EAAEmJ,aAE3BxJ,KAAK0jB,OAAOjhB,SAASgR,EAAOjK,WAE5B,IAAI1I,EAAS,IAAI1B,EAAMqU,EAAOnL,MAAQ,EAAGmL,EAAOpL,OAAS,GACzDrI,KAAK0jB,OAAOpZ,OAAOtK,KAAK00B,OAAQ5zB,GAChCd,KAAK8J,KAAKkb,OAAO,CAAE1c,MAAOmL,EAAOnL,MAAOD,OAAQoL,EAAOpL,SACvD,GAAIrI,KAAK6lC,cAAe,CACpB,IAAIC,EAAQ9lC,KAAKuf,QAAQqjB,SAASt4B,OAAOw7B,MACzC9lC,KAAK+lC,qBAAuB,IAAIh+B,EAAK0L,EAAO3S,SAAS/E,EAAG0X,EAAOjX,EAAIspC,EAAMtpC,EAAG,EAAG,GAAGwL,QAAQ89B,EAAMx9B,OAChGtI,KAAK6lC,cAAc7gB,OAAO,CAAEjpB,EAAG0X,EAAOnL,MAAQ,EAAIw9B,EAAMx9B,MAAQ,UAGpEtI,KAAK0jB,OAAOoB,QAAQ,UAK5BkhB,GAAWziC,EAAMC,OAAO,CACxBC,KAAM,SAAU3I,GACZ,IAAIk+B,EAAal+B,EAAQykB,QAAQyZ,WACjCh5B,KAAKuf,QAAUvkB,EAAW,GAAIgF,KAAKuf,QAASyZ,GAE5Ch5B,KAAK0jB,OAAS,IAAI8D,EAAUxnB,KAAKuf,SACjCvf,KAAKlF,QAAUA,GAEnBykB,QAAS,CACLqG,OAAQ,CACJ7F,MAAO,UACPzX,MAAO,EACP8d,SAAU,QAEdjH,KAAM,CACFY,MAAO0B,IAGfnmB,MAAO,SAAUwD,GACbkB,KAAK0jC,IAAM1jC,KAAKimC,IAAMnnC,EACtBkB,KAAK6zB,UACL7zB,KAAKlF,QAAQorC,OAAOlmC,KAAM,OAE9B3D,IAAK,WACD2D,KAAK0jC,IAAM1jC,KAAKimC,IAAMprC,EACtBmF,KAAKlF,QAAQorC,OAAOlmC,KAAM,QAE9ByT,OAAQ,SAAUhV,GACd,GAAIA,EACAuB,KAAK+iC,QAAUtkC,EAEnB,OAAOuB,KAAK+iC,SAEhBhW,KAAM,SAAUjuB,GACZkB,KAAKimC,IAAMnnC,EACXkB,KAAK6zB,WAETA,QAAS,WACL,GAAI7zB,KAAK0jC,IAAK,CACV,IAAIyC,EAAep+B,EAAKiE,WAAWhM,KAAKlF,QAAQymC,aAAavhC,KAAK0jC,KAAM1jC,KAAKlF,QAAQymC,aAAavhC,KAAKimC,MACvGjmC,KAAKyT,OAAO1L,EAAKiE,WAAWhM,KAAK0jC,IAAK1jC,KAAKimC,MAC3CjmC,KAAK0jB,OAAOjhB,SAAS0jC,EAAa38B,WAClCxJ,KAAK0jB,OAAOsB,OAAO,CAAE3c,OAAQ89B,EAAa99B,OAAS,EAAGC,MAAO69B,EAAa79B,MAAQ,QAK1Fu5B,GAAkBt+B,EAAMC,OAAO,CAC/BC,KAAM,SAAU61B,GACZt5B,KAAKuf,QAAUvkB,EAAW,GAAIs+B,EAAU/Z,SACxCvf,KAAKw5B,GAAKF,EACVt5B,KAAK0jB,OAAS,IAAI+E,EAAOzoB,KAAKuf,SAC9Bvf,KAAK6zB,WAET1O,OAAQ,SAAU1mB,GACd,IAAI8gB,EAAUvf,KAAKuf,QACf2G,EAAQ3G,EAAQ2G,MAChBN,EAASrG,EAAQqG,OACjBzG,EAAOI,EAAQJ,KAEnB,GAAI1gB,GAASrD,EAAMyB,UAAUqpB,EAAMN,QAC/BA,EAAS5qB,EAAW,GAAI4qB,EAAQM,EAAMN,QAG1C,GAAInnB,GAASrD,EAAMyB,UAAUqpB,EAAM/G,MAC/BA,EAAO+G,EAAM/G,KAGjBnf,KAAK0jB,OAAOsB,OAAO,CACfY,OAAQA,EACRzG,KAAMA,KAGd0U,QAAS,WACL,IAAI/0B,EAAIkB,KAAKw5B,GAAGrmB,MAAMrY,QAAQsrC,YAAYpmC,KAAKw5B,GAAG/2B,YAC9C4jC,EAAWvnC,EAAEgI,MAAM9G,KAAKw5B,GAAGrmB,MAAMM,OAAO,eAAejK,WACvD/K,EAAQ,IAAIsJ,EAAKjJ,EAAE/C,EAAG+C,EAAEtC,EAAG,EAAG,GAClCiC,EAAMuJ,QAAQhI,KAAKuf,QAAQjX,MAAQ,EAAGtI,KAAKuf,QAAQlX,OAAS,GAC5DrI,KAAKsmC,cAAgB7nC,EACrBuB,KAAK0jB,OAAOsB,OAAO,CAAElkB,OAAQ,IAAI1B,EAAMinC,EAAStqC,EAAGsqC,EAAS7pC,MAEhEi8B,SAAU,SAAU35B,GAChB,IAAI2hC,EAAKzgC,KAAKw5B,GAAGrmB,MAAMrY,QAAQsrC,YAAYtnC,GAC3C,OAAOkB,KAAKsmC,cAAc5kC,SAAS++B,MAI3C,SAAShH,GAAQj3B,GACb,IAAIogC,EAAWpgC,EAAQ+c,QAAQqjB,SAC/B,OAAOA,GAAYA,EAAS8C,OAAS,MAGzC,SAASrI,GAAuBlqB,EAAOrK,GACnC,IAAIwwB,EAAW72B,EAAUqH,EACzB,IAAK,IAAIu1B,EAAM,EAAGA,EAAMlsB,EAAMwuB,WAAW1jC,OAAQohC,IAAO,CACpD/F,EAAYnmB,EAAMwuB,WAAWtC,GAC7B58B,EAAW62B,EAAU72B,WACrBqH,EAAO,IAAI/B,EAAKtF,EAAS1G,EAAG0G,EAASjG,GACrCsN,EAAK9B,QAAQinB,EAAmBA,GAChC,GAAInlB,EAAKpI,SAASoH,GACd,OAAOwwB,GAKnB,SAAS5B,GAAOJ,GACZ,OAAOA,EAAKG,UAAY,OAASH,EAAKgE,SAAW,OAAShE,EAAKiP,WAAa,MAGhFvrC,EAAWF,EAAS,CAChBs3B,cAAeA,GACfkB,cAAeA,GACfW,YAAaA,GACbF,aAAcA,GACdD,kBAAmBA,GACnBT,gBAAiBA,GACjBF,qBAAsBA,GACtBmN,sBAAuBA,GACvBjH,eAAgBA,GAChBwI,gBAAiBA,GACjB3M,gBAAiBA,GACjBkN,gBAAiBA,GACjB4D,SAAUA,GACVtL,YAAaA,GACb8G,kBAAmBA,GACnBjQ,eAAgBA,EAChBgB,mBAAoBA,GACpBsC,YAAaA,GACbI,WAAYA,GACZwI,qBAAsBA,GACtBM,eAAgBA,GAChBE,gBAAiBA,GACjBlF,cAAeA,GACf7C,aAAcA,GACdoC,YAAaA,GACb+B,mBAAoBA,GACpB/F,WAAYA,OA32ExB,CA+2EoB,mBAAV95B,QAAwBA,OAAO2L,IAAM3L,OAAS,SAAS4L,EAAIC,EAAIC,IAAMA,GAAMD,OAErF,SAAa7L,QACTA,OAAO,yBAAyB,CAAE,UACnC,WAEH,IAAWC,EA+oHRC,OAAOC,MAAMC,OA/oHFC,OAAd,EACQF,EAAQD,OAAOC,MACfG,EAAUH,EAAMI,QAAQD,QACxBsb,EAAQtb,EAAQsb,MAChBlD,EAAOpY,EAAQoY,KACf+B,EAAOna,EAAQma,KACfja,EAAaL,EAAMK,WACnBmQ,EAAOrQ,EAAQqQ,KACfpD,EAAOjN,EAAQiN,KACf8J,EAAa/W,EAAQ+W,WACrBiB,EAAMhY,EAAQgY,IACd0zB,EAAY1rC,EAAQsb,MACpBhb,EAAQN,EAAQM,MAChBgE,EAAQtE,EAAQsE,MAChBjE,EAAU,KACVsrC,EAAaxqC,KAAKS,GAAK,IACvBgF,EAAWtG,EAAMsG,SACjB+C,EAAOhK,EAAEgK,KAMTiiC,EAAa/rC,EAAM4I,MAAMC,OAAO,CAChCmjC,eAAgB,CACZhpC,KAAM,OACNipC,QAAS,OACTC,MAAO,KACPnV,QAAS,MAKTpR,YAAa,MAIb8V,SAAU,GAIV0Q,aAAc,GAIdC,WAAY,IAKZC,qBAAsB,GAItBC,mBAAoB,GAMpBC,4BAA6B,GAI7BC,2BAA4B,GAI5BC,6BAA8B,GAK9BC,KAAM,CAIF/+B,MAAO,KAIPg/B,QAAS,GAITC,QAAS,GAITC,kBAAmB,GAInBC,kBAAmB,IAOvBC,gBAAiB,GAIjBC,kBAAmB,EAInBC,iBAAkB,EAIlBC,eAAgB,IAIhBC,iBAAkB,IAIlBC,2BAA4B,IAI5BC,gCAAiC,MAIjCC,iBAAkB,KAClBC,wBAAyB,MACzBC,gBAAiB,KACjBC,mBAAoB,OAExB3kC,KAAM,aAQN4kC,qBAAsB,SAAU7wB,GAC5B,IAAKA,EACD,KAAM,0BAIVpc,EAAM2F,QAAQyW,EAAY,SAAU9W,GAChCA,EAAEoX,eAINN,EAAW1U,KAAK,SAAUrC,EAAGJ,GACzB,OAAOA,EAAEoT,OAAOnL,MAAQ7H,EAAEgT,OAAOnL,QAGrC,IAAIggC,EAAWtoC,KAAKuf,QAAQ8nB,KAAK/+B,MAC7Bg/B,EAAUtnC,KAAKuf,QAAQ8nB,KAAKG,kBAC5BD,EAAUvnC,KAAKuf,QAAQ8nB,KAAKI,kBAC5Bp/B,EAAS,EACTkgC,EAASvoC,KAAKuf,QAAQ8nB,KAAKC,QAC3BkB,EAASxoC,KAAKuf,QAAQ8nB,KAAKE,QAC3BxrC,EAAIwsC,EACJ/rC,EAAIgsC,EACJ5sC,EACA6sC,EAAgB,GAChBC,EAAgB,GAEpB,MAAOlxB,EAAWvZ,OAAS,EAAG,CAC1B,GAAIlC,GAAKusC,EAAU,CAEfvsC,EAAIwsC,EACJ/rC,GAAK6L,EAASk/B,EAEdl/B,EAAS,EAEb,IAAIoT,EAAYjE,EAAWY,MAC3BpY,KAAK2oC,aAAaltB,EAAW,IAAIrc,EAAMrD,EAAGS,IAC1C,IAAKZ,EAAI,EAAGA,EAAI6f,EAAUnF,MAAMrY,OAAQrC,IACpC8sC,EAAcvsC,KAAKsf,EAAUnF,MAAM1a,IAEvC,IAAKA,EAAI,EAAGA,EAAI6f,EAAUrI,MAAMnV,OAAQrC,IACpC6sC,EAActsC,KAAKsf,EAAUrI,MAAMxX,IAEvC,IAAIgtC,EAAentB,EAAUhI,OAC7B,IAAIo1B,EAAgBD,EAAavgC,OACjC,GAAIwgC,GAAiB,GAAKhrC,MAAMgrC,GAC5BA,EAAgB,EAEpB,IAAIC,EAAeF,EAAatgC,MAChC,GAAIwgC,GAAgB,GAAKjrC,MAAMirC,GAC3BA,EAAe,EAGnB,GAAID,GAAiBxgC,EACjBA,EAASwgC,EAEb9sC,GAAK+sC,EAAexB,EAGxB,MAAO,CACHhxB,MAAOoyB,EACPt1B,MAAOq1B,IAIfE,aAAc,SAAUltB,EAAW3c,GAC/B,IAAIlD,EAAGC,EACH4X,EAASgI,EAAUhI,OACnBs1B,EAASjqC,EAAE/C,EAAI0X,EAAO1X,EACtBitC,EAASlqC,EAAEtC,EAAIiX,EAAOjX,EAE1B,IAAKZ,EAAI,EAAGA,EAAI6f,EAAUnF,MAAMrY,OAAQrC,IAAK,CACzC,IAAImY,EAAO0H,EAAUnF,MAAM1a,GAC3B,IAAIqtC,EAAal1B,EAAKN,SACtB,GAAIw1B,EAAW3gC,QAAU,GAAK2gC,EAAW5gC,SAAW,GAAK4gC,EAAWltC,IAAM,GAAKktC,EAAWzsC,IAAM,EAC5FysC,EAAa,IAAIlhC,EAAK,EAAG,EAAG,EAAG,GAEnCkhC,EAAWltC,GAAKgtC,EAChBE,EAAWzsC,GAAKwsC,EAChBj1B,EAAKN,OAAOw1B,GAEhB,IAAKrtC,EAAI,EAAGA,EAAI6f,EAAUrI,MAAMnV,OAAQrC,IAAK,CACzC,IAAIoY,EAAOyH,EAAUrI,MAAMxX,GAC3B,GAAIoY,EAAKpV,OAAQ,CACb,IAAIsqC,EAAY,GAChB,IAAItqC,EAASoV,EAAKpV,OAClB,IAAK/C,EAAI,EAAGA,EAAI+C,EAAOX,OAAQpC,IAAK,CAChC,IAAIstC,EAAKvqC,EAAO/C,GAChBstC,EAAGptC,GAAKgtC,EACRI,EAAG3sC,GAAKwsC,EACRE,EAAU/sC,KAAKgtC,GAEnBn1B,EAAKpV,OAASsqC,GAGtBlpC,KAAKopC,yBAA2B31B,EAAOnL,MAAQtI,KAAKuf,QAAQ8nB,KAAKC,QACjE,OAAO,IAAIloC,EAAM2pC,EAAQC,IAG7BK,gBAAiB,SAAU9pB,GAIvBvf,KAAKuf,QAAU5kB,EAAMK,WAAW,GAAIgF,KAAK2mC,gBACzC,GAAIvrC,EAAM2B,YAAYwiB,GAClB,OAGJvf,KAAKuf,QAAU5kB,EAAMK,WAAWgF,KAAKuf,QAASA,GAAW,OAwB7D+pB,EAA4B3uC,EAAM4I,MAAMC,OAAO,CAC/CC,KAAM,SAAU3I,GAMZkF,KAAKqa,QAAU,IAAIxI,EAMnB7R,KAAKupC,SAAW,IAAI13B,EAMpB7R,KAAKsW,MAAQ,GAMbtW,KAAKwpC,MAAQ,GAIbxpC,KAAKypC,QAAU,IAAI53B,EAMnB7R,KAAK0pC,WAAa,GAMlB1pC,KAAK2pC,WAAa,GAMlB3pC,KAAK4pC,mBAAqB,GAM1B5pC,KAAK6pC,cAAgB,GAMrB7pC,KAAK8pC,SAAW,IAAIj4B,EAOpB7R,KAAK+pC,UAAY,IAAI3zB,EAOrBpW,KAAKgqC,WAAa,KAElBhqC,KAAKlF,QAAUA,GAanBmvC,QAAS,SAAU1qB,GAEf,GAAInkB,EAAM2B,YAAYiD,KAAKlF,SACvB,KAAM,yBAGVkF,KAAKuf,QAAU5kB,EAAMK,WAAW,CACxBmtC,gBAAiB,KACjBF,iBAAkB,KAClBC,wBAAyB,OAE7B3oB,GAAW,IAGfvf,KAAK2C,QAEL3C,KAAKkqC,qBAGLlqC,KAAKmqC,0BAGLnqC,KAAK0pC,WAAa,IAAI73B,EAAW7R,KAAKsW,OACtCtW,KAAK2pC,WAAa,IAAI93B,EAAW7R,KAAKwpC,OAEtCxpC,KAAKgqC,WAAa,IAAI5zB,EACtBpW,KAAK0pC,WAAW3oC,QAAQ,SAAUgC,GAC9B/C,KAAKgqC,WAAW5wB,QAAQrW,IACzB/C,MACHA,KAAK2pC,WAAW5oC,QAAQ,SAAUof,GAC9BngB,KAAKgqC,WAAW/wB,gBAAgBkH,IACjCngB,MACH,OAAOA,KAAKgqC,YAQhBI,cAAe,SAAUl1B,GACrB,OAAOlV,KAAKypC,QAAQ74B,IAAIsE,EAAWvD,KAQvC04B,SAAU,SAAUl3B,GAChB,OAAOnT,KAAKqa,QAAQzJ,IAAIuC,EAAMxB,KAQlC24B,QAAS,SAAU7pC,EAAGJ,GAClB,OAAOjF,EAAMiH,MAAM5B,EAAE2S,MAAO,SAAUY,GAClC,OAAOA,EAAKC,cAAcxT,KAAOJ,KAOzCsC,MAAO,WACH3C,KAAKgqC,WAAa,KAClBhqC,KAAK+pC,WAAc/pC,KAAKuf,QAAQ0oB,kBAAoBjoC,KAAKuf,QAAQ2oB,wBAA2B,IAAI1B,EAAc,KAC9GxmC,KAAK8pC,UAAa9pC,KAAKuf,QAAQ0oB,kBAAoBjoC,KAAKuf,QAAQ2oB,wBAA2B,IAAIr2B,EAAe,KAC9G7R,KAAKqa,QAAU,IAAIxI,EACnB7R,KAAKupC,SAAW,IAAI13B,EACpB7R,KAAKsW,MAAQ,GACbtW,KAAKwpC,MAAQ,GACbxpC,KAAKypC,QAAU,IAAI53B,EACnB7R,KAAK4pC,mBAAqB,GAC1B5pC,KAAK6pC,cAAgB,GACrB7pC,KAAK0pC,WAAa,GAClB1pC,KAAK2pC,WAAa,IAQtBY,WAAY,SAAUC,GAClB,IAAI3oC,EAAO,GACX,IAAI5C,EAAIurC,EAAe79B,UACvB,IAAK1N,EACD,OAAO4C,EAEXA,EAAK1F,KAAK8C,GACV,MAAOA,EAAEwrC,gBAAiB,CACtBxrC,EAAIA,EAAEwrC,gBACN5oC,EAAK1F,KAAK8C,GAEd4C,EAAK+D,UACL,OAAO/D,GAGX6oC,2BAA4B,SAAUv3B,GAElC,GAAIA,EAAMw3B,cAAgB3qC,KAAK4qC,iBAAiBz3B,GAC5C,OAAOA,EAEX,OAAQA,EAAMs3B,gBAAkB,KAAOzqC,KAAK0qC,2BAA2Bv3B,EAAMs3B,kBAEjFI,sBAAuB,SAAUpqC,EAAGJ,GAChC,GAAII,EAAEkqC,aAAe3qC,KAAK8qC,eAAerqC,EAAGJ,GACxC,OAAO,KAEX,OAAOA,EAAEsqC,aAAe3qC,KAAK8qC,eAAezqC,EAAGI,IAUnDqqC,eAAgB,SAAUC,EAAOtqC,GAC7B,IAAKsqC,EAAMJ,YACP,KAAM,yBAEV,GAAII,IAAUtqC,EACV,OAAO,MAEX,GAAIiB,EAASqpC,EAAM52B,SAAU1T,GACzB,OAAO,KAEX,IAAIuqC,EAAa,GACjB,IAAK,IAAIpvC,EAAI,EAAG8L,EAAMqjC,EAAM52B,SAASlW,OAAQrC,EAAI8L,EAAK9L,IAAK,CACvD,IAAI8E,EAAIqqC,EAAM52B,SAASvY,GACvB,GAAI8E,EAAEiqC,aAAe3qC,KAAK8qC,eAAepqC,EAAGD,GACxCuqC,EAAW7uC,KAAKuE,GAIxB,OAAOsqC,EAAW/sC,OAAS,GAE/BgtC,gBAAiB,SAAU93B,GACvB,GAAInT,KAAKuf,QAAQ4oB,gBAAiB,CAC9B,GAAIh1B,EAAM+3B,aAAelrC,KAAKmrC,WAAWh4B,GACrC,OAAO,MAEX,IAAKA,EAAM+3B,aAAelrC,KAAKmrC,WAAWh4B,GACtC,OAAO,MAEX,OAAO,UAGP,OAAOA,EAAM+3B,cAAgBlrC,KAAKorC,OAAOj4B,IAUjDk4B,cAAe,SAAUl4B,GACrB,OAAOA,EAAM+3B,cAAgBlrC,KAAKmrC,WAAWh4B,KAAWnT,KAAKorC,OAAOj4B,IAGxEm4B,oBAAqB,SAAU7qC,EAAGJ,GAC9B,IAAKI,EACD,KAAM,gCAEV,IAAKJ,EACD,KAAM,gCAGV,IAAKL,KAAK+pC,UACN,KAAM,0BAEV,IAAIwB,EAAKvrC,KAAKuqC,WAAW9pC,GACzB,IAAI4J,EAAKrK,KAAKuqC,WAAWlqC,GACzB,IAAI6W,EAAQ,KACZ,GAAI9b,EAAM4C,QAAQutC,IAAOnwC,EAAM4C,QAAQqM,GACnC,OAAOrK,KAAK+pC,UAAU9yB,KAAKvD,KAE/B,IAAI83B,EAAKD,EAAG,GACZ,IAAIE,EAAKphC,EAAG,GACZ,IAAIzO,EAAI,EACR,MAAO4vC,IAAOC,EAAI,CACdv0B,EAAQq0B,EAAG3vC,GACXA,IACA,GAAIA,GAAK2vC,EAAGttC,QAAUrC,GAAKyO,EAAGpM,OAC1B,MAEJutC,EAAKD,EAAG3vC,GACR6vC,EAAKphC,EAAGzO,GAEZ,IAAKsb,EACD,OAAOlX,KAAK+pC,UAAU9yB,KAAKvD,UAG3B,OAAOjP,EAAKzE,KAAK+pC,UAAUzzB,MAAO,SAAUvT,GACxC,OAAQA,EAAE2Q,KAAK/G,YAAcuK,KAUzCk0B,OAAQ,SAAUrrC,GACd,OAAQA,EAAK0qC,iBAUjBU,WAAY,SAAUh4B,GAElB,IAAKA,EAAM2R,UACP,OAAO,MAEX,OAAQ3R,EAAMs3B,gBAAkBt3B,EAAM2R,UAAY9kB,KAAKmrC,WAAWh4B,EAAMs3B,kBAG5EiB,aAAc,SAAUv4B,GAEpB,GAAIA,EAAMw3B,aAAex3B,EAAM+3B,YAC3B,OAAO,KAEX,OAAO/3B,EAAMs3B,iBAAmBzqC,KAAK0rC,aAAav4B,EAAMs3B,kBAO5DP,mBAAoB,WAEhB,GAAIlqC,KAAKuf,QAAQ0oB,iBACb,IAAK,IAAIrsC,EAAI,EAAG8L,EAAM1H,KAAKlF,QAAQy4B,OAAOt1B,OAAQrC,EAAI8L,EAAK9L,IAAK,CAC5D,IAAIuX,EAAQnT,KAAKlF,QAAQy4B,OAAO33B,GAGhC,GAAKoE,KAAKuf,QAAQ4oB,kBAAoBnoC,KAAKmrC,WAAWh4B,IAAWA,EAAMw3B,YAAa,CAChF3qC,KAAK6pC,cAAc1tC,KAAKgX,GACxB,SAEJ,IAAIY,EAAO,IAAIb,EAAKC,EAAMxB,GAAIwB,GAC9BY,EAAKH,UAAY,MAGjB5T,KAAKqa,QAAQ3J,IAAIyC,EAAMxB,GAAIoC,GAC3B/T,KAAKsW,MAAMna,KAAK4X,QAIpB,KAAM,qDAQdo2B,wBAAyB,WACrB,GAAInqC,KAAKlF,QAAQ89B,YAAY36B,SAAW,EACpC,OAEJ,IAAK,IAAIrC,EAAI,EAAG8L,EAAM1H,KAAKlF,QAAQ89B,YAAY36B,OAAQrC,EAAI8L,EAAK9L,IAAK,CACjE,IAAIs2B,EAAOlyB,KAAKlF,QAAQ89B,YAAYh9B,GAEpC,GAAIoE,KAAKirC,gBAAgB/Y,GAAO,CAC5BlyB,KAAK4pC,mBAAmBztC,KAAK+1B,GAC7B,SAGJ,IAAI9zB,GAAU8zB,EAAK8H,gBAAkB,KAAO9H,EAAK8H,gBAAgB7mB,MACjE,IAAIw4B,GAAQzZ,EAAKkB,gBAAkB,KAAOlB,EAAKkB,gBAAgBjgB,MAG/D,IAAK/U,IAAWutC,EAAM,CAClB3rC,KAAK4pC,mBAAmBztC,KAAK+1B,GAC7B,SAGJ,GAAIxwB,EAAS1B,KAAK6pC,cAAezrC,KAAY4B,KAAKupC,SAASx4B,YAAY3S,GAAS,CAC5E4B,KAAK4pC,mBAAmBztC,KAAK+1B,GAC7B,SAEJ,GAAIxwB,EAAS1B,KAAK6pC,cAAe8B,KAAU3rC,KAAKupC,SAASx4B,YAAY46B,GAAO,CACxE3rC,KAAK4pC,mBAAmBztC,KAAK+1B,GAC7B,SAIJ,GAAIlyB,KAAKupC,SAASx4B,YAAY3S,GAC1BA,EAAS4B,KAAKupC,SAASnrC,GAE3B,GAAI4B,KAAKupC,SAASx4B,YAAY46B,GAC1BA,EAAO3rC,KAAKupC,SAASoC,GAGzB,IAAIC,EAAa5rC,KAAKqqC,SAASjsC,GAC/B,IAAIytC,EAAW7rC,KAAKqqC,SAASsB,GAC7B,GAAKC,IAAeC,GAAa7rC,KAAK8rC,oBAAoBF,EAAYC,GAAW,CAC7E7rC,KAAK4pC,mBAAmBztC,KAAK+1B,GAC7B,SAGJ,GAAI0Z,IAAe,MAAQC,IAAa,KACpC,KAAM,oCAEV,GAAI7rC,KAAKuf,QAAQ0oB,iBAAkB,CAE/B,GAAI2D,EAAWh4B,WAAai4B,EAASj4B,UAAW,CAC5C5T,KAAK4pC,mBAAmBztC,KAAK+1B,GAC7B,SAEJ,IAAI6Z,EAAU,IAAI92B,EAAK22B,EAAYC,EAAU3Z,EAAKvgB,GAAIugB,GAEtDlyB,KAAKypC,QAAQ/4B,IAAIwhB,EAAKvgB,GAAIo6B,GAC1B/rC,KAAKwpC,MAAMrtC,KAAK4vC,QAGhB,KAAM,sDAKlBD,oBAAqB,SAAU/oC,EAAG7C,GAC9B,OAAO9E,EAAM+F,IAAInB,KAAKwpC,MAAO,SAAUrpB,GACnC,OAAOA,EAAE/hB,SAAW2E,GAAKod,EAAExc,SAAWzD,GAAKigB,EAAE/hB,SAAW8B,GAAKigB,EAAExc,SAAWZ,OA0ClFqd,EAAesmB,EAAWljC,OAAO,CACjCC,KAAM,SAAU3I,GACZ,IAAIkX,EAAOhS,KACX0mC,EAAW9/B,GAAGnD,KAAKpG,KAAK2U,GACxB,GAAI5W,EAAM2B,YAAYjC,GAClB,KAAM,4BAEVkF,KAAKlF,QAAUA,GAGnB64B,OAAQ,SAAUpU,GAEdvf,KAAKqpC,gBAAgB9pB,GAErB,IAAIysB,EAAU,IAAI1C,EAA0BtpC,KAAKlF,SACjD,IAAI2c,EAAQu0B,EAAQ/B,QAAQ1qB,GAC5B,GAAI9H,EAAMzZ,UACN,OAGJ,IAAIwZ,EAAaC,EAAMN,yBACvB,GAAI/b,EAAM4C,QAAQwZ,GACd,OAEJ,IAAK,IAAI5b,EAAI,EAAGA,EAAI4b,EAAWvZ,OAAQrC,IAAK,CACxC,IAAI6f,EAAYjE,EAAW5b,GAC3BoE,KAAKqgB,YAAY5E,EAAW8D,GAEhC,IAAI0sB,EAAejsC,KAAKqoC,qBAAqB7wB,GAC7C,OAAO,IAAI1c,EAAQoxC,YAAYlsC,KAAKlF,QAASmxC,IAGjD5rB,YAAa,SAAU5I,EAAO8H,GAE1B,GAAInkB,EAAMyB,UAAU0iB,GAChBvf,KAAKqpC,gBAAgB9pB,GAEzBvf,KAAKyX,MAAQA,EAEb,IAAI00B,EAAqBnsC,KAAKuf,QAAQunB,aAAe,EACrD9mC,KAAKosC,YAAcD,EAEnB,IAAIE,EAAcrsC,KAAKssC,kBACvBtsC,KAAKsI,MAAQ+jC,EAAY/jC,MACzBtI,KAAKqI,OAASgkC,EAAYhkC,OAE1B,IAAK,IAAI7M,EAAO,EAAGA,EAAOwE,KAAKuf,QAAQwnB,WAAYvrC,IAAQ,CACvDwE,KAAKusC,YAAc/wC,GAAQwE,KAAKuf,QAAQwnB,WAAa,EAAI,EACzD/mC,KAAK4D,OAEL5D,KAAKosC,YAAcpsC,KAAKusC,YACpBJ,EAAqB,GACrBA,GAAsB,EAAI3wC,GAAQ,EAAIwE,KAAKuf,QAAQwnB,eAO/DnjC,KAAM,WACF,IAAIhI,EAEJ,IAAKA,EAAI,EAAGA,EAAIoE,KAAKyX,MAAMnB,MAAMrY,OAAQrC,IACrCoE,KAAKwsC,WAAWxsC,KAAKyX,MAAMnB,MAAM1a,IAIrC,IAAKA,EAAI,EAAGA,EAAIoE,KAAKyX,MAAMrE,MAAMnV,OAAQrC,IACrCoE,KAAKysC,YAAYzsC,KAAKyX,MAAMrE,MAAMxX,IAGtC,IAAKA,EAAI,EAAGA,EAAIoE,KAAKyX,MAAMnB,MAAMrY,OAAQrC,IAAK,CAC1C,IAAImY,EAAO/T,KAAKyX,MAAMnB,MAAM1a,GAC5B,IAAImL,EAAS9K,KAAKuE,KAAKuT,EAAKhL,GAAKgL,EAAKhL,GAAKgL,EAAK/K,GAAK+K,EAAK/K,IAC1D,GAAIjC,IAAW,EACX,OAEJgN,EAAKhY,GAAKE,KAAKkJ,IAAI4B,EAAQ/G,KAAKosC,aAAer4B,EAAKhL,GAAKhC,EACzDgN,EAAKvX,GAAKP,KAAKkJ,IAAI4B,EAAQ/G,KAAKosC,aAAer4B,EAAK/K,GAAKjC,EACzD,GAAI/G,KAAKuf,QAAQe,YAAa,CAC1BvM,EAAKhY,EAAIE,KAAKkJ,IAAInF,KAAKsI,MAAOrM,KAAKiJ,IAAI6O,EAAKzL,MAAQ,EAAGyL,EAAKhY,IAC5DgY,EAAKvX,EAAIP,KAAKkJ,IAAInF,KAAKqI,OAAQpM,KAAKiJ,IAAI6O,EAAK1L,OAAS,EAAG0L,EAAKvX,OAU1EkwC,OAAQ,SAAU34B,GAEd,IAAI44B,EAAM1wC,KAAKyD,SAAWM,KAAKuf,QAAQunB,aAAe,EACtD,IAAI8F,EAAQ3wC,KAAKyD,SAAW,EAAIzD,KAAKS,GACrCqX,EAAKhY,GAAK4wC,EAAM1wC,KAAKoH,IAAIupC,GACzB74B,EAAKvX,GAAKmwC,EAAM1wC,KAAKwS,IAAIm+B,IAY7BC,oBAAqB,SAAU1sC,EAAG4C,EAAG7C,GACjC,IAAIklB,EACJ,IAAKplB,KAAKusC,YACNnnB,EAAQnpB,KAAK6wC,IAAI3sC,EAAG,GAAKlE,KAAK6wC,IAAI9sC,KAAKuf,QAAQunB,aAAc,OAE5D,CACD,IAAIiC,EAAShmC,EAAEhH,EAAImE,EAAEnE,EACrB,IAAIitC,EAASjmC,EAAEvG,EAAI0D,EAAE1D,EAErB,IAAIuwC,EAAKhqC,EAAEuF,MAAQ,EACnB,IAAI0kC,EAAKjqC,EAAEsF,OAAS,EACpB,IAAI4kC,EAAK/sC,EAAEoI,MAAQ,EACnB,IAAI4kC,EAAKhtC,EAAEmI,OAAS,EAEpB+c,EAASnpB,KAAK6wC,IAAI/D,EAAQ,GAAK9sC,KAAK6wC,IAAIC,EAAKE,EAAKjtC,KAAKuf,QAAQunB,aAAc,GAAO7qC,KAAK6wC,IAAI9D,EAAQ,GAAK/sC,KAAK6wC,IAAIE,EAAKE,EAAKltC,KAAKuf,QAAQunB,aAAc,GAE5J,OAAO1hB,EAAQ,EAAI,GAWvB+nB,aAAc,SAAUhtC,EAAG4C,EAAG7C,GAC1B,OAAO,EAAIF,KAAK6sC,oBAAoB1sC,EAAG4C,EAAG7C,IAG9CssC,WAAY,SAAUzpC,GAClBA,EAAEgG,GAAK,EACPhG,EAAEiG,GAAK,EACP5N,EAAM2F,QAAQf,KAAKyX,MAAMnB,MAAO,SAAUpW,GACtC,GAAIA,IAAM6C,EACN,OAEJ,MAAOA,EAAEhH,IAAMmE,EAAEnE,GAAKgH,EAAEvG,IAAM0D,EAAE1D,EAC5BwD,KAAK0sC,OAAOxsC,GAEhB,IAAI4P,EAAK/M,EAAEhH,EAAImE,EAAEnE,EACjB,IAAIgU,EAAKhN,EAAEvG,EAAI0D,EAAE1D,EACjB,IAAI4wC,EAAWnxC,KAAKuE,KAAKsP,EAAKA,EAAKC,EAAKA,GACxC,IAAI9G,EAAIjJ,KAAKmtC,aAAaC,EAAUrqC,EAAG7C,GAAK,EAC5C6C,EAAEgG,IAAO+G,EAAKs9B,EAAYnkC,EAC1BlG,EAAEiG,IAAO+G,EAAKq9B,EAAYnkC,GAC3BjJ,OAEPysC,YAAa,SAAUz4B,GACnB,IAAIwF,EAAIxF,EAAKrQ,OACb,IAAI1E,EAAI+U,EAAK5V,OACb,GAAIa,IAAMua,EAEN,OAEJ,MAAOva,EAAElD,IAAMyd,EAAEzd,GAAKkD,EAAEzC,IAAMgd,EAAEhd,EAC5BwD,KAAK0sC,OAAOlzB,GAGhB,IAAI1J,EAAK7Q,EAAElD,EAAIyd,EAAEzd,EACjB,IAAIgU,EAAK9Q,EAAEzC,EAAIgd,EAAEhd,EACjB,IAAI4wC,EAAWnxC,KAAKuE,KAAKsP,EAAKA,EAAKC,EAAKA,GAExC,IAAItP,EAAIT,KAAK6sC,oBAAoBO,EAAUnuC,EAAGua,GAAK,EACnD,IAAIzQ,EAAM+G,EAAKs9B,EAAY3sC,EAC3B,IAAIuI,EAAM+G,EAAKq9B,EAAY3sC,EAC3B+Y,EAAEzQ,IAAMA,EACRyQ,EAAExQ,IAAMA,EACR/J,EAAE8J,IAAMA,EACR9J,EAAE+J,IAAMA,GAQZsjC,gBAAiB,WAEb,IAAI9tC,EAAM4d,EAAIpc,KAAKyX,MAAMnB,MAAMrY,OAAmCovC,EAAQ,IAAKC,EAAa,EAC5F,GAAIlxB,IAAM,EACN,OAAO5d,EAEXA,EAAOpD,EAAMwG,KAAK5B,KAAKyX,MAAMnB,MAAO,SAAUrX,EAAG8U,GAC7C,IAAIw5B,EAAOx5B,EAAKzL,MAAQyL,EAAK1L,OAC7B,GAAIklC,EAAO,EAAG,CACVtuC,GAAKhD,KAAKuE,KAAK+sC,GACf,OAAOtuC,EAEX,OAAO,GACR,EAAGe,MACN,IAAIwtC,EAAKhvC,EAAO4d,EAChB,IAAIqxB,EAAaD,EAAKvxC,KAAKyxC,KAAKzxC,KAAKuE,KAAK4b,IAC1C,IAAI9T,EAAQmlC,EAAaxxC,KAAKuE,KAAK6sC,GACnC,IAAIhlC,EAASolC,EAAaxxC,KAAKuE,KAAK6sC,GACpC,MAAO,CAAE/kC,MAAOA,EAAQglC,EAAYjlC,OAAQA,EAASilC,MAKzDK,EAAsBhzC,EAAM4I,MAAMC,OAAO,CAEzCC,KAAM,SAAU8b,GACZvf,KAAKc,OAAS,KACdd,KAAKuf,QAAUA,GAEnBoU,OAAQ,SAAUia,EAAW32B,GACzBjX,KAAKyX,MAAQm2B,EACb,IAAK5tC,KAAKyX,MAAMnB,OAAStW,KAAKyX,MAAMnB,MAAMrY,SAAW,EACjD,OAGJ,IAAKyD,EAAS1B,KAAKyX,MAAMnB,MAAOW,GAC5B,KAAM,sCAGVjX,KAAKc,OAASmW,EACdjX,KAAKyX,MAAMf,qBAkBX1W,KAAK6tC,gBAMTC,WAAY,SAAUllC,GAClB5I,KAAK+tC,qBAAqB/tC,KAAKc,OAAQ,OAAQ,OAC/Cd,KAAKguC,kBAAkBhuC,KAAKc,OAAQ,UAAW,OAC/C,IAAI4D,EAAI,EAAGoR,EAAI,EAAGtZ,EAAGZ,EAAGmY,EACxB,IAAKnY,EAAI,EAAGA,EAAIgN,EAAK3K,OAAQrC,IAAK,CAC9BmY,EAAOnL,EAAKhN,GACZmY,EAAKk6B,cAAgB,OACrB,IAAIhvC,EAAIe,KAAKkuC,QAAQn6B,EAAM5I,EAAKU,OAChCiK,EAAI7Z,KAAKiJ,IAAI4Q,EAAG7W,EAAEkvC,OAClBzpC,GAAKzF,EAAEoJ,OAASrI,KAAKuf,QAAQ0nB,mBAGjCviC,GAAK1E,KAAKuf,QAAQ0nB,mBAClB,IAAIlrC,EAAIiE,KAAKc,OAAO/E,EAAIiE,KAAKuf,QAAQynB,qBACrCxqC,EAAIwD,KAAKc,OAAOtE,GAAMwD,KAAKc,OAAOuH,OAAS3D,GAAK,EAChD,IAAK9I,EAAI,EAAGA,EAAIgN,EAAK3K,OAAQrC,IAAK,CAC9BmY,EAAOnL,EAAKhN,GACZ,IAAIkD,EAAI,IAAIM,EAAMrD,EAAIgY,EAAK5I,KAAK7C,MAAO9L,GAEvCwD,KAAKouC,QAAQr6B,EAAMjV,GACnBtC,GAAKuX,EAAK5I,KAAK9C,OAASrI,KAAKuf,QAAQ0nB,qBAI7CoH,YAAa,SAAUxlC,GACnB7I,KAAK+tC,qBAAqB/tC,KAAKc,OAAQ,QAAS,OAChDd,KAAKguC,kBAAkBhuC,KAAKc,OAAQ,UAAW,OAC/C,IAAI4D,EAAI,EAAGoR,EAAI,EAAGtZ,EAAGZ,EAAGmY,EACxB,IAAKnY,EAAI,EAAGA,EAAIiN,EAAM5K,OAAQrC,IAAK,CAC/BmY,EAAOlL,EAAMjN,GACbmY,EAAKk6B,cAAgB,QACrB,IAAIhvC,EAAIe,KAAKkuC,QAAQn6B,EAAM5I,EAAKU,OAChCiK,EAAI7Z,KAAKiJ,IAAI4Q,EAAG7W,EAAEkvC,OAClBzpC,GAAKzF,EAAEoJ,OAASrI,KAAKuf,QAAQ0nB,mBAGjCviC,GAAK1E,KAAKuf,QAAQ0nB,mBAClB,IAAIlrC,EAAIiE,KAAKc,OAAO/E,EAAIiE,KAAKuf,QAAQynB,qBAAuBhnC,KAAKc,OAAOwH,MACxE9L,EAAIwD,KAAKc,OAAOtE,GAAMwD,KAAKc,OAAOuH,OAAS3D,GAAK,EAChD,IAAK9I,EAAI,EAAGA,EAAIiN,EAAM5K,OAAQrC,IAAK,CAC/BmY,EAAOlL,EAAMjN,GACb,IAAIkD,EAAI,IAAIM,EAAMrD,EAAGS,GACrBwD,KAAKouC,QAAQr6B,EAAMjV,GACnBtC,GAAKuX,EAAK5I,KAAK9C,OAASrI,KAAKuf,QAAQ0nB,qBAI7CqH,SAAU,SAAUC,GAChBvuC,KAAK+tC,qBAAqB/tC,KAAKc,OAAQ,KAAM,OAC7Cd,KAAKguC,kBAAkBhuC,KAAKc,OAAQ,UAAW,OAC/C,IAAIgV,EAAI,EAAGtZ,EAAGuX,EAAMnY,EACpB,IAAKA,EAAI,EAAGA,EAAI2yC,EAAGtwC,OAAQrC,IAAK,CAC5BmY,EAAOw6B,EAAG3yC,GACVmY,EAAKk6B,cAAgB,KACrB,IAAIhvC,EAAIe,KAAKkuC,QAAQn6B,EAAM5I,EAAKU,OAChCiK,GAAK7W,EAAEqJ,MAAQtI,KAAKuf,QAAQynB,qBAGhClxB,GAAK9V,KAAKuf,QAAQynB,qBAClB,IAAIjrC,EAAIiE,KAAKc,OAAO/E,EAAKiE,KAAKc,OAAOwH,MAAQ,EAAMwN,EAAI,EAGvD,IAAKla,EAAI,EAAGA,EAAI2yC,EAAGtwC,OAAQrC,IAAK,CAC5BmY,EAAOw6B,EAAG3yC,GACVY,EAAIwD,KAAKc,OAAOtE,EAAIwD,KAAKuf,QAAQ0nB,mBAAqBlzB,EAAK5I,KAAK9C,OAChE,IAAIvJ,EAAI,IAAIM,EAAMrD,EAAGS,GACrBwD,KAAKouC,QAAQr6B,EAAMjV,GACnB/C,GAAKgY,EAAK5I,KAAK7C,MAAQtI,KAAKuf,QAAQynB,uBAI5CwH,WAAY,SAAUC,GAClB,IAAI16B,EAAMnY,EACVoE,KAAK+tC,qBAAqB/tC,KAAKc,OAAQ,OAAQ,OAC/Cd,KAAKguC,kBAAkBhuC,KAAKc,OAAQ,UAAW,OAC/C,IAAIgV,EAAI,EAAGtZ,EACX,IAAKZ,EAAI,EAAGA,EAAI6yC,EAAKxwC,OAAQrC,IAAK,CAC9BmY,EAAO06B,EAAK7yC,GACZmY,EAAK26B,cAAgB,OACrB,IAAIzvC,EAAIe,KAAKkuC,QAAQn6B,EAAM5I,EAAKU,OAChCiK,GAAK7W,EAAEqJ,MAAQtI,KAAKuf,QAAQynB,qBAGhClxB,GAAK9V,KAAKuf,QAAQynB,qBAClB,IAAIjrC,EAAIiE,KAAKc,OAAO/E,EAAKiE,KAAKc,OAAOwH,MAAQ,EAAMwN,EAAI,EACvDtZ,EAAIwD,KAAKc,OAAOtE,EAAIwD,KAAKuf,QAAQ0nB,mBAAqBjnC,KAAKc,OAAOuH,OAClE,IAAKzM,EAAI,EAAGA,EAAI6yC,EAAKxwC,OAAQrC,IAAK,CAC9BmY,EAAO06B,EAAK7yC,GACZ,IAAIkD,EAAI,IAAIM,EAAMrD,EAAGS,GACrBwD,KAAKouC,QAAQr6B,EAAMjV,GACnB/C,GAAKgY,EAAK5I,KAAK7C,MAAQtI,KAAKuf,QAAQynB,uBAI5C2H,iBAAkB,WAEd3uC,KAAK+tC,qBAAqB/tC,KAAKc,OAAQ,SAAU,OACjDd,KAAKguC,kBAAkBhuC,KAAKc,OAAQ,UAAW,OAC/Cd,KAAK4uC,aAAe,KACpB,IAAIC,EAAa7uC,KAAKuf,QAAQqoB,iBAAmBnB,EACjD,IAAIqI,EAAW9uC,KAAKuf,QAAQsoB,eAAiBpB,EAC7C,GAAIqI,GAAYD,EACZ,KAAM,uDAGV7uC,KAAK+uC,SAAW,EAChB/uC,KAAK0F,OAAS,IAAItG,EAAMY,KAAKc,OAAO/E,EAAGiE,KAAKc,OAAOtE,GACnDwD,KAAKgvC,sBAAsBhvC,KAAKc,OAAQ,GAGxC,GAAId,KAAK+uC,SAAW,EAChB/uC,KAAKivC,aAAajvC,KAAKc,OAAQd,KAAKuf,QAAQwoB,2BAA4B8G,EAAYC,GAIxF9uC,KAAKc,OAAOouC,MAAQJ,EAAWD,GAGnCM,YAAa,SAAUV,EAAMW,GACzB,GAAIh0C,EAAM2B,YAAYqyC,GAClBA,EAAiB,EAGrBpvC,KAAK+tC,qBAAqB/tC,KAAKc,OAAQ,OAAQ,OAC/Cd,KAAKguC,kBAAkBhuC,KAAKc,OAAQ,UAAW,OAC/Cd,KAAKguC,kBAAkBhuC,KAAKc,OAAQ,aAAc,MAAOsuC,GACzD,IAAIt5B,EAAI,EAAGtZ,EAAGuX,EAAMnY,EACpB,IAAKA,EAAI,EAAGA,EAAI6yC,EAAKxwC,OAAQrC,IAAK,CAC9BmY,EAAO06B,EAAK7yC,GAGZmY,EAAKk6B,cAAgB,OACrB,IAAIhvC,EAAIe,KAAKkuC,QAAQn6B,EAAM5I,EAAKU,OAChCiK,GAAK7W,EAAEqJ,MAAQtI,KAAKuf,QAAQynB,qBAGhClxB,GAAK9V,KAAKuf,QAAQynB,qBAGlBlxB,GAAK24B,EAAKA,EAAKxwC,OAAS,GAAGqK,MAC3BwN,GAAK24B,EAAKA,EAAKxwC,OAAS,GAAGuV,gBAAgBC,SAASnL,MAEpD,IAAIvM,EAAIiE,KAAKc,OAAO/E,EAAKiE,KAAKc,OAAOwH,MAAQ,EAAMwN,EAAI,EACvDtZ,EAAIwD,KAAKc,OAAOtE,EAAIwD,KAAKuf,QAAQ0nB,mBAAqBjnC,KAAKc,OAAOuH,OAClE,IAAKzM,EAAI,EAAGA,EAAI6yC,EAAKxwC,OAAQrC,IAAK,CAC9BmY,EAAO06B,EAAK7yC,GAEZ,IAAIkD,EAAI,IAAIM,EAAMrD,EAAGS,GACrBwD,KAAKouC,QAAQr6B,EAAMjV,GACnB/C,GAAKgY,EAAK5I,KAAK7C,MAAQtI,KAAKuf,QAAQynB,uBAY5CgI,sBAAuB,SAAUjsC,EAAG5C,GAChC,GAAIA,EAAIH,KAAK+uC,SACT/uC,KAAK+uC,SAAW5uC,EAGpB,IAAIkvC,EAAK,EAAGv5B,EAAI,IAAMpR,EAAI,IAAM4qC,EAAWnvC,IAAM,EAAI,EAAIlE,KAAKuE,KAAMsV,EAAIA,EAAMpR,EAAIA,GAAMvE,EAExF,GAAI4C,EAAEoR,SAASlW,OAAS,EAAG,CAEvB,IAAK,IAAIrC,EAAI,EAAG8L,EAAM3E,EAAEoR,SAASlW,OAAQrC,EAAI8L,EAAK9L,IAAK,CACnD,IAAIob,EAAQjU,EAAEoR,SAASvY,GACvByzC,GAAMrvC,KAAKgvC,sBAAsBh4B,EAAO7W,EAAI,GAEhDkvC,EAAKpzC,KAAKiJ,IAAIoqC,EAAUD,QAGxBA,EAAKC,EAGTvsC,EAAEwsC,YAAcF,EAChB,OAAOA,GAEXG,aAAc,SAAUzsC,GACpB,IAAI0sC,EAAY,EAAG7zC,EAGnB,GAAImH,EAAEsR,QAAQpW,OAAS,EACnB,KAAM,8BAEV,IAAIa,EAAIiE,EAAEsR,QAAQ,GAClB,GAAIvV,EAAG,CACH,IAAI4wC,EAAK,IAAItwC,EAAMN,EAAE/C,EAAG+C,EAAEtC,GAC1B,IAAImzC,EAAK,IAAIvwC,EAAM2D,EAAEhH,EAAGgH,EAAEvG,GAC1BizC,EAAYzvC,KAAK4vC,eAAe3zC,KAAKmE,MAAMsvC,EAAGlzC,EAAImzC,EAAGnzC,EAAGkzC,EAAG3zC,EAAI4zC,EAAG5zC,IAGtE,IAAI85B,EAAQ9yB,EAAEoR,SAASlW,OACvB,GAAI43B,IAAU,EACV,OAAO,KAGX,IAAI7rB,EAAQ,GACZ,IAAIq1B,EAAM,GAEV,IAAKzjC,EAAI,EAAGA,EAAIi6B,IAASj6B,EAAG,CACxB,IAAI8E,EAAIqC,EAAEoR,SAASvY,GACnB,IAAIukB,EAAI,IAAI/gB,EAAMsB,EAAE3E,EAAG2E,EAAElE,GACzB6iC,EAAIzjC,GAAKA,EACToO,EAAMpO,GAAKoE,KAAK4vC,gBAAgBH,EAAYxzC,KAAKmE,MAAM+f,EAAE3jB,EAAI2jB,EAAE3jB,EAAG2jB,EAAEpkB,EAAIokB,EAAEpkB,IAG9EX,EAAMwH,OAAOoH,EAAOq1B,GACpB,IAAIwQ,EAAM,GACV,IAAI17B,EAAWpR,EAAEoR,SACjB,IAAKvY,EAAI,EAAGA,EAAIi6B,IAASj6B,EACrBi0C,EAAI1zC,KAAKgY,EAASkrB,EAAIzjC,KAG1B,OAAOi0C,GAGXD,eAAgB,SAAU5lC,GACtB,MAAOA,EAAQ/N,KAAKS,GAAK,EACrBsN,GAAS,EAAI/N,KAAKS,GAEtB,MAAOsN,EAAQ,EACXA,GAAS/N,KAAKS,GAAK,EAEvB,OAAOsN,GAEXilC,aAAc,SAAUl7B,EAAMmL,EAAQ2vB,EAAYC,GAC9C,IAAIgB,EAAahB,EAAWD,EAC5B,IAAIkB,EAAiBD,EAAa,EAClC,IAAIE,EAAej8B,EAAKw7B,YACxB,IAAIU,EAAW,EACf,IAAIC,EAASlwC,KAAKwvC,aAAaz7B,GAC/B,IAAK,IAAInY,EAAI,EAAG8L,EAAMwoC,EAAOjyC,OAAQrC,EAAI8L,EAAK9L,IAAK,CAC/C,IAAIu0C,EAAYD,EAAOt0C,GACvB,IAAIw0C,EAAKD,EACT,IAAIE,EAAqBD,EAAGb,YAAcS,EAC1C,GAAIG,EAAUh8B,SAASlW,OAAS,EAC5B+B,KAAKivC,aAAakB,EACdjxB,EAASlf,KAAKuf,QAAQuoB,iBACtB+G,EAAcoB,EAAWH,EACzBjB,GAAeoB,EAAWI,GAAsBP,GAGxD9vC,KAAKswC,iBAAiBH,EAAWjxB,EAAQ2vB,EAAcoB,EAAWH,EAAeO,EAAqBN,GACtGK,EAAGpmC,MAAQqmC,EAAqBP,EAChCG,GAAYI,IAGpBC,iBAAkB,SAAUv8B,EAAMmL,EAAQlV,GACtC+J,EAAKhY,EAAIiE,KAAK0F,OAAO3J,EAAKmjB,EAASjjB,KAAKoH,IAAI2G,GAC5C+J,EAAKvX,EAAIwD,KAAK0F,OAAOlJ,EAAK0iB,EAASjjB,KAAKwS,IAAIzE,GAC5C+J,EAAKw8B,kBAAoB,IAAIxoC,EAAKgM,EAAKhY,EAAGgY,EAAKvX,EAAGuX,EAAKzL,MAAOyL,EAAK1L,SASvE0lC,qBAAsB,SAAUh6B,EAAMy8B,EAAWC,GAC7C,IAAIC,EAAgB38B,EAAK26B,cACzB1uC,KAAKyX,MAAMoD,oBAAoB9G,EAAM,SAAUhR,GAC3CA,EAAE2rC,cAAgB8B,IAEtB,IAAKC,EACD18B,EAAK26B,cAAgBgC,GAW7B1C,kBAAmB,SAAUj6B,EAAM4f,EAAQ8c,EAAcrB,GACrD,GAAIh0C,EAAM2B,YAAYqyC,GAClBA,EAAiB,EAErB,IAAIuB,EAAa58B,EAAK68B,eACtB,GAAIxB,EAAiB,EAAG,CAEpBpvC,KAAKyX,MAAMb,aAAa7C,GAGxB/T,KAAKyX,MAAMoD,oBACP9G,EAAM,SAAU9U,GACZ,GAAIA,EAAE8X,OAASq4B,EAAiB,EAC5BnwC,EAAE2xC,eAAiBjd,QAK9B,CACD3zB,KAAKyX,MAAMoD,oBAAoB9G,EAAM,SAAU9U,GAC3CA,EAAE2xC,eAAiBjd,IAIvB,IAAK8c,EACD18B,EAAK68B,eAAiBD,IAWlCzC,QAAS,SAAUn6B,EAAM88B,GACrB,IAAI/6B,EAAI,EAAGpR,EAAI,EAAGzF,EAClB,IAAIkD,EAAS,IAAIgJ,EAAK,EAAG,GACzB,IAAK4I,EACD,KAAM,GAEV,IAAI1T,EAAI0T,EAAKP,gBAAgBC,SAC7B,IAAIq9B,EAAazwC,EAAEiI,MACnB,IAAIyoC,EAAc1wC,EAAEgI,OACpB,GAAI0L,EAAKM,QAAQpW,SAAW,EACxB,KAAM,+BAGV,IAAI0iB,EAAS5M,EAAKM,QAAQ,GAC1B,GAAIN,EAAK26B,gBAAkB,YACvB36B,EAAK26B,cAAgB/tB,EAAO+tB,cAGhC,GAAItzC,EAAM4C,QAAQ+V,EAAKI,UACnBhS,EAAS,IAAIgJ,EACTlP,KAAKC,IAAI40C,GAAc31C,EAAU,GAAK21C,EACtC70C,KAAKC,IAAI60C,GAAe51C,EAAU,GAAK41C,QAE1C,GAAIh9B,EAAKI,SAASlW,SAAW,EAAG,CACjC,OAAQ8V,EAAK26B,eACT,IAAK,SACDzvC,EAAIe,KAAKkuC,QAAQn6B,EAAKI,SAAS,GAAI08B,GACnC/6B,EAAIg7B,EAAc9wC,KAAKuf,QAAQuoB,iBAAmB7rC,KAAKoH,IAAI0Q,EAAKi9B,eAAkB/xC,EAAEqJ,MACpF5D,EAAIqsC,EAAc90C,KAAKC,IAAI8D,KAAKuf,QAAQuoB,iBAAmB7rC,KAAKwS,IAAIsF,EAAKi9B,gBAAkB/xC,EAAEoJ,OAC7F,MACJ,IAAK,OACL,IAAK,QACD,OAAQ0L,EAAK68B,gBAET,IAAK,uBACD,MAEJ,IAAK,0BACD,MAEJ,IAAK,aACD3xC,EAAIe,KAAKkuC,QAAQn6B,EAAKI,SAAS,GAAI08B,GACnC/6B,EAAIg7B,EAAa7xC,EAAEqJ,MAAQtI,KAAKuf,QAAQ4nB,2BACxCziC,EAAIqsC,EAAc/wC,KAAKuf,QAAQ2nB,4BAA8BjoC,EAAEoJ,OAC/D,MAEJ,IAAK,UACDpJ,EAAIe,KAAKkuC,QAAQn6B,EAAKI,SAAS,GAAI08B,GACnC/6B,EAAIg7B,EAAa9wC,KAAKuf,QAAQynB,qBAAuB/nC,EAAEqJ,MACvD5D,EAAIzI,KAAKiJ,IAAI6rC,EAAa9xC,EAAEoJ,QAC5B,MAEJ,QACI,KAAM,0DAEd,MACJ,IAAK,KACL,IAAK,OACD,OAAQ0L,EAAK68B,gBAET,IAAK,uBACL,IAAK,0BACD,MAEJ,IAAK,aACD3xC,EAAIe,KAAKkuC,QAAQn6B,EAAKI,SAAS,GAAI08B,GACnC/6B,EAAI7Z,KAAKiJ,IAAI4rC,EAAY7xC,EAAEqJ,MAAQtI,KAAKuf,QAAQ4nB,4BAChDziC,EAAIqsC,EAAc/wC,KAAKuf,QAAQ2nB,4BAA8BjoC,EAAEoJ,OAC/D,MAEJ,IAAK,UACDpJ,EAAIe,KAAKkuC,QAAQn6B,EAAKI,SAAS,GAAI08B,GACnCnsC,EAAIqsC,EAAc/wC,KAAKuf,QAAQ0nB,mBAAqBhoC,EAAEoJ,OACtDyN,EAAI7Z,KAAKiJ,IAAI4rC,EAAY7xC,EAAEqJ,OAC3B,MAEJ,QACI,KAAM,wDAEd,MACJ,QACI,KAAM,mDAGdnG,EAAS,IAAIgJ,EAAK2K,EAAGpR,OAEpB,CACD,IAAI9I,EAAGu0C,EACP,OAAQp8B,EAAK26B,eACT,IAAK,OACL,IAAK,QACD,OAAQ36B,EAAK68B,gBAET,IAAK,uBACL,IAAK,0BACD,MAEJ,IAAK,aACD96B,EAAIg7B,EACJpsC,EAAIqsC,EAAc/wC,KAAKuf,QAAQ2nB,4BAC/B,IAAKtrC,EAAI,EAAGA,EAAImY,EAAKI,SAASlW,OAAQrC,IAAK,CACvCu0C,EAAYp8B,EAAKI,SAASvY,GAC1BqD,EAAIe,KAAKkuC,QAAQiC,EAAWU,GAC5B/6B,EAAI7Z,KAAKiJ,IAAI4Q,EAAG7W,EAAEqJ,MAAQtI,KAAKuf,QAAQ4nB,4BACvCziC,GAAKzF,EAAEoJ,OAASrI,KAAKuf,QAAQ6nB,6BAGjC1iC,GAAK1E,KAAKuf,QAAQ6nB,6BAClB,MAEJ,IAAK,UACDtxB,EAAIg7B,EACJpsC,EAAI,EACJ,IAAK9I,EAAI,EAAGA,EAAImY,EAAKI,SAASlW,OAAQrC,IAAK,CACvCu0C,EAAYp8B,EAAKI,SAASvY,GAC1BqD,EAAIe,KAAKkuC,QAAQiC,EAAWU,GAC5B/6B,EAAI7Z,KAAKiJ,IAAI4Q,EAAGg7B,EAAa9wC,KAAKuf,QAAQynB,qBAAuB/nC,EAAEqJ,OACnE5D,GAAKzF,EAAEoJ,OAASrI,KAAKuf,QAAQ0nB,mBAEjCviC,GAAK1E,KAAKuf,QAAQ0nB,mBAClB,MAEJ,QACI,KAAM,yDAGd,MACJ,IAAK,KACL,IAAK,OAED,OAAQlzB,EAAK68B,gBAET,IAAK,uBACL,IAAK,0BACD,MAEJ,IAAK,aACD96B,EAAIg7B,EACJpsC,EAAIqsC,EAAc/wC,KAAKuf,QAAQ2nB,4BAC/B,IAAKtrC,EAAI,EAAGA,EAAImY,EAAKI,SAASlW,OAAQrC,IAAK,CACvCu0C,EAAYp8B,EAAKI,SAASvY,GAC1BqD,EAAIe,KAAKkuC,QAAQiC,EAAWU,GAC5B/6B,EAAI7Z,KAAKiJ,IAAI4Q,EAAG7W,EAAEqJ,MAAQtI,KAAKuf,QAAQ4nB,4BACvCziC,GAAKzF,EAAEoJ,OAASrI,KAAKuf,QAAQ6nB,6BAGjC1iC,GAAK1E,KAAKuf,QAAQ6nB,6BAClB,MAEJ,IAAK,UACDtxB,EAAI,EACJpR,EAAI,EACJ,IAAK9I,EAAI,EAAGA,EAAImY,EAAKI,SAASlW,OAAQrC,IAAK,CACvCu0C,EAAYp8B,EAAKI,SAASvY,GAC1BqD,EAAIe,KAAKkuC,QAAQiC,EAAWU,GAC5B/6B,GAAK7W,EAAEqJ,MAAQtI,KAAKuf,QAAQynB,qBAC5BtiC,EAAIzI,KAAKiJ,IAAIR,EAAGzF,EAAEoJ,OAASrI,KAAKuf,QAAQ0nB,mBAAqB8J,GAGjEj7B,GAAK9V,KAAKuf,QAAQynB,qBAClB,MAEJ,QACI,KAAM,wDAGd,MACJ,QACI,KAAM,mDAGd7kC,EAAS,IAAIgJ,EAAK2K,EAAGpR,GAGzBqP,EAAKk9B,YAAch1C,KAAKuE,KAAMsV,EAAIA,EAAI,EAAMpR,EAAIA,EAAI,GACpDqP,EAAK5I,KAAOhJ,EACZ,OAAOA,GAEXisC,QAAS,SAAUrrC,EAAGjE,GAClB,IAAIlD,EAAGs1C,EAAIl6B,EAAOjD,EAAMo9B,EAAe9wC,EAAI0C,EAAEyQ,gBAAgBC,SAC7D,IAAIq9B,EAAazwC,EAAEiI,MACnB,IAAIyoC,EAAc1wC,EAAEgI,OACpB,GAAIjN,EAAM4C,QAAQ+E,EAAEoR,UAAW,CAC3BpR,EAAEhH,EAAI+C,EAAE/C,EACRgH,EAAEvG,EAAIsC,EAAEtC,EACRuG,EAAEwtC,kBAAoB,IAAIxoC,EAAKjJ,EAAE/C,EAAG+C,EAAEtC,EAAGs0C,EAAYC,OAEpD,CACD,IAAIh1C,EAAGS,EACP,IAAI40C,EACJ,OAAQruC,EAAE2rC,eACN,IAAK,OACD,OAAQ3rC,EAAE6tC,gBACN,IAAK,uBACL,IAAK,0BACD,MAEJ,IAAK,aACDQ,EAAetyC,EACfiE,EAAEhH,EAAIq1C,EAAar1C,EACnBgH,EAAEvG,EAAI40C,EAAa50C,EACnBuG,EAAEwtC,kBAAoB,IAAIxoC,EAAKhF,EAAEhH,EAAGgH,EAAEvG,EAAGuG,EAAEuF,MAAOvF,EAAEsF,QACpD7L,EAAIsC,EAAEtC,EAAIu0C,EAAc/wC,KAAKuf,QAAQ2nB,4BACrC,IAAKtrC,EAAI,EAAGA,EAAImY,EAAKI,SAASlW,OAAQrC,IAAK,CACvCmY,EAAOA,EAAKI,SAASvY,GACrBG,EAAIq1C,EAAar1C,EAAIgY,EAAKP,gBAAgBlL,MAAQtI,KAAKuf,QAAQ4nB,2BAC/D+J,EAAK,IAAI9xC,EAAMrD,EAAGS,GAClBwD,KAAKouC,QAAQr6B,EAAMm9B,GACnB10C,GAAKuX,EAAK5I,KAAK9C,OAASrI,KAAKuf,QAAQ6nB,6BAEzC,MAEJ,IAAK,UACDgK,EAAe,IAAIhyC,EAAMN,EAAE/C,EAAIgH,EAAEoI,KAAK7C,MAAQwoC,EAAYhyC,EAAEtC,GAAMuG,EAAEoI,KAAK9C,OAAS0oC,GAAe,GACjGhuC,EAAEhH,EAAIq1C,EAAar1C,EACnBgH,EAAEvG,EAAI40C,EAAa50C,EACnBuG,EAAEwtC,kBAAoB,IAAIxoC,EAAKhF,EAAEhH,EAAGgH,EAAEvG,EAAGuG,EAAEuF,MAAOvF,EAAEsF,QACpDtM,EAAIq1C,EAAar1C,EAAIiE,KAAKuf,QAAQynB,qBAClCxqC,EAAIsC,EAAEtC,EACN,IAAKZ,EAAI,EAAGA,EAAImH,EAAEoR,SAASlW,OAAQrC,IAAK,CACpCmY,EAAOhR,EAAEoR,SAASvY,GAClBs1C,EAAK,IAAI9xC,EAAMrD,EAAIgY,EAAK5I,KAAK7C,MAAO9L,GACpCwD,KAAKouC,QAAQr6B,EAAMm9B,GACnB10C,GAAKuX,EAAK5I,KAAK9C,OAASrI,KAAKuf,QAAQ0nB,mBAEzC,MAEJ,QACI,KAAQ,4BAGhB,MACJ,IAAK,QACD,OAAQlkC,EAAE6tC,gBACN,IAAK,uBACL,IAAK,0BACD,MAEJ,IAAK,aACDQ,EAAetyC,EACfiE,EAAEhH,EAAIq1C,EAAar1C,EACnBgH,EAAEvG,EAAI40C,EAAa50C,EACnBuG,EAAEwtC,kBAAoB,IAAIxoC,EAAKhF,EAAEhH,EAAGgH,EAAEvG,EAAGuG,EAAEuF,MAAOvF,EAAEsF,QACpDtM,EAAI+C,EAAE/C,EAAI+0C,EAAa9wC,KAAKuf,QAAQ4nB,2BAGpC3qC,EAAIsC,EAAEtC,EAAIu0C,EAAc/wC,KAAKuf,QAAQ2nB,4BACrC,IAAKtrC,EAAI,EAAGA,EAAImH,EAAEoR,SAASlW,OAAQrC,IAAK,CACpCmY,EAAOhR,EAAEoR,SAASvY,GAClBs1C,EAAK,IAAI9xC,EAAMrD,EAAGS,GAClBwD,KAAKouC,QAAQr6B,EAAMm9B,GACnB10C,GAAKuX,EAAK5I,KAAK9C,OAASrI,KAAKuf,QAAQ6nB,6BAGzC,MAEJ,IAAK,UACDgK,EAAe,IAAIhyC,EAAMN,EAAE/C,EAAG+C,EAAEtC,GAAMuG,EAAEoI,KAAK9C,OAAS0oC,GAAe,GACrEhuC,EAAEhH,EAAIq1C,EAAar1C,EACnBgH,EAAEvG,EAAI40C,EAAa50C,EACnBuG,EAAEwtC,kBAAoB,IAAIxoC,EAAKhF,EAAEhH,EAAGgH,EAAEvG,EAAGuG,EAAEuF,MAAOvF,EAAEsF,QACpDtM,EAAI+C,EAAE/C,EAAI+0C,EAAa9wC,KAAKuf,QAAQynB,qBACpCxqC,EAAIsC,EAAEtC,EACN,IAAKZ,EAAI,EAAGA,EAAImH,EAAEoR,SAASlW,OAAQrC,IAAK,CACpCmY,EAAOhR,EAAEoR,SAASvY,GAClBs1C,EAAK,IAAI9xC,EAAMrD,EAAGS,GAClBwD,KAAKouC,QAAQr6B,EAAMm9B,GACnB10C,GAAKuX,EAAK5I,KAAK9C,OAASrI,KAAKuf,QAAQ0nB,mBAEzC,MAEJ,QACI,KAAQ,4BAGhB,MACJ,IAAK,KACDmK,EAAe,IAAIhyC,EAAMN,EAAE/C,GAAMgH,EAAEoI,KAAK7C,MAAQwoC,GAAc,EAAIhyC,EAAEtC,EAAIuG,EAAEoI,KAAK9C,OAAS0oC,GACxFhuC,EAAEhH,EAAIq1C,EAAar1C,EACnBgH,EAAEvG,EAAI40C,EAAa50C,EACnBuG,EAAEwtC,kBAAoB,IAAIxoC,EAAKhF,EAAEhH,EAAGgH,EAAEvG,EAAGuG,EAAEuF,MAAOvF,EAAEsF,QACpD,GAAIpM,KAAKC,IAAIk1C,EAAar1C,EAAI+C,EAAE/C,GAAKZ,EAAS,CAC1Cg2C,EAAgB,EAEhB,IAAKv1C,EAAI,EAAGA,EAAImH,EAAEoR,SAASlW,OAAQrC,IAAK,CACpCob,EAAQjU,EAAEoR,SAASvY,GACnBu1C,GAAiBn6B,EAAM7L,KAAK7C,MAAQtI,KAAKuf,QAAQynB,qBAErDmK,GAAiBnxC,KAAKuf,QAAQynB,qBAC9BjrC,EAAI+C,EAAE/C,GAAM+0C,EAAaK,GAAiB,OAG1Cp1C,EAAI+C,EAAE/C,EAGV,IAAKH,EAAI,EAAGA,EAAImH,EAAEoR,SAASlW,OAAQrC,IAAK,CACpCmY,EAAOhR,EAAEoR,SAASvY,GAClBY,EAAI40C,EAAa50C,EAAIwD,KAAKuf,QAAQ0nB,mBAAqBlzB,EAAK5I,KAAK9C,OACjE6oC,EAAK,IAAI9xC,EAAMrD,EAAGS,GAClBwD,KAAKouC,QAAQr6B,EAAMm9B,GACnBn1C,GAAKgY,EAAK5I,KAAK7C,MAAQtI,KAAKuf,QAAQynB,qBAExC,MAEJ,IAAK,OAED,OAAQjkC,EAAE6tC,gBACN,IAAK,uBACL,IAAK,0BACD,MACJ,IAAK,aACDQ,EAAetyC,EACfiE,EAAEhH,EAAIq1C,EAAar1C,EACnBgH,EAAEvG,EAAI40C,EAAa50C,EACnBuG,EAAEwtC,kBAAoB,IAAIxoC,EAAKhF,EAAEhH,EAAGgH,EAAEvG,EAAGuG,EAAEuF,MAAOvF,EAAEsF,QACpDtM,EAAI+C,EAAE/C,EAAIiE,KAAKuf,QAAQ4nB,2BACvB3qC,EAAIsC,EAAEtC,EAAIu0C,EAAc/wC,KAAKuf,QAAQ2nB,4BACrC,IAAKtrC,EAAI,EAAGA,EAAImH,EAAEoR,SAASlW,OAAQrC,IAAK,CACpCmY,EAAOhR,EAAEoR,SAASvY,GAClBs1C,EAAK,IAAI9xC,EAAMrD,EAAGS,GAClBwD,KAAKouC,QAAQr6B,EAAMm9B,GACnB10C,GAAKuX,EAAK5I,KAAK9C,OAASrI,KAAKuf,QAAQ6nB,6BAEzC,MAEJ,IAAQ,UACJgK,EAAe,IAAIhyC,EAAMN,EAAE/C,GAAMgH,EAAEoI,KAAK7C,MAAQwoC,GAAc,EAAIhyC,EAAEtC,GACpEuG,EAAEhH,EAAIq1C,EAAar1C,EACnBgH,EAAEvG,EAAI40C,EAAa50C,EACnBuG,EAAEwtC,kBAAoB,IAAIxoC,EAAKhF,EAAEhH,EAAGgH,EAAEvG,EAAGuG,EAAEuF,MAAOvF,EAAEsF,QACpD,GAAIpM,KAAKC,IAAIk1C,EAAar1C,EAAI+C,EAAE/C,GAAKZ,EAAS,CAC1Cg2C,EAAgB,EAEhB,IAAKv1C,EAAI,EAAGA,EAAImH,EAAEoR,SAASlW,OAAQrC,IAAK,CACpCob,EAAQjU,EAAEoR,SAASvY,GACnBu1C,GAAiBn6B,EAAM7L,KAAK7C,MAAQtI,KAAKuf,QAAQynB,qBAGrDmK,GAAiBnxC,KAAKuf,QAAQynB,qBAC9BjrC,EAAI+C,EAAE/C,GAAM+0C,EAAaK,GAAiB,OAG1Cp1C,EAAI+C,EAAE/C,EAGV,IAAKH,EAAI,EAAGA,EAAImH,EAAEoR,SAASlW,OAAQrC,IAAK,CACpCmY,EAAOhR,EAAEoR,SAASvY,GAClBY,EAAI40C,EAAa50C,EAAIwD,KAAKuf,QAAQ0nB,mBAAqB8J,EACvDG,EAAK,IAAI9xC,EAAMrD,EAAGS,GAClBwD,KAAKouC,QAAQr6B,EAAMm9B,GACnBn1C,GAAKgY,EAAK5I,KAAK7C,MAAQtI,KAAKuf,QAAQynB,qBAExC,MAEJ,QACI,KAAQ,4BAEhB,MAEJ,IAAK,OACD,MAEJ,QACI,KAAQ,+BAIxB6G,aAAc,WACV,IAAK7tC,KAAKc,OACN,OAGJ,GAAI1F,EAAM4C,QAAQgC,KAAKc,OAAOqT,UAC1B,OAGJ,IAAIxW,EAAOqC,KAAKuf,QAAQqnB,QACxB,GAAIxrC,EAAM2B,YAAYY,GAClBA,EAAO,OAEX,IAAI0zC,EAAQC,EAAMC,EAAQC,EAC1B,IAAIr9B,EAAWnU,KAAKc,OAAOqT,SAC3B,OAAQxW,EAAKqP,eACT,IAAK,SACL,IAAK,aACDhN,KAAK2uC,mBACL,MAEJ,IAAK,oBACL,IAAK,UACD0C,EAASrxC,KAAKc,OAAOqT,SAErB,GAAInU,KAAKc,OAAOqT,SAASlW,SAAW,EAChC+B,KAAKquC,YAAYgD,OAEhB,CAEDG,EAAYr9B,EAASlW,OAAS,EAC9BqzC,EAAO7sC,EAAKzE,KAAKc,OAAOqT,SAAU,SAAUpR,GACxC,OAAO3H,EAAMoG,QAAQ2S,EAAUpR,GAAKyuC,IAExCD,EAAS9sC,EAAKzE,KAAKc,OAAOqT,SAAU,SAAUpR,GAC1C,OAAO3H,EAAMoG,QAAQ2S,EAAUpR,IAAMyuC,IAGzCxxC,KAAK8tC,WAAWwD,GAChBtxC,KAAKquC,YAAYkD,GAErB,MAEJ,IAAK,kBACDF,EAASrxC,KAAKc,OAAOqT,SAErB,GAAInU,KAAKc,OAAOqT,SAASlW,SAAW,EAChC+B,KAAKwuC,WAAW6C,OAEf,CAEDG,EAAYr9B,EAASlW,OAAS,EAC9BqzC,EAAO7sC,EAAKzE,KAAKc,OAAOqT,SAAU,SAAUpR,GACxC,OAAO3H,EAAMoG,QAAQ2S,EAAUpR,GAAKyuC,IAExCD,EAAS9sC,EAAKzE,KAAKc,OAAOqT,SAAU,SAAUpR,GAC1C,OAAO3H,EAAMoG,QAAQ2S,EAAUpR,IAAMyuC,IAEzCxxC,KAAKsuC,SAASgD,GACdtxC,KAAKwuC,WAAW+C,GAEpB,MAEJ,IAAK,QACDvxC,KAAKquC,YAAYruC,KAAKc,OAAOqT,UAC7B,MAEJ,IAAK,OACDnU,KAAK8tC,WAAW9tC,KAAKc,OAAOqT,UAC5B,MAEJ,IAAK,KACL,IAAK,SACDnU,KAAKsuC,SAAStuC,KAAKc,OAAOqT,UAC1B,MAEJ,IAAK,OACL,IAAK,MACDnU,KAAKwuC,WAAWxuC,KAAKc,OAAOqT,UAC5B,MAEJ,IAAK,UACL,IAAK,cACD,GAAInU,KAAKuf,QAAQkyB,sBAAwB,EACrC,KAAO,mDAEXzxC,KAAKmvC,YAAYnvC,KAAKc,OAAOqT,SAAUnU,KAAKuf,QAAQkyB,uBACpD,MAEJ,IAAK,YACL,IAAK,OACD,UASZC,EAAahL,EAAWljC,OAAO,CAC/BC,KAAM,SAAU3I,GACZ,IAAIkX,EAAOhS,KACX0mC,EAAW9/B,GAAGnD,KAAKpG,KAAK2U,GACxB,GAAI5W,EAAM2B,YAAYjC,GAClB,KAAM,wBAEVkF,KAAKlF,QAAUA,GAMnB64B,OAAQ,SAAUpU,GAEdvf,KAAKqpC,gBAAgB9pB,GAGrB,IAAIysB,EAAU,IAAI1C,EAA0BtpC,KAAKlF,SAMjDkF,KAAKyX,MAAQu0B,EAAQ/B,UAErB,IAAIgC,EAAejsC,KAAK2xC,mBAIxB,OAAO,IAAI72C,EAAQoxC,YAAYlsC,KAAKlF,QAASmxC,IAGjD0F,iBAAkB,WACd,GAAI3xC,KAAKyX,MAAMzZ,UACX,OAIJ,IAAIwZ,EAAaxX,KAAKyX,MAAMN,yBAC5B,GAAI/b,EAAM4C,QAAQwZ,GACd,OAGJ,IAAImc,EAAS,IAAIga,EAAoB3tC,KAAKuf,SAC1C,IAAIlB,EAAQ,GAEZ,IAAK,IAAIziB,EAAI,EAAGA,EAAI4b,EAAWvZ,OAAQrC,IAAK,CACxC,IAAI6f,EAAYjE,EAAW5b,GAE3B,IAAIgyC,EAAY5tC,KAAK4xC,QAAQn2B,GAC7B,IAAKmyB,EACD,KAAM,oDAEV,IAAI32B,EAAO22B,EAAU32B,KACrB,IAAIe,EAAO41B,EAAU51B,KACrB2b,EAAOA,OAAO3b,EAAMf,GAEpBoH,EAAMliB,KAAK6b,GAGf,OAAOhY,KAAKqoC,qBAAqBhqB,IAUrCuzB,QAAS,SAAUn6B,GACf,IAAIR,EAAO,KACX,GAAIjX,KAAKuf,QAAQsnB,OAAS7mC,KAAKuf,QAAQsnB,MAAM5oC,OAAS,EAClD,IAAK,IAAIrC,EAAI,EAAG8L,EAAM+P,EAAMnB,MAAMrY,OAAQrC,EAAI8L,EAAK9L,IAAK,CACpD,IAAImY,EAAO0D,EAAMnB,MAAM1a,GACvB,IAAK,IAAIC,EAAI,EAAGA,EAAImE,KAAKuf,QAAQsnB,MAAM5oC,OAAQpC,IAAK,CAChD,IAAIg2C,EAAiB7xC,KAAKuf,QAAQsnB,MAAMhrC,GACxC,GAAIg2C,IAAmB99B,EAAKP,gBAAiB,CACzCyD,EAAOlD,EACP,QAKhB,IAAKkD,EAAM,CAEPA,EAAOQ,EAAMR,OAEb,IAAKA,EACD,KAAM,sCAGd,OAAOjX,KAAK8xC,eAAer6B,EAAOR,IAGtC66B,eAAgB,SAAUr6B,EAAOR,GAE7B,IAAIe,EAAOP,EAAMM,gBAAgBd,GACjC,GAAI7b,EAAM2B,YAAYib,IAASA,EAAKha,UAChC,OAAO,KAEX,MAAO,CACHga,KAAMA,EACNf,KAAMe,EAAKf,SAUnB86B,EAAgBrL,EAAWljC,OAAO,CAClCC,KAAM,SAAU3I,GACZ,IAAIkX,EAAOhS,KACX0mC,EAAW9/B,GAAGnD,KAAKpG,KAAK2U,GACxB,GAAI5W,EAAM2B,YAAYjC,GAClB,KAAM,4BAEVkF,KAAKlF,QAAUA,GAGnB64B,OAAQ,SAAUpU,GAEdvf,KAAKqpC,gBAAgB9pB,GAErB,IAAIysB,EAAU,IAAI1C,EAA0BtpC,KAAKlF,SACjD,IAAI2c,EAAQu0B,EAAQ/B,QAAQ1qB,GAC5B,GAAI9H,EAAMzZ,UACN,OAGJ,IAAIwZ,EAAaC,EAAMN,yBACvB,GAAI/b,EAAM4C,QAAQwZ,GACd,OAEJ,IAAK,IAAI5b,EAAI,EAAGA,EAAI4b,EAAWvZ,OAAQrC,IAAK,CACxC,IAAI6f,EAAYjE,EAAW5b,GAC3BoE,KAAKqgB,YAAY5E,EAAW8D,GAEhC,IAAI0sB,EAAejsC,KAAKqoC,qBAAqB7wB,GAC7C,OAAO,IAAI1c,EAAQoxC,YAAYlsC,KAAKlF,QAASmxC,IAQjD+F,uBAAwB,WACpB,IAAK,IAAIh2C,EAAI,EAAGA,EAAIgE,KAAKyX,MAAMnB,MAAMrY,OAAQjC,IAAK,CAC9C,IAAI+X,EAAO/T,KAAKyX,MAAMnB,MAAMta,GAC5B+X,EAAKk+B,OAAS,EACdl+B,EAAKm+B,oBAAsB,EAC3Bn+B,EAAKo+B,kBAAoB,EAEzBp+B,EAAKH,UAAY,MAEjBG,EAAKq+B,YAAc,EACnBr+B,EAAKs+B,YAAc,EAEnBt+B,EAAKu+B,iBAAmB,EACxBv+B,EAAKw+B,mBAAqB,EAE1Bx+B,EAAKy+B,aAAe,IAG5BC,SAAU,SAAUh7B,GAChB,IAAI5E,EAAU,GAAIjX,EAAGukB,EAAGnM,EAGxB,IAAI0+B,EAAW,IAAI7gC,EACnB,IAAI8gC,EAAa,EACjB,IAAIC,EAAajgC,EAAMhP,EAEvBvI,EAAM2F,QAAQ0W,EAAMnB,MAAO,SAAUvC,GACjC,GAAIA,EAAKT,SAASrV,SAAW,EAAG,CAC5By0C,EAAS5hC,IAAIiD,EAAM,GACnBlB,EAAQ1W,KAAK4X,MAIrB,MAAOlB,EAAQ5U,OAAS,EAAG,CACvB0U,EAAOE,EAAQggC,QACf,IAAKj3C,EAAI,EAAGA,EAAI+W,EAAKU,SAASpV,OAAQrC,IAAK,CACvCoY,EAAOrB,EAAKU,SAASzX,GACrB+H,EAASqQ,EAAKrQ,OAEd,GAAI+uC,EAAS3hC,YAAYpN,GACrBivC,EAAc32C,KAAKiJ,IAAIwtC,EAAS9hC,IAAI+B,GAAQ,EAAG+/B,EAAS9hC,IAAIjN,SAE5DivC,EAAcF,EAAS9hC,IAAI+B,GAAQ,EAEvC+/B,EAAS5hC,IAAInN,EAAQivC,GACrB,GAAIA,EAAcD,EACdA,EAAaC,EAGjB,IAAKlxC,EAASmR,EAASlP,GACnBkP,EAAQ1W,KAAKwH,IAKzB,IAAImvC,EAAcJ,EAASpgC,OAE3BwgC,EAAYhwC,KAAK,SAAUoF,EAAI6qC,GAC3B,IAAIC,EAAUN,EAAS9hC,IAAI1I,GAC3B,IAAI+qC,EAAUP,EAAS9hC,IAAImiC,GAC3B,OAAO33C,EAAMK,KAAKw3C,EAAUD,KAGhC,IAAK,IAAIjwC,EAAI,EAAGA,EAAI+vC,EAAY70C,SAAU8E,EAAG,CACzC,IAAIgR,EAAO++B,EAAY/vC,GACvB,IAAImwC,EAAW9iC,OAAOC,UAEtB,GAAI0D,EAAKV,SAASpV,SAAW,EACzB,SAGJ,IAAKkiB,EAAI,EAAGA,EAAIpM,EAAKV,SAASpV,SAAUkiB,EAAG,CACvCnM,EAAOD,EAAKV,SAAS8M,GACrB+yB,EAAWj3C,KAAKkJ,IAAI+tC,EAAUR,EAAS9hC,IAAIoD,EAAKrQ,SAGpD,GAAIuvC,EAAW,EACXR,EAAS5hC,IAAIiD,EAAMm/B,EAAW,GAItClzC,KAAKmzC,OAAS,GACd,IAAIlB,EACJ,IAAKr2C,EAAI,EAAGA,EAAI+2C,EAAa,EAAG/2C,IAAK,CACjCq2C,EAAQ,GACRA,EAAMmB,QAAU,GAChBpzC,KAAKmzC,OAAOh3C,KAAK81C,GAGrBS,EAAS3xC,QAAQ,SAAUgT,EAAMk+B,GAC7Bl+B,EAAKk+B,MAAQA,EACbjyC,KAAKmzC,OAAOlB,GAAO91C,KAAK4X,IACzB/T,MAGH,IAAKmgB,EAAI,EAAGA,EAAIngB,KAAKmzC,OAAOl1C,OAAQkiB,IAAK,CACrC8xB,EAAQjyC,KAAKmzC,OAAOhzB,GACpB,IAAKvkB,EAAI,EAAGA,EAAIq2C,EAAMh0C,OAAQrC,IAC1Bq2C,EAAMr2C,GAAG42C,aAAe52C,IAOpCykB,YAAa,SAAU5I,EAAO8H,GAC1B,GAAInkB,EAAM2B,YAAY0a,GAClB,KAAM,0DAEV,GAAIrc,EAAMyB,UAAU0iB,GAChBvf,KAAKqpC,gBAAgB9pB,GAEzBvf,KAAKyX,MAAQA,EAGbA,EAAMJ,iBAGN,IAAIoG,EAAgBhG,EAAMuE,cAG1Bhc,KAAKgyC,yBAELhyC,KAAKyyC,SAASh7B,EAAO8H,GAErBvf,KAAKqzC,WAELrzC,KAAKszC,qBAELtzC,KAAKuzC,aAELvzC,KAAKwzC,eAELxzC,KAAKyzC,oBAELzzC,KAAK0zC,aAGLt4C,EAAM2F,QAAQ0c,EAAe,SAAU3P,GACnC,GAAIA,EAAElP,OACFkP,EAAElP,OAAOgH,aAKrB+tC,WAAY,SAAUzzC,EAAG6C,EAAG6wC,GACxB,IAAIzzB,EAAIjgB,EAAE+xC,MACV,IAAIr2C,EAAIsE,EAAE2zC,WACV7zC,KAAK8zC,aAAa3zB,GAAGvkB,GAAKg4C,GAG9BG,WAAY,SAAU7zC,EAAG6C,GACrB,IAAIixC,EAAO,EACPC,EAAK/zC,EAAE2zC,WACPK,EAAKnxC,EAAE8wC,WACP1zB,EAAIjgB,EAAE+xC,MACN9sC,EAAMlJ,KAAKkJ,IAAI8uC,EAAIC,GACnBhvC,EAAMjJ,KAAKiJ,IAAI+uC,EAAIC,GAEvB,IAAK,IAAIl4C,EAAImJ,EAAKnJ,EAAIkJ,IAAOlJ,EACzBg4C,GAAQh0C,KAAK8zC,aAAa3zB,GAAGnkB,GAEjC,OAAOg4C,GAGXG,iBAAkB,SAAUC,GACxB,IAAIC,EAAU,IAAIxiC,EAAc9O,EAAGgR,EACnC,IAAK,IAAIrT,EAAI,EAAGA,EAAIV,KAAKmzC,OAAOl1C,SAAUyC,EAAG,CACzC,IAAI4zC,EAAaF,EAAY1zC,GAC7B,IAAK4zC,EACD,SAGJ,IAAKvxC,EAAI,EAAGA,EAAIuxC,EAAWr2C,OAAQ8E,IAAK,CACpCgR,EAAOugC,EAAWvxC,GAClB,IAAKsxC,EAAQtjC,YAAYgD,GACrB/T,KAAKu0C,UAAUxgC,EAAMsgC,EAAS3zC,GAKtC,IAAIP,EAAIiQ,OAAOokC,kBACf,IAAKzxC,EAAI,EAAGA,EAAIuxC,EAAWr2C,OAAQ8E,IAAK,CACpCgR,EAAOugC,EAAWvxC,GAClB,IAAI0xC,EAAez0C,KAAKy0C,aAAa1gC,GACrC,GAAI0gC,GAAgBz0C,KAAK00C,cAAc9jC,IAAI6jC,KAAkB/zC,EACzDP,EAAIlE,KAAKkJ,IAAIhF,EAAGk0C,EAAQzjC,IAAI6jC,GAAgBJ,EAAQzjC,IAAImD,GAAQ/T,KAAK+zC,WAAWhgC,EAAM0gC,IAG9F,GAAIt0C,IAAMiQ,OAAOokC,kBAAmB,CAChC,IAAIG,EAAI,GACR,IAAK5xC,EAAI,EAAGA,EAAIuxC,EAAWr2C,OAAQ8E,IAAK,CACpCgR,EAAOugC,EAAWvxC,GAClB,IAAIiS,EAAY,GAChB5Z,EAAM4H,SAASgS,EAAWhV,KAAK40C,QAAQhkC,IAAImD,IAC3C3Y,EAAM4H,SAASgS,EAAWhV,KAAK60C,UAAUjkC,IAAImD,IAE7C,IAAK,IAAIjG,EAAI,EAAGA,EAAIkH,EAAU/W,OAAQ6P,IAAK,CACvC,IAAIgnC,EAAW9/B,EAAUlH,GACzB,GAAI9N,KAAK00C,cAAc9jC,IAAIkkC,GAAYp0C,EACnCi0C,EAAEx4C,KAAKk4C,EAAQzjC,IAAIkkC,GAAYT,EAAQzjC,IAAImD,KAIvD4gC,EAAE7xC,OACF,GAAI6xC,EAAE12C,SAAW,EACbkC,EAAI,OAEH,GAAIw0C,EAAE12C,OAAS,IAAM,EACtBkC,EAAIw0C,EAAE30C,KAAK+0C,OAAOJ,EAAE12C,OAAQ,SAG5BkC,GAAKw0C,EAAE30C,KAAK+0C,OAAOJ,EAAE12C,OAAQ,GAAK,GAAK02C,EAAE30C,KAAK+0C,OAAOJ,EAAE12C,OAAQ,KAAO,EAG9E,IAAK8E,EAAI,EAAGA,EAAIuxC,EAAWr2C,OAAQ8E,IAAK,CACpCgR,EAAOugC,EAAWvxC,GAClBsxC,EAAQvjC,IAAIiD,EAAMsgC,EAAQzjC,IAAImD,GAAQ5T,IAG9C,OAAOk0C,GAGXW,iBAAkB,SAAUC,GACxB,IAAIC,EAAW,IAAIrjC,EAAc9O,EAAGgR,EACpC,IAAK,IAAIrT,EAAI,EAAGA,EAAIV,KAAKmzC,OAAOl1C,SAAUyC,EAAG,CACzC,IAAI4zC,EAAaW,EAAav0C,GAC9B,IAAK4zC,EACD,SAGJ,IAAKvxC,EAAI,EAAGA,EAAIuxC,EAAWr2C,OAAQ8E,IAAK,CACpCgR,EAAOugC,EAAWvxC,GAClB,IAAKmyC,EAASnkC,YAAYgD,GACtB/T,KAAKm1C,WAAWphC,EAAMmhC,EAAUx0C,GAKxC,IAAIP,EAAIiQ,OAAOglC,kBACf,IAAKryC,EAAI,EAAGA,EAAIuxC,EAAWr2C,OAAQ8E,IAAK,CACpCgR,EAAOugC,EAAWvxC,GAClB,IAAIsyC,EAAcr1C,KAAKq1C,YAAYthC,GACnC,GAAIshC,GAAer1C,KAAKs1C,eAAe1kC,IAAIykC,KAAiB30C,EACxDP,EAAIlE,KAAKiJ,IAAI/E,EAAG+0C,EAAStkC,IAAIykC,GAAeH,EAAStkC,IAAImD,GAAQ/T,KAAK+zC,WAAWsB,EAAathC,IAGtG,GAAI5T,IAAMiQ,OAAOglC,kBAAmB,CAChC,IAAIT,EAAI,GACR,IAAK5xC,EAAI,EAAGA,EAAIuxC,EAAWr2C,OAAQ8E,IAAK,CACpCgR,EAAOugC,EAAWvxC,GAClB,IAAIiS,EAAY,GAChB5Z,EAAM4H,SAASgS,EAAWhV,KAAK40C,QAAQhkC,IAAImD,IAC3C3Y,EAAM4H,SAASgS,EAAWhV,KAAK60C,UAAUjkC,IAAImD,IAE7C,IAAK,IAAIjG,EAAI,EAAGA,EAAIkH,EAAU/W,OAAQ6P,IAAK,CACvC,IAAIgnC,EAAW9/B,EAAUlH,GACzB,GAAI9N,KAAKs1C,eAAe1kC,IAAIkkC,GAAYp0C,EACpCi0C,EAAEx4C,KAAK+4C,EAAStkC,IAAImD,GAAQmhC,EAAStkC,IAAIkkC,KAIrDH,EAAE7xC,OACF,GAAI6xC,EAAE12C,SAAW,EACbkC,EAAI,OAEH,GAAIw0C,EAAE12C,OAAS,IAAM,EACtBkC,EAAIw0C,EAAE30C,KAAK+0C,OAAOJ,EAAE12C,OAAQ,SAG5BkC,GAAKw0C,EAAE30C,KAAK+0C,OAAOJ,EAAE12C,OAAQ,GAAK,GAAK02C,EAAE30C,KAAK+0C,OAAOJ,EAAE12C,OAAQ,KAAO,EAG9E,IAAK8E,EAAI,EAAGA,EAAIuxC,EAAWr2C,OAAQ8E,IAAK,CACpCgR,EAAOugC,EAAWvxC,GAClBmyC,EAASpkC,IAAIiD,EAAMmhC,EAAStkC,IAAImD,GAAQ5T,IAGhD,OAAO+0C,GAGXK,aAAc,WACV,IAAIC,EAAW,CAAE/2C,MAAO,MACxB,IAAI0D,EAASnC,KAAKy1C,eAAeD,EAAU,GAC3Cx1C,KAAK00C,cAAgBc,EAAS/2C,MAC9B,OAAO0D,GAGXuzC,cAAe,WACX,IAAIC,EAAY,CAAEl3C,MAAO,MACzB,IAAI0D,EAASnC,KAAKy1C,eAAeE,GAAY,GAC7C31C,KAAKs1C,eAAiBK,EAAUl3C,MAChC,OAAO0D,GAGXszC,eAAgB,SAAUG,EAAUz1C,GAChC,IAAI01C,EAAc,EACdC,EAAOF,EAASn3C,MAAQ,IAAIoT,EAEhC,IAAK,IAAIsO,EAAI,EAAGA,EAAIngB,KAAKmzC,OAAOl1C,SAAUkiB,EAAG,CACzC01B,EAAc11B,EAEd,IAAI8xB,EAAQjyC,KAAKmzC,OAAOhzB,GACxB,IAAK,IAAIpd,EAAI5C,IAAM,EAAI,EAAI8xC,EAAMh0C,OAAS,EAAG,GAAK8E,GAAKA,EAAIkvC,EAAMh0C,OAAQ8E,GAAK5C,EAAG,CAC7E,IAAI4T,EAAOk+B,EAAMlvC,GACjB,IAAK+yC,EAAK/kC,YAAYgD,GAAO,CACzB+hC,EAAKhlC,IAAIiD,EAAM8hC,GACf,GAAI9hC,EAAKH,UAAW,CAChB,IAAImiC,EAAS/1C,KAAKg2C,aAAajiC,GAC/B,IAAK,IAAIyJ,EAAK,EAAGA,EAAKu4B,EAAO93C,OAAQuf,IAAM,CACvC,IAAIy4B,EAAQF,EAAOv4B,GACnBs4B,EAAKhlC,IAAImlC,EAAOJ,UAKxBA,EAAcC,EAAKllC,IAAImD,IAKnC,IAAImiC,EAAQ,GACZ,IAAK,IAAIt6C,EAAI,EAAGA,EAAIoE,KAAKmzC,OAAOl1C,OAAQrC,IACpCs6C,EAAM/5C,KAAK,MAEf25C,EAAK/0C,QAAQ,SAAUgT,EAAMoiC,GACzB,GAAID,EAAMC,KAAgB,KACtBD,EAAMC,GAAc,GAExBD,EAAMC,GAAYh6C,KAAK4X,KAG3B,OAAOmiC,GAEXE,kBAAmB,WACf,OAAOp2C,KAAKuf,QAAQqnB,QAAQ55B,gBAAkB,MAAQhN,KAAKuf,QAAQqnB,QAAQ55B,gBAAkB,QAAUhN,KAAKuf,QAAQqnB,QAAQ55B,gBAAkB,YAGlJqpC,oBAAqB,WACjB,OAAOr2C,KAAKuf,QAAQqnB,QAAQ55B,gBAAkB,SAAWhN,KAAKuf,QAAQqnB,QAAQ55B,gBAAkB,QAAUhN,KAAKuf,QAAQqnB,QAAQ55B,gBAAkB,cAErJspC,oBAAqB,WAEjB,OAAOt2C,KAAKuf,QAAQqnB,QAAQ55B,gBAAkB,SAAWhN,KAAKuf,QAAQqnB,QAAQ55B,gBAAkB,QAEpGymC,kBAAmB,WACf,IAAI73C,EAAGukB,EAAGpM,EAAMk+B,EAAOlvC,EAAG+S,EAE1B,IAAKqK,EAAI,EAAGA,EAAIngB,KAAKmzC,OAAOl1C,SAAUkiB,EAAG,CACrC8xB,EAAQjyC,KAAKmzC,OAAOhzB,GACpB8xB,EAAMnvC,KAAK9C,KAAKu2C,uBAGpBv2C,KAAK8zC,aAAe,GACpB,IAAK3zB,EAAI,EAAGA,EAAIngB,KAAKmzC,OAAOl1C,SAAUkiB,EAAG,CACrC8xB,EAAQjyC,KAAKmzC,OAAOhzB,GACpBngB,KAAK8zC,aAAa3zB,GAAK,GACvB,IAAKpd,EAAI,EAAGA,EAAIkvC,EAAMh0C,SAAU8E,EAAG,CAC/BgR,EAAOk+B,EAAMlvC,GACbgR,EAAK8/B,WAAa9wC,EAClB/C,KAAK8zC,aAAa3zB,GAAGpd,GAAK/C,KAAKuf,QAAQunB,aACvC,GAAI/jC,EAAIkvC,EAAMh0C,OAAS,EACnB,GAAI+B,KAAKo2C,oBACLp2C,KAAK8zC,aAAa3zB,GAAGpd,KAAOgR,EAAKzL,MAAQ2pC,EAAMlvC,EAAI,GAAGuF,OAAS,OAG/DtI,KAAK8zC,aAAa3zB,GAAGpd,KAAOgR,EAAK1L,OAAS4pC,EAAMlvC,EAAI,GAAGsF,QAAU,GAMjFrI,KAAK60C,UAAY,IAAIhjC,EACrB7R,KAAK40C,QAAU,IAAI/iC,EACnBzW,EAAM2F,QAAQf,KAAKyX,MAAMnB,MAAO,SAAUvC,GACtC/T,KAAK60C,UAAU/jC,IAAIiD,EAAM,IACzB/T,KAAK40C,QAAQ9jC,IAAIiD,EAAM,KACxB/T,MACH5E,EAAM2F,QAAQf,KAAKyX,MAAMrE,MAAO,SAAUY,GACtC,IAAItO,EAASsO,EAAK5V,OAClB,IAAIo4C,EAAOxiC,EAAKrQ,OAChB,IAAI8qC,EAAO,KAAMF,EAAK,KACtB,GAAI7oC,EAAOusC,MAAQuE,EAAKvE,MAAO,CAC3BxD,EAAOz6B,EAAK5V,OACZmwC,EAAKv6B,EAAKrQ,WAET,CACD4qC,EAAKv6B,EAAK5V,OACVqwC,EAAOz6B,EAAKrQ,OAEhB3D,KAAK60C,UAAUjkC,IAAI29B,GAAIpyC,KAAKsyC,GAC5BzuC,KAAK40C,QAAQhkC,IAAI69B,GAAMtyC,KAAKoyC,IAC7BvuC,MACHA,KAAK60C,UAAUziC,aAAa,SAAUvQ,GAClCA,EAAKiB,KAAK9C,KAAKu2C,wBAChBv2C,MACHA,KAAK40C,QAAQxiC,aAAa,SAAUvQ,GAChCA,EAAKiB,KAAK9C,KAAKu2C,wBAChBv2C,MAEH,IAAKmgB,EAAI,EAAGA,EAAIngB,KAAKmzC,OAAOl1C,OAAS,IAAKkiB,EAAG,CACzC8xB,EAAQjyC,KAAKmzC,OAAOhzB,GACpB,IAAKrK,EAAI,EAAGA,EAAIm8B,EAAMh0C,OAAS,EAAG6X,IAAK,CACnC,IAAI2gC,EAAcxE,EAAMn8B,GACxB,IAAK2gC,EAAY7iC,UACb,SAGJ,IAAI8iC,EAAW12C,KAAK60C,UAAUjkC,IAAI6lC,GAAa,GAC/C,IAAKC,EAAS9iC,UACV,SAGJ,IAAK7Q,EAAI+S,EAAI,EAAG/S,EAAIkvC,EAAMh0C,SAAU8E,EAAG,CACnCgR,EAAOk+B,EAAMlvC,GACb,IAAKgR,EAAKH,UACN,SAGJ,IAAI+iC,EAAW32C,KAAK60C,UAAUjkC,IAAImD,GAAM,GACxC,IAAK4iC,EAAS/iC,UACV,SAGJ,GAAI8iC,EAASlE,aAAemE,EAASnE,aAAc,CAC/C,IAAIpvC,EAAMszC,EAASlE,aACnBkE,EAASlE,aAAemE,EAASnE,aACjCmE,EAASnE,aAAepvC,EACxB,IAAI6wC,EAAKyC,EAAS7C,WAClB,IAAIK,EAAKyC,EAAS9C,WAClB7zC,KAAKmzC,OAAOhzB,EAAI,GAAG8zB,GAAM0C,EACzB32C,KAAKmzC,OAAOhzB,EAAI,GAAG+zB,GAAMwC,EACzBA,EAAS7C,WAAaK,EACtByC,EAAS9C,WAAaI,KAOtC,IAAIG,EAAcp0C,KAAKu1C,eACvB,IAAIN,EAAej1C,KAAK01C,gBAGxB,IAAIrB,EAAUr0C,KAAKm0C,iBAAiBC,GACpC,IAAIc,EAAWl1C,KAAKg1C,iBAAiBC,GACrC,IAAIl5C,EAAI,IAAI8V,EACZzW,EAAM2F,QAAQf,KAAKyX,MAAMnB,MAAO,SAAUvC,GACtChY,EAAE+U,IAAIiD,GAAOsgC,EAAQzjC,IAAImD,GAAQmhC,EAAStkC,IAAImD,IAAS,KAI3D,IAAI6iC,EAAQ,IAAI/kC,EAChB,IAAIglC,EAAS,IAAIhlC,EACjB,IAAKsO,EAAI,EAAGA,EAAIngB,KAAKmzC,OAAOl1C,SAAUkiB,EAAG,CACrC8xB,EAAQjyC,KAAKmzC,OAAOhzB,GACpB,IAAI22B,GAAiB,EAAGC,GAAe,EACvC,IAAKh0C,EAAI,EAAGA,EAAIkvC,EAAMh0C,SAAU8E,EAAG,CAC/BgR,EAAOk+B,EAAMlvC,GACb6zC,EAAM9lC,IAAIiD,EAAM,GAChB8iC,EAAO/lC,IAAIiD,EAAM,OACjB,GAAIA,EAAKH,UACL,GAAIkjC,KAAmB,EACnBA,EAAgB/zC,OAEf,GAAI+zC,IAAkB/zC,EAAI,EAC3B+zC,EAAgB/zC,MAEf,CACDg0C,EAAch0C,EACd6zC,EAAM9lC,IAAImhC,EAAM6E,GAAgB,GAChC,GAAI/6C,EAAE6U,IAAImD,GAAQhY,EAAE6U,IAAIqhC,EAAM6E,MAAoB92C,KAAK+zC,WAAW9B,EAAM6E,GAAgB/iC,GACpF8iC,EAAO/lC,IAAImhC,EAAM6E,GAAgB,WAGjCD,EAAO/lC,IAAImhC,EAAM6E,GAAgB,OAErCA,EAAgB/zC,IAKhC,IAAIi0C,EAAa,CAAC,GAAI,GACtB57C,EAAM2F,QAAQi2C,EAAY,SAAU72C,GAChC,IAAI7E,EAAQ6E,IAAM,EAAI,EAAIH,KAAKmzC,OAAOl1C,OAAS,EAC/C,IAAK,IAAIkiB,EAAI7kB,EAAO,GAAK6kB,GAAKA,EAAIngB,KAAKmzC,OAAOl1C,OAAQkiB,GAAKhgB,EAAG,CAC1D,IAAI8xC,EAAQjyC,KAAKmzC,OAAOhzB,GACxB,IAAI82B,EAAoBj3C,KAAKk3C,kBAAkBjF,GAC/C,IAAIkF,EAAe,KACnB,IAAIC,EAAW,KACf,GAAIH,KAAuB,EAAG,CAC1BE,EAAelF,EAAMgF,GACrBG,EAAW,GACX,IAAKx7C,EAAI,EAAGA,EAAIq7C,EAAmBr7C,IAC/Bw7C,EAASj7C,KAAK81C,EAAMr2C,QAGvB,CACDu7C,EAAe,KACfC,EAAWnF,EAEf,GAAImF,EAASn5C,OAAS,EAAG,CACrB+B,KAAKq3C,WAAWt7C,EAAG,KAAMo7C,EAAch3C,EAAGi3C,GAC1C,IAAKx7C,EAAI,EAAGA,EAAIw7C,EAASn5C,OAAS,IAAKrC,EACnCoE,KAAK2zC,WAAWyD,EAASx7C,GAAIw7C,EAASx7C,EAAI,GAAIG,EAAE6U,IAAIwmC,EAASx7C,EAAI,IAAMG,EAAE6U,IAAIwmC,EAASx7C,KAE1F,GAAIu7C,EACAn3C,KAAK2zC,WAAWyD,EAASA,EAASn5C,OAAS,GAAIk5C,EAAcp7C,EAAE6U,IAAIumC,GAAgBp7C,EAAE6U,IAAIwmC,EAASA,EAASn5C,OAAS,KAI5H,MAAOk5C,EAAc,CACjB,IAAIG,EAAat3C,KAAKu3C,gBAAgBtF,EAAOkF,GAC7C,IAAKG,EAAY,CACbL,EAAoBE,EAAatD,WACjCuD,EAAW,GACX,IAAKx7C,EAAIq7C,EAAoB,EAAGr7C,EAAIq2C,EAAMh0C,OAAQrC,IAC9Cw7C,EAASj7C,KAAK81C,EAAMr2C,IAExB,GAAIw7C,EAASn5C,OAAS,EAAG,CACrB+B,KAAKq3C,WAAWt7C,EAAGo7C,EAAc,KAAMh3C,EAAGi3C,GAC1C,IAAKx7C,EAAI,EAAGA,EAAIw7C,EAASn5C,OAAS,IAAKrC,EACnCoE,KAAK2zC,WAAWyD,EAASx7C,GAAIw7C,EAASx7C,EAAI,GAAIG,EAAE6U,IAAIwmC,EAASx7C,EAAI,IAAMG,EAAE6U,IAAIwmC,EAASx7C,KAE1FoE,KAAK2zC,WAAWwD,EAAcC,EAAS,GAAIr7C,EAAE6U,IAAIwmC,EAAS,IAAMr7C,EAAE6U,IAAIumC,UAGzE,GAAIP,EAAMhmC,IAAIumC,KAAkBh3C,EAAG,CACpC82C,EAAoBE,EAAatD,WACjC,IAAI2D,EAAkBF,EAAWzD,WACjCuD,EAAW,GACX,IAAKx7C,EAAIq7C,EAAoB,EAAGr7C,EAAI47C,EAAiB57C,IACjDw7C,EAASj7C,KAAK81C,EAAMr2C,IAExB,GAAIw7C,EAASn5C,OAAS,EAClB+B,KAAKq3C,WAAWt7C,EAAGo7C,EAAcG,EAAYn3C,EAAGi3C,GAEpDP,EAAO/lC,IAAIqmC,EAAc,MAE7BA,EAAeG,EAEnBt3C,KAAKy3C,iBAAiBt3B,EAAGhgB,EAAGy2C,EAAOC,KAExC72C,MAGH,IAAI03C,EAAiB13C,KAAKs2C,sBAAwB,EAAIt2C,KAAKmzC,OAAOl1C,OAAS,EAC3E,IAAI05C,EAAyB,SAAU37C,EAAG47C,GACtC,GAAIA,EAAItB,sBACJ,OAAOt6C,EAAI47C,EAAIzE,OAAOl1C,YAGtB,OAAOjC,GAAK,GAGpB,IAAI67C,EAAiB73C,KAAKs2C,uBAAyB,GAAK,EAAGvvC,EAAS,EAKpE,SAAS+wC,EAAc7F,EAAO2F,GAC1B,IAAIvvC,EAAS+H,OAAO2nC,UACpB,IAAK,IAAIh1C,EAAI,EAAGA,EAAIkvC,EAAMh0C,SAAU8E,EAAG,CACnC,IAAIgR,EAAOk+B,EAAMlvC,GACjB,GAAI60C,EAAIxB,oBACJ/tC,EAASpM,KAAKiJ,IAAImD,EAAQ0L,EAAK1L,aAG/BA,EAASpM,KAAKiJ,IAAImD,EAAQ0L,EAAKzL,OAGvC,OAAOD,EAGX,IAAKzM,EAAI87C,EAAgBC,EAAuB/7C,EAAGoE,MAAOpE,GAAKi8C,EAAgB,CAC3E5F,EAAQjyC,KAAKmzC,OAAOv3C,GACpB,IAAIyM,EAASyvC,EAAc7F,EAAOjyC,MAElC,IAAK+C,EAAI,EAAGA,EAAIkvC,EAAMh0C,SAAU8E,EAAG,CAC/BgR,EAAOk+B,EAAMlvC,GACb,GAAI/C,KAAKo2C,oBAAqB,CAC1BriC,EAAKhY,EAAIA,EAAE6U,IAAImD,GACfA,EAAKvX,EAAIuK,EAASsB,EAAS,MAE1B,CACD0L,EAAKhY,EAAIgL,EAASsB,EAAS,EAC3B0L,EAAKvX,EAAIT,EAAE6U,IAAImD,IAIvBhN,GAAU/G,KAAKuf,QAAQmoB,gBAAkBr/B,IAIjDovC,iBAAkB,SAAUt3B,EAAGhgB,EAAGy2C,EAAOC,GACrC,GAAI12B,EAAIhgB,EAAI,GAAKggB,EAAIhgB,GAAKH,KAAKmzC,OAAOl1C,OAClC,OAGJ,IAAI+5C,EAAa,KAAMC,EAAmB,KAC1C,IAAIhG,EAAQjyC,KAAKmzC,OAAOhzB,EAAIhgB,GAC5B,IAAK,IAAI4C,EAAI,EAAGA,EAAIkvC,EAAMh0C,SAAU8E,EAAG,CACnC,IAAIm1C,EAAajG,EAAMlvC,GACvB,GAAIm1C,EAAWtkC,UAAW,CACtB,IAAIukC,EAAmBn4C,KAAKo4C,mBAAmBF,EAAY/3B,GAC3D,GAAIg4B,EAAiBvkC,UAAW,CAC5B,GAAIokC,EAAY,CACZ,IAAIl5C,EAAI+3C,EAAOjmC,IAAIqnC,GACnB,IAAII,EAASr4C,KAAKmzC,OAAOhzB,GACzB,IAAI8zB,EAAKgE,EAAiBpE,WAC1B,IAAIK,EAAKiE,EAAiBtE,WAC1B,IAAK,IAAIj4C,EAAIq4C,EAAK,EAAGr4C,EAAIs4C,IAAMt4C,EAC3B,GAAIy8C,EAAOz8C,GAAGgY,UACV9U,EAAIA,GAAK+3C,EAAOjmC,IAAIynC,EAAOz8C,IAGnC,GAAIkD,EAAG,CACH83C,EAAM9lC,IAAIknC,EAAY73C,GACtB,IAAIm4C,EAAKN,EAAWnE,WACpB,IAAI0E,EAAKL,EAAWrE,WACpB,IAAK,IAAIh4C,EAAIy8C,EAAK,EAAGz8C,EAAI08C,IAAM18C,EAC3B,GAAIo2C,EAAMp2C,GAAG+X,UACTgjC,EAAM9lC,IAAImhC,EAAMp2C,GAAIsE,IAKpC63C,EAAaE,EACbD,EAAmBE,MAMnCC,mBAAoB,SAAUrkC,EAAMoM,GAChC,IAAI20B,EAAW90C,KAAK40C,QAAQhkC,IAAImD,GAAM,GACtC,GAAI+gC,EAAS7C,QAAU9xB,EACnB,OAAO20B,EAEXA,EAAW90C,KAAK60C,UAAUjkC,IAAImD,GAAM,GACpC,GAAI+gC,EAAS7C,QAAU9xB,EACnB,OAAO20B,EAEX,OAAO,MAGXuC,WAAY,SAAUt7C,EAAGo7C,EAAcG,EAAYkB,EAAKpB,GACpD,GAAIA,EAASn5C,SAAW,EACpB+B,KAAKy4C,gBAAgB18C,EAAGo7C,EAAcG,EAAYkB,EAAKpB,EAAS,IAGpE,GAAIA,EAASn5C,OAAS,EAAG,CACrB,IAAIgL,EAAImuC,EAASn5C,OAAQub,EAAIxZ,KAAK+0C,OAAO9rC,EAAG,GAC5CjJ,KAAKq3C,WAAWt7C,EAAGo7C,EAAcG,EAAYkB,EAAKpB,EAAS1uC,MAAM,EAAG8Q,IACpExZ,KAAKq3C,WAAWt7C,EAAGo7C,EAAcG,EAAYkB,EAAKpB,EAAS1uC,MAAM8Q,IACjExZ,KAAK04C,iBAAiB38C,EAAGo7C,EAAcG,EAAYkB,EAAKpB,KAIhEqB,gBAAiB,SAAU18C,EAAGo7C,EAAcG,EAAYkB,EAAKzkC,GACzD,IAAIiB,EAAYwjC,KAAS,EAAIx4C,KAAK60C,UAAUjkC,IAAImD,GAAQ/T,KAAK40C,QAAQhkC,IAAImD,GAEzE,IAAIhR,EAAIiS,EAAU/W,OAClB,GAAI8E,IAAM,EAAG,CACT,GAAIA,EAAI,IAAM,EACVhH,EAAE+U,IAAIiD,EAAMhY,EAAE6U,IAAIoE,EAAUhV,KAAK+0C,OAAOhyC,EAAG,WAG3ChH,EAAE+U,IAAIiD,GAAOhY,EAAE6U,IAAIoE,EAAUhV,KAAK+0C,OAAOhyC,EAAG,GAAK,IAAMhH,EAAE6U,IAAIoE,EAAUhV,KAAK+0C,OAAOhyC,EAAG,MAAQ,GAGlG,GAAIo0C,EACAp7C,EAAE+U,IAAIiD,EAAM9X,KAAKiJ,IAAInJ,EAAE6U,IAAImD,GAAOhY,EAAE6U,IAAIumC,GAAgBn3C,KAAK+zC,WAAWoD,EAAcpjC,KAE1F,GAAIujC,EACAv7C,EAAE+U,IAAIiD,EAAM9X,KAAKkJ,IAAIpJ,EAAE6U,IAAImD,GAAOhY,EAAE6U,IAAI0mC,GAAct3C,KAAK+zC,WAAWhgC,EAAMujC,OAKxFoB,iBAAkB,SAAU38C,EAAGo7C,EAAcG,EAAYkB,EAAKpB,GAC1D,IAAInuC,EAAImuC,EAASn5C,OAAQub,EAAIxZ,KAAK+0C,OAAO9rC,EAAG,GAG5C,IAAI0vC,EAAW,GAAI/8C,EAAG8E,EAAGqC,EAAGiS,EAAW8/B,EAAU8D,EACjD,IAAKh9C,EAAI,EAAGA,EAAI4d,IAAK5d,EAAG,CACpB8E,EAAI,EACJsU,EAAYwjC,KAAS,EAAIx4C,KAAK60C,UAAUjkC,IAAIwmC,EAASx7C,IAAMoE,KAAK40C,QAAQhkC,IAAIwmC,EAASx7C,IACrF,IAAKmH,EAAI,EAAGA,EAAIiS,EAAU/W,SAAU8E,EAAG,CACnC+xC,EAAW9/B,EAAUjS,GACrB,GAAIhH,EAAE6U,IAAIkkC,IAAa/4C,EAAE6U,IAAIwmC,EAASx7C,IAClC8E,QAEC,CACDA,IACAi4C,EAASx8C,KAAK,CAAEH,EAAGD,EAAE6U,IAAIkkC,GAAY90C,KAAK+zC,WAAWqD,EAASx7C,GAAIw7C,EAAS59B,EAAI,IAAKta,EAAG,KAG/Fy5C,EAASx8C,KAAK,CAAEH,EAAGD,EAAE6U,IAAIwmC,EAASx7C,IAAMoE,KAAK+zC,WAAWqD,EAASx7C,GAAIw7C,EAAS59B,EAAI,IAAKta,EAAGwB,IAE9F,GAAIy2C,EACAwB,EAASx8C,KAAK,CAAEH,EAAGD,EAAE6U,IAAIumC,GAAgBn3C,KAAK+zC,WAAWoD,EAAcC,EAAS59B,EAAI,IAAKta,EAAGkR,OAAOC,YAEvGsoC,EAAS71C,KAAK9C,KAAK64C,6BAGnB,IAAIC,EAAY,GAChB,IAAKl9C,EAAI4d,EAAG5d,EAAIqN,IAAKrN,EAAG,CACpB8E,EAAI,EACJsU,EAAYwjC,KAAS,EAAIx4C,KAAK60C,UAAUjkC,IAAIwmC,EAASx7C,IAAMoE,KAAK40C,QAAQhkC,IAAIwmC,EAASx7C,IACrF,IAAKmH,EAAI,EAAGA,EAAIiS,EAAU/W,SAAU8E,EAAG,CACnC+xC,EAAW9/B,EAAUjS,GACrB,GAAIhH,EAAE6U,IAAIkkC,IAAa/4C,EAAE6U,IAAIwmC,EAASx7C,IAClC8E,QAEC,CACDA,IACAo4C,EAAU38C,KAAK,CAAEH,EAAGD,EAAE6U,IAAIkkC,GAAY90C,KAAK+zC,WAAWqD,EAASx7C,GAAIw7C,EAAS59B,IAAKta,EAAG,KAG5F45C,EAAU38C,KAAK,CAAEH,EAAGD,EAAE6U,IAAIwmC,EAASx7C,IAAMoE,KAAK+zC,WAAWqD,EAASx7C,GAAIw7C,EAAS59B,IAAKta,EAAGwB,IAE3F,GAAI42C,EACAwB,EAAU38C,KAAK,CAAEH,EAAGD,EAAE6U,IAAI0mC,GAAct3C,KAAK+zC,WAAWuD,EAAYF,EAAS59B,IAAKta,EAAGkR,OAAOC,YAEhGyoC,EAAUh2C,KAAK9C,KAAK+4C,4BAEpB,IAAIC,EAAU,EAAGC,EAAW,EAC5B,IAAI/4C,EAAIF,KAAK+zC,WAAWqD,EAAS59B,EAAI,GAAI49B,EAAS59B,IAClD,MAAOzd,EAAE6U,IAAIwmC,EAAS59B,IAAMzd,EAAE6U,IAAIwmC,EAAS59B,EAAI,IAAMtZ,EACjD,GAAI84C,EAAUC,EACV,GAAIN,EAAS16C,SAAW,EAAG,CACvBlC,EAAE+U,IAAIsmC,EAAS59B,EAAI,GAAIzd,EAAE6U,IAAIwmC,EAAS59B,IAAMtZ,GAC5C,UAEC,CACD04C,EAAOD,EAAS9F,QAChBmG,EAAUA,EAAUJ,EAAK15C,EACzBnD,EAAE+U,IAAIsmC,EAAS59B,EAAI,GAAIo/B,EAAK58C,GAC5BD,EAAE+U,IAAIsmC,EAAS59B,EAAI,GAAIvd,KAAKiJ,IAAInJ,EAAE6U,IAAIwmC,EAAS59B,EAAI,IAAKzd,EAAE6U,IAAIwmC,EAAS59B,IAAMtZ,SAIjF,GAAI44C,EAAU76C,SAAW,EAAG,CACxBlC,EAAE+U,IAAIsmC,EAAS59B,GAAIzd,EAAE6U,IAAIwmC,EAAS59B,EAAI,IAAMtZ,GAC5C,UAEC,CACD04C,EAAOE,EAAUjG,QACjBoG,EAAWA,EAAWL,EAAK15C,EAC3BnD,EAAE+U,IAAIsmC,EAAS59B,GAAIo/B,EAAK58C,GACxBD,EAAE+U,IAAIsmC,EAAS59B,GAAIvd,KAAKkJ,IAAIpJ,EAAE6U,IAAIwmC,EAAS59B,IAAKzd,EAAE6U,IAAIwmC,EAAS59B,EAAI,IAAMtZ,IAIrF,IAAKtE,EAAI4d,EAAI,EAAG5d,GAAK,EAAGA,IACpBG,EAAE+U,IAAIsmC,EAASx7C,GAAIK,KAAKkJ,IAAIpJ,EAAE6U,IAAIwmC,EAASx7C,IAAKG,EAAE6U,IAAIwmC,EAAS59B,EAAI,IAAMxZ,KAAK+zC,WAAWqD,EAASx7C,GAAIw7C,EAAS59B,EAAI,MAEvH,IAAK5d,EAAI4d,EAAI,EAAG5d,EAAIqN,EAAGrN,IACnBG,EAAE+U,IAAIsmC,EAASx7C,GAAIK,KAAKiJ,IAAInJ,EAAE6U,IAAIwmC,EAASx7C,IAAKG,EAAE6U,IAAIwmC,EAAS59B,IAAMxZ,KAAK+zC,WAAWqD,EAASx7C,GAAIw7C,EAAS59B,OAInH+6B,UAAW,SAAUxgC,EAAMsgC,EAAS6E,GAChC,IAAI91C,EAAMgN,OAAOglC,kBACjBh6C,EAAM2F,QAAQf,KAAKm5C,cAAcplC,GAAO,SAAU7U,GAC9C,IAAIm2C,EAAcr1C,KAAKq1C,YAAYn2C,GACnC,GAAIm2C,GAAer1C,KAAK00C,cAAc9jC,IAAIykC,KAAiBr1C,KAAK00C,cAAc9jC,IAAI1R,GAAI,CAClF,IAAKm1C,EAAQtjC,YAAYskC,GACrBr1C,KAAKu0C,UAAUc,EAAahB,EAAS6E,GAEzC91C,EAAMnH,KAAKiJ,IAAI9B,EAAKixC,EAAQzjC,IAAIykC,GAAer1C,KAAK+zC,WAAWsB,EAAan2C,MAEjFc,MACH,GAAIoD,IAAQgN,OAAOglC,kBACfhyC,EAAM,EAEVhI,EAAM2F,QAAQf,KAAKm5C,cAAcplC,GAAO,SAAU7U,GAC9Cm1C,EAAQvjC,IAAI5R,EAAGkE,MAIvB+xC,WAAY,SAAUphC,EAAMmhC,EAAUkE,GAClC,IAAIh2C,EAAMgN,OAAOokC,kBACjBp5C,EAAM2F,QAAQf,KAAKm5C,cAAcplC,GAAO,SAAU7U,GAC9C,IAAIu1C,EAAez0C,KAAKy0C,aAAav1C,GACrC,GAAIu1C,GAAgBz0C,KAAKs1C,eAAe1kC,IAAI6jC,KAAkBz0C,KAAKs1C,eAAe1kC,IAAI1R,GAAI,CACtF,IAAKg2C,EAASnkC,YAAY0jC,GACtBz0C,KAAKm1C,WAAWV,EAAcS,EAAUkE,GAE5Ch2C,EAAMnH,KAAKkJ,IAAI/B,EAAK8xC,EAAStkC,IAAI6jC,GAAgBz0C,KAAK+zC,WAAW70C,EAAGu1C,MAEzEz0C,MACH,GAAIoD,IAAQgN,OAAOokC,kBACfpxC,EAAM,EAEVhI,EAAM2F,QAAQf,KAAKm5C,cAAcplC,GAAO,SAAU7U,GAC9Cg2C,EAASpkC,IAAI5R,EAAGkE,MAIxBiyC,YAAa,SAAUthC,GACnB,IAAIk+B,EAAQjyC,KAAKmzC,OAAOp/B,EAAKk+B,OACzB4B,EAAa9/B,EAAK8/B,WACtB,OAAOA,IAAe,EAAI,KAAO5B,EAAM4B,EAAa,IAGxDY,aAAc,SAAU1gC,GACpB,IAAIk+B,EAAQjyC,KAAKmzC,OAAOp/B,EAAKk+B,OAC7B,IAAI4B,EAAa9/B,EAAK8/B,WACtB,OAAOA,IAAe5B,EAAMh0C,OAAS,EAAI,KAAOg0C,EAAM4B,EAAa,IAIvEsF,cAAe,SAAUplC,GACrB,OAAOA,EAAKH,UAAY5T,KAAKg2C,aAAajiC,GAAQ,CAACA,IAGvDy/B,aAAc,WACV,IAAI53C,EAAGukB,EAAG9H,EAAI45B,EAAOl+B,EAErB,IAAKoM,EAAI,EAAGA,EAAIngB,KAAKmzC,OAAOl1C,OAAQkiB,IAAK,CACrC8xB,EAAQjyC,KAAKmzC,OAAOhzB,GAEpB,IAAK9H,EAAK,EAAGA,EAAK45B,EAAMh0C,OAAQoa,IAAM,CAClCtE,EAAOk+B,EAAM55B,GACbtE,EAAKu+B,iBAAmBv+B,EAAKo+B,kBAC7Bp+B,EAAKw+B,mBAAqBx+B,EAAKm+B,qBAOvC,IAAImH,EAAsB,EAC1B,IAAK,IAAIC,EAAK,EAAGA,EAAKD,EAAqBC,IAAM,CAC7C,IAAK19C,EAAIoE,KAAKmzC,OAAOl1C,OAAS,EAAGrC,GAAK,EAAGA,IACrCoE,KAAKu5C,YAAY,MAAO39C,GAG5B,IAAKA,EAAI,EAAGA,EAAIoE,KAAKmzC,OAAOl1C,OAAS,EAAGrC,IACpCoE,KAAKu5C,YAAY,KAAM39C,GAK/B,IAAI49C,EAAUppC,OAAOC,UACrB,IAAK8P,EAAI,EAAGA,EAAIngB,KAAKmzC,OAAOl1C,OAAQkiB,IAAK,CACrC8xB,EAAQjyC,KAAKmzC,OAAOhzB,GAEpB,IAAK9H,EAAK,EAAGA,EAAK45B,EAAMh0C,OAAQoa,IAAM,CAClCtE,EAAOk+B,EAAM55B,GACbmhC,EAAUv9C,KAAKkJ,IAAIq0C,EAASzlC,EAAKy+B,eAIzC,GAAIgH,EAAU,EACV,IAAKr5B,EAAI,EAAGA,EAAIngB,KAAKmzC,OAAOl1C,OAAQkiB,IAAK,CACrC8xB,EAAQjyC,KAAKmzC,OAAOhzB,GAEpB,IAAK9H,EAAK,EAAGA,EAAK45B,EAAMh0C,OAAQoa,IAAM,CAClCtE,EAAOk+B,EAAM55B,GACbtE,EAAKy+B,aAAez+B,EAAKy+B,aAAegH,KAYxDD,YAAa,SAAU9K,EAAMwD,GACzB,IAAIwH,EACJ,IAAIC,EAEJ,GAAIjL,EACAiL,EAAa15C,KAAKmzC,OAAOsG,EAAcxH,EAAQ,QAG/CyH,EAAa15C,KAAKmzC,OAAOsG,EAAcxH,EAAQ,GAInD,IAAI/B,EAAS,GACb,IAAK,IAAIntC,EAAI,EAAGA,EAAI22C,EAAWz7C,OAAQ8E,IACnCmtC,EAAO/zC,KAAKu9C,EAAW32C,IAE3BmtC,EAAOptC,KAAK,SAAUgX,EAAIC,GACtB,IAAI4/B,GAAc7/B,EAAGw4B,iBAAmBx4B,EAAGy4B,oBAAsB,EACjE,IAAIqH,GAAc7/B,EAAGu4B,iBAAmBv4B,EAAGw4B,oBAAsB,EAEjE,GAAIt2C,KAAKC,IAAIy9C,EAAaC,GAAc,KACpC,OAAO,EAEX,GAAID,EAAaC,EACb,OAAO,EAEX,OAAQ,IAIZx+C,EAAM2F,QAAQmvC,EAAQ,SAAUn8B,GAC5B,IAAI8lC,EAAc9lC,EAAKy+B,aACvB,IAAIsH,EAAiB95C,KAAK+5C,eAAehmC,GACzC,IAAIimC,GAAgBjmC,EAAKu+B,iBAAmBv+B,EAAKw+B,oBAAsB,EAEvE,GAAIt2C,KAAKC,IAAI29C,EAAcC,GAAkB,KAEzC,OAGJ,GAAI79C,KAAKC,IAAI29C,EAAcC,GAAkB,IAAO,KAEhD,OAGJ,GAAID,EAAcC,EAGd,MAAOD,EAAcC,EAAgB,CACjC,IAAK95C,KAAKi6C,UAAUlmC,EAAM2lC,EAAYM,GAClC,MAGJH,EAAc9lC,EAAKy+B,kBAMvB,MAAOqH,EAAcC,EAAgB,CACjC,IAAK95C,KAAKk6C,SAASnmC,EAAM2lC,EAAYM,GACjC,MAGJH,EAAc9lC,EAAKy+B,eAG5BxyC,MAIH,GAAIy5C,EAAc,EACdz5C,KAAKm6C,aAAaV,EAAc,GAEpC,GAAIA,EAAcz5C,KAAKmzC,OAAOl1C,OAAS,EACnC+B,KAAKo6C,WAAWX,EAAc,IAUtCQ,UAAW,SAAUlmC,EAAMk+B,EAAOoI,GAC9B,IAAIj4C,EAAQhH,EAAMoG,QAAQywC,EAAOl+B,GACjC,GAAI3R,IAAU6vC,EAAMh0C,OAAS,EAAG,CAE5B8V,EAAKy+B,aAAez+B,EAAKy+B,aAAe,GACxC,OAAO,KAGX,IAAI8H,EAAYrI,EAAM7vC,EAAQ,GAC9B,IAAIm4C,GAAqBD,EAAUhI,iBAAmBgI,EAAU/H,oBAAsB,EAGtF,GAAI+H,EAAU9H,aAAez+B,EAAKy+B,aAAe,EAAG,CAChDz+B,EAAKy+B,aAAez+B,EAAKy+B,aAAe,GACxC,OAAO,KAIX,GAAI+H,EAAoBF,GACpBp+C,KAAKC,IAAIq+C,EAAoBF,GAAY,KACzC,OAAO,MAIX,GAAIr6C,KAAKi6C,UAAUK,EAAWrI,EAAOoI,GAAW,CAC5CtmC,EAAKy+B,aAAez+B,EAAKy+B,aAAe,GACxC,OAAO,KAGX,OAAO,OASX0H,SAAU,SAAUnmC,EAAMk+B,EAAOoI,GAC7B,IAAIj4C,EAAQhH,EAAMoG,QAAQywC,EAAOl+B,GACjC,GAAI3R,IAAU,EAAG,CAEb2R,EAAKy+B,aAAez+B,EAAKy+B,aAAe,GACxC,OAAO,KAGX,IAAIgI,EAAWvI,EAAM7vC,EAAQ,GAC7B,IAAIq4C,GAAoBD,EAASlI,iBAAmBkI,EAASjI,oBAAsB,EAGnF,GAAIiI,EAAShI,aAAez+B,EAAKy+B,aAAe,EAAG,CAC/Cz+B,EAAKy+B,aAAez+B,EAAKy+B,aAAe,GACxC,OAAO,KAIX,GAAIiI,EAAmBJ,GACnBp+C,KAAKC,IAAIu+C,EAAmBJ,GAAY,KACxC,OAAO,MAIX,GAAIr6C,KAAKk6C,SAASM,EAAUvI,EAAOoI,GAAW,CAC1CtmC,EAAKy+B,aAAez+B,EAAKy+B,aAAe,GACxC,OAAO,KAGX,OAAO,OAGXkI,eAAgB,SAAU3mC,EAAMC,GAC5BhU,KAAK26C,cAAc7pC,IAAIiD,EAAMC,GAC7B,IAAKhU,KAAK46C,cAAc7pC,YAAYiD,GAChChU,KAAK46C,cAAc9pC,IAAIkD,EAAM,IAEjChU,KAAK46C,cAAchqC,IAAIoD,GAAM7X,KAAK4X,IAGtCiiC,aAAc,SAAUjiC,GACpB,OAAO/T,KAAK46C,cAAchqC,IAAI5Q,KAAK26C,cAAc/pC,IAAImD,KAMzDs/B,SAAU,WACNrzC,KAAK46C,cAAgB,IAAI/oC,EACzB7R,KAAK26C,cAAgB,IAAI9oC,EAEzB,IAAIogC,EAAO7uC,EAAK6W,EAASlG,EAAM9K,EAAGsP,EAAS3c,EAAGukB,EAAG/M,EAAQpT,KAAKyX,MAAMrE,MAAM1K,MAAM,GAChF,IAAIyqC,EAASnzC,KAAKmzC,OAElB,IAAI0H,EAAuB,SAASC,EAASC,EAAW/mC,GACpDm/B,EAAO2H,GAAS1H,QAAQ2H,GAAa5H,EAAO2H,GAAS1H,QAAQ2H,IAAc,GAC3E5H,EAAO2H,GAAS1H,QAAQ2H,GAAW5+C,KAAK6X,IAG5C,IAAKmM,EAAI,EAAGA,EAAI/M,EAAMnV,OAAQkiB,IAAK,CAC/B,IAAInM,EAAOZ,EAAM+M,GACjB,IAAI66B,EAAIhnC,EAAK5V,OACb,IAAI+B,EAAI6T,EAAKrQ,OAEb,IAAIs3C,EAASD,EAAE/I,MACf,IAAIiJ,EAAS/6C,EAAE8xC,MACf,IAAIkJ,EAAOH,EAAExI,aACb,IAAI4I,EAAOj7C,EAAEqyC,aAEb,IAAIh3C,GAAQ4/C,EAAOD,GAAQl/C,KAAKC,IAAIg/C,EAASD,GAE7C,IAAIn8C,EAAIk8C,EACR,GAAIC,EAASC,EAAS,EAAG,CACrB,IAAKt/C,EAAIq/C,EAAS,EAAGr/C,EAAIs/C,EAAQt/C,IAAK,CAClCqe,EAAU,IAAI/G,EACd+G,EAAQle,EAAIi/C,EAAEj/C,EACdke,EAAQzd,EAAIw+C,EAAEx+C,EACdyd,EAAQ3R,MAAQ0yC,EAAE1yC,MAAQ,IAC1B2R,EAAQ5R,OAAS2yC,EAAE3yC,OAAS,IAE5B4pC,EAAQkB,EAAOv3C,GACfwH,GAAOxH,EAAIs/C,GAAU1/C,EAAO2/C,EAC5B,GAAI/3C,EAAM6uC,EAAMh0C,OACZmF,EAAM6uC,EAAMh0C,OAIhB,GAAIk9C,GAAQhI,EAAO8H,GAAQh9C,OAAS,GAChCm9C,GAAQjI,EAAO+H,GAAQj9C,OAAS,EAChCmF,EAAM6uC,EAAMh0C,YAIX,GAAIk9C,IAAS,GAAKC,IAAS,EAC5Bh4C,EAAM,EAGV6W,EAAQg4B,MAAQr2C,EAChBqe,EAAQm4B,YAAc,EACtBn4B,EAAQo4B,YAAc,EACtBp4B,EAAQk4B,kBAAoB,EAC5Bl4B,EAAQi4B,oBAAsB,EAC9Bj4B,EAAQu4B,aAAepvC,EACvB6W,EAAQrG,UAAY,KAEpBxY,EAAMmH,OAAO0vC,EAAOh4B,EAAS7W,GAG7B,IAAK6F,EAAI7F,EAAM,EAAG6F,EAAIgpC,EAAMh0C,OAAQgL,IAAK,CACrC8K,EAAOk+B,EAAMhpC,GACb8K,EAAKy+B,aAAez+B,EAAKy+B,aAAe,EAG5Cj6B,EAAU,IAAItD,EAAKnW,EAAGmb,GACtB1B,EAAQ8iC,iBAAmB,EAE3BR,EAAqBj/C,EAAI,EAAGA,EAAG2c,GAE/BzZ,EAAImb,EAGJja,KAAKyX,MAAMS,SAAS+B,GACpBja,KAAKyX,MAAMe,QAAQD,GAEnB0B,EAAQ7X,MAAQpC,KAAKyX,MAAMnB,MAAMrY,OAAS,EAC1C+B,KAAK06C,eAAezgC,EAASjG,GAIjC6mC,EAAqBK,EAAS,EAAGA,EAAQ3iC,GACzCvE,EAAK2B,aAAa7W,GAClBkV,EAAKqnC,iBAAmBJ,EAASC,EAAS,OACvC,GAAID,EAASC,GAAU,EAAG,CAC7B,IAAKt/C,EAAIq/C,EAAS,EAAGr/C,EAAIs/C,EAAQt/C,IAAK,CAClCqe,EAAU,IAAI/G,EACd+G,EAAQle,EAAIi/C,EAAEj/C,EACdke,EAAQzd,EAAIw+C,EAAEx+C,EACdyd,EAAQ3R,MAAQ0yC,EAAE1yC,MAAQ,IAC1B2R,EAAQ5R,OAAS2yC,EAAE3yC,OAAS,IAE5B4pC,EAAQkB,EAAOv3C,GACfwH,GAAOxH,EAAIq/C,GAAUz/C,EAAO2/C,EAC5B,GAAI/3C,EAAM6uC,EAAMh0C,OACZmF,EAAM6uC,EAAMh0C,OAIhB,GAAIk9C,GAAQhI,EAAO8H,GAAQh9C,OAAS,GAChCm9C,GAAQjI,EAAO+H,GAAQj9C,OAAS,EAChCmF,EAAM6uC,EAAMh0C,YAIX,GAAIk9C,IAAS,GAAKC,IAAS,EAC5Bh4C,EAAM,EAGV6W,EAAQg4B,MAAQr2C,EAChBqe,EAAQm4B,YAAc,EACtBn4B,EAAQo4B,YAAc,EACtBp4B,EAAQk4B,kBAAoB,EAC5Bl4B,EAAQi4B,oBAAsB,EAC9Bj4B,EAAQu4B,aAAepvC,EACvB6W,EAAQrG,UAAY,KAEpBxQ,GAAOA,EACPhI,EAAMmH,OAAO0vC,EAAOh4B,EAAS7W,GAG7B,IAAK6F,EAAI7F,EAAM,EAAG6F,EAAIgpC,EAAMh0C,OAAQgL,IAAK,CACrC8K,EAAOk+B,EAAMhpC,GACb8K,EAAKy+B,aAAez+B,EAAKy+B,aAAe,EAG5Cj6B,EAAU,IAAItD,EAAKnW,EAAGmb,GACtB1B,EAAQ8iC,iBAAmB,EAC3BR,EAAqBj/C,EAAI,EAAGA,EAAG2c,GAE/BzZ,EAAImb,EAGJja,KAAKyX,MAAMS,SAAS+B,GACpBja,KAAKyX,MAAMe,QAAQD,GAEnB0B,EAAQ7X,MAAQpC,KAAKyX,MAAMnB,MAAMrY,OAAS,EAC1C+B,KAAK06C,eAAezgC,EAASjG,GAEjC6mC,EAAqBK,EAAS,EAAGA,EAAQlnC,GAGzCA,EAAK2B,aAAa7W,GAClBkV,EAAKqnC,iBAAmBH,EAASD,EAAS,OAE1CJ,EAAqBI,EAAQC,EAAQlnC,KASjD0/B,WAAY,WACR,IAAI4H,EAAQ,KACZ,MAAOA,EAAO,CACVA,EAAQ,MAER,IAAK,IAAIn7B,EAAI,EAAGA,EAAIngB,KAAKyX,MAAMrE,MAAMnV,OAAQkiB,IAAK,CAC9C,IAAInM,EAAOhU,KAAKyX,MAAMrE,MAAM+M,GAC5B,IAAKnM,EAAKqnC,iBACN,SAGJ,IAAIz8C,EAAS,GAGbA,EAAOke,QAAQ,CAAE/gB,EAAGiY,EAAKrQ,OAAO5H,EAAGS,EAAGwX,EAAKrQ,OAAOnH,IAClDoC,EAAOke,QAAQ,CAAE/gB,EAAGiY,EAAK5V,OAAOrC,EAAGS,EAAGwX,EAAK5V,OAAO5B,IAGlD,IAAIqL,EAAOmM,EACX,IAAIqnC,EAAmBrnC,EAAKqnC,iBAC5B,IAAK,IAAIl7C,EAAI,EAAGA,EAAIk7C,EAAkBl7C,IAAK,CACvC,IAAI4T,EAAOlM,EAAKzJ,OAChB,IAAIm9C,EAAWxnC,EAAKT,SAAS,GAE7B1U,EAAOke,QAAQ,CAAE/gB,EAAGw/C,EAASn9C,OAAOrC,EAAGS,EAAG++C,EAASn9C,OAAO5B,IAE1DqL,EAAO0zC,EAIXvnC,EAAK2B,aAAa9N,EAAKzJ,QAGvB4V,EAAKqnC,iBAAmB,EAGxB,GAAIz8C,EAAOX,OAAS,EAAG,CAEnBW,EAAO6C,OAAO,EAAG,GACjB7C,EAAO6C,OAAO7C,EAAOX,OAAS,GAC9B+V,EAAKpV,OAASA,OAGdoV,EAAKpV,OAAS,GAMlB08C,EAAQ,KACR,SAQZhI,mBAAoB,WAChB,IAAIkI,GAAS,EAAG5/C,EAChB,IAAI6/C,EAAgB,EACpB,IAAIC,EAAO,EAEX,MAAOF,IAAU,EAAG,CAChB,GAAIE,IAASD,EACT,MAGJD,EAAQ,EAER,IAAK5/C,EAAIoE,KAAKmzC,OAAOl1C,OAAS,EAAGrC,GAAK,EAAGA,IACrC4/C,GAASx7C,KAAK27C,uBAAuB,MAAO//C,GAGhD,IAAKA,EAAI,EAAGA,EAAIoE,KAAKmzC,OAAOl1C,OAAS,EAAGrC,IACpC4/C,GAASx7C,KAAK27C,uBAAuB,KAAM//C,KAKvDw+C,WAAY,SAAUnI,GAClB,GAAIA,IAAU,EACV,OAGJ,IAAIyH,EAAa15C,KAAKmzC,OAAOlB,GAAQr2C,EAAGukB,EAAGnM,EAC3C,IAAI8mC,EAAU,IAAIhoC,EAClB,IAAIjL,EAAO7H,KAAKmzC,OAAOlB,EAAQ,GAC/B,IAAKr2C,EAAI,EAAGA,EAAIiM,EAAK5J,OAAQrC,IACzBk/C,EAAQpqC,IAAI7I,EAAKjM,IAGrB,IAAKA,EAAI,EAAGA,EAAI89C,EAAWz7C,OAAQrC,IAAK,CACpC,IAAImY,EAAO2lC,EAAW99C,GAGtB,IAAIggD,EAAM,EACV,IAAIC,EAAQ,EAEZ,IAAK17B,EAAI,EAAGA,EAAIpM,EAAKT,SAASrV,OAAQkiB,IAAK,CACvCnM,EAAOD,EAAKT,SAAS6M,GACrB,GAAI26B,EAAQp5C,SAASsS,EAAK5V,QAAS,CAC/By9C,IACAD,GAAO5nC,EAAK5V,OAAOo0C,cAI3B,IAAKryB,EAAI,EAAGA,EAAIpM,EAAKV,SAASpV,OAAQkiB,IAAK,CACvCnM,EAAOD,EAAKV,SAAS8M,GACrB,GAAI26B,EAAQp5C,SAASsS,EAAKrQ,QAAS,CAC/Bk4C,IACAD,GAAO5nC,EAAKrQ,OAAO6uC,cAI3B,GAAIqJ,EAAQ,EAAG,CACX9nC,EAAKq+B,YAAcwJ,EAAMC,EACzB9nC,EAAKo+B,kBAAoB0J,MAExB,CACD9nC,EAAKq+B,YAAcx2C,EACnBmY,EAAKo+B,kBAAoB,KAKrCgI,aAAc,SAAUlI,GACpB,GAAIA,IAAUjyC,KAAKmzC,OAAOl1C,OAAS,EAC/B,OAGJ,IAAIy7C,EAAa15C,KAAKmzC,OAAOlB,GAAQr2C,EAAIukB,EAAGnM,EAC5C,IAAI+mC,EAAY,IAAIjoC,EACpB,IAAIjL,EAAO7H,KAAKmzC,OAAOlB,EAAQ,GAC/B,IAAKr2C,EAAI,EAAGA,EAAIiM,EAAK5J,OAAQrC,IACzBm/C,EAAUrqC,IAAI7I,EAAKjM,IAGvB,IAAKA,EAAI,EAAGA,EAAI89C,EAAWz7C,OAAQrC,IAAK,CACpC,IAAImY,EAAO2lC,EAAW99C,GAGtB,IAAIggD,EAAM,EACV,IAAIC,EAAQ,EAEZ,IAAK17B,EAAI,EAAGA,EAAIpM,EAAKT,SAASrV,OAAQkiB,IAAK,CACvCnM,EAAOD,EAAKT,SAAS6M,GACrB,GAAI46B,EAAUr5C,SAASsS,EAAK5V,QAAS,CACjCy9C,IACAD,GAAO5nC,EAAK5V,OAAOo0C,cAI3B,IAAKryB,EAAI,EAAGA,EAAIpM,EAAKV,SAASpV,OAAQkiB,IAAK,CACvCnM,EAAOD,EAAKV,SAAS8M,GACrB,GAAI46B,EAAUr5C,SAASsS,EAAKrQ,QAAS,CACjCk4C,IACAD,GAAO5nC,EAAKrQ,OAAO6uC,cAI3B,GAAIqJ,EAAQ,EAAG,CACX9nC,EAAKs+B,YAAcuJ,EAAMC,EACzB9nC,EAAKm+B,oBAAsB2J,MAE1B,CACD9nC,EAAKs+B,YAAcz2C,EACnBmY,EAAKm+B,oBAAsB,KAavCyJ,uBAAwB,SAAUlN,EAAMwD,GACpC,IAAIwH,EACJ,IAAIC,EAEJ,GAAIjL,EACAiL,EAAa15C,KAAKmzC,OAAOsG,EAAcxH,EAAQ,QAG/CyH,EAAa15C,KAAKmzC,OAAOsG,EAAcxH,EAAQ,GAInD,IAAI6J,EAAYpC,EAAWhxC,MAAM,GAGjC,GAAI+lC,EACAzuC,KAAKo6C,WAAWX,QAGhBz5C,KAAKm6C,aAAaV,GAGtB,IAAIznC,EAAOhS,KAEX05C,EAAW52C,KAAK,SAASgX,EAAIC,GACzB,IAAIgiC,EAAe/pC,EAAK+nC,eAAejgC,GACnCkiC,EAAehqC,EAAK+nC,eAAehgC,GACvC,GAAI9d,KAAKC,IAAI6/C,EAAeC,GAAgB,KAAQ,CAEhD,GAAIliC,EAAGlF,WAAamF,EAAGnF,SACnB,OAAO5C,EAAKiqC,eAAeniC,EAAIC,QAE9B,GAAID,EAAGlF,SAAWmF,EAAGnF,SACtB,OAAO,EAEX,OAAQ,EAEZ,IAAIsnC,GAAgBF,EAAeD,GAAgB,IACnD,GAAIG,EAAe,EACf,OAAQ,OAEP,GAAIA,EAAe,EACpB,OAAO,EAEX,OAAOlqC,EAAKiqC,eAAeniC,EAAIC,KAInC,IAAIne,EAAG4/C,EAAQ,EACf,IAAK5/C,EAAI,EAAGA,EAAI89C,EAAWz7C,OAAQrC,IAC/B,GAAI89C,EAAW99C,KAAOkgD,EAAUlgD,GAC5B4/C,IAIR,GAAIA,EAAQ,EAAG,CAEX,IAAIW,EAAQ,EACZ,IAAKvgD,EAAI,EAAGA,EAAI89C,EAAWz7C,OAAQrC,IAAK,CACpC,IAAImY,EAAO2lC,EAAW99C,GACtBmY,EAAKy+B,aAAe2J,KAI5B,OAAOX,GAQXjI,WAAY,WACR,IAAIkI,EAAgBz7C,KAAKuf,QAAQooB,kBACjC,IAAI+T,EAAO,EAEX,MAAO,KAAM,CACT,GAAIA,IAASD,EACT,MAGJ,IAAIW,EAAaV,EAAO,GAAK,EAC7B,IAAIW,EAAcX,EAAO,IAAM,EAE/B,IAAK,IAAIv7B,EAAKi8B,EAAY,EAAIp8C,KAAKmzC,OAAOl1C,OAAS,EAC9Cm+C,EAAYj8B,GAAKngB,KAAKmzC,OAAOl1C,OAAS,EAAIkiB,GAAK,EAAGA,GAAMi8B,EAAY,GAAK,EAAI,CAC9E,IAAInK,EAAQjyC,KAAKmzC,OAAOhzB,GACxB,IAAIm8B,EAAa,MAIjB,IAAIC,EAAgB,KACpB,IAAIC,EAAe,EAEnB,IAAK,IAAIz5C,EAAI,EAAGA,EAAIkvC,EAAMh0C,OAAS,EAAG8E,IAAK,CAEvC,IAAIwrC,EAAK,EACT,IAAIE,EAAO,EACX,IAAIgO,EAAc,EAElB,GAAIF,EAAe,CACf,GAAIp8B,IAAM,EACNouB,EAAKvuC,KAAK08C,mCAAmCv8B,EAAI,EAAGA,GAExD,GAAIA,IAAMngB,KAAKmzC,OAAOl1C,OAAS,EAC3BwwC,EAAOzuC,KAAK08C,mCAAmCv8B,EAAGA,EAAI,GAE1D,GAAIi8B,EACA7N,GAAM,OAGNE,GAAQ,EAGZgO,EAAclO,EAAKE,OAGnBgO,EAAcD,EAGlB,GAAIC,IAAgB,EAChB,SAIJ,IAAIE,EAAQ1K,EAAMlvC,GAClB,IAAI65C,EAAQ3K,EAAMlvC,EAAI,GAEtB,IAAI85C,EAAeF,EAAMnK,aACzB,IAAIsK,EAAeF,EAAMpK,aACzBP,EAAMlvC,GAAK65C,EACX3K,EAAMlvC,EAAI,GAAK45C,EACfA,EAAMnK,aAAesK,EACrBF,EAAMpK,aAAeqK,EAGrBtO,EAAK,EACL,GAAIpuB,IAAM,EACNouB,EAAKvuC,KAAK08C,mCAAmCv8B,EAAI,EAAGA,GAExDsuB,EAAO,EACP,GAAItuB,IAAMngB,KAAKmzC,OAAOl1C,OAAS,EAC3BwwC,EAAOzuC,KAAK08C,mCAAmCv8B,EAAGA,EAAI,GAE1D,GAAIi8B,EACA7N,GAAM,OAGNE,GAAQ,EAEZ,IAAIsO,EAAaxO,EAAKE,EAEtB,IAAIuO,EAAS,MACb,GAAIX,EACAW,EAASD,GAAcN,OAGvBO,EAASD,EAAaN,EAG1B,GAAIO,EAAQ,CACRL,EAAQ1K,EAAMlvC,GACd65C,EAAQ3K,EAAMlvC,EAAI,GAElB85C,EAAeF,EAAMnK,aACrBsK,EAAeF,EAAMpK,aACrBP,EAAMlvC,GAAK65C,EACX3K,EAAMlvC,EAAI,GAAK45C,EACfA,EAAMnK,aAAesK,EACrBF,EAAMpK,aAAeqK,EAIrBL,EAAeC,EACfF,EAAgB,UAEf,CACDD,EAAa,KACbC,EAAgB,MAIxB,GAAID,EAAY,CACZ,GAAIn8B,IAAMngB,KAAKmzC,OAAOl1C,OAAS,EAC3B+B,KAAKo6C,WAAWj6B,EAAI,GAExB,GAAIA,IAAM,EACNngB,KAAKm6C,aAAah6B,EAAI,OAa1Cu8B,mCAAoC,SAAUO,EAAQC,GAClD,IAAI9pC,EAAQpT,KAAKmzC,OAAO8J,GAAQ7J,QAAQ8J,GACxC,IAAIC,EAAOC,EAAOC,EAAKC,EAAKC,EAAKC,EAAKC,EAAIC,EAC1C,IAAIC,EAAY,EAChB,IAAI1/C,EAASmV,EAAMnV,OAEnB,IAAKw/C,EAAK,EAAGA,EAAKx/C,EAAQw/C,IAAM,CAC5BN,EAAQ/pC,EAAMqqC,GACd,IAAKC,EAAKD,EAAK,EAAGC,EAAKz/C,EAAQy/C,IAAM,CAEjCN,EAAQhqC,EAAMsqC,GAEd,GAAIP,EAAMx5C,OAAOsuC,QAAUiL,EAAQ,CAC/BG,EAAMF,EAAM/+C,OACZk/C,EAAMH,EAAMx5C,WAEX,CACD05C,EAAMF,EAAMx5C,OACZ25C,EAAMH,EAAM/+C,OAGhB,GAAIg/C,EAAMz5C,OAAOsuC,QAAUiL,EAAQ,CAC/BK,EAAMH,EAAMh/C,OACZo/C,EAAMJ,EAAMz5C,WAEX,CACD45C,EAAMH,EAAMz5C,OACZ65C,EAAMJ,EAAMh/C,OAGhB,IAAIw/C,EAAQP,EAAI7K,aAChB,IAAIqL,EAAQP,EAAI9K,aAChB,IAAIsL,EAAQP,EAAI/K,aAChB,IAAIuL,EAAQP,EAAIhL,aAEhB,IAAKoL,EAAQE,IAAUD,EAAQE,GAAS,EACpCJ,KAKZ,OAAOA,GAGX5D,eAAgB,SAAUhmC,GACtB,IAAIo+B,EAAoBp+B,EAAKo+B,kBAC7B,IAAID,EAAsBn+B,EAAKm+B,oBAC/B,IAAIE,EAAcr+B,EAAKq+B,YACvB,IAAIC,EAAct+B,EAAKs+B,YAEvB,GAAIF,EAAoB,GAAKD,EAAsB,EAC/C,OAAQE,EAAcC,GAAe,EAEzC,GAAIF,EAAoB,EACpB,OAAOC,EAEX,GAAIF,EAAsB,EACtB,OAAOG,EAGX,OAAO,GAGXkE,sBAAuB,SAAUx6C,EAAGS,GAChC,GAAIT,EAAEy2C,aAAeh2C,EAAEg2C,aACnB,OAAQ,EAEZ,GAAIz2C,EAAEy2C,aAAeh2C,EAAEg2C,aACnB,OAAO,EAEX,OAAO,GAGXuG,2BAA4B,SAAUh9C,EAAGS,GACrC,OAAOT,EAAEC,EAAIQ,EAAER,GAAK,EAAID,EAAEC,EAAIQ,EAAER,EAAI,EAAI,GAG5C68C,4BAA6B,SAAU98C,EAAGS,GACtC,OAAOT,EAAEC,EAAIQ,EAAER,EAAI,EAAID,EAAEC,EAAIQ,EAAER,GAAK,EAAI,GAG5Ck7C,kBAAmB,SAAUjF,GACzB,IAAK,IAAIvxC,EAAI,EAAGA,EAAIuxC,EAAMh0C,OAAQyC,IAC9B,GAAIuxC,EAAMvxC,GAAGkT,UACT,OAAOlT,EAGf,OAAQ,GAGZu7C,eAAgB,SAAU/zC,EAAI6qC,GAC1B,IAAIkB,EAAK/rC,EAAG9F,MACZ,IAAI8xC,EAAKnB,EAAG3wC,MAEZ,GAAI6xC,EAAKC,EACL,OAAO,EAGX,GAAID,EAAKC,EACL,OAAQ,EAGZ,OAAO,GAGXa,OAAQ,SAAUiJ,EAAWC,GACzB,OAAQD,EAAYA,EAAYC,GAAeA,GAGnD1G,gBAAiB,SAAUtF,EAAOl+B,GAC9B,IAAI6D,EAAY7D,EAAK8/B,WACrB,IAAK,IAAIj4C,EAAIgc,EAAY,EAAGhc,EAAIq2C,EAAMh0C,SAAUrC,EAC5C,GAAIq2C,EAAMr2C,GAAGgY,UACT,OAAOq+B,EAAMr2C,GAGrB,OAAO,QASXswC,EAAcvxC,EAAM4I,MAAMC,OAAO,CACjCC,KAAM,SAAU3I,EAASojD,GACrB,GAAI9iD,EAAM2B,YAAYjC,GAClB,KAAM,mBAEVkF,KAAKlF,QAAUA,EACfkF,KAAKqa,QAAU,IAAIxI,EACnB7R,KAAKsa,QAAU,IAAIzI,EACnB7R,KAAKm+C,QAAQD,EAAeA,EAAepjD,IAW/CqjD,QAAS,SAAUC,GACf,IAAIrqC,EACAuC,EACAnD,EACAvX,EACAs2B,EACAle,EACAZ,EAEJ,GAAIgrC,aAAiCtjD,EAAQsb,MAAO,CAEhD,IAAKxa,EAAI,EAAGA,EAAIwiD,EAAsB9nC,MAAMrY,OAAQrC,IAAK,CACrDmY,EAAOqqC,EAAsB9nC,MAAM1a,GACnCuX,EAAQY,EAAKP,gBAEbxT,KAAKqa,QAAQvJ,IAAIqC,EAAMuQ,OAAO/R,GAAI,IAAI5J,EAAKgM,EAAKhY,EAAGgY,EAAKvX,EAAGuX,EAAKzL,MAAOyL,EAAK1L,SAEhF,IAAKzM,EAAI,EAAGA,EAAIwiD,EAAsBhrC,MAAMnV,OAAQrC,IAAK,CACrDoY,EAAOoqC,EAAsBhrC,MAAMxX,GACnCs2B,EAAOle,EAAKqB,qBACZrV,KAAKsa,QAAQxJ,IAAIohB,EAAKxO,OAAO/R,GAAIqC,EAAKpV,gBAGzC,GAAIw/C,aAAiCljD,MAAO,CAC7Cob,EAAQ8nC,EACR,IAAKxiD,EAAI,EAAGA,EAAI0a,EAAMrY,OAAQrC,IAAK,CAC/BmY,EAAOuC,EAAM1a,GACbuX,EAAQY,EAAKP,gBACb,GAAIL,EACAnT,KAAKqa,QAAQvJ,IAAIqC,EAAMuQ,OAAO/R,GAAI,IAAI5J,EAAKgM,EAAKhY,EAAGgY,EAAKvX,EAAGuX,EAAKzL,MAAOyL,EAAK1L,eAInF,GAAI+1C,EAAsBhhD,eAAe,UAAYghD,EAAsBhhD,eAAe,SAAU,CACrGkZ,EAAQ8nC,EAAsB9nC,MAC9BlD,EAAQgrC,EAAsBhrC,MAC9B,IAAKxX,EAAI,EAAGA,EAAI0a,EAAMrY,OAAQrC,IAAK,CAC/BmY,EAAOuC,EAAM1a,GACbuX,EAAQY,EAAKP,gBACb,GAAIL,EACAnT,KAAKqa,QAAQvJ,IAAIqC,EAAMuQ,OAAO/R,GAAI,IAAI5J,EAAKgM,EAAKhY,EAAGgY,EAAKvX,EAAGuX,EAAKzL,MAAOyL,EAAK1L,SAGpF,IAAKzM,EAAI,EAAGA,EAAIwX,EAAMnV,OAAQrC,IAAK,CAC/BoY,EAAOZ,EAAMxX,GACbs2B,EAAOle,EAAKqB,qBACZ,GAAI6c,EACAlyB,KAAKsa,QAAQxJ,IAAIohB,EAAKxO,OAAO/R,GAAIqC,EAAKpV,aAI7C,CACD,IAAI20B,EAASvzB,KAAKlF,QAAQy4B,OAC1B,IAAIqF,EAAc54B,KAAKlF,QAAQ89B,YAC/B,IAAKh9B,EAAI,EAAGA,EAAI23B,EAAOt1B,OAAQrC,IAAK,CAChCuX,EAAQogB,EAAO33B,GACfoE,KAAKqa,QAAQvJ,IAAIqC,EAAMuQ,OAAO/R,GAAIwB,EAAMM,UAE5C,IAAK7X,EAAI,EAAGA,EAAIg9B,EAAY36B,OAAQrC,IAAK,CACrCs2B,EAAO0G,EAAYh9B,GACnBoE,KAAKsa,QAAQxJ,IAAIohB,EAAKxO,OAAO/R,GAAIugB,EAAKtzB,eAMtD5D,EAAWF,EAAS,CAChB2I,KAAM,SAAUjB,GACZ7H,EAAM8I,KAAKjB,EAAS1H,EAAQoL,KAEhCka,aAAcA,EACdsxB,WAAYA,EACZ2M,aAAc/U,EACdyI,cAAeA,EACfrL,WAAYA,EACZwF,YAAaA,MAjpHrB,CAqpHoB,mBAAV1xC,QAAwBA,OAAO2L,IAAM3L,OAAS,SAAS4L,EAAIC,EAAIC,IAAMA,GAAMD,OAErF,SAAc7L,QACVA,OAAO,sBAAsB,CAAC,mBAAoB,0BAA2B,sBACtE,uBACA,qBACA,2BACA,2BACA,6BACA,QACA,aACA,YACR,WAEC,IAAWC,EAyoKZC,OAAOC,MAAMC,OAzoKEC,OAAd,EAEQE,EAAUJ,MAAMI,QAChB0yB,EAAO9yB,MAAM2mB,QACbg9B,EAAO3jD,MAAM0mB,SACbvmB,EAAUC,EAAQD,QAClByjD,EAAS5jD,MAAMuL,GAAGq4C,OAClBh7C,EAAQ5I,MAAM4I,MACd8qB,EAAQ5zB,EAAE4zB,MACVrzB,EAAaL,MAAMK,WACnBwjD,EAAa7jD,MAAM8jD,YACnBC,EAAc/jD,MAAMgkD,aACpBn7C,EAAS/I,EAAE+I,OACXo7C,EAAyBjkD,MAAM+Y,KAAKkrC,uBACpC1xB,EAASpyB,EAAQoyB,OACjBtC,EAAQ9vB,EAAQ8vB,MAChBpD,EAAY1sB,EAAQ0sB,UACpBiB,EAAS3tB,EAAQ2tB,OACjBtF,EAAqBroB,EAAQqoB,mBAC7Bpb,EAAOjN,EAAQiN,KACf6f,EAAO9sB,EAAQ8sB,KACfyL,EAAkBv4B,EAAQu4B,gBAC1BF,EAAuBr4B,EAAQq4B,qBAC/BzM,EAAY5rB,EAAQ4rB,UACpB4E,EAAQxwB,EAAQwwB,MAChBlsB,EAAQtE,EAAQsE,MAChB6M,EAAYnR,EAAQmR,UACpBq0B,EAAwBxlC,EAAQwlC,sBAChCpL,EAAkBp6B,EAAQo6B,gBAC1BwF,EAAc5/B,EAAQ4/B,YACtBsL,EAAWlrC,EAAQkrC,SACnB5D,EAAkBtnC,EAAQsnC,gBAC1BZ,EAAoB1mC,EAAQ0mC,kBAC5BlT,EAAUxzB,EAAQwzB,QAClBlzB,EAAQN,EAAQM,MAChB0W,EAAanX,MAAMmX,WACnBmjB,EAAan6B,EAAQm6B,WACrBJ,EAAc/5B,EAAQ+5B,YACtBkJ,EAAiBjjC,EAAQijC,eACzBE,EAAkBnjC,EAAQmjC,gBAC1BlhC,EAAc3B,EAAM2B,YACpBF,EAAYzB,EAAMyB,UAClB0kB,EAAUkM,EAAKjM,KAAKD,QACpBtmB,EAAUC,MAAMD,QAChBuL,EAAa7L,MAAM6L,WACnBlJ,EAAWlC,EAAMkC,SACjBuhD,EAAgBpkD,EAAEokD,cAElBC,EAAO7iD,KAGP8iD,EAAK,gBACLC,EAAY,YACZnvB,EAAmB,mBACnBovB,EAAS,SACTC,EAAQ,QACRxvB,GAAO,OACPC,GAAW,UACXF,GAAa,YACbO,GAAc,aACdC,GAAc,aACdkvB,GAAQ,QACRjwB,GAAO,OACPC,GACAC,GACAC,GACAC,GACA8vB,GAAS,iBACTC,GAAS,SACTzvB,GAAa,aACba,GAAM,MACNP,GAAa,YACbC,GAAW,UACXmvB,GAAO,OACPC,GAAuB,IACvBC,GAAwB,IACxBC,GAAqB,YACrBC,GAAsB,IACtBC,GAAuB,IACvBC,GAAyB,GACzBC,GAA0B,GAC1BC,GAAyB,EACzBC,GAAgC,SAChC1vC,GAAYD,OAAOC,UACnB0nC,IAAa3nC,OAAOC,UACpB2vC,GAAW,WACXC,GAAc,cACdvvB,GAAU,UACVjP,GAAc,cACdS,GAAQ,QACRC,GAAS,SACTC,GAAI,IACJC,GAAI,IACJ69B,GAAgB,iBAAmBnB,EAAK,cAAgBA,EACxDoB,GAAmB,IACnBC,GAAsB,EACtBC,GAAkB,2GACd,iEACA,6CACJ,OACAC,GAA4B,EAiB5BC,IAfJzlD,EAAQ0lD,kBAAoB,CAAC,CACzBniD,KAxCM,OAyCP,CACCA,KAvCS,UAwCV,CACCA,KA1CO,QA2CR,CACCA,KA7CQ,SA8CT,CACCA,KAAM6wB,GACNzsB,SAAU,SAAU0Q,GAChB,OAAOA,EAAMstC,YAAY,aAIZ,CACjBjrB,OAAQ,CACJvO,KAAM,SACNy5B,WAAY,aACZC,UAAW,mBACXC,UAAW,UAEf96C,OAAQ,CACJmhB,KAAM,SACNy5B,WAAY,gBACZC,UAAW,mBACXC,UAAW,YAgCnB,SAASC,GAAQ/yC,GACb,IAAIgzC,EAAYhzC,EAAEizC,cACdj2C,EAAQ,EAEZ,GAAIg2C,EAAUE,WAAY,CACtBl2C,GAASg2C,EAAUE,WAAa,GAChCl2C,EAAQA,EAAQ,EAAIg0C,EAAKpR,KAAK5iC,GAASg0C,EAAKr/C,MAAMqL,QAC/C,GAAIg2C,EAAUG,OACjBn2C,EAAQg2C,EAAUG,OAGtB,OAAOn2C,EAGX,SAASo2C,GAAgB5nB,GACrB,OAAOA,EAAU/Z,QAAQlhB,KAAK2O,gBAAkBkiB,GAAKliB,cAGzD,SAASm0C,GAAiBr4C,EAAO64B,GAC7B,IAAIyf,EAAkBhC,GAAQiC,EAAQ/nB,EACtC,IAAK,IAAI19B,EAAI,EAAGA,EAAI+lC,EAAW1jC,OAAQrC,IAAK,CACxC09B,EAAYqI,EAAW/lC,GACvB,IAAKslD,GAAgB5nB,GAAY,CAC7B,IAAI0a,EAAOlrC,EAAMq4B,WAAW7H,EAAU72B,YACtC,GAAIuxC,EAAOoN,EAAiB,CACxBA,EAAkBpN,EAClBqN,EAAS/nB,IAIrB,OAAO+nB,EAGX,SAASC,GAAep1B,EAAOJ,GAC3B,IAAIlwB,EAAGyf,EAAU,GAAIqI,EACrB,IAAIvP,EAAW+X,EAAMnH,mBAAmB5Q,SACxC,IAAIlW,EAASkW,EAASlW,OACtB,IAAKrC,EAAI,EAAGA,EAAIkwB,EAAQ7tB,OAAQrC,IAAK,CACjC8nB,EAASoI,EAAQlwB,GACjB,IAAK,IAAIC,EAAI,EAAGA,EAAIoC,EAAQpC,IACxB,GAAIsY,EAAStY,IAAM6nB,EAAOqB,mBAAoB,CAC1C1J,EAAQlf,KAAKN,GACb,OAIZ,OAAOwf,EA1EXvgB,EAAQmkB,cAAgB,SAASsiC,GAC7B,IAAIC,EAAW,CACX7jD,KAAM8hD,GACNn3B,KAAM,GACN9D,SAAU,KACVd,OAAQ,KACR3nB,EAAG+jD,GACHtjD,EAAGsjD,GACHjb,SAAU+a,GACV9a,UAAW+a,GACXv3C,MAAOo3C,GACPr3C,OAAQs3C,GACRz5B,MAAO,GACP0c,SAAU,CACNpjB,QAAS,KACTmb,MAAO,IAEXgH,WAAY7mC,EAAQ0lD,kBACpBhyC,SAAU,CACNxE,MAAO,IAIf5O,EAAM8C,aAAasjD,EAAUD,GAE7B,OAAOC,GAoDX,IAAIC,GAAiB3vC,EAAWtO,OAAO,CACnCC,KAAM,SAAU8b,GACZ,IAAIvN,EAAOhS,KACXgS,EAAK0vC,UAAYniC,GAAW,IAAImiC,SAChC5vC,EAAWlL,GAAGnD,KAAKpG,KAAK2U,GACxBA,EAAKuN,QAAUvkB,EAAW,CAAE2W,GAAI7W,EAAQuU,YAAc2C,EAAKuN,QAASA,GACpEvN,EAAKmnB,WAAa,MAClBnnB,EAAK0R,OAAS,IAAIkH,EAAM,CACpBjZ,GAAIK,EAAKuN,QAAQ5N,GACjB6S,SAAUxS,EAAKuN,QAAQiF,WAE3BxS,EAAKL,GAAKK,EAAKuN,QAAQ5N,GACvBK,EAAK2vC,aAGTpiC,QAAS,CACL2G,MAAO,GACPsW,OAAQlO,EAAQE,KAChB3hB,QAAS,CACLD,MAAO,iBAEXosB,WAAY,KACZ4oB,aAAc,KACd9pB,OAAQ,MAGZgB,WAAY,SAAUhwB,GAClB,GAAI9I,KAAKyzB,QACL,OAAOzzB,KAAKyzB,QAAQqF,WAAWhwB,GAEnC,OAAO9I,KAAKuf,QAAQid,QAGxB1X,QAAS,SAAUrmB,GACf,GAAI1B,EAAY0B,GACZ,OAAOuB,KAAK0jB,OAAOoB,eAEnB9kB,KAAK0jB,OAAOoB,QAAQrmB,IAI5BgV,OAAQ,aAGRogB,QAAS,WACL7zB,KAAK0jB,OAAOsB,UAGhBviB,SAAU,SAAUqG,GAChB9I,KAAKuf,QAAQxjB,EAAI+M,EAAM/M,EACvBiE,KAAKuf,QAAQ/iB,EAAIsM,EAAMtM,EACvBwD,KAAK0jB,OAAOjhB,SAASqG,IAGzBtL,SAAU,WACN,OAAOwC,KAAKuf,QAAQ5N,IAGxBkwC,UAAW,WAEP,IAAIC,EAAO9mD,EAAW,GAAI,CAACukB,QAASvf,KAAKuf,UACzC,GAAIvf,KAAK0hD,SACLI,EAAKJ,SAAW1hD,KAAK0hD,SAASlkD,WAElC,OAAOskD,GAGXC,SAAU,SAAUl1C,GAChB,GAAIA,IAAYhS,EAAW,CACvB,IAAI0kB,EAAUvf,KAAKuf,QAEnB,GAAIzkB,EAAQM,MAAMkC,SAASuP,GACvB0S,EAAQ1S,QAAQoa,KAAOpa,OAEvB7R,EAAWukB,EAAQ1S,QAASA,GAGhC,IAAIm1C,EAAiBziC,EAAQ1S,QAC7B,IAAIo1C,EAAgBjiD,KAAKkiD,eAEzB,IAAKD,EACDjiD,KAAKmiD,qBAAqBH,QAE1BhiD,KAAKoiD,qBAAqBJ,GAIlC,OAAOhiD,KAAKuf,QAAQ1S,QAAQoa,MAGhCk7B,qBAAsB,SAAS5iC,GAC3B,GAAIA,EAAQ0H,KAAM,CACdjnB,KAAKkiD,eAAiB,IAAIx7B,EAAUnH,GACpCvf,KAAKkiD,eAAe31B,eAAiB,MACrCvsB,KAAK0jB,OAAOuG,OAAOjqB,KAAKkiD,kBAIhCE,qBAAsB,SAAS7iC,GAC3Bvf,KAAKkiD,eAAel9B,OAAOzF,IAG/BkZ,SAAU,SAAU3vB,GAChB,IAAI2K,EAASzT,KAAKyT,SAClB,OAAOzT,KAAK8kB,WAAarR,EAAO/R,SAASoH,IAAU9I,KAAKuf,QAAQuY,QAGpE6pB,UAAW,WACP,IAAI3vC,EAAOhS,KACX,GAAIgS,EAAKuN,QAAQ1S,QAAQw1C,SAAU,CAC/B,IAAI3uC,EAAO1B,EAAK0vC,UAAY,GACxBY,EAAkB3nD,MAAM0nD,SAASrwC,EAAKuN,QAAQ1S,QAAQw1C,SAAU,CAC5DE,UAAW,aAGnBvwC,EAAKuN,QAAQ1S,QAAQoa,KAAOq7B,EAAgB5uC,KAIpD8uC,WAAY,WACR,OAAOxiD,KAAKuf,QAAQyZ,aAAe,OAGvCypB,OAAQ,WACJ,MAAO,CACH9wC,GAAI3R,KAAKuf,QAAQ5N,OAKzB+wC,GAAYn/C,EAAMC,OAAO,CACzBC,KAAM,SAAU0P,EAAOoM,GACnBvf,KAAKuf,QAAUvkB,EAAW,GAAIgF,KAAKuf,QAASA,GAC5Cvf,KAAK44B,YAAc,GACnB54B,KAAKmT,MAAQA,GAEjBoM,QAAS,CACLjX,MAAO,EACPD,OAAQ,EACR8W,KAAM,CACFY,MAAOggC,IAEX75B,MAAO,IAEXzjB,SAAU,WACN,GAAIzC,KAAKuf,QAAQ9c,SACb,OAAOzC,KAAKuf,QAAQ9c,SAASzC,KAAKmT,YAElC,OAAOnT,KAAKmT,MAAMstC,YAAYzgD,KAAKuf,QAAQlhB,OAGnDokD,OAAQ,WACJ,MAAO,CACHE,QAAS3iD,KAAKmT,MAAM3V,WACpB87B,UAAWt5B,KAAKuf,QAAQlhB,SAkBhC47B,GAbJyoB,GAAUn6C,MAAQ,SAAUzN,EAAS0N,GACjC,IAAIC,EAAUD,EAAIrJ,MAAM,KACpBwS,EAAKlJ,EAAQ,GACbpK,EAAOoK,EAAQ,IAAMymB,GAEzB,IAAK,IAAItzB,EAAI,EAAGA,EAAId,EAAQy4B,OAAOt1B,OAAQrC,IAAK,CAC5C,IAAIuX,EAAQrY,EAAQy4B,OAAO33B,GAC3B,GAAIuX,EAAMoM,QAAQ5N,IAAMA,EACpB,OAAOwB,EAAM+mB,aAAa77B,EAAKwQ,UAK/B4yC,GAAej+C,OAAO,CAC9BC,KAAM,SAAU8b,EAASzkB,GACrB,IAAIkX,EAAOhS,KACXyhD,GAAe76C,GAAGnD,KAAKpG,KAAK2U,EAAMuN,GAClCvf,KAAKlF,QAAUA,EACfkF,KAAK4iD,yBACLrjC,EAAUvN,EAAKuN,QACfvN,EAAK2vB,WAAa,GAClB3vB,EAAKrU,KAAO4hB,EAAQ5hB,KACpBqU,EAAK6wC,oBACL7wC,EAAK8wC,eACL9wC,EAAKnF,QAAQmF,EAAKnF,WAElBmF,EAAK+wC,qBAGTxjC,QAASzkB,EAAQmkB,gBAEjB+jC,qBAAsB,SAASC,GAC3B,IAAIC,EAAeC,GAAoBF,GAASjjD,KAAK0hD,UACrD1hD,KAAKuf,QAAUvkB,EAAW,GAAIgF,KAAKuf,QAAS2jC,GAE5CljD,KAAKojD,gBAGTR,uBAAwB,SAASK,EAAOvgC,GACpC,GAAI1iB,KAAKlF,SAAWkF,KAAKlF,QAAQuoD,YAAa,CAC1C,IAAIH,EAAeC,GAAoBF,GAASjjD,KAAK0hD,UAErD,GAAIuB,GAASvgC,EACT,IAAK3nB,EAAQ4G,QAAQ+gB,EAAO,CAAC,IAAK,IAAK,QAAS,WAAY,CACxD,GAAI1iB,KAAKuf,QAAQmE,OACb1jB,KAAKsjD,qBACF,GAAIJ,EAAavlD,KAAM,CAC1BqC,KAAKuf,QAAUvkB,EAAW,GAAIgF,KAAKuf,QAAS2jC,GAC5CljD,KAAKsjD,gBAGT,GAAItjD,KAAKuf,QAAQ1S,QAAS,CACtB7M,KAAK2hD,YACL3hD,KAAK6M,QAAQ7M,KAAKuf,QAAQ1S,cAE3B,CACH,IAAI4G,EAASzT,KAAKyT,SAClBA,EAAOiP,GAASugC,EAAMvgC,GACtB1iB,KAAKyT,OAAOA,QAGhBzT,KAAKuf,QAAUvkB,EAAW,GAAIgF,KAAKuf,QAAS2jC,KAKxDI,cAAe,WACXtjD,KAAK0jB,OAAO/gB,QACZ3C,KAAKkiD,eAAiB,KACtBliD,KAAKuf,QAAQmiC,SAAW1hD,KAAK0hD,SAC7B1hD,KAAK6iD,oBACL7iD,KAAK8iD,gBAGTM,aAAc,WACVpjD,KAAKsjD,gBACL,GAAItjD,KAAKuf,QAAQ1S,QAAS,CACtB7M,KAAK2hD,YACL3hD,KAAK6M,QAAQ7M,KAAKuf,QAAQ1S,WAIlCkmB,YAAa,SAASwwB,GAClB,IAAIzoD,EAAUkF,KAAKlF,QACnB,GAAIA,GAAWA,EAAQuoD,YAAa,CAChC,IAAI5vC,EAASzT,KAAK+iC,QAClB,IAAIkgB,EAAQjjD,KAAK0hD,SAEjB,GAAIuB,EAAO,CACPnoD,EAAQ0oD,uBACR,GAAIjiC,EAAQ0hC,EAAMlnD,IAAM0X,EAAO1X,IAAMknD,EAAMlnD,EACvCknD,EAAMnyC,IAAI,IAAK2C,EAAO1X,GAG1B,GAAIwlB,EAAQ0hC,EAAMzmD,IAAMiX,EAAOjX,IAAMymD,EAAMzmD,EACvCymD,EAAMnyC,IAAI,IAAK2C,EAAOjX,GAG1B,GAAI+kB,EAAQ0hC,EAAM36C,QAAUmL,EAAOnL,QAAU26C,EAAM36C,MAC/C26C,EAAMnyC,IAAI,QAAS2C,EAAOnL,OAG9B,GAAIiZ,EAAQ0hC,EAAM56C,SAAWoL,EAAOpL,SAAW46C,EAAM56C,OACjD46C,EAAMnyC,IAAI,SAAU2C,EAAOpL,QAG/BrI,KAAK0hD,SAAWuB,EAChBnoD,EAAQ2oD,sBAER,GAAIF,EACAzoD,EAAQ8qC,uBAMxBkd,aAAc,WACV,IAAIrvC,EAASzT,KAAK0jB,OAAOe,SAAS,MAClC,IAAIlF,EAAUvf,KAAKuf,QACnBvf,KAAKyT,OAAO,IAAI1L,EAAKwX,EAAQxjB,EAAGwjB,EAAQ/iB,EAAGiX,EAAOnL,MAAOmL,EAAOpL,SAChErI,KAAK0jD,UACL1jD,KAAK2jD,iBAGT92C,QAAS,SAASA,GACd,IAAI1K,EAASnC,KAAK+hD,SAASl1C,GAE3B7M,KAAK2jD,gBAEL,OAAOxhD,GAGXwhD,cAAe,WACX,IAAI3B,EAAiBhiD,KAAKuf,QAAQ1S,SAAW,GAC7C,IAAIo1C,EAAgBjiD,KAAKkiD,eACzB,GAAID,GAAiBD,EAAep1C,MAAO,CACvC,IAAIg3C,EAAgB5jD,KAAK0jB,OAAOe,WAChC,IAAIo/B,EAAU,IAAI/oD,EAAQ4R,UAAUk3C,GACpC,IAAIE,EAAgB7B,EAAch9B,eAAe8+B,KAAK,MAEtD,IAAIC,EAAc,IAAIj8C,EAAK,EAAG,EAAG+7C,EAAcx7C,QAASw7C,EAAcz7C,UACtE,IAAI47C,EAAgBJ,EAAQj3C,MAAMo3C,EAAahC,EAAep1C,OAE9Dq1C,EAAcx/C,SAASwhD,EAAcz6C,aAI7Cu5C,kBAAmB,WACf,IAAIxjC,EAAUvf,KAAKuf,QACfthB,EAASshB,EAAQoiB,WAAW1jC,OAC5BimD,EAAoB3kC,EAAQ2kC,kBAC5B5qB,EAAW19B,EAEf,IAAKA,EAAI,EAAGA,EAAIqC,EAAQrC,IAAK,CACzB09B,EAAY,IAAIopB,GACZ1iD,KAAMhF,EAAW,GACbkpD,EACA3kC,EAAQoiB,WAAW/lC,KAG3BoE,KAAK2hC,WAAWxlC,KAAKm9B,KAI7B7lB,OAAQ,SAAUhV,GACd,IAAIgV,EAEJ,GAAIhV,EACA,GAAInB,EAASmB,GACT,OAAQA,GACJ,KAAKwhD,GACDxsC,EAASzT,KAAKmkD,qBACd,MACJ,KAAKnE,GACDvsC,EAASzT,KAAKmkD,qBACd,IAAI9vB,EAAMr0B,KAAKlF,QAAQu9B,KACvB5kB,EAAO1X,GAAKs4B,EAAIt4B,EAChB0X,EAAOjX,GAAK63B,EAAI73B,EAChB,MACJ,KAAKk0B,GACDjd,EAASzT,KAAKokD,iBACd,MACJ,QACI3wC,EAASzT,KAAK+iC,YAEnB,CACH/iC,KAAKqkD,WAAW5lD,GAChBuB,KAAKskD,uBACL,KAAMtkD,KAAKlF,SAAWkF,KAAKlF,QAAQypD,YAC/BvkD,KAAKwkD,0BAIb/wC,EAASzT,KAAK+iC,QAGlB,OAAOtvB,GAGX4wC,WAAY,SAASv6C,GACjB,IAAIyV,EAAUvf,KAAKuf,QACnB,IAAI/V,EAAUM,EAAKN,UACnB,IAAIzN,EAAIwjB,EAAQxjB,EAAIyN,EAAQzN,EAC5B,IAAIS,EAAI+iB,EAAQ/iB,EAAIgN,EAAQhN,EAC5B,IAAI8L,EAAQiX,EAAQjX,MAAQw2C,EAAK55C,IAAI4E,EAAKxB,MAAOiX,EAAQslB,UACzD,IAAIx8B,EAASkX,EAAQlX,OAASy2C,EAAK55C,IAAI4E,EAAKzB,OAAQkX,EAAQulB,WAE5D9kC,KAAK+iC,QAAU,IAAIh7B,EAAKhM,EAAGS,EAAG8L,EAAOD,GAErCrI,KAAK0jB,OAAOsB,OAAO,CACfjpB,EAAGA,EACHS,EAAGA,EACH8L,MAAOA,EACPD,OAAQA,KAIhB5F,SAAU,SAAUqG,GAChB,GAAIA,EACA9I,KAAKyT,OAAO,IAAI1L,EAAKe,EAAM/M,EAAG+M,EAAMtM,EAAGwD,KAAK+iC,QAAQz6B,MAAOtI,KAAK+iC,QAAQ16B,cAExE,OAAOrI,KAAK+iC,QAAQv5B,WAO5BI,MAAO,WACH,IAAIk4C,EAAO9hD,KAAK6hD,YAEhBC,EAAKviC,QAAQ5N,GAAK7W,EAAQuU,WAE1B,GAAIrP,KAAKlF,SAAWkF,KAAKlF,QAAQuoD,aAAe9hC,EAAQvhB,KAAK0hD,UACzDI,EAAKviC,QAAQmiC,SAAW+C,GAAczkD,KAAK0hD,UAG/C,OAAO,IAAIznB,EAAM6nB,EAAKviC,UAG1BmP,OAAQ,SAAUjwB,GACd,IAAI3D,EAAUkF,KAAKlF,QAAS0nC,EAAUkiB,EACtC,GAAI3nD,EAAY0B,GACZA,EAAQ,KAGZ,GAAIuB,KAAKwiD,aACL,GAAIxiD,KAAKm5B,YAAc16B,EAAO,CAC1B+jC,EAAW,GACXkiB,EAAa,GACb1kD,KAAKm5B,WAAa16B,EAClB,GAAIuB,KAAKm5B,WAAY,CACjBr+B,EAAQiiC,eAAe5gC,KAAK6D,MAC5BwiC,EAASrmC,KAAK6D,UACX,CACH5E,EAAMiG,OAAOvG,EAAQiiC,eAAgB/8B,MACrC0kD,EAAWvoD,KAAK6D,MAGpB,IAAKlF,EAAQ6pD,mBACT7pD,EAAQ8pD,kBAAkBpiB,EAAUkiB,GAGxC,OAAO,OAKnBp6C,OAAQ,SAAUN,EAAOlJ,EAAQse,GAC7B,IAAI9U,EAAStK,KAAK0jB,OAAOpZ,SACzB,GAAIN,IAAUnP,EAAW,CACrB,GAAIukB,IAAa,OAASpf,KAAKlF,SAAWkF,KAAKlF,QAAQ+9B,iBAAmB7uB,IAAUM,EAAON,MACvFhK,KAAKlF,QAAQ+9B,gBAAgBnoB,IACzB,IAAI5V,EAAQw5B,WAAWt0B,KAAKlF,QAAQ49B,iBAAkB,CAAC14B,MAAO,CAACsK,EAAON,QAAS,OAGvF,IAAI3J,EAAIL,KAAKyT,SACToxC,EAAK,IAAIzlD,EAAMiB,EAAEiI,MAAQ,EAAGjI,EAAEgI,OAAS,GACvCy8C,EACAC,EAEJ,GAAIjkD,EAAQ,CACRgkD,EAAa96C,EAAQM,EAAON,MAC5B+6C,EAAc1kD,EAAES,SAASwJ,OAAOxJ,EAAQ,IAAMgkD,GAAYh+C,MAAM+9C,GAChE7kD,KAAKmjC,gBAAkBnjC,KAAKmjC,gBAAgBt8B,KAAKk+C,EAAYj+C,MAAMzG,EAAEmJ,YACrExJ,KAAKyC,SAASsiD,GAGlB/kD,KAAK0jB,OAAOpZ,OAAON,EAAO66C,GAC1B7kD,KAAKuf,QAAQ/Q,SAASxE,MAAQA,EAE9B,GAAIhK,KAAKlF,SAAWkF,KAAKlF,QAAQs/B,mBAC7Bp6B,KAAKlF,QAAQs/B,mBAAmBvG,UAGpC7zB,KAAKwkD,qBAEL,GAAIxkD,KAAKlF,QACLkF,KAAKlF,QAAQ6J,QAAQirB,GAAY,CAAE7vB,KAAMC,OAIjD,OAAOsK,GAGXsuB,YAAa,SAAUj7B,GACnB,IAAIwE,EAAS,GAAIvG,EAAGC,EAAGmpD,EAAKC,EAAMvjB,EAElC,IAAK9lC,EAAI,EAAGA,EAAIoE,KAAK2hC,WAAW1jC,OAAQrC,IAAK,CACzC8lC,EAAM1hC,KAAK2hC,WAAW/lC,GACtBqpD,EAAOvjB,EAAI9I,YACX,IAAK/8B,EAAI,EAAGopD,EAAMppD,EAAIopD,EAAKhnD,OAAQpC,IAAK,CACpCmpD,EAAMC,EAAKppD,GACX,GAAI8B,GAAQ,MAAO,CACf,IAAIS,EAAS4mD,EAAI5mD,SACjB,GAAIA,EAAO+U,OAAS/U,EAAO+U,OAASnT,KAChCmC,EAAOhG,KAAK6oD,QAEb,GAAIrnD,GAAQ,KAAM,CACrB,IAAIgG,EAASqhD,EAAIrhD,SACjB,GAAIA,EAAOwP,OAASxP,EAAOwP,OAASnT,KAChCmC,EAAOhG,KAAK6oD,QAGhB7iD,EAAOhG,KAAK6oD,IAKxB,OAAO7iD,GAGXqiD,mBAAoB,WAChB/pD,EAAEynC,KAAKliC,KAAK44B,cAAe,WACvB54B,KAAK6zB,aASbqG,aAAc,SAAUgrB,GACpB,IAAItpD,EAAG8lC,EACP,GAAIpkC,EAAS4nD,GAAc,CACvBA,EAAcA,EAAYC,oBAC1B,IAAKvpD,EAAI,EAAGA,EAAIoE,KAAK2hC,WAAW1jC,OAAQrC,IAAK,CACzC8lC,EAAM1hC,KAAK2hC,WAAW/lC,GACtB,GAAI8lC,EAAIniB,QAAQlhB,KAAK8mD,qBAAuBD,EACxC,OAAOxjB,QAGZ,GAAIwjB,aAAuB9lD,EAC9B,OAAO+hD,GAAiB+D,EAAallD,KAAK2hC,iBAE1C,OAAO3hC,KAAK2hC,WAAW1jC,OAAS+B,KAAK2hC,WAAW,GAAK,MAI7D8e,YAAa,SAAUrhB,GACnB,IAAI/+B,EAAIL,KAAKyT,SACT2xC,EAAShmB,EAAK7vB,OAAO,GAAGvC,cAAgBoyB,EAAK12B,MAAM,GAEvD,GAAIlC,EAAWnG,EAAE+kD,IACb,OAAOplD,KAAKqlD,gBAAgBhlD,EAAE+kD,MAGlC,OAAO/kD,EAAES,UAGbkkB,OAAQ,SAAUzF,GACd,GAAIA,EAAS,CACT,IAAI+lC,EAAetlD,KAAKuf,QACxB,IAAIgmC,EAEJvlD,KAAKwlD,YAAYxgC,OAAOhlB,KAAKylD,eAAelmC,IAE5C,GAAIvf,KAAK2kB,oBAAoBpF,EAAS,CAAC2C,GAAOC,GAAQC,GAAGC,KAAK,CAC1DriB,KAAKyT,OAAO,IAAI1L,EAAKu9C,EAAavpD,EAAGupD,EAAa9oD,EAAG8oD,EAAah9C,MAAOg9C,EAAaj9C,SACtFk9C,EAAe,KAGnB,GAAIhmC,EAAQoiB,WAAY,CACpB2jB,EAAa3jB,WAAapiB,EAAQoiB,WAClC3hC,KAAK0lD,oBAGTJ,EAAetqD,EAAWsqD,EAAc/lC,GAExC,GAAKA,EAAQ/Q,UAAY+2C,EACrBvlD,KAAK0jD,UAGT,GAAI4B,EAAaz4C,QACb7M,KAAK6M,QAAQy4C,EAAaz4C,WAKtC64C,kBAAmB,WACf,IAAI9sB,EAAc54B,KAAK44B,cACvB54B,KAAK2hC,WAAa,GAClB3hC,KAAK+iD,oBACL,IAAI7tC,EACJ,IAAI9W,EACJ,IAAIuF,EAEJ,IAAK,IAAI07B,EAAM,EAAGA,EAAMzG,EAAY36B,OAAQohC,IAAO,CAC/CnqB,EAAa0jB,EAAYyG,GACzBjhC,EAAS8W,EAAW9W,SACpBuF,EAASuR,EAAWvR,SACpB,GAAIvF,EAAO+U,OAAS/U,EAAO+U,QAAUnT,KACjCkV,EAAW9W,OAAO4B,KAAKk6B,aAAa97B,EAAOmhB,QAAQlhB,OAAS,WACzD,GAAIsF,EAAOwP,OAASxP,EAAOwP,QAAUnT,KACxCkV,EAAWvR,OAAO3D,KAAKk6B,aAAav2B,EAAO4b,QAAQlhB,OAAS,MAEhE6W,EAAW6d,gBAInBpO,oBAAqB7pB,EAAQwnB,mBAE7BmjC,eAAgB,SAASlmC,GACrB,MAAO,CACH7L,KAAM6L,EAAQ+I,KACdlqB,OAAQmhB,EAAQnhB,OAChB8nB,MAAO3G,EAAQ2G,MACf/G,KAAMI,EAAQJ,KACdyG,OAAQrG,EAAQqG,SAIxB0+B,qBAAsB,WAClB,GAAItkD,KAAKlF,QACLkF,KAAKlF,QAAQ6J,QAAQkrB,EAAkB,CAAC9vB,KAAMC,KAAMyT,OAAQzT,KAAK+iC,QAAQn5B,WAIjFy7C,gBAAiB,SAAUv8C,GACvB,IAAIwB,EAAStK,KAAKsK,SACdmJ,EAASzT,KAAKyT,SACdvJ,EAAKuJ,EAAOjK,UAEhB,GAAIc,EAAON,MACPlB,EAAMwB,OAAOA,EAAOxJ,SAAS+F,KAAKqD,GAAK,IAAMI,EAAON,OAGxD,OAAOlB,GAGXq7C,mBAAoB,WAChB,IAAI1wC,EAASzT,KAAKyT,SACdvJ,EAAKuJ,EAAOjK,UACZY,EAAKqJ,EAAO9J,cAEhB,OAAO5B,EAAKiE,WAAWhM,KAAKlF,QAAQsrC,YAAYl8B,GAAKlK,KAAKlF,QAAQsrC,YAAYh8B,KAGlFg6C,eAAgB,WACZ,IAAI3wC,EAASzT,KAAKyT,SAAS1J,cAAc/J,KAAKsK,SAASN,OACnDE,EAAKuJ,EAAOjK,UACZY,EAAKqJ,EAAO9J,cAEhB,OAAO5B,EAAKiE,WAAW9B,EAAIE,IAG/Bs5C,QAAS,WACL,IAAIl1C,EAAWxO,KAAKuf,QAAQ/Q,SAE5B,GAAIA,GAAYA,EAASxE,MACrBhK,KAAKsK,OAAOkE,EAASxE,OAGzBhK,KAAKmjC,gBAAkB,IAAI/jC,GAG/B+lB,OAAQ,SAAU1mB,GACd,IAAI8gB,EAAUvf,KAAKuf,QACf2G,EAAQ3G,EAAQ2G,MAChBN,EAASrG,EAAQqG,OACjBzG,EAAOI,EAAQJ,KAEnB,GAAI1gB,GAAS5B,EAAUqpB,EAAMN,QACzBA,EAAS5qB,EAAW,GAAI4qB,EAAQM,EAAMN,QAG1C,GAAInnB,GAAS5B,EAAUqpB,EAAM/G,MACzBA,EAAO+G,EAAM/G,KAGjBnf,KAAKwlD,YAAYxgC,OAAO,CACpBY,OAAQA,EACRzG,KAAMA,IAGV,GAAII,EAAQqjB,UAAYrjB,EAAQqjB,SAASpjB,QACrCxf,KAAKlF,QAAQ6qD,gBAAgB3lD,KAAMvB,IAI3Cg6B,SAAU,SAAUh6B,GAChB,GAAIuB,KAAK8kB,UAAW,CAChB,IAAIrR,EAASzT,KAAKyT,SAAUmyC,EACxB57C,EAAQhK,KAAKsK,SAASN,MAE1B,GAAIvL,EAAMT,UAAYS,EAAMT,UACxB,OAAOiO,EAAUI,MAAM5N,EAAOgV,EAAQzJ,EAAQA,EAAQ,OACnD,CACH47C,EAAennD,EAAMmL,QAAQU,OAAOmJ,EAAO3S,SAAUkJ,GACrD,GAAIyJ,EAAO/R,SAASkkD,GAChB,OAAO5lD,QAMvByiD,OAAQ,WACJ,MAAO,CACHE,QAAS3iD,KAAKuf,QAAQ5N,KAI9BkxC,kBAAmB,WACf,IAAItjC,EAAUvf,KAAKuf,QACnB,IAAIsmC,EAAgB7lD,KAAKylD,eAAelmC,GACxC,IAAIumC,EAAiBvmC,EAAQmE,OAC7B,IAAI/lB,GAAQ4hB,EAAQ5hB,KAAO,IAAIwnD,oBAC/B,IAAIK,EAEJK,EAAcv9C,MAAQiX,EAAQjX,MAC9Bu9C,EAAcx9C,OAASkX,EAAQlX,OAE/B,GAAI7B,EAAWs/C,GACXN,EAAcM,EAAezoD,KAAK2C,KAAMuf,QACrC,GAAIsmC,EAAcnyC,KAAM,CAC3B8xC,EAAc,IAAI59B,EAAKi+B,GACvBE,GAAkBP,QACf,GAAI7nD,GAAQ,YACf6nD,EAAc,IAAIh+B,EAAUq+B,QACzB,GAAIloD,GAAQ,SACf6nD,EAAc,IAAI/8B,EAAOo9B,QACtB,GAAIloD,GAAQ,OACf6nD,EAAc,IAAI9+B,EAAUm/B,QACzB,GAAIloD,GAAQ,QACf6nD,EAAc,IAAIl6B,EAAMu6B,QAExBL,EAAc,IAAI59B,EAAKi+B,GAG3B7lD,KAAKwlD,YAAcA,EACnBxlD,KAAK0jB,OAAOuG,OAAOjqB,KAAKwlD,iBAO5BxoB,GAAaykB,GAAej+C,OAAO,CACnCC,KAAM,SAAUwB,EAAMF,EAAIwa,GACtB,IAAIvN,EAAOhS,KACXyhD,GAAe76C,GAAGnD,KAAKpG,KAAK2U,EAAMuN,GAClCvf,KAAK4iD,yBACL5iD,KAAKgmD,cACLh0C,EAAKsW,KAAO,IAAIxtB,EAAQmwB,SAASjZ,EAAKuN,SACtCvN,EAAKsW,KAAKnJ,KAAKsC,IACfzP,EAAK0R,OAAOuG,OAAOjY,EAAKsW,MACxBtW,EAAKi0C,aAAej0C,EAAKk0C,aAAe,IAAI9mD,EAC5C4S,EAAKm0C,WAAWlhD,GAChB+M,EAAKo0C,WAAWrhD,GAChBiN,EAAKnF,QAAQmF,EAAKuN,QAAQ1S,SAC1BmF,EAAKq0C,SAAW,GAChB,GAAI9kC,EAAQhC,IAAYA,EAAQ3gB,OAC5BoT,EAAKpT,OAAO2gB,EAAQ3gB,SAI5B2gB,QAAS,CACL2G,MAAO,CACHN,OAAQ,IAEZ6D,SAAU61B,GACV51B,OAAQ41B,GACR1gD,OAAQ,GACRo6B,WAAY,KACZstB,cAAep3B,GACfq3B,YAAar3B,IAGjB8zB,qBAAsB,SAASC,GAC3BjjD,KAAK4iD,uBAAuBK,GAASjjD,KAAK0hD,WAG9CkB,uBAAwB,SAASK,GAC7B,GAAIjjD,KAAKlF,SAAWkF,KAAKlF,QAAQuoD,YAAa,CAC1C,IAAImD,EAAUxmD,KAAKlF,QAAQ2rD,SAC3B,IAAIlnC,EAAUmnC,GAAyBzD,GAASjjD,KAAK0hD,UAErD,GAAIuB,EAAO,CACP,GAAI1hC,EAAQhC,EAAQta,MAAO,CACvB,IAAIA,EAAOuhD,EAAQjnC,EAAQta,MAC3B,GAAIA,GAAQsc,EAAQhC,EAAQ+mC,eACzBrhD,EAAOA,EAAKi1B,aAAa3a,EAAQ+mC,eAEpCtmD,KAAK5B,OAAO6G,QACT,GAAIsc,EAAQhC,EAAQonC,QAAUplC,EAAQhC,EAAQqnC,OACjD5mD,KAAK5B,OAAO,IAAIgB,EAAMmgB,EAAQonC,MAAOpnC,EAAQqnC,QAGjD,GAAIrlC,EAAQhC,EAAQxa,IAAK,CACrB,IAAIA,EAAKyhD,EAAQjnC,EAAQxa,IACzB,GAAIA,GAAMwc,EAAQhC,EAAQgnC,aACtBxhD,EAAKA,EAAGm1B,aAAa3a,EAAQgnC,aAEjCvmD,KAAK2D,OAAOoB,QACT,GAAIwc,EAAQhC,EAAQsnC,MAAQtlC,EAAQhC,EAAQunC,KAC/C9mD,KAAK2D,OAAO,IAAIvE,EAAMmgB,EAAQsnC,IAAKtnC,EAAQunC,MAG/C,GAAIvlC,EAAQhC,EAAQ5hB,OAASqC,KAAKrC,SAAW4hB,EAAQ5hB,KAAM,CACvDqC,KAAKpB,OAAO,IACZoB,KAAKrC,KAAK4hB,EAAQ5hB,MAGtBqC,KAAK0hD,SAAWuB,EAEhBjjD,KAAK2hD,YACL3hD,KAAKglB,OAAOhlB,KAAKuf,cAEjBvf,KAAKuf,QAAUvkB,EAAW,GAAIukB,EAASvf,KAAKuf,WAKxDwT,YAAa,SAASwwB,GAClB,GAAIvjD,KAAKlF,SAAWkF,KAAKlF,QAAQuoD,YAC7B,GAAIrjD,KAAKlF,QAAQisD,sBAAuB,CACpC,IAAI9D,EAAQjjD,KAAKlF,QAAQisD,sBAAsBC,SAAShnD,KAAK0hD,SAASuF,KAEtE,GAAIhE,EAAO,CACPjjD,KAAKlF,QAAQ0oD,uBACb,GAAIjiC,EAAQvhB,KAAKuf,QAAQonC,QAAU3mD,KAAKuf,QAAQonC,QAAU,KAAM,CAC5DO,GAAW,OAAQjE,GACnBiE,GAAW,gBAAiBjE,GAC5BA,EAAMnyC,IAAI,QAAS9Q,KAAKuf,QAAQonC,OAChC1D,EAAMnyC,IAAI,QAAS9Q,KAAKuf,QAAQqnC,WAC5B,CACJ3D,EAAMnyC,IAAI,OAAQ9Q,KAAKuf,QAAQta,MAC/B,GAAIsc,EAAQ0hC,EAAMqD,eACdrD,EAAMnyC,IAAI,gBAAiB9Q,KAAKg6B,gBAAkBh6B,KAAKg6B,gBAAgBza,QAAQlhB,KAAO,MAE1F6oD,GAAW,QAASjE,GACpBiE,GAAW,QAASjE,GAGxB,GAAI1hC,EAAQvhB,KAAKuf,QAAQsnC,MAAQ7mD,KAAKuf,QAAQsnC,MAAQ,KAAM,CACxDK,GAAW,KAAMjE,GACjBiE,GAAW,cAAejE,GAC1BA,EAAMnyC,IAAI,MAAO9Q,KAAKuf,QAAQsnC,KAC9B5D,EAAMnyC,IAAI,MAAO9Q,KAAKuf,QAAQunC,SAC3B,CACH7D,EAAMnyC,IAAI,KAAM9Q,KAAKuf,QAAQxa,IAC7B,GAAIwc,EAAQ0hC,EAAMsD,aACdtD,EAAMnyC,IAAI,cAAe9Q,KAAKozB,gBAAkBpzB,KAAKozB,gBAAgB7T,QAAQlhB,KAAO,MAExF6oD,GAAW,MAAOjE,GAClBiE,GAAW,MAAOjE,GAGtB,GAAI1hC,EAAQvhB,KAAKuf,QAAQ5hB,OAAS4jB,EAAQ0hC,EAAMtlD,MAC5CslD,EAAMnyC,IAAI,OAAQ9Q,KAAKuf,QAAQ5hB,MAGnCqC,KAAK0hD,SAAWuB,EAChBjjD,KAAKlF,QAAQ2oD,sBAEb,GAAIF,EACAvjD,KAAKlF,QAAQq/B,4BAYjCqE,YAAa,WACT,OAAOx+B,KAAKs+B,yBAA2Bt+B,KAAKs+B,yBAAyB77B,WAAazC,KAAKimD,cAG3FE,WAAY,SAAS/nD,GACjB,IAAI+oD,EAAc/oD,aAAkB67B,EACpC,IAAImtB,EAAmBpnD,KAAKuf,QAAQ+mC,eAAiBp3B,GACrD,IAAIwyB,EACJ,GAAIyF,IAAgB/oD,EAAO87B,aAAaktB,GACpC,OAGJ,GAAIhpD,IAAWvD,EACXmF,KAAKiF,KAAO7G,EAGhB4B,KAAKqnD,6BAEL,GAAIjpD,IAAW,MACX,GAAI4B,KAAKg6B,gBAAiB,CACtBh6B,KAAKimD,cAAgBjmD,KAAKs+B,0BAA4Bt+B,KAAKg6B,iBAAiBv3B,WAC5EzC,KAAKsnD,wBACLtnD,KAAKunD,gBAAgB,KAAMvnD,KAAKimD,oBAEjC,GAAI7nD,aAAkBskD,GAAW,CACpChB,EAAWtjD,EAAO+U,MAAMuuC,SACxB,GAAIA,EACA1hD,KAAKunD,gBAAgB7F,EAAS/vC,IAElC3R,KAAKg6B,gBAAkB57B,EACvB4B,KAAKg6B,gBAAgBpB,YAAYz8B,KAAK6D,WACnC,GAAI5B,aAAkBgB,EAAO,CAChCY,KAAKunD,gBAAgB,KAAMnpD,GAC3B4B,KAAKimD,aAAe7nD,EACpB,GAAI4B,KAAKg6B,gBACLh6B,KAAKsnD,6BAGN,GAAIH,EAAa,CACpBzF,EAAWtjD,EAAOsjD,SAClB,GAAIA,EACA1hD,KAAKunD,gBAAgB7F,EAAS/vC,IAGlC3R,KAAKg6B,gBAAkB57B,EAAO87B,aAAaktB,GAC3CpnD,KAAKg6B,gBAAgBpB,YAAYz8B,KAAK6D,QAI9C5B,OAAQ,SAAUA,EAAQghB,GACtB,GAAIviB,EAAUuB,GAAS,CACnB,GAAIghB,GAAYpf,KAAKlF,QACjBkF,KAAKlF,QAAQ+9B,gBAAgBjD,iBAAiB,IAAI96B,EAAQy3B,mBAAmBvyB,KAAM5B,IAEvF4B,KAAKmmD,WAAW/nD,GAChB4B,KAAK6zB,UAET,OAAO7zB,KAAKg6B,gBAAkBh6B,KAAKg6B,gBAAkBh6B,KAAKimD,cAG9DsB,gBAAiB,SAAStiD,EAAMuiD,GAC5BxnD,KAAKuf,QAAQta,KAAOA,EACpB,GAAIuiD,EAAY,CACZxnD,KAAKuf,QAAQonC,MAAQa,EAAUzrD,EAC/BiE,KAAKuf,QAAQqnC,MAAQY,EAAUhrD,MAC5B,CACHwD,KAAKuf,QAAQonC,MAAQ,KACrB3mD,KAAKuf,QAAQqnC,MAAQ,OAU7Ba,cAAe,SAAUhpD,GACrB,GAAIA,EACA,GAAIA,aAAiB3D,EAAQ6L,YAAa,CACtClI,EAAMmK,KAAO,KACb5I,KAAK0nD,eAAiBjpD,EACtBuB,KAAK5B,OAAOK,EAAMqK,YAElB,KAAM,mDAEP,CACH,IAAK9I,KAAK0nD,eACN1nD,KAAK0nD,eAAiB,IAAI5sD,EAAQ6L,YAAY3G,KAAKw+B,cAAe,KAAM,MAE5E,OAAOx+B,KAAK0nD,iBAOpBjpB,YAAa,WACT,OAAOz+B,KAAKu+B,yBAA2Bv+B,KAAKu+B,yBAAyB97B,WAAazC,KAAKkmD,cAG3FE,WAAY,SAASziD,GACjB,IAAIgkD,EAAchkD,aAAkBs2B,EACpC,IAAImtB,EAAmBpnD,KAAKuf,QAAQgnC,aAAer3B,GACnD,IAAIwyB,EAEJ,GAAIiG,IAAgBhkD,EAAOu2B,aAAaktB,GACpC,OAGJ,GAAIzjD,IAAW9I,EACXmF,KAAK+E,GAAKpB,EAGd3D,KAAK4nD,6BAEL,GAAIjkD,IAAW,MACX,GAAI3D,KAAKozB,gBAAiB,CACtBpzB,KAAKkmD,cAAgBlmD,KAAKu+B,0BAA4Bv+B,KAAKozB,iBAAiB3wB,WAC5EzC,KAAK6nD,wBACL7nD,KAAK8nD,cAAc,KAAM9nD,KAAKkmD,oBAE/B,GAAIviD,aAAkB++C,GAAW,CACpChB,EAAW/9C,EAAOwP,MAAMuuC,SACxB,GAAIA,EACA1hD,KAAK8nD,cAAcpG,EAAS/vC,IAEhC3R,KAAKozB,gBAAkBzvB,EACvB3D,KAAKozB,gBAAgBwF,YAAYz8B,KAAK6D,WACnC,GAAI2D,aAAkBvE,EAAO,CAChCY,KAAK8nD,cAAc,KAAMnkD,GACzB3D,KAAKkmD,aAAeviD,EACpB,GAAI3D,KAAKozB,gBACLpzB,KAAK6nD,6BAEN,GAAIF,EAAa,CACpBjG,EAAW/9C,EAAO+9C,SAClB,GAAIA,EACA1hD,KAAK8nD,cAAcpG,EAAS/vC,IAEhC3R,KAAKozB,gBAAkBzvB,EAAOu2B,aAAaktB,GAC3CpnD,KAAKozB,gBAAgBwF,YAAYz8B,KAAK6D,QAI9C2D,OAAQ,SAAUA,EAAQyb,GACtB,GAAIviB,EAAU8G,GAAS,CACnB,GAAIyb,GAAYpf,KAAKlF,QACjBkF,KAAKlF,QAAQ+9B,gBAAgBjD,iBAAiB,IAAI96B,EAAQy3B,mBAAmBvyB,KAAMnF,EAAW8I,IAElG3D,KAAKomD,WAAWziD,GAEhB3D,KAAK6zB,UAET,OAAO7zB,KAAKozB,gBAAkBpzB,KAAKozB,gBAAkBpzB,KAAKkmD,cAG9D4B,cAAe,SAAS/iD,EAAIgjD,GACxB/nD,KAAKuf,QAAQxa,GAAKA,EAClB,GAAIgjD,EAAU,CACV/nD,KAAKuf,QAAQsnC,IAAMkB,EAAQhsD,EAC3BiE,KAAKuf,QAAQunC,IAAMiB,EAAQvrD,MACxB,CACHwD,KAAKuf,QAAQsnC,IAAM,KACnB7mD,KAAKuf,QAAQunC,IAAM,OAU3BkB,cAAe,SAAUvpD,GACrB,GAAIA,EACA,GAAIA,aAAiB3D,EAAQ6L,YAAa,CACtClI,EAAMoK,MAAQ,KACd7I,KAAKioD,eAAiBxpD,EACtBuB,KAAK2D,OAAOlF,EAAMqK,YAElB,KAAM,mDAEP,CACH,IAAK9I,KAAKioD,eACNjoD,KAAKioD,eAAiB,IAAIntD,EAAQ6L,YAAY3G,KAAKy+B,cAAe,KAAM,MAE5E,OAAOz+B,KAAKioD,iBAIpBvC,kBAAmB,WACf1lD,KAAK8yB,iBAAiB9yB,KAAK5B,SAAU,UACrC4B,KAAK8yB,iBAAiB9yB,KAAK2D,SAAU,WAGzCmvB,iBAAkB,SAASo1B,EAAU7pD,GACjC,IAAI2T,EAAOhS,KACX,IAAIlF,EAAUkX,EAAKlX,QACnB,GAAIotD,aAAoBxF,KAAc5nD,EAAQw2B,aAAa42B,EAAS/0C,MAAMxB,IAAK,CAC3E,IAAI+vC,EAAWwG,EAAS/0C,MAAMuuC,SAC9B,IAAIyG,EAAgBD,EAAS3oC,QAAQlhB,KACrC,IAAI+pD,EAAe,WACf,IAAIj1C,EAAQrY,EAAQ2rD,SAAS/E,EAAS/vC,IACtCu2C,EAAW/0C,EAAM+mB,aAAaiuB,GAC9Bn2C,EAAK3T,GAAM6pD,EAAU,OACrBl2C,EAAK+gB,eAET,GAAIj4B,EAAQ2rD,SAAS/E,EAAS/vC,IAC3By2C,QACI,CACH,IAAIC,EAAevtD,EAAQwtD,oBAAoBtB,SAAStF,EAASuF,KACjE,GAAIoB,EACAvtD,EAAQytD,2BAA2BpsD,KAAKksD,EAAaG,WAAWJ,UAIxEp2C,EAAK3T,GAAM6pD,EAAU,QAI7Br7C,QAAS,SAASA,GACd,IAAI1K,EAASnC,KAAK+hD,SAASl1C,GAC3B,GAAI0U,EAAQ1U,GACR7M,KAAK2jD,gBAET,OAAOxhD,GAGXggD,qBAAsB,SAAS5iC,GAC3B,IAAImE,EACJ,GAAIld,EAAW+Y,EAAQmE,QACnBA,EAASnE,EAAQmE,OAAOrmB,KAAK2C,KAAMuf,QAChC,GAAIA,EAAQ0H,KACfvD,EAAS,IAAIgD,EAAUnH,GAG3B,GAAImE,EAAQ,CACR1jB,KAAKkiD,eAAiBx+B,EACtBA,EAAO6I,eAAiB,MACxBvsB,KAAK0jB,OAAOuG,OAAOvG,GAGvB,OAAOA,GAGX0+B,qBAAsB,SAAS7iC,GAC3B,GAAI/Y,EAAW+Y,EAAQmE,QAAS,CAC5B1jB,KAAK0jB,OAAOriB,OAAOrB,KAAKkiD,gBACxBliD,KAAKmiD,qBAAqB5iC,QAE1Bvf,KAAKkiD,eAAel9B,OAAOzF,IAInCokC,cAAe,WACX,GAAI3jD,KAAKkiD,eAAgB,CACrB,IAAIn7C,EAASu5C,GACb,IAAI1hD,EAASoB,KAAK89B,YAClB,IAAI2qB,EAAS3J,EAAKr/C,MAAMb,EAAOX,OAAS,GACxC,IAAIyqD,EAAWD,EAAS,EAExB,MAAMC,EAAW,GAAK9pD,EAAO8pD,GAAU7+C,OAAOjL,EAAO6pD,IAAU,CAC3DC,IACAD,IAGJ,IAAI1/B,EAAWnqB,EAAO6pD,GACtB,IAAIjjC,EAAa5mB,EAAO8pD,GAExB,IAAIr8B,EAAcrsB,KAAKkiD,eAAez9B,WACtC,IAAInc,EAAQ+jB,EAAY/jB,MACxB,IAAID,EAASgkB,EAAYhkB,OACzB,IAAIsgD,EAAc/pD,EAAOX,OAAS,IAAM,EACxC,IAAImvC,EAAW5nB,EAAW2b,WAAWpY,GAErC,GAAI4/B,GAAe/pD,EAAOX,OAAS,GAAKmvC,EAAW,IAC7C5nB,EAAWhpB,IAAMusB,EAASvsB,GAAK4wC,EAAW9kC,GAAWkd,EAAWzpB,IAAMgtB,EAAShtB,GAAKqxC,EAAW/kC,GAAU,CAC3GsgD,EAAc,MACd5hD,EAAS,EAGb,IAAI+B,EAEJ,GAAI6/C,EAAa,CACb,IAAI3+C,EAASyjB,EAAKjM,KAAK0M,IAAI4wB,EAAK1+C,MAAM2oB,EAASvsB,EAAIgpB,EAAWhpB,EAAGusB,EAAShtB,EAAIypB,EAAWzpB,IACzF+M,EAAQ,IAAI1J,GAAO2pB,EAAShtB,EAAIypB,EAAWzpB,GAAK,EAAIypB,EAAWzpB,GAAIgtB,EAASvsB,EAAIgpB,EAAWhpB,GAAK,EAAIgpB,EAAWhpB,GAE/G,GAAIsiD,EAAK5iD,IAAI8N,KAAW,GAAI,CACxBlB,EAAM/M,GAAKgL,EACX+B,EAAMtM,GAAI6L,EAAS,OAChB,GAAI2B,EAAQ,MAAQ,EAAG,CAC1BlB,EAAM/M,GAAKuM,EAAQ,EACnBQ,EAAMtM,GAAK6L,EAAStB,OACjB,GAAIiD,GAAS,IAAO,EAAIA,GAASA,EAAQ,GAC5ClB,EAAMtM,GAAI6L,OACP,GAAI2B,EAAQ,GAAKA,EAAQ,GAAI,CAChClB,EAAM/M,GAAKuM,EACXQ,EAAMtM,GAAK6L,OAEZ,CACH,IAAIugD,EAAS9J,EAAKr/C,MAAMb,EAAOX,OAAS,GACxC6K,EAAQlK,EAAOgqD,GAAQh/C,QACvB4b,EAAa5mB,EAAOgqD,EAAS,GAC7B7/B,EAAWnqB,EAAOgqD,EAAS,GAE3B,IAAIthB,EAAU9hB,EAAWzpB,GAAK+M,EAAM/M,GAAKgtB,EAAShtB,GAAK+M,EAAM/M,EAAIgL,GAAUslB,EAAY/jB,MAAQvB,EAC/F,IAAIwgC,EAAU/hB,EAAWhpB,GAAKsM,EAAMtM,GAAKusB,EAASvsB,GAAKsM,EAAMtM,EAAIuK,GAAUslB,EAAYhkB,OAAStB,EAEhG+B,EAAM/M,GAAKurC,EACXx+B,EAAMtM,GAAK+qC,EAGfvnC,KAAKkiD,eAAez/C,SAASqG,KAQrC4lB,OAAQ,SAAUjwB,GACd,IAAI3D,EAAUkF,KAAKlF,QAAS0nC,EAAUkiB,EACtC,GAAI1kD,KAAKwiD,aACL,GAAIxiD,KAAKm5B,aAAe16B,EAAO,CAC3BuB,KAAKm5B,WAAa16B,EAClB+jC,EAAW,GACXkiB,EAAa,GACb,GAAI1kD,KAAKm5B,WAAY,CACjBn5B,KAAKyzB,QAAU,IAAI6M,EAAsBtgC,KAAMA,KAAKuf,QAAQspC,WAC5D/tD,EAAQorC,OAAOlmC,KAAKyzB,QAAS,MAC7B34B,EAAQiiC,eAAe5gC,KAAK6D,MAC5BwiC,EAASrmC,KAAK6D,WAEd,GAAIA,KAAKyzB,QAAS,CACd34B,EAAQorC,OAAOlmC,KAAKyzB,QAAS,OAC7Br4B,EAAMiG,OAAOvG,EAAQiiC,eAAgB/8B,MACrCA,KAAKyzB,QAAU54B,EACf6pD,EAAWvoD,KAAK6D,MAIxB,GAAIA,KAAKyzB,QACLzzB,KAAKyzB,QAAQI,UAGjB,IAAK/4B,EAAQ6pD,mBACT7pD,EAAQ8pD,kBAAkBpiB,EAAUkiB,GAExC,OAAO,OAUnBjxC,OAAQ,SAAUhV,GACd,GAAIA,IAAUnB,EAASmB,GACnBuB,KAAK+iC,QAAUtkC,OAEf,OAAOuB,KAAK+iC,SAQpBplC,KAAM,SAAUc,GACZ,IAAI8gB,EAAUvf,KAAKuf,QACnB,GAAI9gB,GACA,GAAIA,IAAU8gB,EAAQ5hB,KAAM,CACxB4hB,EAAQ5hB,KAAOc,EACfuB,KAAKgmD,cACLhmD,KAAK6zB,gBAGT,OAAOtU,EAAQ5hB,MAIvBqoD,YAAa,WACT,IAAIroD,GAAQqC,KAAKuf,QAAQ5hB,MAAQ,IAAIqP,cACrC,GAAIrP,GAAQqhD,EACRh/C,KAAK8oD,QAAU,IAAI7qB,EAAgBj+B,WAEnCA,KAAK8oD,QAAU,IAAI/qB,EAAe/9B,OAU1CpB,OAAQ,SAAUH,GACd,GAAIA,EAAO,CACPuB,KAAKqmD,SAAW,GAChB,IAAK,IAAIzqD,EAAI,EAAGA,EAAI6C,EAAMR,OAAQrC,IAAK,CACnC,IAAImtD,EAAatqD,EAAM7C,GACvB,GAAImtD,aAAsBjuD,EAAQsE,MAC9BY,KAAKqmD,SAASlqD,KAAK,IAAIrB,EAAQ6L,YAAYoiD,SACxC,GAAIA,EAAW3rD,eAAe,MAAQ2rD,EAAW3rD,eAAe,KACnE4C,KAAKqmD,SAASlqD,KAAK,IAAIrB,EAAQ6L,YAAY,IAAIvH,EAAM2pD,EAAWhtD,EAAGgtD,EAAWvsD,UAE9E,KAAM,oFAIX,CACH,IAAIwsD,EAAM,GACV,GAAInsD,EAAUmD,KAAKqmD,UACf,IAAK,IAAIrqD,EAAI,EAAGA,EAAIgE,KAAKqmD,SAASpoD,OAAQjC,IACtCgtD,EAAI7sD,KAAK6D,KAAKqmD,SAASrqD,GAAG8M,OAGlC,OAAOkgD,IAOflrB,UAAW,WACP,IAAIkrB,EAAM,CAAChpD,KAAKw+B,eAChB,GAAIx+B,KAAKqmD,SACL,IAAK,IAAIrqD,EAAI,EAAGA,EAAIgE,KAAKqmD,SAASpoD,OAAQjC,IACtCgtD,EAAI7sD,KAAK6D,KAAKqmD,SAASrqD,GAAG8M,OAGlCkgD,EAAI7sD,KAAK6D,KAAKy+B,eACd,OAAOuqB,GAGXn1B,QAAS,WACL7zB,KAAKipD,qBACLjpD,KAAKkpD,eACLlpD,KAAK2jD,gBAEL,GAAI3jD,KAAKyzB,QACLzzB,KAAKyzB,QAAQI,WAIrBo1B,mBAAoB,WAChB,IAAI/zC,EAAalV,KACbw+B,EAAaC,EACb0qB,EAAkBC,EAClBhrD,EAAS8W,EAAW9W,SACpBuF,EAASuR,EAAWvR,SAExB,GAAIvF,aAAkBgB,EAClBo/B,EAAcpgC,OACX,GAAIA,aAAkBskD,GACzB,GAAIxB,GAAgB9iD,GAChB+qD,EAAmB/qD,EAAO+U,MAAMwuB,gBAEhCwnB,EAAmB,CAAC/qD,GAI5B,GAAIuF,aAAkBvE,EAClBq/B,EAAc96B,OACX,GAAIA,aAAkB++C,GACzB,GAAIxB,GAAgBv9C,GAChBylD,EAAmBzlD,EAAOwP,MAAMwuB,gBAEhCynB,EAAmB,CAACzlD,GAI5B,GAAI66B,GACA,GAAI4qB,EACAl0C,EAAWqpB,yBAA2B4iB,GAAiB3iB,EAAa4qB,QAErE,GAAID,EACP,GAAI1qB,EACAvpB,EAAWopB,yBAA2B6iB,GAAiB1iB,EAAa0qB,QACjE,GAAIC,EACPppD,KAAKqpD,uBAAuBF,EAAkBC,IAK1DC,uBAAwB,SAASF,EAAkBC,GAC/C,IAAIE,EAAiBlK,GACrB,IAAIxL,EAAUwL,GACd,IAAImK,EAAsBC,EAC1B,IAAIhrB,EAAaC,EACjB,IAAIgrB,EAAWC,EACf,IAAI1vB,EAAiB5G,EACrB,IAAIu2B,EAAWC,EACf,IAAI5V,EAEJ,IAAK2V,EAAY,EAAGA,EAAYR,EAAiBlrD,OAAQ0rD,IAAa,CAClE3vB,EAAkBmvB,EAAiBQ,GACnC,IAAKzI,GAAgBlnB,GAAkB,CACnCwE,EAAcxE,EAAgBv3B,WAE9B,IAAKmnD,EAAY,EAAGA,EAAYR,EAAiBnrD,OAAQ2rD,IAAa,CAClEx2B,EAAkBg2B,EAAiBQ,GACnC,IAAK1I,GAAgB9tB,GAAkB,CACnCqL,EAAcrL,EAAgB3wB,WAC9BuxC,EAAO8K,EAAKtvC,MAAMgvB,EAAY2C,WAAW1C,IAEzC,GAAIuV,EAAOsV,GAAkBtpD,KAAKlF,SAAWkF,KAAK6pD,iBAAiBrrB,EAAaC,EAAazE,EAAiB5G,GAAkB,CAC5Hk2B,EAAiBtV,EACjBuV,EAAuBvvB,EACvBwvB,EAAuBp2B,EAG3B,GAAI4gB,EAAOJ,EAAS,CAChB6V,EAAYzvB,EACZ0vB,EAAYt2B,EACZwgB,EAAUI,MAO9B,GAAIuV,EAAsB,CACtBE,EAAYF,EACZG,EAAYF,EAGhBxpD,KAAKs+B,yBAA2BmrB,EAChCzpD,KAAKu+B,yBAA2BmrB,GAGpCG,iBAAkB,SAASrrB,EAAaC,EAAazE,EAAiB5G,GAClE,IAAI02B,EAAS9pD,KAAK8oD,QAClB,IAAIiB,EAAY,KAChB,GAAID,aAAkB7rB,EAAiB,CACnC,IAAIr/B,EAASkrD,EAAO3rB,YAAYK,EAAaC,EAAazE,EAAiB5G,GACvE93B,EAAOe,EACNyN,EAAMkgD,EAEXA,EAAUhqD,KAAKiqD,iBAAiBzrB,EAAaC,EAAazE,EAAgB7mB,MAAOigB,EAAgBjgB,OACjGvU,EAAOke,QAAQ0hB,GACf5/B,EAAOzC,KAAKsiC,GAGZ,IAAK,IAAIY,EAAM,EAAGA,EAAMzgC,EAAOX,OAAQohC,IAAO,CAC1C/jC,EAAQsD,EAAOygC,EAAM,GACrBhjC,EAAMuC,EAAOygC,GACbv1B,EAAO,IAAI/B,EAAK+2C,EAAK35C,IAAI7J,EAAMS,EAAGM,EAAIN,GAAI+iD,EAAK35C,IAAI7J,EAAMkB,EAAGH,EAAIG,GAChDsiD,EAAK5iD,IAAIZ,EAAMS,EAAIM,EAAIN,GAAI+iD,EAAK5iD,IAAIZ,EAAMkB,EAAIH,EAAIG,IAClE,GAAIsN,EAAKxB,MAAQ,EAAG,CAChBwB,EAAK/N,IACL+N,EAAKxB,OAAO,EAEhB,GAAIwB,EAAKzB,OAAS,EAAG,CACjByB,EAAKtN,IACLsN,EAAKzB,QAAQ,EAGjB,IAAKyB,EAAK9L,WAAagC,KAAKlF,QAAQovD,gBAAgBC,YAAYrgD,EAAMkgD,GAAU,CAC5ED,EAAY,MACZ,QAIZ,OAAOA,GAGXE,iBAAkB,SAASzrB,EAAaC,EAAaxe,EAAaC,GAC9D,IAAI8pC,EAAU,GACd,GAAIhqD,KAAKoqD,oBAAoB5rB,EAAave,GACtC+pC,EAAQ7tD,KAAK8jB,GAEjB,GAAIjgB,KAAKoqD,oBAAoB3rB,EAAave,GACtC8pC,EAAQ7tD,KAAK+jB,GAEjB,OAAO8pC,GAGXI,oBAAqB,SAAUthD,EAAOqK,GAClC,IAAIM,EAASN,EAAMM,SAAUmyC,EACzB57C,EAAQmJ,EAAM7I,SAASN,MACvB41B,EAAQC,EACRwqB,EAAU52C,EAAO1X,EACjBuuD,EAAU72C,EAAOjX,EAErBopD,EAAe98C,EAAMc,QAAQU,OAAOmJ,EAAO3S,SAAUkJ,GACrD41B,EAASgmB,EAAa7pD,EACtB8jC,EAAS+lB,EAAappD,EACtB,OAAOojC,EAASyqB,GAAWzqB,EAAUyqB,EAAU52C,EAAOnL,OAAUu3B,EAASyqB,GAAWzqB,EAAUyqB,EAAU72C,EAAOpL,QAGnH2c,OAAQ,SAAUzF,GACd,GAAIA,EAAS,CACTvf,KAAKuf,QAAUvkB,EAAW,GAAIgF,KAAKuf,QAASA,GAE5C,IAAI3gB,EAASoB,KAAKuf,QAAQ3gB,OAE1B,GAAI2iB,EAAQ3iB,IAAWA,EAAOX,OAAS,EAAG,CACtC+B,KAAKpB,OAAOA,GACZoB,KAAKkpD,eAGT,GAAK3pC,GAAWA,EAAQ1S,SAAY0S,EAAQ0H,KACxCjnB,KAAK6M,QAAQ0S,EAAQ1S,SAGzB7M,KAAKsoB,KAAKtD,OAAO,CACb7F,KAAMI,EAAQJ,KACdyG,OAAQrG,EAAQqG,OAChB6D,SAAUlK,EAAQkK,SAClBC,OAAQnK,EAAQmK,WAQ5B9f,MAAO,WACH,IAAIk4C,EAAO9hD,KAAK6hD,YAEhB,GAAI7hD,KAAKlF,SAAWkF,KAAKlF,QAAQuoD,aAAe9hC,EAAQvhB,KAAK0hD,UACzDI,EAAKviC,QAAQmiC,SAAW+C,GAAczkD,KAAK0hD,UAG/C,OAAO,IAAI1kB,GAAWh9B,KAAKiF,KAAMjF,KAAK+E,GAAI+8C,EAAKviC,UAMnDsiC,UAAW,WACP,IAAI58C,EAAOjF,KAAKiF,KAAKw9C,OAASziD,KAAKiF,KAAKw9C,OAASziD,KAAKiF,KAAKzH,WACvDuH,EAAK/E,KAAK+E,GAAG09C,OAASziD,KAAK+E,GAAG09C,OAASziD,KAAK+E,GAAGvH,WAEnD,IAAIskD,EAAO9mD,EAAW,GAAI,CACtBukB,QAASvf,KAAKuf,QACdta,KAAMA,EACNF,GAAIA,IAGR,GAAIwc,EAAQvhB,KAAK0hD,UACbI,EAAKJ,SAAW1hD,KAAK0hD,SAASlkD,WAGlCskD,EAAKviC,QAAQ3gB,OAASoB,KAAKpB,SAC3B,OAAOkjD,GASXrpB,SAAU,SAAUh6B,GAChB,GAAIuB,KAAK8kB,UAAW,CAChB,IAAIhmB,EAAI,IAAIM,EAAMX,EAAM1C,EAAG0C,EAAMjC,GAAIyI,EAAOjF,KAAKw+B,cAAez5B,EAAK/E,KAAKy+B,cAC1E,GAAIhgC,EAAMT,UAAYS,EAAMT,WAAaS,EAAMiD,SAASuD,IAASxG,EAAMiD,SAASqD,GAC5E,OAAO/E,KAEX,GAAIA,KAAK8oD,QAAQnrB,QAAQ7+B,GACrB,OAAOkB,OAKnBmlB,OAAQ,SAAU1mB,GACd,IAAIshB,GAAS/f,KAAKuf,QAAQqG,QAAU,IAAI7F,MAExC,GAAIthB,GAAS5B,EAAUmD,KAAKuf,QAAQ2G,MAAMN,OAAO7F,OAC7CA,EAAQ/f,KAAKuf,QAAQ2G,MAAMN,OAAO7F,MAGtC/f,KAAKsoB,KAAKtD,OAAO,CACbY,OAAQ,CACJ7F,MAAOA,MAKnBmpC,aAAc,WACV,IAAK3nC,EAAQvhB,KAAKsoB,MACd,OAEJtoB,KAAK2nB,YACL3nB,KAAKyT,OAAOzT,KAAK8oD,QAAQjrB,cAG7BlW,UAAW,WACP,GAAI3nB,KAAK8oD,QACL9oD,KAAK8oD,QAAQ9qB,QAEjB,IAAI5/B,EAAS4B,KAAKw+B,cAClB,IAAI76B,EAAS3D,KAAKy+B,cAClB,IAAI7/B,EAASoB,KAAKpB,SAElBoB,KAAKsoB,KAAKtD,OAAO,CACbpmB,OAAQ,CAACR,GAAQkf,OAAO1e,EAAQ,CAAC+E,OAIzC2jD,sBAAuB,WACnBtnD,KAAKg6B,gBAAkBn/B,EACvBmF,KAAKs+B,yBAA2BzjC,GAGpCgtD,sBAAuB,WACnB7nD,KAAKozB,gBAAkBv4B,EACvBmF,KAAKu+B,yBAA2B1jC,GAGpCwsD,2BAA4B,WACxB,GAAIrnD,KAAKg6B,gBACL5+B,EAAMiG,OAAOrB,KAAKg6B,gBAAgBpB,YAAa54B,OAIvD4nD,2BAA4B,WACxB,GAAI5nD,KAAKozB,gBACLh4B,EAAMiG,OAAOrB,KAAKozB,gBAAgBwF,YAAa54B,OAIvDyiD,OAAQ,WACJ,IAAIvtC,EAAalV,KACjB,IAAIiF,EAAMF,EAAI+D,EACd,GAAIoM,EAAWjQ,MAAQiQ,EAAWjQ,KAAKw9C,OACnCx9C,EAAOiQ,EAAWjQ,KAAKw9C,aACpB,CACH35C,EAAQoM,EAAW+wC,aACnBhhD,EAAO,CACHlJ,EAAG+M,EAAM/M,EACTS,EAAGsM,EAAMtM,GAIjB,GAAI0Y,EAAWnQ,IAAMmQ,EAAWnQ,GAAG09C,OAC/B19C,EAAKmQ,EAAWnQ,GAAG09C,aAChB,CACH35C,EAAQoM,EAAWgxC,aACnBnhD,EAAK,CACDhJ,EAAG+M,EAAM/M,EACTS,EAAGsM,EAAMtM,GAIjB,MAAO,CACHyI,KAAOA,EACPF,GAAIA,MAKZwlD,GAAUhM,EAAO/6C,OAAO,CACxBC,KAAM,SAAUjB,EAASgoD,GACrB,IAAIx4C,EAAOhS,KAEXrF,MAAMgzB,QAAQnrB,GACd+7C,EAAO33C,GAAGnD,KAAKpG,KAAK2U,EAAMxP,EAASgoD,GAEnCx4C,EAAKy4C,aAELz4C,EAAK04C,gBACL14C,EAAK24C,qBAAqB34C,EAAKuN,SAC/BvN,EAAK44C,cAAcJ,GACnBx4C,EAAK64C,uBAEL74C,EAAK84C,cAEL94C,EAAKsrB,UAAY,IAAI1S,EAAM,CACvBjZ,GAAI,eAERK,EAAKukB,OAAOtM,OAAOjY,EAAKsrB,WAExBtrB,EAAKk4C,gBAAkB,IAAIa,GAAe/4C,GAE1CA,EAAKqmB,KAAO,IAAIj5B,EAChB4S,EAAKquB,UAAY,GACjBruB,EAAKg5C,aAAe,IAAIpgC,EAAM,CAC1BjZ,GAAI,kBAERK,EAAKukB,OAAOtM,OAAOjY,EAAKg5C,cAExBh5C,EAAKi5C,kBAELj5C,EAAK4iB,cAEL5iB,EAAK0mB,iBAAmB,IAAI0J,EAAgBpwB,EAAM,CAAE4wB,SAAU5wB,EAAKuN,QAAQqjB,WAC3E5wB,EAAKooB,mBAAqB,IAAIoH,EAAkBxvB,GAEhDA,EAAKk0B,OAAOl0B,EAAK0mB,iBAAkB,MACnC1mB,EAAKk0B,OAAOl0B,EAAKooB,mBAAoB,MAErCpoB,EAAKknB,SAAW,IAAI8M,EAASh0B,GAE7BA,EAAKk5C,WAAa,GAElBl5C,EAAKm5C,mBAAqB,MAE1Bn5C,EAAKo5C,kBAELp5C,EAAKq5C,uBAELr5C,EAAKs5C,wBAELt5C,EAAKhH,KAAKgH,EAAKuN,QAAQvU,MAEvBgH,EAAKukB,OAAO9I,QAGhBlO,QAAS,CACLlhB,KAAM,UACNktD,MAAO,UACP53B,OAAQ,GACRsI,SAAU,GACVjxB,KAAM,EACNmxB,QAAS,EACTC,QAAS,EACTovB,WAAY,GACZC,UAAW,KACXpJ,SAAU,GACVqJ,SAAU,KACV9oB,SAAU,CACNt4B,OAAQ,GACRu4B,OAAQ,GACR5b,KAAM,KACN0T,MAAO,GACP+K,KAAM,CACFJ,KAAM,CACF9mC,KAAM,GACNwL,MAAO,KAGf3I,OAAQ,MAEZk2B,SAAU,GACVyB,WAAY,CACR77B,IAAK,QAETwuD,QAAS,CAAEn0B,QAAS,KAAM3U,OAAQ,OAClCvO,KAAM,CACFkjB,QAAS,KACT8P,QAAS,GACTC,QAAS,IAEbtoB,cAAenkB,EAAQmkB,cAAc,CAAEG,SAAU,OACjDwsC,mBAAoB,CAChBhpB,SAAU,CACNjI,MAAO,IAEXh9B,KAAMqhD,GAEVzrB,OAAQ,GACRqF,YAAa,IAGjBxD,OAAQ,CACJjF,GACAD,GACAO,GAAK4uB,GACLzvB,GACAC,EACAovB,EACAC,EACAlvB,GACAC,GACA,eACA,OACA,SACA,OACA,SACA,MACA,YACAR,GACAC,GACAC,IAGJmF,MAAO,WACH,OAAOr6B,KAGX4wD,qBAAsB,WAClB,IAAIzoB,EAAW5iC,KAAKuf,QAAQqjB,SAC5B,GAAIA,EAAU,CACV,IAAIjI,EAAQiI,EAASjI,MACrB,GAAI36B,KAAKqjD,aAAe1oB,IAAU,SAAWA,GAASA,EAAM18B,SAAW,GACnE08B,EAAQ,CAAC,cAAe,OAAQ,OAAQ,kBAAmB,uBAG/D,GAAIA,GAASA,EAAM18B,OAAQ,CACvB+B,KAAK6rD,QAAU,IAAIC,GAAe9rD,KAAM,CACpC26B,MAAOA,GAAS,GAChBoxB,MAAO19B,EAAMruB,KAAKgsD,cAAehsD,MACjCisD,MAAO,QAGXjsD,KAAK6rD,QAAQrpD,QAAQi6B,IAAI,CACrByvB,UAAW,SAGflsD,KAAKwC,QAAQ2pD,QAAQnsD,KAAK6rD,QAAQrpD,SAClCxC,KAAKosD,aAKjBC,YAAa,WACT,GAAKrsD,KAAKssD,QAAUtsD,KAAKssD,OAAOjwD,QAAW2D,KAAKssD,OAAQ,CACpD,IAAId,EAAaxrD,KAAKwrD,WACtB,IAAIe,EAAOf,EAAWe,QAAU,GAChC,IAAInqD,EAAQmqD,EAAKtuD,OACjB,IAAIglD,EAAQuJ,GAAYhB,EAAY,IACpC,IAAIr4C,EAAQnT,KAAKysD,aAAaxJ,EAAO,IAErC,IAAKjjD,KAAK2E,QAAQ,MAAO,CAAEwO,MAAOA,IAAU,CACxCq4C,EAAWjpD,OAAOH,EAAO6gD,GACzB,IAAIoF,EAAeroD,KAAKsoD,oBAAoBtB,SAAS/D,EAAMgE,KAC3DoB,EAAa7lD,QAAU2Q,EACvBnT,KAAK0sD,KAAKv5C,MAKtBs5C,aAAc,SAAS/K,EAAUniC,GAC7BA,EAAUvkB,EAAW,GAAIgF,KAAKuf,QAAQN,cAAeM,GACrDA,EAAQmiC,SAAWA,EACnB,IAAIvuC,EAAQ,IAAI8mB,EAAM1a,EAASvf,MAC/B,OAAOmT,GAGXw5C,iBAAkB,WACd,GAAM3sD,KAAKssD,QAAUtsD,KAAKssD,OAAOjwD,QAAW2D,KAAKssD,OAAS,CACtD,IAAIvF,EAAwB/mD,KAAK+mD,sBACjC,IAAIwF,EAAOxF,EAAsBwF,QAAU,GAC3C,IAAInqD,EAAQmqD,EAAKtuD,OACjB,IAAIglD,EAAQuJ,GAAYzF,EAAuB,IAC/C,IAAI7xC,EAAalV,KAAKu5B,kBAAkB0pB,GACxC,IAAKjjD,KAAK2E,QAAQ,MAAO,CAAEuQ,WAAYA,IAAe,CAClDlV,KAAK4sD,oBAAoB3J,EAAMgE,KAAO/xC,EACtC6xC,EAAsBxkD,OAAOH,EAAO6gD,GACpCjjD,KAAK6sD,cAAc33C,EAAY,OAC/BlV,KAAK0sD,KAAKx3C,MAKtBqkB,kBAAmB,SAASmoB,EAAUtjD,EAAQuF,GAC1C,IAAI4b,EAAUvkB,EAAW,GAAIgF,KAAKuf,QAAQqsC,oBAC1CrsC,EAAQmiC,SAAWA,EAEnB,IAAIxsC,EAAa,IAAI8nB,GAAW5+B,GAAU,IAAIgB,EAASuE,GAAU,IAAIvE,EAASmgB,GAE9E,OAAOrK,GAGX43C,UAAW,SAASpL,EAAUqL,GAC1B/sD,KAAKgtD,aACL,IAAIC,EAAS5K,EACb,IAAIzf,EAAW5iC,KAAKuf,QAAQqjB,SAE5B,GAAImqB,GAAc,QAAS,CACvBE,EAAUrqB,EAASsqB,aACnB7K,EAAWzf,EAASuqB,mBACjB,GAAIJ,GAAc,aAAc,CACnC,IAAIK,EAA4B/+B,EAAMg/B,GAAoBrtD,MAC1DitD,EAAUjyD,EAAW,GAAI,CAAEiK,KAAMmoD,EAA2BroD,GAAIqoD,GAA6BxqB,EAAS0qB,mBACtGjL,EAAWzf,EAAS2qB,wBAEpB,OAGJvtD,KAAKssD,OAAS,IAAIkB,GAAYxtD,KAAKwC,QAAS,CACxCsD,OAAQuoB,EAAMruB,KAAKytD,QAASztD,MAC5Bw1B,OAAQnH,EAAMruB,KAAK0tD,QAAS1tD,MAC5BijD,MAAOvB,EACP/jD,KAAMovD,EACNppD,OAAQ3D,KACRitD,QAASA,EACT5K,SAAUA,IAGdriD,KAAK2E,QAAQ,OAAQ3E,KAAK2tD,cAG9BjB,KAAM,SAAS3sD,GACX,GAAIA,EAAK2hD,SAAU,CACf,IAAIqL,EAAahtD,aAAgBk6B,EAAQ,QAAU,aACnDj6B,KAAK8sD,UAAU/sD,EAAK2hD,SAAUqL,KAItCC,WAAY,WACR,GAAIhtD,KAAKssD,OAAQ,CACbtsD,KAAK4tD,qBAAqBC,cAAc7tD,KAAKssD,OAAOrJ,OAEpDjjD,KAAK8tD,mBAIbC,SAAU,WACN,GAAI/tD,KAAKssD,QAAUtsD,KAAKssD,OAAOjwD,QAC1B2D,KAAK2E,QAAQ,OAAQ3E,KAAK2tD,aAC3B3tD,KAAK4tD,qBAAqBI,QAIlCP,QAAS,WACL,GAAIztD,KAAKssD,QAAUtsD,KAAKssD,OAAOjwD,QAC1B2D,KAAK2E,QAAQ,OAAQ3E,KAAK2tD,aAAc,CACzC3tD,KAAK4tD,qBAAqBI,OAC1BhuD,KAAK8tD,mBAIbJ,QAAS,WACL,GAAI1tD,KAAKssD,SAAWtsD,KAAK2E,QAAQ,SAAU3E,KAAK2tD,aAAc,CAC1D,IAAI1K,EAAQjjD,KAAKssD,OAAOrJ,MACxBjjD,KAAK4tD,qBAAqBC,cAAc5K,GACxC,IAAIzgD,EAAUxC,KAAK4sD,oBAAoB3J,EAAMgE,MAAQjnD,KAAKymD,SAASxD,EAAMtxC,IACzE,GAAInP,EACAA,EAAQwgD,qBAAqBC,GAEjCjjD,KAAK8tD,mBAIbF,mBAAoB,WAChB,OAAO5tD,KAAKssD,OAAO/sC,QAAQ5hB,OAAS,QAAUqC,KAAKwrD,WAAaxrD,KAAK+mD,uBAGzE4G,UAAW,WACP,IAAIxrD,EAAS,CAAEwK,UAAW3M,KAAKssD,OAAO2B,SACtC9rD,EAAOnC,KAAKssD,OAAO/sC,QAAQ5hB,MAAQqC,KAAKssD,OAAOrJ,MAC/C,OAAO9gD,GAGX2rD,eAAgB,WACZ,GAAI9tD,KAAKssD,OAAQ,CACbtsD,KAAKssD,OAAO4B,QACZluD,KAAKssD,OAAS,OAItB5B,cAAe,WACX1qD,KAAKiuD,QAAUjuD,KAAKwC,QAAQuJ,QACvB0wB,IAAI,WAAY,YAChB0xB,KAAK,WAAY,GACjBC,SAAS,sBAEdpuD,KAAKy2B,WAAah8B,EAAE,WAAW4zD,SAASruD,KAAKwC,UAGjDooD,cAAe,SAASJ,GACpB,IAAIjrC,EAAUvf,KAAKuf,QACnB,IAAIqjB,EAAWrjB,EAAQqjB,SACvB,IAAI3jB,EAAgBM,EAAQN,cAC5B,IAAI2sC,EAAqBrsC,EAAQqsC,mBACjC,IAAI0C,GAAqB9D,GAAe,IAAIvrC,cAC5C,GAAI2jB,IAAa,MAAO,CACpB3jB,EAAc2jB,SAAW,MACzBgpB,EAAmBhpB,SAAW,UAC3B,CACH2rB,GAAmB3rB,EAAU3jB,EAAc2jB,SAAU,CAAC,OAAQ,SAAU,YACxE2rB,GAAmB3rB,EAAUgpB,EAAmBhpB,SAAU,CAAC,OAAQ,WAGvE,GAAI0rB,GAAqBA,EAAkB3sB,WACvCpiB,EAAQN,cAAc0iB,WAAa2sB,EAAkB3sB,YAI7DkpB,qBAAsB,WAClB,IAAItrC,EAAUvf,KAAKuf,QACnB,IAAIyZ,EAAazZ,EAAQyZ,WACzB,IAAIzB,EAAWhY,EAAQgY,SACvB,IAAIi3B,EAAS7zD,MAAM07B,QAAQC,SAE3B,GAAI0C,IAAezX,EAAQyX,EAAWC,UAClC1Z,EAAQyZ,WAAah+B,EAAW,CAC5Bi+B,SAAUu1B,EAAS,MAAQ,MAC5BjvC,EAAQyZ,YAGf,GAAIzB,IAAahW,EAAQgW,EAASp6B,KAC9BoiB,EAAQgY,SAAWv8B,EAAW,CAC1BmC,IAAKqxD,EAAS,OAAS,QACxBjvC,EAAQgY,WAInBuzB,YAAa,WACT,IAAI2D,EAAkBh0D,EAAE,+BAA+B4zD,SAASruD,KAAKy2B,YAAY,GACjF,IAAIi4B,EAAW1uD,KAAK2uD,WACpB3uD,KAAKu2B,OAAS,IAAIrJ,EAAOuhC,EAAiB,CACtCnmD,MAAOomD,EAASpmD,OAASi3C,GACzBl3C,OAAQqmD,EAASrmD,QAAUm3C,MAInCyL,gBAAiB,WACb,IAAIj5C,EAAOhS,KACX,IAAIwC,EAAUwP,EAAKxP,QAEnBA,EAAQosD,GAAG1O,GAAe7xB,EAAMrc,EAAK68C,OAAQ78C,IAC5C48C,GAAG,UAAY7P,EAAI1wB,EAAMrc,EAAK88C,SAAU98C,IAEzCA,EAAK+8C,YAAc,IAAIp0D,MAAMq0D,WAAWhvD,KAAKy2B,WAAY,CACrDw4B,WAAY,KACZC,QAAS,KACTC,IAAK9gC,EAAMrc,EAAKo9C,KAAMp9C,GACtB1W,MAAO+yB,EAAMrc,EAAKq9C,WAAYr9C,GAC9B+a,KAAMsB,EAAMrc,EAAKs9C,MAAOt9C,GACxB3V,IAAKgyB,EAAMrc,EAAKu9C,SAAUv9C,GAC1Bw9C,aAAcnhC,EAAMrc,EAAKy9C,cAAez9C,GACxC09C,cAAerhC,EAAMrc,EAAK29C,eAAgB39C,GAC1C49C,WAAYvhC,EAAMrc,EAAK69C,YAAa79C,GACpC89C,UAAWzhC,EAAMrc,EAAK+9C,WAAY/9C,GAClCg+C,iBAAkB,OAGtBh+C,EAAK+jB,YAAc,IAAI2E,EAAY1oB,GAEnChS,KAAKy2B,WACAm4B,GAAG,YAAc7P,EAAI1wB,EAAMrc,EAAKi+C,WAAYj+C,IAC5C48C,GAAG,WAAa7P,EAAI1wB,EAAMrc,EAAKk+C,UAAWl+C,IAC1C48C,GAAG,YAAc7P,EAAI1wB,EAAMrc,EAAKm+C,WAAYn+C,IAC5C48C,GAAG,YAAc7P,EAAI1wB,EAAMrc,EAAKo+C,WAAYp+C,IAC5C48C,GAAG,UAAY7P,EAAI1wB,EAAMrc,EAAKq+C,SAAUr+C,IAE7ChS,KAAKswD,aAAejiC,EAAMrc,EAAK6pB,aAAc7pB,GAE7CA,EAAKu+C,eAAiBliC,EAAMrc,EAAK6wB,OAAQ7wB,EAAM,OAC/CrX,MAAM61D,SAASx+C,EAAKu+C,gBAEpBvwD,KAAKm1B,KAAKjF,GAAY7B,EAAMrc,EAAKwpB,gBAAiBxpB,IAClDhS,KAAKm1B,KAAK1E,GAAKpC,EAAMrc,EAAKwpB,gBAAiBxpB,KAG/Cq9C,WAAY,SAAUvhD,GAClB9N,KAAKywD,oBAAsB,KAC3B,IAAI3nD,EAAQ9I,KAAK0wD,gBAAgB5iD,EAAG,MAEpC,IAAI6iD,EAAQ7iD,EAAE6iD,MACd,GAAI3wD,KAAK+1B,YAAYz6B,MAAMwN,EAAO9I,KAAK4wD,MAAMD,IAAS,CAClD3wD,KAAKw7B,kBACLm1B,EAAME,mBAIdvB,MAAO,SAAUxhD,GACb,IAAIhP,EAAIkB,KAAK0wD,gBAAgB5iD,GAC7B,IAAI6iD,EAAQ7iD,EAAE6iD,MACd,GAAI3wD,KAAK+1B,YAAYhJ,KAAKjuB,EAAGkB,KAAK4wD,MAAMD,IACpCA,EAAME,kBAIdtB,SAAU,SAAUzhD,GAChB9N,KAAKywD,oBAAsB,MAC3B,IAAI3xD,EAAIkB,KAAK0wD,gBAAgB5iD,GAC7B,IAAI6iD,EAAQ7iD,EAAE6iD,MACd,GAAI3wD,KAAK+1B,YAAY15B,IAAIyC,EAAGkB,KAAK4wD,MAAMD,IAAS,CAC5C3wD,KAAK8wD,iBACLH,EAAME,mBAIdV,WAAY,SAAUriD,GAClB,IAAK9N,KAAKywD,oBAAqB,CAC3B,IAAI3xD,EAAIkB,KAAK0wD,gBAAgB5iD,GAC7B9N,KAAK+1B,YAAY8E,mBAAmB/7B,GACpCkB,KAAK+1B,YAAYgF,cAAcj8B,KAIvCsxD,WAAY,WACRpwD,KAAKywD,oBAAsB,MAG/BJ,SAAU,WACNrwD,KAAKywD,oBAAsB,OAG/BrB,KAAM,SAASthD,GACX,IAAIioB,EAAc/1B,KAAK+1B,YACvB,IAAIiD,EAAah5B,KAAKuf,QAAQyZ,WAC9B,IAAIlwB,EAAQ9I,KAAK0wD,gBAAgB5iD,GACjC,IAAIijD,EAAU/wD,KAAKg7B,QAEnBjF,EAAY8E,mBAAmB/xB,GAE/B,GAAIitB,EAAY4B,YAAa,CACzB,IAAI53B,EAAOg2B,EAAY4B,YAEvB33B,KAAK2E,QAAQ,QAAS,CAClB5E,KAAMA,EACN+I,MAAOA,EACPwuB,KAAMt3B,KAAK4wD,MAAM9iD,EAAE6iD,SAGvB,GAAI33B,GAAcj5B,EAAKwf,QAAQyZ,aAAe,MAAO,CACjD,IAAIC,EAAWD,EAAWC,WAAa,MACvC,IAAI+3B,EAAcr2D,MAAM07B,QAAQC,UAAYt2B,KAAK4wD,MAAM9iD,EAAE6iD,OAAOl5B,QAEhE,GAAI13B,EAAKo5B,WACL,GAAI63B,EAAa,CACbhxD,KAAKw7B,kBACLz7B,EAAK2uB,OAAO,YAEZ1uB,KAAK8wD,eAAeC,OAErB,CACH/wD,KAAKw7B,kBACLx7B,KAAK0uB,OAAO3uB,EAAM,CACdu8B,eAAgBrD,GAAY+3B,IAEhChxD,KAAK8wD,eAAeC,UAGzB,GAAI/3B,EAAY,CACnBh5B,KAAKw7B,kBACLx7B,KAAKg0B,aAIb86B,SAAU,SAAUhhD,GAChB,GAAI9N,KAAK+1B,YAAYqF,QAAQttB,EAAEmjD,QAASjxD,KAAK4wD,MAAM9iD,IAC/CA,EAAE+iD,kBAIVhC,OAAQ,SAAU/gD,GACd,IAAIhD,EAAQ+1C,GAAQ/yC,GAChBhP,EAAIkB,KAAK0wD,gBAAgB5iD,GACzBwpB,EAAOt8B,EAAWgF,KAAK4wD,MAAM9iD,GAAI,CAAEhD,MAAOA,IAE9C,GAAI9K,KAAK+1B,YAAYgG,MAAMj9B,EAAGw4B,GAC1BxpB,EAAE+iD,kBAIVD,MAAO,SAAU9iD,GACb,MAAO,CAAE2pB,QAAS3pB,EAAE2pB,QAAS4D,QAASvtB,EAAEutB,QAASC,OAAQxtB,EAAEwtB,OAAQiL,SAAUz4B,EAAEy4B,SAAU5oC,KAAMmQ,EAAEnQ,OAGrG+yD,gBAAiB,SAAU5iD,EAAGxS,GAC1B,IAAIwN,EACJ,GAAIgF,EAAEojD,MAAO,CACT,IAAIxuC,EAAQpnB,EAAQ,gBAAkB,WACtCwN,EAAQ,IAAI1J,EAAM0O,EAAE/R,EAAE2mB,GAAQ5U,EAAEtR,EAAEkmB,QAC/B,CACH,IAAIiuC,EAAQ7iD,EAAEizC,cACdj4C,EAAQ,IAAI1J,EAAMuxD,EAAMQ,MAAOR,EAAMS,OAGzC,OAAOpxD,KAAKqxD,gBAAgBvoD,IAGhC2mD,cAAe,SAAS3hD,GACpB9N,KAAKw7B,kBACLx7B,KAAKw2B,SAASa,UACd,IAAIi6B,EAAgBtxD,KAAKqxD,gBAAgB,IAAIjyD,EAAM0O,EAAEhN,OAAO/E,EAAG+R,EAAEhN,OAAOtE,IACxE,IAAI+0D,EAAY,CACZzoD,MAAOwoD,EACPtmD,KAAMhL,KAAKgL,QAGf,GAAIhL,KAAK2E,QAAQurB,GAAYqhC,GACzB,OAGJvxD,KAAKwxD,SAAW1jD,EAChB9N,KAAKyxD,eAAiBH,GAG1B3B,eAAgB,SAAS7hD,GACrB,IAAI4jD,EAAkB1xD,KAAKwxD,SAC3B,IAAIF,EAAgBtxD,KAAKyxD,eACzB,IAAI3wD,EAASd,KAAK2xD,eAAe,IAAIvyD,EAAM0O,EAAEhN,OAAO/E,EAAG+R,EAAEhN,OAAOtE,IAChE,IAAIo1D,EAAa9jD,EAAEs/B,SAAWskB,EAAgBtkB,SAC9C,IAAIpiC,EAAOhL,KAAK6xD,MAChB,IAAIC,EAAa,MAEjB,GAAIhT,EAAK5iD,IAAI01D,EAAa,IAAMzR,GAAkB,CAC9CngD,KAAK6xD,MAAQ7mD,EAAOhL,KAAK+xD,cAAc/mD,EAAO4mD,GAC9C5xD,KAAKuf,QAAQvU,KAAOA,EACpBhL,KAAKwxD,SAAW1jD,EAChBgkD,EAAa,KAGjB,IAAIE,EAAcV,EAActqD,MAAMgE,GACtC,IAAIqpB,EAAMvzB,EAAOgG,MAAMkrD,GACvB,GAAIF,GAAc9xD,KAAKq4B,KAAK8I,WAAW9M,IAAQ+rB,GAAqB,CAChEpgD,KAAKiyD,cAAc59B,GACnBr0B,KAAKkyD,kBAGTpkD,EAAE+iD,kBAGNd,WAAY,SAASjiD,GACjB,IAAIhT,EAAUkF,KACd,IAAImyD,EAAgBnyD,KAAK0wD,gBAAgB5iD,GACzC,IAAIyR,EAAUzkB,EAAQykB,QACtB,IAAI0c,EAAW1c,EAAQ0c,SACvB,IAAIjxB,EAAOlQ,EAAQkQ,OAASixB,EAC5B,IAAI3E,EAAOt3B,KAAK4wD,MAAM9iD,GACtB,IAAIouB,EAAc,CAAEpzB,MAAOqpD,EAAe76B,KAAMA,EAAMtsB,KAAMA,GAG5D,GAAIlQ,EAAQ6J,QAAQurB,GAAYgM,GAC5B,OAGJlxB,EAAOrQ,MAAMI,QAAQyU,MAAMvT,KAAKiJ,IAAIqa,EAAQ4c,QAASlgC,KAAKkJ,IAAIoa,EAAQ6c,QAASpxB,IAAQ,GACvFkxB,EAAYlxB,KAAOA,EAEnBlQ,EAAQkQ,KAAKA,EAAMkxB,GACnBphC,EAAQ6J,QAAQwrB,GAAU+L,IAG9B2zB,YAAa,WACT,GAAI7vD,KAAKuf,QAAQgY,WAAa,MAC1Bv3B,KAAKw2B,SAASsB,SAElB93B,KAAK2E,QAAQwrB,GAAU,CACnBrnB,MAAO9I,KAAKyxD,eACZzmD,KAAMhL,KAAKgL,UAInBohD,QAAS,WACL,IAAIuC,EAAW3uD,KAAK2uD,WACpB,GAAI3uD,KAAKu2B,OACLv2B,KAAKu2B,OAAO/3B,KAAKmwD,GAGrB,GAAI3uD,KAAKy2B,YAAcz2B,KAAK6rD,QACxB7rD,KAAKy2B,WAAWpuB,OAAOsmD,EAAStmD,SAIxC4nD,WAAY,SAASniD,GACjB,IAAIiG,EAAOjG,EAAEnK,OAAOyuD,WACpB,GAAIr+C,GAAQA,EAAKs+C,WAAWltC,OACxBpR,EAAKs+C,WAAWltC,OAAO,KAAMpR,EAAKs+C,aAI1CnC,UAAW,SAASpiD,GAChB,IAAIiG,EAAOjG,EAAEnK,OAAOyuD,WACpB,GAAIr+C,GAAQA,EAAKs+C,WAAWltC,OACxBpR,EAAKs+C,WAAWltC,OAAO,MAAOpR,EAAKs+C,aAI3C5H,WAAY,WACR,IAAIz4C,EAAOhS,KACX,IAAIsyD,IAActgD,EAAKuN,SAAW,IAAIgsC,OAAS,IAAIv+C,cACnD,IAAIulD,EAASx3D,EAAQmL,GAAGqsD,QAAU,GAClC,IAAIC,EAEJ,GAAGz3D,EAAQ03D,YAAYjxD,QAAQ8wD,KAAe,EAC1CE,EAAez3D,EAAQ23D,YAAY53D,aAGnC03D,GAAgBD,EAAOD,IAAc,IAAIx3D,QAG7CkX,EAAKuN,QAAUvkB,EAAW,GAAIw3D,EAAcxgD,EAAKuN,SACjD,GAAIvN,EAAKuN,QAAQqjB,WAAa,KAC1B5nC,EAAWgX,EAAKuN,QAAS,CACrBqjB,UAAW4vB,GAAgB,IAAI5vB,YAK3C0oB,sBAAuB,WACnB,IAAI/rC,EAAUvf,KAAKuf,QACnB,IAAIozC,EAAepzC,EAAQgU,OAAOt1B,OAElC,GAAI00D,EACA3yD,KAAK4yD,gBAGT,GAAIrzC,EAAQqZ,YAAY36B,OACpB+B,KAAK6yD,qBAGT,GAAIF,GAAgBpzC,EAAQoU,OACxB3zB,KAAK2zB,OAAOpU,EAAQoU,SAI5Bi/B,cAAe,WACX,IAAI5gD,EAAOhS,KACPuf,EAAUvN,EAAKuN,QACfgU,EAAShU,EAAQgU,OACjBpgB,EAAOvX,EAEX,IAAKA,EAAI,EAAGA,EAAI23B,EAAOt1B,OAAQrC,IAAK,CAChCuX,EAAQogB,EAAO33B,GACfoW,EAAKqN,SAASlM,KAItB0/C,mBAAoB,WAChB,IAAI/3D,EAAUkF,KACVuf,EAAUzkB,EAAQykB,QAClBiiC,EAAWjiC,EAAQqsC,mBACnBhzB,EAAcrZ,EAAQqZ,YACtB1G,EAAM9zB,EAAQuF,EAAQ/H,EAE1B,IAAIA,EAAI,EAAGA,EAAIg9B,EAAY36B,OAAQrC,IAAK,CACpCs2B,EAAO0G,EAAYh9B,GACnBwC,EAAStD,EAAQg4D,sBAAsB5gC,EAAKjtB,MAC5CtB,EAAS7I,EAAQg4D,sBAAsB5gC,EAAKntB,IAE5CjK,EAAQ0kB,QAAQphB,EAAQuF,EAAQ3I,EAAW,GAAIwmD,EAAUtvB,MAIjE4gC,sBAAuB,SAASvzC,GAC5BA,EAAUA,GAAW,GACrB,IAAIzkB,EAAUkF,KACd,IAAI2iD,EAAUrlD,EAASiiB,GAAWA,EAAUA,EAAQojC,SAAWpjC,EAAQ5N,GACvE,IAAIhO,EACJ,GAAIg/C,EAAS,CACTh/C,EAAS7I,EAAQw2B,aAAaqxB,GAC9B,GAAIpjC,EAAQ+Z,UACR31B,EAASA,EAAOu2B,aAAa3a,EAAQ+Z,gBAGzC31B,EAAS,IAAIvE,EAAMmgB,EAAQxjB,GAAK,EAAGwjB,EAAQ/iB,GAAK,GAGpD,OAAOmH,GAGXgqB,QAAS,WACL,IAAI3b,EAAOhS,KACXu+C,EAAO33C,GAAG+mB,QAAQtwB,KAAK2U,GAEvB,GAAIhS,KAAK+uD,YACL/uD,KAAK+uD,YAAYphC,UAGrBhzB,MAAMo4D,aAAa/gD,EAAKu+C,gBAExBv+C,EAAKrP,QACLqP,EAAKxP,QAAQwwD,IAAIjU,GACjB/sC,EAAKwkB,SAASy3B,QAAQ+E,IAAIjU,GAC1B/sC,EAAKukB,OAAO5I,QAAQ,MACpB3b,EAAKukB,OAAS17B,EAEdmX,EAAK87C,iBACL97C,EAAKihD,kBACLjhD,EAAKkhD,wBACLlhD,EAAKwpB,mBAGTy3B,gBAAiB,WACb,IAAIz8B,EAAWx2B,KAAKw2B,SAEpB,IAAKA,EACD,OAGJA,EAAS7I,UACT6I,EAASh0B,QAAQnB,SACjBrB,KAAKw2B,SAAW,MAGpBpc,KAAM,WACF,IAAI0nC,EAAO,CACPvuB,OAAQ,GACRqF,YAAa,IAEjB,IAAIh9B,EAAGsZ,EAAY/B,EAEnB,IAAKvX,EAAI,EAAGA,EAAIoE,KAAKuzB,OAAOt1B,OAAQrC,IAAK,CACrCuX,EAAQnT,KAAKuzB,OAAO33B,GACpB,GAAIuX,EAAMoM,QAAQqiC,aACdE,EAAKvuB,OAAOp3B,KAAKgX,EAAMoM,SAI/B,IAAK3jB,EAAI,EAAGA,EAAIoE,KAAK44B,YAAY36B,OAAQrC,IAAK,CAC1CsZ,EAAalV,KAAK44B,YAAYh9B,GAE9BkmD,EAAKlpB,YAAYz8B,KAAKnB,EAAW,GAAIka,EAAWqK,QAASrK,EAAWutC,WAGxE,OAAOX,GAGX9mB,MAAO,WACH,IAAKh7B,KAAKwC,QAAQ2wD,GAAGx4D,MAAMy4D,kBAAmB,CAC1C,IAAI5wD,EAAUxC,KAAKwC,QACf6wD,EAAkB7wD,EAAQ,GAC1BwoC,EAAa,GACbsoB,EAAU,GACVC,EAAkBC,SAASD,gBAC3B33D,EAEJ,EAAG,CACCy3D,EAAkBA,EAAgBI,WAElC,GAAIJ,EAAgBK,aAAeL,EAAgBxzC,aAAc,CAC7DmrB,EAAW7uC,KAAKk3D,GAChBC,EAAQn3D,KAAKk3D,EAAgBn7B,kBAE5Bm7B,GAAmBE,GAE5B/wD,EAAQmC,QAAQ,SAEhB,IAAK/I,EAAI,EAAGA,EAAIovC,EAAW/sC,OAAQrC,IAC/BovC,EAAWpvC,GAAGs8B,UAAYo7B,EAAQ13D,GAEtC,OAAO,OAIf+3D,KAAM,SAASp0C,GACXvf,KAAK2C,QAEL3C,KAAK4zD,WAAWr0C,GAChBvf,KAAK4yD,gBACL5yD,KAAK6yD,sBAGTe,WAAY,SAASr0C,GACjBvkB,EAAWgF,KAAKuf,QAASA,IAG7B5c,MAAO,WACH,IAAIqP,EAAOhS,KAEXgS,EAAK0c,OAAO,OACZ1c,EAAKsrB,UAAU36B,QACfqP,EAAKk4C,gBAAgBvnD,QACrBqP,EAAK4iB,eASTpV,QAAS,SAAUphB,EAAQuF,EAAQ4b,GAC/B,IAAIrK,EACJ,GAAIlV,KAAK+mD,uBAAyB/mD,KAAKqjD,YAAa,CAChD,IAAI3B,EAAW1hD,KAAK+mD,sBAAsBr2C,IAAI,IAC9CwE,EAAalV,KAAK4sD,oBAAoBlL,EAASuF,KAC/C/xC,EAAW9W,OAAOA,GAClB8W,EAAWvR,OAAOA,GAClBuR,EAAW8P,OAAOzF,GAClBrK,EAAW6d,kBACR,CACH7d,EAAa,IAAI8nB,GAAW5+B,EAAQuF,EAChC3I,EAAW,GAAKgF,KAAKuf,QAAQqsC,mBAAoBrsC,IAErDvf,KAAK6sD,cAAc33C,GAGvB,OAAOA,GAQXqG,UAAW,SAAUnd,EAAQuF,GACzB,IAAK,IAAI/H,EAAI,EAAGA,EAAIoE,KAAK44B,YAAY36B,OAAQrC,IAAK,CAC9C,IAAI8E,EAAIV,KAAK44B,YAAYh9B,GACzB,GAAI8E,EAAEuE,MAAQ7G,GAAUsC,EAAEqE,IAAMpB,EAC5B,OAAO,KAIf,OAAO,OAQXkpD,cAAe,SAAU33C,EAAYkK,GACjC,GAAIA,IAAa,MACbpf,KAAK64B,gBAAgBnoB,IACjB,IAAI5V,EAAQg5B,kBAAkB5e,EAAYlV,MAAO,OAGzDkV,EAAWpa,QAAUkF,KACrBkV,EAAW8tC,uBACX9tC,EAAW2e,UACX7zB,KAAKs9B,UAAUrT,OAAO/U,EAAWwO,QACjC1jB,KAAK44B,YAAYz8B,KAAK+Y,GAEtBlV,KAAK2E,QAAQs6C,EAAQ,CACjB4U,MAAO,CAAC3+C,GACR4+C,QAAS,KAGb,OAAO5+C,GAGXoK,eAAgB,SAAUpK,EAAYkK,GAClC,IAAI2nC,EAAwB/mD,KAAK+mD,sBACjC,IAAIrF,EACJ,GAAIqF,GAAyB/mD,KAAKqjD,YAAa,CAC3C3B,EAAW8K,GAAYzF,EAAuBtC,GAAcvvC,EAAWwsC,WACvExsC,EAAWwsC,SAAWA,EACtBxsC,EAAW6d,cAEX,IAAK/yB,KAAK2E,QAAQ,MAAO,CAAEuQ,WAAYA,IAAe,CAClDlV,KAAK4sD,oBAAoBlL,EAASuF,KAAO/xC,EAEzC6xC,EAAsBr2C,IAAIgxC,GAC1B1hD,KAAK6sD,cAAc33C,EAAYkK,GAC/BlK,EAAWwwC,oBAEX,OAAOxwC,QAER,IAAKlV,KAAK2E,QAAQ,MAAO,CAAEuQ,WAAYA,IAAe,CACzDlV,KAAK6sD,cAAc33C,EAAYkK,GAC/BlK,EAAWwwC,oBACX,OAAOxwC,IAUfmK,SAAU,SAAStf,EAAMqf,GACrB,IAAIjM,EACA8L,EAAgBjf,KAAKuf,QAAQN,cAEjC,GAAIlf,aAAgBk6B,EAAO,CACvB9mB,EAAQpT,EACRC,KAAK+zD,aAAa5gD,EAAMM,eACrB,KAAM1T,aAAgBpF,MAAM4I,OAAQ,CACvC0b,EAAgBjkB,EAAW,GAAIikB,EAAelf,GAAQ,IACtDoT,EAAQ,IAAI8mB,EAAMhb,EAAejf,MACjCA,KAAK+zD,aAAa5gD,EAAMM,eAExB,OAGJ,GAAI2L,IAAa,MACbpf,KAAK64B,gBAAgBnoB,IAAI,IAAI5V,EAAQi5B,aAAa5gB,EAAOnT,MAAO,OAGpEA,KAAKuzB,OAAOp3B,KAAKgX,GACjB,GAAIA,EAAMrY,UAAYkF,KAAM,CACxBA,KAAKkqD,gBAAgB3nD,OAAO4Q,GAC5BA,EAAMrY,QAAUkF,KAEpBA,KAAKs9B,UAAUrT,OAAO9W,EAAMuQ,QAE5B1jB,KAAK2E,QAAQs6C,EAAQ,CACjB4U,MAAO,CAAC1gD,GACR2gD,QAAS,KAGb,OAAO3gD,GAGX4L,UAAW,SAAS5L,EAAOiM,GACvB,IAAIpN,EAAOhS,KACX,IAAIwrD,EAAax5C,EAAKw5C,WACtB,IAAI9J,EACJ,GAAI8J,GAAcxrD,KAAKqjD,YAAa,CAChC3B,EAAW8K,GAAYhB,EAAY/G,GAActxC,EAAMuuC,WACvDvuC,EAAMuuC,SAAWA,EACjBvuC,EAAM4f,cAEN,IAAK/yB,KAAK2E,QAAQ,MAAO,CAAEwO,MAAOA,IAAU,CACxCnT,KAAKwrD,WAAW96C,IAAIgxC,GACpB,IAAI2G,EAAeroD,KAAKsoD,oBAAoBtB,SAAStF,EAASuF,KAC9DoB,EAAa7lD,QAAU2Q,EACvBk1C,EAAajpC,SAAWA,EACxB,OAAOjM,QAER,IAAKnT,KAAK2E,QAAQ,MAAO,CAAEwO,MAAOA,IACrC,OAAOnT,KAAKqf,SAASlM,EAAOiM,IAIpC20C,aAAc,SAAStgD,GACnBA,EAAO1X,SAAW0X,EAAQ,GAAK,SAAW3V,WAAW2V,EAAO1X,GAAK0X,EAAO1X,EACxE0X,EAAOjX,SAAWiX,EAAQ,GAAK,SAAW3V,WAAW2V,EAAOjX,GAAKiX,EAAOjX,GAQ7E6E,OAAQ,SAASyzB,EAAO1V,GACnB0V,EAAQ75B,EAAQ65B,GAASA,EAAMpsB,MAAM,GAAK,CAACosB,GAC3C,IAAI9M,EAAWgsC,GAAqBl/B,GACpC,IAAIvB,EAASvL,EAASuL,OACtB,IAAIqF,EAAc5Q,EAAS4Q,YAC3B,IAAIh9B,EAEJ,IAAK2lB,EAAQnC,GACTA,EAAW,KAGf,GAAIA,EACApf,KAAK64B,gBAAgBvD,QAGzBt1B,KAAKwjD,uBACL,IAAK5nD,EAAI23B,EAAOt1B,OAAS,EAAGrC,GAAK,EAAGA,IACjCoE,KAAKi0D,YAAY1gC,EAAO33B,GAAIwjB,EAAUwZ,GAGzC,IAAKh9B,EAAIg9B,EAAY36B,OAAS,EAAGrC,GAAK,EAAGA,IACrCoE,KAAKi0D,YAAYr7B,EAAYh9B,GAAIwjB,GAGrCpf,KAAKyjD,sBAEL,GAAIrkC,EACApf,KAAK64B,gBAAgBpD,OAAO,OAGhCz1B,KAAK2E,QAAQs6C,EAAQ,CACjB4U,MAAO,GACPC,QAASh/B,KAIjBo/B,qBAAsB,SAASn0D,GAC3B,GAAIC,KAAKqjD,YAAa,CAClBrjD,KAAKwrD,WAAWnqD,OAAOtB,EAAK2hD,iBACrB1hD,KAAKymD,SAAS1mD,EAAK2hD,SAAS/vC,MAI3CwiD,0BAA2B,SAASp0D,GAChC,GAAIC,KAAKqjD,YAAa,CAClBrjD,KAAK+mD,sBAAsB1lD,OAAOtB,EAAK2hD,iBAChC1hD,KAAK4sD,oBAAoB7sD,EAAK2hD,SAASuF,OAItDrrB,eAAgB,SAAS9G,GACrB,IAAI6G,EAAW,GACf,IAAI57B,EAAMg4B,EAAM6K,EAEhB,IAAK,IAAIvD,EAAM,EAAGA,EAAMvK,EAAM72B,OAAQohC,IAAO,CACzCt/B,EAAO+0B,EAAMuK,GACbuD,EAAW7iC,EAAKwf,QAAQqjB,SACxB,GAAI7iC,aAAgBk6B,EAChBlC,EAAO,CAAE5kB,MAAOpT,QAEhBg4B,EAAO,CAAE7iB,WAAYnV,GAEzB,GAAI6iC,GAAYA,EAASvhC,SAAW,QAAUrB,KAAK2E,QAAQ,SAAUozB,GACjE4D,EAASx/B,KAAK4D,GAGtB,OAAO47B,GAMX7J,KAAM,WACF9xB,KAAK64B,gBAAgB/G,QAKzBE,KAAM,WACFhyB,KAAK64B,gBAAgB7G,QAQzBtD,OAAQ,SAAU3uB,EAAMwf,GACpB,GAAI1iB,EAAUkD,GAAO,CACjBwf,EAAUvkB,EAAW,CAAEshC,eAAgB,OAAS/c,GAEhD,IAAI+c,EAAiB/c,EAAQ+c,eACzBxH,EAAQ,GACR0N,EAAW,GACX5mC,EAAG4G,EAEP,IAAK85B,EACDt8B,KAAKg0B,WAGTh0B,KAAK2kD,mBAAqB,KAE1B,GAAI5kD,aAAgB7E,MAChB45B,EAAQ/0B,OACL,GAAIA,aAAgB0hD,GACvB3sB,EAAQ,CAAE/0B,GAGd,IAAKnE,EAAI,EAAGA,EAAIk5B,EAAM72B,OAAQrC,IAAK,CAC/B4G,EAAUsyB,EAAMl5B,GAChB,GAAI4G,EAAQksB,OAAO,MACf8T,EAASrmC,KAAKqG,GAItBxC,KAAK4kD,kBAAkBpiB,EAAU,IAEjCxiC,KAAK2kD,mBAAqB,WAE1B,OAAO3kD,KAAK+8B,gBAIpBxB,UAAW,WACPv7B,KAAK0uB,OAAO1uB,KAAKuzB,OAAOjW,OAAOtd,KAAK44B,eAGxCQ,WAAY,SAAStvB,GACjB,IAAIlO,EAAGk5B,EAAO/0B,EACdC,KAAK2kD,mBAAqB,KAC1B,IAAIniB,EAAW,GACf,GAAI14B,aAAgB/B,EAAM,CACtB+sB,EAAQ90B,KAAKuzB,OAAOjW,OAAOtd,KAAK44B,aAChC,IAAKh9B,EAAI,EAAGA,EAAIk5B,EAAM72B,OAAQrC,IAAK,CAC/BmE,EAAO+0B,EAAMl5B,GACb,KAAMkO,GAAQ/J,EAAK04B,SAAS3uB,KAAU/J,EAAKwf,QAAQuY,OAC/C,GAAI/3B,EAAK2uB,OAAO,MACZ8T,EAASrmC,KAAK4D,IAM9BC,KAAK4kD,kBAAkBpiB,EAAU,IACjCxiC,KAAK2kD,mBAAqB,OAG9B3wB,SAAU,SAASj0B,GACfC,KAAK2kD,mBAAqB,KAC1B,IAAID,EAAa,GACb5vB,EAAQ,GACRtyB,EAAS5G,EAEb,GAAImE,aAAgB7E,MAChB45B,EAAQ/0B,OACL,GAAIA,aAAgB0hD,GACvB3sB,EAAM34B,KAAK4D,QACR,IAAKlD,EAAUkD,GAClB+0B,EAAQ90B,KAAK+8B,eAAer0B,MAAM,GAGtC,IAAK9M,EAAI,EAAGA,EAAIk5B,EAAM72B,OAAQrC,IAAK,CAC/B4G,EAAUsyB,EAAMl5B,GAChB,GAAI4G,EAAQksB,OAAO,OACfg2B,EAAWvoD,KAAKqG,GAIxBxC,KAAK4kD,kBAAkB,GAAIF,GAC3B1kD,KAAK2kD,mBAAqB,OAO9B94B,QAAS,SAAUiJ,EAAO1V,GACtB,IAAK0V,EACDA,EAAQ90B,KAAK+8B,eAAer0B,QAGhC,IAAIvG,EAASnC,KAAKo0D,iBAAiBt/B,GAAQzZ,EAC3C,IAAKkG,EAAQnC,IAAaA,EAAU,CAChC/D,EAAUimC,GAAethD,KAAKs9B,UAAWn7B,EAAO2pB,SAChD,IAAIvd,EAAO,IAAIsmB,EAAY70B,KAAM80B,EAAOzZ,GACxCrb,KAAK64B,gBAAgBnoB,IAAInC,OACtB,CACHvO,KAAKs9B,UAAUzR,QAAQ1pB,EAAO2pB,SAC9B9rB,KAAKq0D,aAAalyD,EAAQ,QAQlC4pB,OAAQ,SAAU+I,EAAO1V,GACrB,IAAK0V,EACDA,EAAQ90B,KAAK+8B,eAAer0B,QAGhC,IAAIvG,EAASnC,KAAKo0D,iBAAiBt/B,GAAQzZ,EAC3C,IAAKkG,EAAQnC,IAAaA,EAAU,CAChC/D,EAAUimC,GAAethD,KAAKs9B,UAAWn7B,EAAO2pB,SAChD,IAAIvd,EAAO,IAAI0mB,EAAWj1B,KAAM80B,EAAOzZ,GACvCrb,KAAK64B,gBAAgBnoB,IAAInC,OACtB,CACHvO,KAAKs9B,UAAUvR,OAAO5pB,EAAO2pB,SAC7B9rB,KAAKq0D,aAAalyD,EAAQ,SASlCmyD,cAAe,SAAUv0D,EAAMwf,GAC3B,IAAIovC,EAAW3uD,KAAK2uD,WACpB,IAAI9K,EAAU,IAAI/oD,EAAQ4R,UAAUiiD,GACpC,IAAI97C,EAAS/I,EAAMyqD,EAAUC,EAE7B,GAAI7F,EAASrmD,QAAU,GAAKqmD,EAAStmD,SAAW,EAC5C,OAGJkX,EAAUvkB,EAAW,CAAC02B,QAAS,MAAO9kB,MAAO,iBAAkB2S,GAC/D,GAAIA,EAAQ3S,OAAS,OACjB2S,EAAQ3S,MAAQ,gBAGpB,GAAI7M,aAAgB0hD,GAChB33C,EAAO/J,EAAK0T,OAAOwsC,SAChB,GAAIhlD,EAAQ8E,GACf+J,EAAO9J,KAAKqsB,YAAYtsB,QACrB,GAAIA,aAAgBgI,EACvB+B,EAAO/J,EAAK6J,QAGhB2qD,EAAWzqD,EAAKF,QAEhBE,EAAKkB,KAAKhL,KAAK6xD,OAEf,GAAI/nD,EAAKxB,MAAQqmD,EAASrmD,OAASwB,EAAKzB,OAASsmD,EAAStmD,OAAQ,CAC9DrI,KAAK6xD,MAAQ7xD,KAAK+xD,cAAcjT,EAAK35C,IAAIwpD,EAASrmD,MAAQisD,EAASjsD,MAAOqmD,EAAStmD,OAASksD,EAASlsD,SACrGyB,EAAOyqD,EAAS3qD,QAAQoB,KAAKhL,KAAK6xD,OAGtC7xD,KAAKy0D,iBAEL5hD,EAAU/I,EAAKF,QACfi6C,EAAQj3C,MAAM9C,EAAMyV,EAAQ3S,OAE5B4nD,EAAS1qD,EAAKN,UAAU1C,MAAM+L,EAAQrJ,WACtCxJ,KAAKq0B,IAAImgC,EAAOxtD,OAAO,GAAIuY,EAAQmS,UAGvCgjC,YAAa,SAAUlkB,GACnB,GAAIzzC,EAAYyzC,GACZA,EAAY,OAEhB,IAAI1b,EAAQ90B,KAAK0uB,SACbimC,EACA50D,EACAnE,EAEJ,GAAIk5B,EAAM72B,SAAW,EACjB,OAGJ,OAAQuyC,EAAUxjC,eACd,IAAK,OACL,IAAK,MACD2nD,EAAMtkD,GACN,MACJ,IAAK,QACL,IAAK,SACDskD,EAAM5c,GACN,MAGR,IAAKn8C,EAAI,EAAGA,EAAIk5B,EAAM72B,OAAQrC,IAAK,CAC/BmE,EAAO+0B,EAAMl5B,GACb,GAAImE,aAAgBk6B,EAChB,OAAQuW,EAAUxjC,eACd,IAAK,OACD2nD,EAAM7V,EAAK35C,IAAIwvD,EAAK50D,EAAKwf,QAAQxjB,GACjC,MACJ,IAAK,MACD44D,EAAM7V,EAAK35C,IAAIwvD,EAAK50D,EAAKwf,QAAQ/iB,GACjC,MACJ,IAAK,QACDm4D,EAAM7V,EAAK55C,IAAIyvD,EAAK50D,EAAKwf,QAAQxjB,GACjC,MACJ,IAAK,SACD44D,EAAM7V,EAAK55C,IAAIyvD,EAAK50D,EAAKwf,QAAQ/iB,GACjC,OAIhB,IAAIg3B,EAAa,GACjB,IAAID,EAAS,GACb,IAAK33B,EAAI,EAAGA,EAAIk5B,EAAM72B,OAAQrC,IAAK,CAC/BmE,EAAO+0B,EAAMl5B,GACb,GAAImE,aAAgBk6B,EAAO,CACvB1G,EAAOp3B,KAAK4D,GACZyzB,EAAWr3B,KAAK4D,EAAK0T,UACrB,OAAQ+8B,EAAUxjC,eACd,IAAK,OACL,IAAK,QACDjN,EAAK0C,SAAS,IAAIrD,EAAMu1D,EAAK50D,EAAKwf,QAAQ/iB,IAC1C,MACJ,IAAK,MACL,IAAK,SACDuD,EAAK0C,SAAS,IAAIrD,EAAMW,EAAKwf,QAAQxjB,EAAG44D,IACxC,QAIhB,IAAIpmD,EAAO,IAAIzT,EAAQw4B,cAAcC,EAAQC,GAC7CxzB,KAAK64B,gBAAgBnoB,IAAInC,EAAM,QAGnCvD,KAAM,SAAUA,EAAMuU,GAClB,GAAIvU,EAAM,CACN,IAAIq5B,EAAc9kB,EAAUA,EAAQzW,MAAQ,IAAIhO,EAAQsE,MAAM,EAAG,GAEjE4L,EAAOhL,KAAK6xD,MAAQ7xD,KAAK+xD,cAAc/mD,GAEvC,IAAKjO,EAAYsnC,GAAc,CAC3BA,EAAc,IAAIvpC,EAAQsE,MAAM0/C,EAAKtvC,MAAM60B,EAAYtoC,GAAI+iD,EAAKtvC,MAAM60B,EAAY7nC,IAClF,IAAIw1D,EAAc3tB,EAAYr9B,MAAMgE,GACpC,IAAI4pD,EAAiB50D,KAAKomC,YAAY/B,GACtC,IAAIwwB,EAAMD,EAAe9tD,MAAMkrD,GAC/BhyD,KAAKm4B,UAAU,IAAIr9B,EAAQsE,MAAM0/C,EAAKtvC,MAAMqlD,EAAI94D,GAAI+iD,EAAKtvC,MAAMqlD,EAAIr4D,KAGvE,GAAI+iB,EACAA,EAAQvU,KAAOA,EAGnBhL,KAAKiyD,gBAELjyD,KAAKu2B,OAAOpJ,QAAQ2nC,cAEpB90D,KAAKkyD,kBAGT,OAAOlyD,KAAK6xD,OAGhBkD,QAAS,SAAS1gC,GACd,IAAIkC,EAASv2B,KAAKu2B,OAClB,IAAKA,EAAOhT,UACR8Q,EAAMA,EAAIxtB,KAAK7G,KAAKq4B,MAExB,OAAOhE,GAGXA,IAAK,SAAUA,EAAK3C,GAChB,GAAI2C,aAAej1B,EAAO,CACtB,IAAI4S,EAAOhS,KACX,IAAIw2B,EAAWxkB,EAAKwkB,SACpBnC,EAAMriB,EAAK+iD,QAAQ1gC,GACnBA,EAAMA,EAAIrtB,OAAO,GAEjB,GAAI0qB,EACA8E,EAASw+B,iBAAiB3gC,EAAIt4B,EAAGs4B,EAAI73B,EAAG,WACpCwV,EAAKkgD,wBAEN,CACH17B,EAASy+B,SAAS5gC,EAAIt4B,EAAGs4B,EAAI73B,GAC7BwV,EAAKkgD,wBAGT,OAAOlyD,KAAKq4B,KAAKrxB,OAAO,IAIhC2nD,SAAU,WACN,IAAInsD,EAAUxC,KAAKwC,QACnB,IAAI8F,EAAQ9F,EAAQ8F,QACpB,IAAID,EAAS7F,EAAQ6F,SAErB,GAAIrI,KAAK6rD,QACLxjD,GAAUq2C,EAAY1+C,KAAK6rD,QAAQrpD,SAGvC,OAAO,IAAIuF,EAAK,EAAG,EAAGO,EAAOD,IAEjCiM,KAAM,WACF,GAAItU,KAAKuf,QAAQjL,KAAKkjB,QAAS,CAC3Bx3B,KAAKkrD,WAAa,GAClBlrD,KAAKk1D,YAAc,EACnB,IAAK,IAAIt5D,EAAI,EAAGA,EAAIoE,KAAK+8B,eAAe9+B,OAAQrC,IAAK,CACjD,IAAImE,EAAOC,KAAK+8B,eAAenhC,GAC/BoE,KAAKkrD,WAAW/uD,KAAK4D,MAIjC07B,IAAK,WACD,GAAIz7B,KAAKuf,QAAQjL,KAAKkjB,QAAS,CAC3Bx3B,KAAKkrD,WAAa,GAClBlrD,KAAKk1D,YAAc,EACnB,IAAK,IAAIt5D,EAAI,EAAGA,EAAIoE,KAAK+8B,eAAe9+B,OAAQrC,IAAK,CACjD,IAAImE,EAAOC,KAAK+8B,eAAenhC,GAC/BoE,KAAKkrD,WAAW/uD,KAAK4D,GAEzBC,KAAKqB,OAAOrB,KAAKkrD,WAAY,QAIrCxvB,MAAO,WACH,GAAI17B,KAAKkrD,WAAWjtD,OAAS,EAAG,CAC5B,IAAI8B,EAAMo1D,EAAQv5D,EAClB,IAAIw5D,EAAU,GACd,IAAIptC,EAAWgsC,GAAqBh0D,KAAKkrD,YACzC,IAAItyB,EAAc5Q,EAAS4Q,YAC3B,IAAIrF,EAASvL,EAASuL,OACtB,IAAIxsB,EAAS,CACThL,EAAGiE,KAAKk1D,YAAcl1D,KAAKuf,QAAQjL,KAAKgzB,QACxC9qC,EAAGwD,KAAKk1D,YAAcl1D,KAAKuf,QAAQjL,KAAKizB,SAE5CvnC,KAAKg0B,WAEL,IAAKp4B,EAAI,EAAGA,EAAI23B,EAAOt1B,OAAQrC,IAAK,CAChCmE,EAAOwzB,EAAO33B,GACdu5D,EAASp1D,EAAK6J,QACdwrD,EAAQr1D,EAAK4R,IAAMwjD,EACnBA,EAAO1yD,SAAS,IAAIrD,EAAMW,EAAKwf,QAAQxjB,EAAIgL,EAAOhL,EAAGgE,EAAKwf,QAAQ/iB,EAAIuK,EAAOvK,IAC7E24D,EAAOr6D,QAAUkF,KACjBm1D,EAASn1D,KAAK+e,UAAUo2C,GACxB,GAAIA,EACAA,EAAOzmC,SAIf,IAAK9yB,EAAI,EAAGA,EAAIg9B,EAAY36B,OAAQrC,IAAK,CACrCmE,EAAO64B,EAAYh9B,GACnBu5D,EAASn1D,KAAKsf,eAAevf,EAAK6J,SAClC,GAAIurD,EAAQ,CACRn1D,KAAKq1D,wBAAwBF,EAAQp1D,EAAM,SAAUq1D,EAASruD,GAC9D/G,KAAKq1D,wBAAwBF,EAAQp1D,EAAM,SAAUq1D,EAASruD,GAE9DouD,EAAOzmC,OAAO,MACdymC,EAAOpiC,eAIf/yB,KAAK67B,eAEL77B,KAAKk1D,aAAe,IAI5BG,wBAAyB,SAASngD,EAAYogD,EAAkBnN,EAAeiN,EAASruD,GACpF,IAAIyhD,EAAYH,EAAcnoC,EAC9B,IAAIvc,EAAS2xD,EAAiBnN,KAC9B,IAAIrtD,EAAUkF,KACd,GAAI2D,aAAkB++C,IAAa0S,EAAQzxD,EAAOwP,MAAMxB,IAAK,CACzDuO,EAAck1C,EAAQzxD,EAAOwP,MAAMxB,IACnC,GAAI7W,EAAQw2B,aAAapR,EAAYvO,IACjCuD,EAAWizC,GAAejoC,EAAYga,aAAav2B,EAAO4b,QAAQlhB,WAC/D,CACHgqD,EAAevtD,EAAQwtD,oBAAoBtB,SAAS9mC,EAAYwhC,SAASuF,KACzE,GAAIoB,EAAc,CACdG,EAAa,SAASzoD,GAClBmgB,EAAcplB,EAAQ2rD,SAAS1mD,EAAK4R,IACpCuD,EAAWizC,GAAejoC,EAAYga,aAAav2B,EAAO4b,QAAQlhB,OAClE6W,EAAW6d,eAEfj4B,EAAQytD,2BAA2BpsD,KAAKksD,EAAaG,WAAWA,WAIxEtzC,EAAWizC,GAAe,IAAI/oD,EAAMk2D,EAAiBnN,EAAgB,WAAWpsD,EAAIgL,EAAOhL,EAAGu5D,EAAiBnN,EAAgB,WAAW3rD,EAAIuK,EAAOvK,KAS7J6vB,YAAa,SAAUyI,EAAOpvB,GAC1B,IAAIoE,EAAO/B,EAAKgE,QAASlE,EACrB0tD,EAAK14D,EAAUi4B,GAAS90B,KAAKo0D,iBAAiBt/B,GAAS,CAACvB,OAAQvzB,KAAKuzB,QACzE,GAAIgiC,EAAGhiC,OAAOt1B,OAAS,EAAG,CACtB,IAAI8B,EAAOw1D,EAAGhiC,OAAO,GACrBzpB,EAAO/J,EAAK0T,OAAOid,IACnB,IAAK,IAAI90B,EAAI,EAAGA,EAAI25D,EAAGhiC,OAAOt1B,OAAQrC,IAAK,CACvCmE,EAAOw1D,EAAGhiC,OAAO33B,GACjBiM,EAAO9H,EAAK0T,OAAOid,IACnB,GAAIhrB,IAAW,KAAM,CACjBmC,EAAK9L,GAAKgE,EAAKojC,gBAAgBpnC,EAC/B8L,EAAKrL,GAAKuD,EAAKojC,gBAAgB3mC,EAEnCsN,EAAOA,EAAK1B,MAAMP,IAG1B,OAAOiC,GAGX0rD,iBAAkB,WACd,IAAIC,EAAkBz1D,KAAKwC,QAAQuE,SACnC,GAAI/G,KAAK6rD,QACL4J,EAAgBnsD,KAAOo1C,EAAY1+C,KAAK6rD,QAAQrpD,SAEpD,OAAOizD,GAGX9D,eAAgB,SAAS7oD,GACrB,IAAI2sD,EAAkBz1D,KAAKw1D,mBAE3B,OAAO,IAAIp2D,EAAM0J,EAAM/M,EAAI05D,EAAgB7sD,KAAME,EAAMtM,EAAIi5D,EAAgBnsD,MAE/EosD,eAAgB,SAAS5sD,GACrB,IAAI2sD,EAAkBz1D,KAAKw1D,mBAE3B,OAAO,IAAIp2D,EAAM0J,EAAM/M,EAAI05D,EAAgB7sD,KAAME,EAAMtM,EAAIi5D,EAAgBnsD,MAE/EqsD,YAAa,SAAS7sD,GAClB,OAAO9I,KAAK41D,qBAAqB9sD,EAAO9I,KAAK61D,gBAEjDzvB,YAAa,SAASt9B,GAClB,OAAO9I,KAAK41D,qBAAqB9sD,EAAO9I,KAAK81D,UAEjDv0B,aAAc,SAASz4B,GACnB,OAAO9I,KAAK41D,qBAAqB9sD,EAAO9I,KAAK+1D,eAEjDC,aAAc,SAASltD,GACnB,OAAO9I,KAAK41D,qBAAqB9sD,EAAO9I,KAAKi2D,qBAEjD5E,gBAAiB,SAASvoD,GACtB,IAAIotD,EAAYl2D,KAAK2xD,eAAe7oD,GACpC,IAAK9I,KAAKu2B,OAAOhT,UAAW,CACxB2yC,EAAUn6D,EAAIm6D,EAAUn6D,EAAIiE,KAAKw2B,SAASyB,WAC1Ci+B,EAAU15D,EAAI05D,EAAU15D,EAAIwD,KAAKw2B,SAAS0B,UAE9C,OAAOl4B,KAAK21D,YAAYO,IAE5BC,gBAAiB,SAASrtD,GACtB,OAAO9I,KAAK01D,eAAe11D,KAAKomC,YAAYt9B,KAEhD8sD,qBAAsB,SAAS9sD,EAAOoc,GAClC,IAAI/iB,EAAS2G,EACb,GAAIA,aAAiB1J,GACjB,GAAI8lB,EACA/iB,EAAS+iB,EAAOjiB,MAAM6F,OAGzB,CACD,IAAIoB,EAAKlK,KAAK41D,qBAAqB9sD,EAAMU,UAAW0b,GAChD9a,EAAKpK,KAAK41D,qBAAqB9sD,EAAMa,cAAeub,GACxD/iB,EAAS4F,EAAKiE,WAAW9B,EAAIE,GAEjC,OAAOjI,GAGXi0D,cAAe,SAAS5K,GACpBxrD,KAAKuf,QAAQisC,WAAaA,EAC1BxrD,KAAKq2D,cACL,GAAIr2D,KAAKuf,QAAQmsC,SACb1rD,KAAKwrD,WAAW8K,SAIxBC,yBAA0B,SAAS/K,GAC/BxrD,KAAKuf,QAAQwnC,sBAAwByE,EACrCxrD,KAAKw2D,wBACL,GAAIx2D,KAAKuf,QAAQmsC,SACb1rD,KAAK+mD,sBAAsBuP,SASnC3iC,OAAQ,SAAUpU,GACdvf,KAAKukD,WAAa,KAElB,IAAI5mD,EACJ,GAAGZ,EAAYwiB,GACXA,EAAUvf,KAAKuf,QAAQoU,OAE3B,GAAI52B,EAAYwiB,IAAYxiB,EAAYwiB,EAAQ5hB,MAC5CA,EAAO,YAGPA,EAAO4hB,EAAQ5hB,KAEnB,IAAIwiB,EACJ,OAAQxiB,EAAKqP,eACT,IAAK,OACDmT,EAAI,IAAIrlB,EAAQ42C,WAAW1xC,MAC3B,MAEJ,IAAK,UACDmgB,EAAI,IAAIrlB,EAAQi3C,cAAc/xC,MAC9B,MAEJ,IAAK,gBACL,IAAK,QACL,IAAK,SACL,IAAK,iBACDmgB,EAAI,IAAIrlB,EAAQslB,aAAapgB,MAC7B,MACJ,QACI,KAAM,qBAAuBrC,EAAO,sBAE5C,IAAI6zB,EAAe,IAAI12B,EAAQoxC,YAAYlsC,MAC3C,IAAIyxB,EAAatR,EAAEwT,OAAOpU,GAC1B,GAAIkS,EAAY,CACZ,IAAIljB,EAAO,IAAIzT,EAAQy2B,eAAeC,EAAcC,EAAYlS,EAAUA,EAAQmS,QAAU,MAC5F1xB,KAAK64B,gBAAgBnoB,IAAInC,GAE7BvO,KAAKukD,WAAa,MAClBvkD,KAAKy2D,sBAOTnlC,aAAc,SAAU3f,GACpB,IAAIuF,EACJA,EAAQ9b,EAAMiH,MAAMrC,KAAKuzB,OAAQ,SAAUt0B,GACvC,OAAOA,EAAEykB,OAAO/R,KAAOA,IAE3B,GAAIuF,EACA,OAAOA,EAEXA,EAAQ9b,EAAMiH,MAAMrC,KAAK44B,YAAa,SAAUl4B,GAC5C,OAAOA,EAAEgjB,OAAO/R,KAAOA,IAE3B,OAAOuF,GAGXw/C,kBAAmB,SAAU/kD,GACzB,IAAIwB,EACJ,GAAInT,KAAKqjD,YACLlwC,EAAQnT,KAAKymD,SAAS90C,QAEtBwB,EAAQ/X,EAAMiH,MAAMrC,KAAKuzB,OAAQ,SAASpgB,GACtC,OAAQA,EAAMuuC,UAAY,IAAI/vC,KAAOA,IAG7C,OAAOwB,GAGXwjD,mBAAoB,SAAS1P,GACzB,IAAI9zC,EACJ,GAAInT,KAAKqjD,YACLlwC,EAAQ/X,EAAMiH,MAAMrC,KAAKuzB,OAAQ,SAASpgB,GACtC,OAAQA,EAAMuuC,UAAY,IAAIuF,MAAQA,SAG1C9zC,EAAQnT,KAAKymD,SAASQ,GAE1B,OAAO9zC,GAGXyjD,uBAAwB,SAASjlD,GAC7B,IAAIuD,EACJ,GAAIlV,KAAK+mD,sBACL7xC,EAAa9Z,EAAMiH,MAAMrC,KAAK44B,YAAa,SAAS1jB,GAChD,OAAQA,EAAWwsC,UAAY,IAAI/vC,KAAOA,IAGlD,OAAOuD,GAGX2hD,wBAAyB,SAAS5P,GAC9B,IAAI/xC,EACJ,GAAIlV,KAAK+mD,sBACL7xC,EAAalV,KAAK4sD,oBAAoB3F,GAE1C,OAAO/xC,GAGXy1C,qBAAsB,SAASprC,GAC3B,GAAGA,EAAQoU,OACPpU,EAAQoU,OAAS34B,EAAW,GAAIF,EAAQ4rC,WAAW9/B,GAAG+/B,gBAAkB,GAAIpnB,EAAQoU,SAI5FixB,kBAAmB,SAAUpiB,EAAUkiB,GACnC,GAAIliB,EAASvkC,QAAUymD,EAAWzmD,OAC9B+B,KAAK2E,QAAQ06C,GAAQ,CAAE7c,SAAUA,EAAUkiB,WAAYA,KAG/DqN,cAAe,SAAU/mD,GACrB,OAAO8zC,EAAK35C,IAAI25C,EAAK55C,IAAI8F,EAAMhL,KAAKuf,QAAQ4c,SAAUn8B,KAAKuf,QAAQ6c,UAEvE61B,cAAe,SAAU7uD,GACrB,IAAItI,EAAUkF,KACVq0B,EAAMjxB,GAAOtI,EAAQu9B,KAEzB,GAAIv9B,EAAQy7B,OAAOhT,UAAW,CAC1BzoB,EAAQ07B,SAASy+B,SAAS5gC,EAAIt4B,EAAGs4B,EAAI73B,GACrC1B,EAAQ25D,qBACL,CACH35D,EAAQq9B,UAAU9D,GAClBv5B,EAAQg8D,wBAIhBC,WAAY,WACR/2D,KAAK2E,QAAQ8rB,GAAK,CAACorB,MAAO77C,KAAKq4B,KAAMvtB,MAAOsF,OAAO4mD,OAEvD7+B,UAAW,SAAU9D,GACjBr0B,KAAKq4B,KAAOhE,EACZr0B,KAAKi3D,oBAETxC,eAAgB,WACZ,IAAIzpD,EAAOhL,KAAK6xD,MAEhB,IAAIruC,EAAY,IAAIL,EAAmB,EAAG,EAAGnY,EAAMA,GACnDwY,EAAUC,OAAOzjB,KAAKs9B,WACtBt9B,KAAKk3D,kBAAkB1zC,GACvBxjB,KAAKi3D,oBAETH,oBAAqB,WACjB,IAAIziC,EAAMr0B,KAAKq4B,KACXrtB,EAAOhL,KAAK6xD,MAEhB,IAAIruC,EAAY,IAAIL,EAAmBkR,EAAIt4B,EAAGs4B,EAAI73B,EAAGwO,EAAMA,GAC3DwY,EAAUC,OAAOzjB,KAAKs9B,WACtBt9B,KAAKk3D,kBAAkB1zC,GACvBxjB,KAAKi3D,oBAETC,kBAAmB,SAASC,GACxBn3D,KAAK+1D,aAAeoB,EAAgBv0C,WACpC5iB,KAAKi2D,mBAAqBkB,EAAgBr0C,SAASF,YAEvDq0C,iBAAkB,WACd,IAAI5iC,EAAMr0B,KAAKq4B,KACXrtB,EAAOhL,KAAK6xD,MAEhB,IAAIruC,EAAY,IAAIL,EAAmBkR,EAAIt4B,EAAGs4B,EAAI73B,EAAGwO,EAAMA,GAC3DhL,KAAK81D,QAAUtyC,EAAUZ,WACzB5iB,KAAK61D,cAAgBryC,EAAUV,SAASF,YAE5CoS,SAAU,SAAUF,EAAOzZ,GACvB,IAAIlZ,EAASnC,KAAKo0D,iBAAiBt/B,GACnC90B,KAAKs9B,UAAUrR,QAAQ9pB,EAAO2pB,QAASzQ,GACvCrb,KAAKq0D,aAAalyD,EAAQ,QAE9BkyD,aAAc,SAAUlyD,EAAQ0pB,GAC5B,IAAIurC,EAAWvrC,EAAU7rB,KAAKuzB,OAAOt1B,OAAS,EAAI,EAC9Co5D,EAASxrC,EAAU7rB,KAAK44B,YAAY36B,OAAS,EAAI,EACjDrC,EAAGmE,EACP,IAAKnE,EAAI,EAAGA,EAAIuG,EAAOoxB,OAAOt1B,OAAQrC,IAAK,CACvCmE,EAAOoC,EAAOoxB,OAAO33B,GACrBR,EAAMiG,OAAOrB,KAAKuzB,OAAQxzB,GAC1B3E,EAAMmH,OAAOvC,KAAKuzB,OAAQxzB,EAAMq3D,GAEpC,IAAKx7D,EAAI,EAAGA,EAAIuG,EAAO8iD,KAAKhnD,OAAQrC,IAAK,CACrCmE,EAAOoC,EAAO8iD,KAAKrpD,GACnBR,EAAMiG,OAAOrB,KAAK44B,YAAa74B,GAC/B3E,EAAMmH,OAAOvC,KAAK44B,YAAa74B,EAAMs3D,KAG7CjD,iBAAkB,SAAUt/B,GACxB,IAAIl5B,EAAGuG,EAAS,GAAI41B,EAAOjD,EAC3B3yB,EAAO2pB,QAAU,GACjB3pB,EAAOoxB,OAAS,GAChBpxB,EAAO8iD,KAAO,GAEd,IAAKnwB,EACDiD,EAAO/3B,KAAK+8B,eAAer0B,aACxB,IAAKzN,EAAQ65B,GAChBiD,EAAO,CAACjD,GAGZ,IAAKl5B,EAAI,EAAGA,EAAIm8B,EAAK95B,OAAQrC,IAAK,CAC9B,IAAImE,EAAOg4B,EAAKn8B,GAChB,GAAImE,aAAgBk6B,EAAO,CACvB93B,EAAOoxB,OAAOp3B,KAAK4D,GACnBoC,EAAO2pB,QAAQ3vB,KAAK4D,EAAK2jB,aACtB,GAAI3jB,aAAgBi9B,GAAY,CACnC76B,EAAO8iD,KAAK9oD,KAAK4D,GACjBoC,EAAO2pB,QAAQ3vB,KAAK4D,EAAK2jB,SAIjC,OAAOvhB,GAGX8xD,YAAa,SAAUl0D,EAAMqf,EAAUk4C,GACnCv3D,EAAK2uB,OAAO,OACZ,GAAI3uB,aAAgBk6B,EAAO,CACvBj6B,KAAKk0D,qBAAqBn0D,GAC1BC,KAAKu3D,aAAax3D,EAAMqf,EAAUk4C,QAC/B,GAAIv3D,aAAgBi9B,GAAY,CACnCh9B,KAAKm0D,0BAA0Bp0D,GAC/BC,KAAKw3D,kBAAkBz3D,EAAMqf,GAGjCpf,KAAKs9B,UAAUj8B,OAAOtB,EAAK2jB,SAG/B6zC,aAAc,SAAUpkD,EAAOiM,EAAUk4C,GACrC,IAAI17D,EAAGsZ,EAAYokB,EACfvc,EAAU,GAAIJ,EAAU,GAC5B3c,KAAK+1B,YAAY6D,eAEjB,GAAIxa,EACApf,KAAK64B,gBAAgBjD,iBAAiB,IAAIvC,EAAgBlgB,IAE9D/X,EAAMiG,OAAOrB,KAAKuzB,OAAQpgB,GAC1BnT,KAAKkqD,gBAAgB7oD,OAAO8R,GAE5B,IAAKvX,EAAI,EAAGA,EAAIuX,EAAMwuB,WAAW1jC,OAAQrC,IAAK,CAC1C09B,EAAYnmB,EAAMwuB,WAAW/lC,GAC7B,IAAK,IAAIC,EAAI,EAAGA,EAAIy9B,EAAUV,YAAY36B,OAAQpC,IAAK,CACnDqZ,EAAaokB,EAAUV,YAAY/8B,GACnC,IAAKy7D,IAAuBv8D,EAAQ4G,QAAQuT,EAAYoiD,GACpD,GAAIpiD,EAAW8kB,iBAAmBV,EAC9Bvc,EAAQ5gB,KAAK+Y,QACV,GAAIA,EAAWke,iBAAmBkG,EACrC3c,EAAQxgB,KAAK+Y,IAM7B,IAAKtZ,EAAI,EAAGA,EAAImhB,EAAQ9e,OAAQrC,IAAK,CACjCmhB,EAAQnhB,GAAGwC,OAAO,KAAMghB,GACxBrC,EAAQnhB,GAAGm3B,cAEf,IAAKn3B,EAAI,EAAGA,EAAI+gB,EAAQ1e,OAAQrC,IAAK,CACjC+gB,EAAQ/gB,GAAG+H,OAAO,KAAMyb,GACxBzC,EAAQ/gB,GAAGm3B,gBAInBykC,kBAAmB,SAAUtiD,EAAYkK,GACrC,GAAIlK,EAAW8kB,gBACX5+B,EAAMiG,OAAO6T,EAAW8kB,gBAAgBpB,YAAa1jB,GAEzD,GAAIA,EAAWke,gBACXh4B,EAAMiG,OAAO6T,EAAWke,gBAAgBwF,YAAa1jB,GAEzD,GAAIkK,EACApf,KAAK64B,gBAAgBjD,iBAAiB,IAAIzC,EAAqBje,IAGnE9Z,EAAMiG,OAAOrB,KAAK44B,YAAa1jB,IAGnCuiD,iBAAkB,SAAS3iC,EAAO4iC,GAC9B,IAAI33D,EAAMoU,EAAUhB,EAAOksB,EAC3BvK,EAAQ75B,EAAQ65B,GAASA,EAAQ,CAACA,GAElC,MAAOA,EAAM72B,OAAQ,CACjB8B,EAAO+0B,EAAM+d,QACb1/B,EAAQnT,KAAKymD,SAAS1mD,EAAKknD,KAC3B,GAAI9zC,EAAO,CACPnT,KAAK23D,wBAAwBxkD,GAC7BnT,KAAKi0D,YAAY9gD,EAAO,cACjBnT,KAAKymD,SAAS1mD,EAAKknD,KAC1B,GAAIyQ,GAAa33D,EAAK63D,aAAe73D,EAAK83D,SAAU,CAChD1jD,EAAWpU,EAAKoU,SAAST,OACzB,IAAK2rB,EAAM,EAAGA,EAAMlrB,EAASlW,OAAQohC,IACjCvK,EAAM34B,KAAKgY,EAASkrB,QAOxCs4B,wBAAyB,SAASxkD,GAC9B,IAAIylB,EAAczlB,EAAMylB,cACxB,IAAIyG,EAEJ,GAAIzG,EACA,IAAKyG,EAAM,EAAGA,EAAMzG,EAAY36B,OAAQohC,IACpCr/B,KAAKi0D,YAAYr7B,EAAYyG,GAAM,QAK/Cy4B,aAAc,SAASpW,EAAUtiC,GAC7B,IAAKmC,EAAQmgC,GACT,OAGJ,IAAIvuC,EAAQnT,KAAKymD,SAAS/E,EAAS/vC,IACnC,GAAIwB,EACA,OAAOA,EAGX,IAAIoM,EAAUvkB,EAAW,GAAIgF,KAAKuf,QAAQN,eAC1CM,EAAQmiC,SAAWA,EACnBvuC,EAAQ,IAAI8mB,EAAM1a,EAASvf,MAC3BA,KAAKqf,SAASlM,EAAOiM,IAAa,OAClCpf,KAAKymD,SAAS/E,EAAS/vC,IAAMwB,EAC7B,OAAOA,GAGX4kD,kBAAmB,SAASrW,GACxB,IAAKngC,EAAQmgC,GACT,OAGJ,IAAIvuC,EAAQnT,KAAKymD,SAAS/E,EAASuF,KACnC,GAAI9zC,EACA,OAAOA,EAGX,IAAIoM,EAAUvkB,EAAW,GAAIgF,KAAKuf,QAAQN,eAC1CM,EAAQmiC,SAAWA,EACnBvuC,EAAQ,IAAI8mB,EAAM1a,EAASvf,MAC3BA,KAAKqf,SAASlM,GACdnT,KAAKymD,SAAS/E,EAASuF,KAAO9zC,EAC9B,OAAOA,GAGX6kD,cAAe,SAASljC,EAAOnU,GAC3B,IAAI5gB,EAAMs/B,EAAKlsB,EAAO8kD,EAAa/iD,EACnC,IAAKmqB,EAAM,EAAGA,EAAMvK,EAAM72B,OAAQohC,IAAO,CACrCt/B,EAAO+0B,EAAMuK,GACblsB,EAAQnT,KAAK+3D,kBAAkBh4D,GAC/Bk4D,EAAcj4D,KAAK+3D,kBAAkBp3C,GACrC,GAAIs3C,IAAgBj4D,KAAKub,UAAU08C,EAAa9kD,GAC5C+B,EAAalV,KAAKwf,QAAQy4C,EAAa9kD,KAKnD+kD,eAAgB,SAAUpqD,GACtB,IAAIkE,EAAOhS,KACP+T,EAAOjG,EAAEiG,KACT+G,EAAShN,EAAEgN,OACXga,EAAQhnB,EAAEgnB,MACVvV,EAAUvN,EAAKuN,QACf8f,EACA84B,EAEJ,GAAIrqD,EAAE4U,MAAO,CACT,IAAK2c,EAAM,EAAGA,EAAMvK,EAAM72B,OAAQohC,IAC9B,GAAIr/B,KAAKymD,SAAS3xB,EAAMuK,GAAK4nB,KACzBjnD,KAAKymD,SAAS3xB,EAAMuK,GAAK4nB,KAAK7D,eAGtC,OAGJ,GAAItoC,GAAU,SACV9a,KAAKy3D,iBAAiB3pD,EAAEgnB,MAAO,UAC5B,CAEH,KAAMha,GAAUA,IAAW,gBAAkB9a,KAAKo4D,cAAe,CAC7Dp4D,KAAKo4D,cAAgB,KACrBD,EAAY,KAGhB,IAAKr9C,IAAW/G,EACZ/B,EAAKrP,QAGT3C,KAAKg4D,cAAcljC,EAAO/gB,GAE1B,IAAKsrB,EAAM,EAAGA,EAAMvK,EAAM72B,OAAQohC,IAC9BvK,EAAMuK,GAAKs0B,OAInB,GAAIp0C,EAAQoU,SAAWwkC,GAAar9C,GAAU,UAAYA,GAAU,OAChE9I,EAAK2hB,OAAOpU,EAAQoU,QAGxB,GAAIwkC,EAAW,CACXn4D,KAAK2E,QAAQ,aACb3E,KAAKo4D,cAAgB,QAI7BC,SAAU,SAAUt4D,GAChB,GAAIA,aAAgBk6B,EAChBj6B,KAAKqf,SAAStf,QACX,GAAIA,aAAgBi9B,GACvBh9B,KAAK6sD,cAAc9sD,IAI3B+wD,eAAgB,SAASwH,GACrB,IAAIx9D,EAAUkF,KAAK+1B,YAAYj7B,QAE/B,IAAKkF,KAAKu4D,eAAiBz9D,EAAQ4zB,SAASzwB,SAAW,EAAG,CACtD,IAAIuE,EAAU1H,EAAQ4zB,SAAS,GAC/B,GAAIlsB,GAAWA,EAAQ+c,QAAQqjB,WAAa,MAAO,CAC/C,IAAIA,EAAWpgC,EAAQ+c,QAAQqjB,SAC/B,IAAIjI,EAAQiI,EAASjI,MACrB,GAAI36B,KAAKqjD,aAAe1oB,EAAM18B,SAAW,EAAG,CACxC,GAAIuE,aAAmBy3B,EACnBU,EAAQ,CAAC,OAAQ,kBAAmB,4BACjC,GAAIn4B,aAAmBw6B,GAC1BrC,EAAQ,CAAC,QAGb,GAAIiI,GAAYA,EAASvhC,SAAW,MAChCs5B,EAAMx+B,KAAK,UAInB,GAAIw+B,GAASA,EAAM18B,OAAQ,CACvB,IAAIu6D,EAAU,GACd,IAAI1vD,EACJ9I,KAAKu4D,cAAgB,IAAIzM,GAAehxD,EAAS,CAC7C6/B,MAAOA,EACPoxB,MAAO19B,EAAMruB,KAAKgsD,cAAehsD,MACjCisD,MAAO,KACPwM,YAAap5D,SAASvE,EAAQ0H,QAAQk2D,QAAQ,aAAaj8B,IAAI,UAAW,IAAM,KAEpF,IAAIk8B,EAAana,EAAWx+C,KAAKu4D,cAAcK,OAAOp2D,SACtD,IAAIq2D,EAAcna,EAAY1+C,KAAKu4D,cAAcK,OAAOp2D,SACxD,GAAIA,aAAmBy3B,EAAO,CAC1B,IAAI8E,EAAc/+B,KAAKomC,YAAY5jC,EAAQiR,OAAOid,KAClD5nB,EAAQ,IAAI1J,EAAM2/B,EAAYhjC,EAAGgjC,EAAYviC,GAAGsK,MAAM,IAAI1H,GACrDu5D,EAAa55B,EAAYz2B,OAAS,EACnCuwD,EAAcL,SACf,GAAIh2D,aAAmBw6B,GAAY,CACtC,IAAI87B,EAAmB94D,KAAKomC,YAAY5jC,EAAQiR,UAEhD3K,EAAQ,IAAI1J,EAAM05D,EAAiB/8D,EAAG+8D,EAAiBt8D,GAClDsK,MAAM,IAAI1H,GACNu5D,EAAaG,EAAiBxwD,MAAQ,IAAM,EAC7CuwD,EAAcL,IAI1B,GAAI1vD,EAAO,CACP,IAAK9I,KAAKu2B,OAAOhT,UACbza,EAAQA,EAAMhC,MAAM,IAAI1H,EAAMY,KAAKw2B,SAASyB,WAAYj4B,KAAKw2B,SAAS0B,YAE1EpvB,EAAQ9I,KAAK01D,eAAe5sD,GAC5BA,EAAQ,IAAI1J,EAAM0/C,EAAK55C,IAAI4D,EAAM/M,EAAG,GAAI+iD,EAAK55C,IAAI4D,EAAMtM,EAAG,IAC1DwD,KAAKu4D,cAAcQ,OAAOjwD,GAC1B,GAAIwvD,EACAt4D,KAAKu4D,cAAcK,OAAOI,IAAI,QAASnI,SAG3C7wD,KAAKw7B,sBAOzBwwB,cAAe,SAASl+C,GACpB9N,KAAK2E,QAAQ,eAAgBmJ,GAC7B9N,KAAKw7B,mBAGTy9B,oBAAqB,SAAUnwD,GAC3B,OAAOA,EAAM9B,MAAM,EAAIhH,KAAKgL,SAGhC4pB,YAAa,WACT50B,KAAKuzB,OAAS,GACdvzB,KAAK+8B,eAAiB,GACtB/8B,KAAK44B,YAAc,GACnB54B,KAAKymD,SAAW,GAChBzmD,KAAK4sD,oBAAsB,GAC3B5sD,KAAKsoD,oBAAsB,IAAI4Q,GAC/Bl5D,KAAKuoD,2BAA6B,GAClCvoD,KAAK64B,gBAAkB,IAAI3D,EAAgB,CACvCikC,OAAQn5D,KAAKswD,aACb8I,OAAQp5D,KAAKswD,eAEjBtwD,KAAK2R,GAAK7W,EAAQuU,YAGtB+7C,gBAAiB,WACb,IAAIp5C,EAAOhS,KACXgS,EAAKqkD,cAEL,GAAIrkD,EAAKqxC,YACLrxC,EAAKwkD,wBAGT,GAAIxkD,EAAKuN,QAAQmsC,SACb,GAAI15C,EAAKqxC,YAAa,CAClBrjD,KAAKq5D,eAAiB,KACtBr5D,KAAKs5D,oBAAsB,KAC3BtnD,EAAKw5C,WAAW8K,QAChBtkD,EAAK+0C,sBAAsBuP,aAE3BtkD,EAAKw5C,WAAW8K,SAK5BD,YAAa,WACT,GAAI90C,EAAQvhB,KAAKuf,QAAQwnC,uBAAwB,CAC7C/mD,KAAKqjD,YAAc,KACnB,IAAIkW,EAAYv5D,KAAKuf,QAAQisC,YAAc,GAC3C,IAAIgO,EAAKv+D,EAAQs+D,GAAa,CAAE7lD,KAAM6lD,GAAcA,EAEpD,GAAIv5D,KAAKwrD,YAAcxrD,KAAKy5D,sBACxBz5D,KAAKwrD,WACAvpB,OAAO,SAAUjiC,KAAKy5D,uBACtBx3B,OAAO,eAAgBjiC,KAAK05D,4BAC5Bz3B,OAAO,QAASjiC,KAAK25D,yBACvB,CACH35D,KAAKy5D,sBAAwBprC,EAAMruB,KAAK45D,eAAgB55D,MACxDA,KAAK05D,2BAA6BrrC,EAAMruB,KAAK65D,oBAAqB75D,MAClEA,KAAK25D,oBAAsBtrC,EAAMruB,KAAK85D,OAAQ95D,MAGlDA,KAAKwrD,WAAa7wD,MAAM+Y,KAAKqmD,WAAW12C,OAAOm2C,GAC1CrkC,KAAK,SAAUn1B,KAAKy5D,uBACpBtkC,KAAK,eAAgBn1B,KAAK05D,4BAC1BvkC,KAAK,QAASn1B,KAAK25D,yBACrB,CACH35D,KAAKg6D,kBACLh6D,KAAKqjD,YAAc,QAI3BmT,sBAAuB,WACnB,IAAI+C,EAAYv5D,KAAKuf,QAAQwnC,sBAC7B,GAAIwS,EAAW,CACX,IAAIC,EAAKv+D,EAAQs+D,GAAa,CAAE7lD,KAAM6lD,GAAcA,EAEpD,GAAIv5D,KAAK+mD,uBAAyB/mD,KAAKi6D,2BACnCj6D,KAAK+mD,sBACA9kB,OAAO,SAAUjiC,KAAKi6D,4BACtBh4B,OAAO,eAAgBjiC,KAAKk6D,iCAC5Bj4B,OAAO,QAASjiC,KAAKm6D,8BACvB,CACHn6D,KAAKi6D,2BAA6B5rC,EAAMruB,KAAKo6D,oBAAqBp6D,MAClEA,KAAKk6D,gCAAkC7rC,EAAMruB,KAAKq6D,yBAA0Br6D,MAC5EA,KAAKm6D,yBAA2B9rC,EAAMruB,KAAKs6D,kBAAmBt6D,MAGlEA,KAAK+mD,sBAAwBpsD,MAAM+Y,KAAKqmD,WAAW12C,OAAOm2C,GACrDrkC,KAAK,SAAUn1B,KAAKi6D,4BACpB9kC,KAAK,eAAgBn1B,KAAKk6D,iCAC1B/kC,KAAK,QAASn1B,KAAKm6D,4BAIhCN,oBAAqB,SAAS/rD,GAC1B,GAAIA,EAAEnQ,MAAQ,OACVqC,KAAKq5D,eAAiB,MAI9BgB,yBAA0B,SAASvsD,GAC/B,GAAIA,EAAEnQ,MAAQ,OACVqC,KAAKs5D,oBAAsB,MAInCQ,OAAQ,WACJ95D,KAAKq5D,eAAiB,OAG1BiB,kBAAmB,WACft6D,KAAKs5D,oBAAsB,OAG/BM,eAAgB,SAAS9rD,GACrB,GAAIA,EAAEgN,SAAW,UACb,GAAI9a,KAAKu6D,iBACLv6D,KAAKw6D,cAAc1sD,EAAEgnB,YAEtB,GAAIhnB,EAAEgN,SAAW,cACpB,GAAI9a,KAAKu6D,iBACLv6D,KAAKy6D,cAAc3sD,EAAEgnB,MAAOhnB,EAAE4U,YAE/B,GAAI5U,EAAEgN,SAAW,MACpB9a,KAAKsoD,oBAAoB53C,IAAI5C,EAAEgnB,YAC5B,GAAIhnB,EAAEgN,SAAW,OACpB9a,KAAK06D,YAAY5sD,EAAEgnB,YAEnB90B,KAAK6zB,WAIb0mC,eAAgB,WACZ,OAAQv6D,KAAK26D,YAGjBnX,qBAAsB,WAClBxjD,KAAK26D,YAAc36D,KAAK26D,YAAc,GAAK,GAG/ClX,oBAAqB,WACjBzjD,KAAK26D,WAAa7b,EAAK55C,KAAKlF,KAAK26D,YAAc,GAAK,EAAG,IAG3D9mC,QAAS,WACL7zB,KAAKq5D,eAAiB,MACtB,IAAKr5D,KAAKs5D,oBACNt5D,KAAK46D,+BAIbA,4BAA6B,WACzB56D,KAAK2C,QACL3C,KAAK66D,WAAW76D,KAAKwrD,WAAWe,QAChC,GAAIvsD,KAAK+mD,sBACL/mD,KAAK86D,gBAAgB96D,KAAK+mD,sBAAsBwF,OAAQ,OAG5D,GAAIvsD,KAAKuf,QAAQoU,OACb3zB,KAAK2zB,OAAO3zB,KAAKuf,QAAQoU,aAEzB3zB,KAAKy2D,qBAETz2D,KAAK2E,QAAQ,cAGjB6/C,mBAAoB,WAChBxkD,KAAKs5D,oBAAsB,MAC3B,IAAKt5D,KAAKq5D,eACNr5D,KAAK46D,+BAIbnE,mBAAoB,WAChB,IAAI79B,EAAc54B,KAAK44B,YACvB,IAAK,IAAIyG,EAAM,EAAGA,EAAMzG,EAAY36B,OAAQohC,IACxCzG,EAAYyG,GAAKxL,WAIzB2mC,cAAe,SAAS1lC,GACpB,IAAI0xB,EAAUxmD,KAAKymD,SACnB,IAAI1mD,EAAMnE,EACV,IAAKA,EAAI,EAAGA,EAAIk5B,EAAM72B,OAAQrC,IAAK,CAC/BmE,EAAO+0B,EAAMl5B,GACb,GAAI4qD,EAAQzmD,EAAK4R,IAAK,CAClB3R,KAAKqB,OAAOmlD,EAAQzmD,EAAK4R,IAAK,OAC9B60C,EAAQzmD,EAAK4R,IAAM,QAK/B+oD,YAAa,WACT,IAAI5/D,EAAUkF,KACd,IAAI+6D,EAAgBjgE,EAAQwtD,oBAC5ByS,EAAch6D,QAAQ,SAASsnD,GAC3B,IAAI3G,EAAW2G,EAAa3G,SAC5B,IAAIvuC,EAAQk1C,EAAa7lD,QACzB,IAAKk/C,EAAS/kB,QAAS,CACnB,GAAIxpB,EAAO,CACPA,EAAM6vC,uBACNloD,EAAQukB,SAASlM,EAAOk1C,EAAajpC,UACrCtkB,EAAQ2rD,SAAS/E,EAAS/vC,IAAMwB,OAEhCrY,EAAQg9D,aAAapW,GAEzB2G,EAAa2S,WACbD,EAAc15D,OAAOqgD,OAKjC+Y,cAAe,SAAS3lC,EAAOpS,GAC3B,IAAK,IAAI9mB,EAAI,EAAGA,EAAIk5B,EAAM72B,OAAQrC,IAAK,CACnC,IAAI8lD,EAAW5sB,EAAMl5B,GAErB,IAAIuX,EAAQnT,KAAKymD,SAAS/E,EAAS/vC,IACnC,GAAIwB,EACAA,EAAMyvC,uBAAuBlB,EAAUh/B,KAKnDm4C,WAAY,SAASI,GACjB,IAAK,IAAIr/D,EAAI,EAAGA,EAAIq/D,EAAUh9D,OAAQrC,IAClCoE,KAAK83D,aAAamD,EAAUr/D,GAAI,QAIxCw+D,oBAAqB,SAAStsD,GAC1B,GAAIA,EAAEgN,SAAW,UACb,GAAI9a,KAAKu6D,iBACLv6D,KAAKk7D,mBAAmBptD,EAAEgnB,YAE3B,GAAIhnB,EAAEgN,SAAW,MACpB9a,KAAK86D,gBAAgBhtD,EAAEgnB,YACpB,GAAIhnB,EAAEgN,SAAW,aAEjB,GAAIhN,EAAEgN,SAAW,cACpB,GAAI9a,KAAKu6D,iBACLv6D,KAAKm7D,mBAAmBrtD,EAAEgnB,YAG9B90B,KAAKwkD,sBAIb0W,mBAAoB,SAASpmC,GACzB,IAAK,IAAIl5B,EAAI,EAAGA,EAAIk5B,EAAM72B,OAAQrC,IAAK,CACnCoE,KAAKqB,OAAOrB,KAAK4sD,oBAAoB93B,EAAMl5B,GAAGqrD,KAAM,OACpDjnD,KAAK4sD,oBAAoB93B,EAAMl5B,GAAGqrD,KAAO,OAIjDkU,mBAAoB,SAASrmC,GACzB,IAAK,IAAIl5B,EAAI,EAAGA,EAAIk5B,EAAM72B,OAAQrC,IAAK,CACnC,IAAI8lD,EAAW5sB,EAAMl5B,GAErB,IAAIsZ,EAAalV,KAAK4sD,oBAAoBlL,EAASuF,KACnD/xC,EAAW0tC,uBAAuBlB,KAI1CoZ,gBAAiB,SAASliC,EAAaxZ,GACnC,IAAInhB,EAAS26B,EAAY36B,OAEzB,IAAK,IAAIrC,EAAI,EAAGA,EAAIqC,EAAQrC,IAAK,CAC7B,IAAI8lD,EAAW9oB,EAAYh9B,GAC3BoE,KAAKo7D,uBAAuB1Z,EAAUtiC,KAI9Cg8C,uBAAwB,SAAS1Z,EAAUtiC,GACvC,IAAKpf,KAAK4sD,oBAAoBlL,EAASuF,KAAM,CACzC,IAAIhiD,EAAOjF,KAAKq7D,mBAAmB3Z,EAASz8C,MAC5C,IAAKsc,EAAQtc,IAASA,IAAS,KAC3BA,EAAO,IAAI7F,EAAMsiD,EAASiF,MAAOjF,EAASkF,OAG9C,IAAI7hD,EAAK/E,KAAKq7D,mBAAmB3Z,EAAS38C,IAC1C,IAAKwc,EAAQxc,IAAOA,IAAO,KACvBA,EAAK,IAAI3F,EAAMsiD,EAASmF,IAAKnF,EAASoF,KAG1C,GAAIvlC,EAAQtc,IAASsc,EAAQxc,GAAK,CAC9B,IAAIwa,EAAUvkB,EAAW,GAAIgF,KAAKuf,QAAQqsC,oBAC1CrsC,EAAQmiC,SAAWA,EACnB,IAAIxsC,EAAa,IAAI8nB,GAAW/3B,EAAMF,EAAIwa,GAE1Cvf,KAAK4sD,oBAAoBlL,EAASuF,KAAO/xC,EACzClV,KAAK6sD,cAAc33C,EAAYkK,MAK3Ci8C,mBAAoB,SAAS58D,GACzB,IAAI66B,EAEJ,GAAI/X,EAAQ9iB,IAAUA,IAAU,KAC5B66B,EAAYt5B,KAAKymD,SAAShoD,GAG9B,OAAO66B,GAGX0gC,gBAAiB,WACb,IAAIhoD,EAAOhS,KACPuf,EAAUvN,EAAKuN,QACfisC,EAAajsC,EAAQisC,WAEzBA,EAAavwD,EAAQuwD,GAAc,CAAE93C,KAAM83C,GAAeA,EAE1D,GAAIA,aAAsB7wD,MAAM+Y,KAAKqmD,cAAgBvO,aAAsB7wD,MAAM+Y,KAAKkrC,wBAClF,MAAM,IAAIzsC,MAAM,qQAGpB,IAAKq5C,EAAWjpC,OACZipC,EAAWjpC,OAAS,CAChB,CAAEG,MAAO,QACT,CAAEA,MAAO,OACT,CAAEA,MAAO,kBACT,CAAEA,MAAO,aAGjB,GAAI1Q,EAAKw5C,YAAcx5C,EAAKyvB,gBACxBzvB,EAAKspD,oBAGTtpD,EAAKyvB,gBAAkBpT,EAAMrc,EAAKkmD,eAAgBlmD,GAClDA,EAAKupD,cAAgBltC,EAAMrc,EAAK8nD,OAAQ9nD,GAExCA,EAAKw5C,WAAa5M,EAAuBv7B,OAAOmoC,GAC3Cr2B,KAAK8pB,EAAQjtC,EAAKyvB,iBAClBtM,KAAKgqB,GAAOntC,EAAKupD,gBAG1BD,kBAAmB,WACf,IAAItpD,EAAOhS,KAEXgS,EAAKw5C,WAAWvpB,OAAOgd,EAAQjtC,EAAKyvB,iBAAiBQ,OAAOkd,GAAOntC,EAAKupD,gBAG5Er1B,OAAQ,SAAUzS,EAAS6G,GACvB,GAAIA,IAAaz/B,GAAa44B,EAC1B,GAAI6G,EAAU,CACVt6B,KAAKqgC,UAAUlkC,KAAKs3B,GACpBzzB,KAAKgrD,aAAa/gC,OAAOwJ,EAAQ/P,YAEhC,CACDtoB,EAAMiG,OAAOrB,KAAKqgC,UAAW5M,GAC7BzzB,KAAKgrD,aAAa3pD,OAAOoyB,EAAQ/P,UAK7CiiC,gBAAiB,SAAUxyC,EAAO1U,GAC9B,GAAIA,EACAuB,KAAKo6B,mBAAmBnU,KAAK9S,QAE7BnT,KAAKo6B,mBAAmBzM,WAIhCukC,gBAAiB,WACb,IAAIsJ,EAAWx7D,KAAKqgC,UAEpB,IAAI,IAAIzkC,EAAI,EAAGA,EAAI4/D,EAASv9D,OAAQrC,IAAK,CACrC,IAAI63B,EAAU+nC,EAAS5/D,GAEvB,GAAI63B,EAAQG,cACRH,EAAQG,gBAEZH,EAAQI,YAIhB4nC,SAAU,WACN,IAAK,IAAI7/D,EAAI,EAAGA,EAAIoE,KAAK44B,YAAY36B,OAAQrC,IACzCoE,KAAK44B,YAAYh9B,GAAGi4B,WAI5B2H,gBAAiB,WACb,GAAIx7B,KAAKu4D,cAAe,CACpBv4D,KAAKu4D,cAAcmD,OACnB17D,KAAKu4D,cAAc5qC,UACnB3tB,KAAKu4D,cAAgB,OAI7BrF,sBAAuB,WACnB,GAAIlzD,KAAK6rD,QAAS,CACd7rD,KAAK6rD,QAAQ6P,OACb17D,KAAK6rD,QAAQl+B,UACb3tB,KAAK6rD,QAAU,OAIvB8P,gBAAiB,WACb,IAAIpuC,EAAUvtB,KAAKu2B,OAAOjJ,SAC1B,IAAIsuC,EAAetd,EAAK96B,YACAD,WAAWgK,EAAQxxB,GAAIwxB,EAAQ/wB,GAEvD,IAAIq/D,EAAW,IAAIvd,EAAKv2C,KAAK,CAAC,EAAG,GAAI,CAACwlB,EAAQjlB,MAAOilB,EAAQllB,SAC7D,IAAIyzD,EAAWruC,EAAK7F,KAAKm0C,SAASF,GAClC,IAAIG,EAAO,IAAIvuC,EAAK7C,MAAM,CAAEpH,UAAWo4C,IACvC,IAAIK,EAAW,IAAIxuC,EAAK7C,MAAM,CAAEsxC,KAAMJ,IACtC,IAAI7kD,EAAOjX,KAAKu2B,OAAOtR,eAAe9Q,SAAS,GAE/C8nD,EAAShyC,OAAO+xC,GAGhBA,EAAK7nD,SAAShY,KAAK8a,GAEnB,OAAOglD,GAGXE,aAAc,WACV,IAAI3xD,EAAQ8zC,EAAK96B,YAAYhZ,MAAM,EAAIxK,KAAK6xD,OAC5C,IAAImK,EAAO,IAAIvuC,EAAK7C,MAAM,CACtBpH,UAAWhZ,IAGf,IAAIyM,EAAOjX,KAAKs9B,UAAUrY,eAC1B+2C,EAAK7nD,SAAShY,KAAK8a,GAEnB,OAAO+kD,GAGXngC,aAAc,WACV77B,KAAK4lC,oBACL5lC,KAAKm6B,0BAGTyL,kBAAmB,WACf,GAAI5lC,KAAKwrD,YAAcxrD,KAAKqjD,YACxBrjD,KAAKwrD,WAAWwC,QAIxB7zB,uBAAwB,WACpB,IAAInoB,EAAOhS,KACX,GAAIgS,EAAK+0C,uBAAyB/0C,EAAKqxC,YAAa,CAChD5oD,EAAE2hE,KAAKn5D,MAAMxI,EAAGuX,EAAKu2C,4BAA4B8T,KAAK,WAClDrqD,EAAK+0C,sBAAsBiH,SAE/Bh8C,EAAKsqD,0BAA4B,OAO7C,GAFAvhE,EAAQwhE,YAAY/4D,OAAO+mD,GAAQ3jD,GAAI,MAEnCjM,MAAM6hE,SACN7hE,MAAM6hE,SAASh5D,OAAO+mD,GAAQ3jD,IAGlC,SAASu8C,GAAoBzB,GACzB,IAAIv/C,EAAS,GAEbu/C,EAAWA,GAAY,GAEvB,GAAIngC,EAAQmgC,EAASz6B,OAASy6B,EAASz6B,OAAS,KAC5C9kB,EAAO8kB,KAAOy6B,EAASz6B,KAG3B,GAAI1F,EAAQmgC,EAAS3lD,IAAM2lD,EAAS3lD,IAAM,KACtCoG,EAAOpG,EAAI2lD,EAAS3lD,EAGxB,GAAIwlB,EAAQmgC,EAASllD,IAAMklD,EAASllD,IAAM,KACtC2F,EAAO3F,EAAIklD,EAASllD,EAGxB,GAAI+kB,EAAQmgC,EAASp5C,QAAUo5C,EAASp5C,QAAU,KAC9CnG,EAAOmG,MAAQo5C,EAASp5C,MAG5B,GAAIiZ,EAAQmgC,EAASr5C,SAAWq5C,EAASr5C,SAAW,KAChDlG,EAAOkG,OAASq5C,EAASr5C,OAG7B,GAAIkZ,EAAQmgC,EAAS/jD,OAAS+jD,EAAS/jD,OAAS,KAC5CwE,EAAOxE,KAAO+jD,EAAS/jD,KAG3B,OAAOwE,EAGX,SAASukD,GAAyBhF,GAC9B,IAAIv/C,EAAS,GAEbu/C,EAAWA,GAAY,GAEvB,GAAIngC,EAAQmgC,EAASz6B,OAASy6B,EAASz6B,OAAS,KAC5C9kB,EAAO0K,QAAU60C,EAASz6B,KAG9B,GAAI1F,EAAQmgC,EAAS/jD,OAAS+jD,EAAS/jD,OAAS,KAC5CwE,EAAOxE,KAAO+jD,EAAS/jD,KAG3B,GAAI4jB,EAAQmgC,EAASz8C,OAASy8C,EAASz8C,OAAS,KAC5C9C,EAAO8C,KAAOy8C,EAASz8C,KAG3B,GAAIsc,EAAQmgC,EAAS4E,gBAAkB5E,EAAS4E,gBAAkB,KAC9DnkD,EAAOmkD,cAAgB5E,EAAS4E,cAGpC,GAAI/kC,EAAQmgC,EAASiF,QAAUjF,EAASiF,QAAU,KAC9CxkD,EAAOwkD,MAAQjF,EAASiF,MAG5B,GAAIplC,EAAQmgC,EAASkF,QAAUlF,EAASkF,QAAU,KAC9CzkD,EAAOykD,MAAQlF,EAASkF,MAG5B,GAAIrlC,EAAQmgC,EAAS38C,KAAO28C,EAAS38C,KAAO,KACxC5C,EAAO4C,GAAK28C,EAAS38C,GAGzB,GAAIwc,EAAQmgC,EAAS6E,cAAgB7E,EAAS6E,cAAgB,KAC1DpkD,EAAOokD,YAAc7E,EAAS6E,YAGlC,GAAIhlC,EAAQmgC,EAASmF,MAAQnF,EAASmF,MAAQ,KAC1C1kD,EAAO0kD,IAAMnF,EAASmF,IAG1B,GAAItlC,EAAQmgC,EAASoF,MAAQpF,EAASoF,MAAQ,KAC1C3kD,EAAO2kD,IAAMpF,EAASoF,IAG1B,OAAO3kD,EAIX,IAAI2pD,GAAiBnxD,MAAMmX,WAAWtO,OAAO,CACzCC,KAAM,SAAS3I,EAASykB,GACpB5kB,MAAMmX,WAAWlL,GAAGnD,KAAKpG,KAAK2C,MAC9BA,KAAKlF,QAAUA,EACfkF,KAAKuf,QAAUvkB,EAAW,GAAIgF,KAAKuf,QAASA,GAC5Cvf,KAAKy8D,OAAS,GACdz8D,KAAK08D,gBACL18D,KAAK28D,cACL38D,KAAK48D,cAEL,GAAI58D,KAAKuf,QAAQ0sC,MACbjsD,KAAK68D,cAGT78D,KAAKm1B,KAAKn1B,KAAKo1B,OAAQ7V,IAG3B6V,OAAQ,CAAC,SAETynC,YAAa,WACT78D,KAAK2M,UAAYlS,EAAE,UAAUwvB,OAAOjqB,KAAKwC,SACzCxC,KAAK44D,OAAS54D,KAAK2M,UAAUmwD,WAAW,IAAIC,iBAGhDH,YAAa,WACT,IAAK,IAAIhhE,EAAI,EAAGA,EAAIoE,KAAKy8D,OAAOx+D,OAAQrC,IAAK,CACzC,IAAIu6B,EAAOn2B,KAAKy8D,OAAO7gE,GACvB,GAAIu6B,EAAK6mC,SAAW7mC,EAAK6mC,QAAQ/+D,SAAWsjB,EAAQ4U,EAAK6mC,SACrDh9D,KAAKi9D,SAASvsD,IAAIylB,KAK9BumC,cAAe,WACX18D,KAAKwC,QAAU/H,EAAE,UACjBuF,KAAKi9D,SAAWj9D,KAAKwC,QAChB06D,aAAa,CACVnR,MAAO19B,EAAMruB,KAAK+rD,MAAO/rD,MACzBm9D,UAAW,QACZC,kBAEPp9D,KAAKwC,QAAQi6B,IAAI,SAAU,SAG/BkgC,YAAa,WACT,IAAK,IAAI/gE,EAAI,EAAGA,EAAIoE,KAAKuf,QAAQob,MAAM18B,OAAQrC,IAC3CoE,KAAKq9D,WAAWr9D,KAAKuf,QAAQob,MAAM/+B,KAI3CyhE,WAAY,SAASlnC,GACjB,IAAK0oB,EAAc1oB,GACfA,EAAO,CACH93B,KAAM83B,GAGd,IAAImnC,EAAWnnC,EAAK93B,KAAO,OAC3B,GAAI2B,KAAKs9D,GACLt9D,KAAKs9D,GAAUnnC,QAEfn2B,KAAKy8D,OAAOtgE,KAAKnB,EAAW,GAAIm7B,EAAM,CAClConC,WAAYv9D,KAAKw9D,eAAe,CAAC1iD,OAAQqb,EAAK93B,WAK1D06D,OAAQ,SAASjwD,GACb,IAAI2vD,EAAcp5D,SAASW,KAAKuf,QAAQk5C,YAAa,IAErD,GAAIz4D,KAAK44D,OAAQ,CACb54D,KAAK44D,OAAO6E,KAAK30D,EAAM/M,EAAG+M,EAAMtM,GAEhC,GAAIi8D,EACAz4D,KAAK44D,OAAO3K,QAAQxxB,IAAI,SAAUg8B,KAK9CiD,KAAM,WACF,GAAI17D,KAAK44D,OACL54D,KAAK44D,OAAO1K,SAIpBwP,SAAU,WACN,MAAO,CACH//D,KAAM,cACNq/D,QAAS,KAIjBW,SAAU,WACN39D,KAAKy8D,OAAOtgE,KAAK,CACbyhE,KAAM,OACNC,SAAU,WACVlgE,KAAM,SACNspB,KAAM,OACNs2C,WAAYv9D,KAAKw9D,eAAe,CAAE1iD,OAAQ,YAIlDgjD,WAAY,WACR99D,KAAKy8D,OAAOtgE,KAAK,CACbyhE,KAAM,QACNC,SAAU,WACVlgE,KAAM,SACNspB,KAAM,SACNs2C,WAAYv9D,KAAKw9D,eAAe,CAAE1iD,OAAQ,cAIlDijD,wBAAyB,SAASx+C,GAC9Bvf,KAAKg+D,aAAa,UAClBh+D,KAAKi+D,aAAajB,QAAQ7gE,KAAK,CAC3ByhE,KAAM,cACNC,SAAU,WACV52C,KAAM,sBACNiF,MAAO,SACPqxC,WAAYv9D,KAAKw9D,eAAe,CAAE1iD,OAAQ,sBAAuBtf,KAAM+jB,EAAQ/jB,UAIvF0iE,oBAAqB,SAAS3+C,GAC1Bvf,KAAKg+D,aAAa,UAClBh+D,KAAKi+D,aAAajB,QAAQ7gE,KAAK,CAC3ByhE,KAAM,eACNL,WAAYv9D,KAAKw9D,eAAe,CAAE1iD,OAAQ,kBAAmBtf,KAAM+jB,EAAQ/jB,OAC3EqiE,SAAU,WACV52C,KAAM,kBACNiF,MAAO,YAIfiyC,gBAAiB,WACbn+D,KAAKg+D,aAAa,UAClBh+D,KAAKo+D,aAAapB,QAAQ7gE,KAAK,CAC3ByhE,KAAM,QACNC,SAAU,WACV52C,KAAM,cACNiF,MAAO,SACPqxC,WAAYv9D,KAAKw9D,eAAe,CAAE1iD,OAAQ,mBAIlDujD,qBAAsB,WAClBr+D,KAAKg+D,aAAa,UAClBh+D,KAAKo+D,aAAapB,QAAQ7gE,KAAK,CAC3ByhE,KAAM,YACNC,SAAU,WACV52C,KAAM,mBACNiF,MAAO,SACPqxC,WAAYv9D,KAAKw9D,eAAe,CAAE1iD,OAAQ,wBAIlDwjD,SAAU,WACNt+D,KAAKg+D,aAAa,WAClBh+D,KAAKu+D,cAAcvB,QAAQ7gE,KAAK,CAC5ByhE,KAAM,OACNC,SAAU,WACV52C,KAAM,OACNiF,MAAO,UACPqxC,WAAYv9D,KAAKw9D,eAAe,CAAE1iD,OAAQ,YAIlD0jD,SAAU,WACNx+D,KAAKg+D,aAAa,WAClBh+D,KAAKu+D,cAAcvB,QAAQ7gE,KAAK,CAC5ByhE,KAAM,OACNC,SAAU,WACV52C,KAAM,OACNiF,MAAO,UACPqxC,WAAYv9D,KAAKw9D,eAAe,CAAE1iD,OAAQ,YAIlDkjD,aAAc,SAAS3/D,GACnB,IAAIogE,EAAO,IAAMpgE,EAAO,QACxB,IAAK2B,KAAKy+D,GAAO,CACbz+D,KAAKy+D,GAAQz+D,KAAK09D,WAClB19D,KAAKy8D,OAAOtgE,KAAK6D,KAAKy+D,MAI9BjB,eAAgB,SAASD,GACrB,IAAIpP,EAAO,GAEX,GAAIoP,EAAWziD,OACXqzC,EAAKxzD,MAAMwzD,KAAK,WAAaoP,EAAWziD,OAG5C,GAAIyiD,EAAW/hE,KACX2yD,EAAKxzD,MAAMwzD,KAAK,SAAWoP,EAAW/hE,KAG1C,OAAO2yD,GAGXuQ,eAAgB,SAASl8D,GACrB,IAAI2rD,EAAO,GAEX,IAAIrzC,EAAStY,EAAQ2rD,KAAKxzD,MAAMwzD,KAAK,WACrC,GAAIrzC,EACAqzC,EAAKrzC,OAASA,EAGlB,IAAItf,EAAOgH,EAAQ2rD,KAAKxzD,MAAMwzD,KAAK,SACnC,GAAI3yD,EACA2yD,EAAK3yD,KAAOA,EAGhB,OAAO2yD,GAGXpC,MAAO,SAASj+C,GACZ,IAAIyvD,EAAav9D,KAAK0+D,eAAejkE,EAAEqT,EAAEnK,SACzC,IAAImX,EAASyiD,EAAWziD,OAExB,GAAIA,GAAU9a,KAAK8a,GACf9a,KAAK8a,GAAQyiD,GAGjBv9D,KAAK2E,QAAQ,QAAS3E,KAAK2+D,UAAU7jD,EAAQhN,EAAEnK,UAGnDg7D,UAAW,SAAS7jD,EAAQnX,GACxB,IAAIqkB,EAAWhoB,KAAK4+D,mBAChB3gE,EAAS+pB,EAAS/pB,OAClBs1B,EAAS,GAAIqF,EAAc,GAAIp2B,EAEnC,IAAK,IAAI68B,EAAM,EAAGA,EAAMphC,EAAQohC,IAAO,CACnC78B,EAAUwlB,EAASqX,GACnB,GAAI78B,aAAmBy3B,EACnB1G,EAAOp3B,KAAKqG,QAEZo2B,EAAYz8B,KAAKqG,GAIzB,MAAO,CACH+wB,OAAQA,EACRqF,YAAaA,EACb9d,OAAQA,EACRnX,OAAQA,IAIhBk7D,OAAU,WACN,IAAI/jE,EAAUkF,KAAKlF,QACnB,IAAI6gC,EAAW7gC,EAAQ8gC,eAAe57B,KAAK4+D,oBAC3C,GAAIjjC,EAAS19B,OAAQ,CACjB+B,KAAKlF,QAAQuG,OAAOs6B,EAAU,MAC9B37B,KAAKlF,QAAQ+gC,iBAIrB6wB,KAAM,WACF,IAAIoS,EAAkB9+D,KAAK4+D,mBAC3B,GAAIE,EAAgB7gE,SAAW,EAC3B+B,KAAKlF,QAAQ4xD,KAAKoS,EAAgB,KAI1CC,gBAAiB,SAASx/C,GACtB,IAAIvV,EAAQlM,WAAWyhB,EAAQ/jB,MAAQ,IACvCwE,KAAK0jD,QAAQ15C,IAGjBg1D,oBAAqB,SAASz/C,GAC1B,IAAIvV,EAAQlM,WAAWyhB,EAAQ/jB,MAAQ,IACvCwE,KAAK0jD,SAAS15C,IAGlB05C,QAAS,SAAS15C,GACd,IAAIypB,EAAUzzB,KAAKlF,QAAQ49B,iBAC3BjF,EAAQzpB,MAAMypB,EAAQzpB,QAAUA,GAChCypB,EAAQnpB,UAGZs0D,iBAAkB,WACd,OAAO5+D,KAAKlF,QAAQ4zB,UAGxB29B,YAAa,WACTrsD,KAAKlF,QAAQuxD,eAGjBM,iBAAkB,WACd3sD,KAAKlF,QAAQ6xD,oBAGjB76B,KAAM,WACF9xB,KAAKlF,QAAQg3B,QAGjBE,KAAM,WACFhyB,KAAKlF,QAAQk3B,QAGjBrE,QAAS,WACL3tB,KAAKlF,QAAU,KACfkF,KAAKwC,QAAU,KACfxC,KAAKuf,QAAU,KAEf,GAAIvf,KAAKi9D,SACLj9D,KAAKi9D,SAAStvC,UAGlB,GAAI3tB,KAAK44D,OACL54D,KAAK44D,OAAOjrC,aAKpBsxC,GAAStkE,MAAMmX,WAAWtO,OAAO,CACjCC,KAAM,SAASjB,EAAS+c,GACpB5kB,MAAMmX,WAAWlL,GAAGnD,KAAKpG,KAAK2C,MAE9BA,KAAKuf,QAAU/b,EAAO,KAAM,GAAIxD,KAAKuf,QAASA,GAC9Cvf,KAAKwC,QAAUA,EACfxC,KAAKijD,MAAQjjD,KAAKuf,QAAQ0jC,MAC1BjjD,KAAKuiB,OAASviB,KAAKk/D,aACnBl/D,KAAKm/D,iBACLn/D,KAAKo/D,kBAGT7/C,QAAS,CACL0tC,QAAS,IAGbkS,eAAgB,WACZn/D,KAAKiuD,QAAUjuD,KAAKwC,SAGxB48D,eAAgB,WACZ,IAAI7/C,EAAUvf,KAAKuf,QAEnBvf,KAAK4iC,SAAW,IAAIjoC,MAAMuL,GAAGm5D,SAASr/D,KAAKiuD,QAAS,CAChD1rC,OAAQviB,KAAKuiB,OACb5e,OAAQ4b,EAAQ5b,OAChB27D,eAAgB,MAChBrc,MAAOjjD,KAAKijD,SAIpBI,YAAa,SAAS3gC,GAClB,OAAO1iB,KAAKijD,MAAMrgB,UAAY5iC,KAAKijD,MAAMrgB,SAASlgB,IAGtDw8C,WAAY,WACR,IAAI38C,EAAS,GACb,IAAIg9C,EAAcv/D,KAAKijD,MAAM1gC,OAE7B,IAAK,IAAIG,KAAS68C,EAAa,CAC3B,IAAIp9D,EAAS,GACb,GAAInC,KAAKqjD,YAAY3gC,GAAQ,CACzB,IAAI4pC,EAAStsD,KAAKuf,QAAQ0tC,QAAQvqC,GAClC,GAAI4pC,EACAnqD,EAAOmqD,OAASA,EAEpBnqD,EAAOugB,MAAQA,EACfH,EAAOpmB,KAAKgG,IAIpB,OAAOogB,GAGXlmB,IAAK,WACD,OAAO2D,KAAK4iC,SAASvmC,OAGzBsxB,QAAS,WACL3tB,KAAK4iC,SAASjV,UACd3tB,KAAK4iC,SAASpgC,QAAQN,KAAK,IAAMvH,MAAMwzD,KAAK,iBAAmB,KAAKpiD,QACpE/L,KAAKijD,MAAQjjD,KAAKiuD,QAAUjuD,KAAKwC,QAAUxC,KAAKw/D,QAAUx/D,KAAK4iC,SAAW,QAI9E4qB,GAAcyR,GAAOz7D,OAAO,CAC5BC,KAAM,SAASjB,EAAS+c,GACpB0/C,GAAOr4D,GAAGnD,KAAKpG,KAAK2C,KAAMwC,EAAS+c,GACnCvf,KAAKm1B,KAAKn1B,KAAKo1B,OAAQp1B,KAAKuf,SAE5Bvf,KAAKy9D,QAGTroC,OAAQ,CAAE,SAAU,UAEpB7V,QAAS,CACL7kB,OAAQ,CACJuxD,MAAO,KACPkR,UAAW,MACX1R,UAAW,KACX55B,MAAO,OACP/M,QAAS,QAIjBq6C,eAAgB,WACZ,IAAIntD,EAAOhS,KACXA,KAAKiuD,QAAUxzD,EAAE,oCACZ0zD,KAAKxzD,MAAMwzD,KAAK,OAAQnuD,KAAKijD,MAAMgE,KAExC,IAAIwY,EAAc,GAElB,GAAIz/D,KAAKuf,QAAQ8iC,SAAU,CACvBod,GAAez/D,KAAK0/D,kBACpB1/D,KAAKuiB,OAAS,QAEdk9C,GAAez/D,KAAK2/D,gBAGxBF,GAAez/D,KAAK4/D,iBAEpB5/D,KAAKiuD,QAAQhkC,OACTxvB,EAAE,wCAAwCwvB,OAAOw1C,IAErDz/D,KAAKtF,OAAS,IAAIC,MAAMuL,GAAG25D,OAAO7/D,KAAKiuD,QAAQI,SAASruD,KAAKwC,SAAUxC,KAAKuf,QAAQ7kB,QACpFsF,KAAKtF,OAAOy6B,KAAK,QAAS,SAASrnB,GAE/B,GAAIA,EAAEgyD,cAAe,CACjBhyD,EAAEiyD,OAAOv9D,QAAQmC,QAAQ,SACzBqN,EAAKguD,aAAalyD,MAI1B9N,KAAKigE,uBAGTP,gBAAiB,WACb,IAAIrd,EAAWriD,KAAKuf,QAAQ8iC,SAE5B,UAAWA,IAAa,SACpBA,EAAW1nD,MAAMulE,SAAS7d,GAG9BA,EAAW1nD,MAAM0nD,SAASA,EAAf1nD,CAAyBqF,KAAKijD,OAEzC,OAAOZ,GAGXsd,cAAe,WACX,IAAIQ,EAAO,GACX,IAAK,IAAIvkE,EAAI,EAAGA,EAAIoE,KAAKuiB,OAAOtkB,OAAQrC,IAAK,CACzC,IAAI8mB,EAAQ1iB,KAAKuiB,OAAO3mB,GAExBukE,GAAQ,yCAA2Cz9C,EAAMA,MAAQ,MAAQA,EAAMA,OAAS,IAAM,iBAE9F,GAAI1iB,KAAKqjD,YAAY3gC,EAAMA,OACvBy9C,GAAQ,QAAUxlE,MAAMwzD,KAAK,iBAAmB,KAAOzrC,EAAMA,MAC7D,gCAIR,OAAOy9C,GAGXP,eAAgB,WACZ,IAAIO,EAAO,+BACXA,GAAQngE,KAAKogE,cAAc,UAC3BD,GAAQngE,KAAKogE,cAAc,UAC3BD,GAAQ,SACR,OAAOA,GAGXC,cAAe,SAAS/hE,GACpB,OAAO1D,MAAM0nD,SAAShC,GAAf1lD,CAAgC4lD,GAAeliD,KAG1D4hE,oBAAqB,WACjBjgE,KAAKqgE,oBAAsBhyC,EAAMruB,KAAKggE,aAAchgE,MACpDA,KAAKtF,OAAO8H,QAAQosD,GAAG1P,EAAQH,EAAI,qBAAsB/+C,KAAKqgE,qBAE9DrgE,KAAKsgE,oBAAsBjyC,EAAMruB,KAAKugE,aAAcvgE,MACpDA,KAAKtF,OAAO8H,QAAQosD,GAAG1P,EAAQH,EAAI,qBAAsB/+C,KAAKsgE,sBAGlEC,aAAc,SAASzyD,GACnBA,EAAE+iD,iBACF7wD,KAAK2E,QAAQ,WAGjBq7D,aAAc,SAAUlyD,GACpBA,EAAE+iD,iBACF7wD,KAAK2E,QAAQ,WAGjB84D,KAAM,WACFz9D,KAAKtF,OAAOoG,SAAS28D,QAGzBvP,MAAO,WACHluD,KAAKtF,OAAOy6B,KAAK,aAAc9G,EAAMruB,KAAK2tB,QAAS3tB,OAAOkuD,SAG9DvgC,QAAS,WACL3tB,KAAKtF,OAAOwzD,QAAQvgC,UACpB3tB,KAAKtF,OAAO8H,QAAQwwD,IAAI9T,EAAQH,EAAI,qBAAsB/+C,KAAKqgE,qBAC/DrgE,KAAKtF,OAAO8H,QAAQwwD,IAAI9T,EAAQH,EAAI,qBAAsB/+C,KAAKsgE,qBAC/DtgE,KAAKqgE,oBAAsB,KAC3BrgE,KAAKwgE,wBAA0B,KAC/BxgE,KAAKtF,OAAS,KACdukE,GAAOr4D,GAAG+mB,QAAQtwB,KAAK2C,SAI/B,SAASqtD,GAAmB1gD,EAAW4S,GACnC,IAAI0jC,EAAQjjD,KAAKwrD,WAAWiV,OAAOxd,MACnC,GAAIA,EAAO,CACP,IAAIyd,EAAYzd,EAAMr8C,GAAG2b,OAAO0E,KAAO,OAAQg8B,EAAM0d,QACrDlmE,EAAE,gBAAkB8kB,EAAQmD,MAAQ,QAC/B2rC,SAAS1hD,GAAWi0D,kBAAkB,CACnCC,eAAgB5d,EAAM0d,QACtBG,cAAeJ,EACflV,WAAYxrD,KAAKwrD,WAAW93C,OAAO+uC,SACnCse,YAAa,IACbC,eAAgB,QAKhC,SAASC,GAAavf,GAClB1hD,KAAK0hD,SAAWA,EAChB1hD,KAAKkhE,UAAY,GAyBrB,SAAShI,KACLl5D,KAAK80B,MAAQ,GAvBjBmsC,GAAar6D,GAAKq6D,GAAa1jE,UAAY,CACvCirD,WAAY,SAAS2Y,GACjB,IAAIC,EAAW3mE,EAAE4mE,WACjBrhE,KAAKkhE,UAAU/kE,KAAK,CAChBglE,SAAUA,EACVG,SAAUF,IAEd,OAAOA,GAGXpG,SAAU,WACN,IAAIkG,EAAYlhE,KAAKkhE,UACrB,IAAInhE,EACJ,IAAK,IAAIs/B,EAAM,EAAGA,EAAM6hC,EAAUjjE,OAAQohC,IAAO,CAC7Ct/B,EAAOC,KAAKkhE,UAAU7hC,GACtBt/B,EAAKohE,SAASnhE,KAAK0hD,UACnB3hD,EAAKuhE,SAASC,UAElBvhE,KAAKkhE,UAAY,KAQzBhI,GAAwBtyD,GAAKsyD,GAAwB37D,UAAY,CAC7DmT,IAAK,SAASokB,GACV,IAAI,IAAIuK,EAAM,EAAGA,EAAMvK,EAAM72B,OAAQohC,IACjCr/B,KAAK80B,MAAMA,EAAMuK,GAAK4nB,KAAO,IAAIga,GAAansC,EAAMuK,KAI5Dt+B,QAAS,SAASogE,GACd,IAAK,IAAIla,KAAOjnD,KAAK80B,MACjBqsC,EAASnhE,KAAK80B,MAAMmyB,KAI5BD,SAAU,SAASC,GACf,OAAOjnD,KAAK80B,MAAMmyB,IAGtB5lD,OAAQ,SAAStB,UACNC,KAAK80B,MAAM/0B,EAAKknD,OAI/B,IAAIua,GAAWj+D,EAAMC,OAAO,CACxBC,KAAM,WACFzD,KAAKuzB,OAAS,IAGlBkuC,KAAM,SAAStuD,EAAOM,GAClBzT,KAAKuzB,OAAOp3B,KAAK,CACbsX,OAAQA,EACRN,MAAOA,IAEXA,EAAMuuD,UAAY1hE,MAGtBuC,OAAQ,SAAS4Q,EAAOM,GACpBzT,KAAKyhE,KAAKtuD,EAAOM,IAGrBpS,OAAQ,SAAS8R,GACb,IAAIogB,EAASvzB,KAAKuzB,OAClB,IAAIt1B,EAASs1B,EAAOt1B,OAEpB,IAAK,IAAIohC,EAAM,EAAGA,EAAMphC,EAAQohC,IAC5B,GAAI9L,EAAO8L,GAAKlsB,QAAUA,EAAO,CAC7BogB,EAAO9xB,OAAO49B,EAAK,GACnB,QAKZ8qB,YAAa,SAASrgD,EAAMkgD,GACxB,IAAIz2B,EAASvzB,KAAKuzB,OAClB,IAAIt1B,EAASs1B,EAAOt1B,OAEpB,IAAK,IAAIrC,EAAI,EAAGA,EAAIqC,EAAQrC,IACxB,GAAIoE,KAAK2hE,UAAUpuC,EAAO33B,GAAGuX,MAAOrJ,KAAU/O,EAAQ4G,QAAQ4xB,EAAO33B,GAAGuX,MAAO62C,GAC3E,OAAO,MAKnB2X,UAAW,SAASxuD,EAAOrJ,GACvB,IAAIE,EAAQmJ,EAAM7I,SAASN,MAC3B,IAAIyJ,EAASN,EAAMM,SACnB,IAAImpB,EACJ,IAAK5yB,EACD4yB,EAAMnpB,EAAOxI,SAASnB,QAEtB8yB,EAAM3wB,EAAUI,MAAMvC,EAAM2J,GAASzJ,GAEzC,OAAO4yB,KAIXglC,GAAWJ,GAASh+D,OAAO,CAC3BC,KAAM,SAASqG,GACX03D,GAAS56D,GAAGnD,KAAKpG,KAAK2C,MACtBA,KAAKmU,SAAW,GAChBnU,KAAK8J,KAAOA,GAGhB+3D,SAAU,SAAS/3D,GACf,IAAIg4D,EAAW9hE,KAAK8J,KACpB,IAAIi4D,EAAkBD,EAASn4D,cAC/B,IAAIA,EAAcG,EAAKH,cACvB,IAAIk4D,EAAWC,EAAS/lE,GAAK+N,EAAK/N,GAAK+lE,EAAStlE,GAAKsN,EAAKtN,GAAKmN,EAAY5N,GAAKgmE,EAAgBhmE,GAC5F4N,EAAYnN,GAAKulE,EAAgBvlE,EACrC,OAAOqlE,GAGXG,eAAgB,SAASl4D,GACrB,OAAO9J,KAAK8J,KAAKmB,SAASnB,IAG9BvH,OAAQ,SAAU4Q,EAAOM,GACrB,IAAIwuD,EAAW,MACf,IAAI9tD,EAAWnU,KAAKmU,SACpB,IAAIlW,EAASkW,EAASlW,OACtB,GAAI+B,KAAK6hE,SAASpuD,GAAS,CACvB,IAAKxV,GAAU+B,KAAKuzB,OAAOt1B,OAAS,EAChC+B,KAAKyhE,KAAKtuD,EAAOM,OACd,CACH,IAAKxV,EACD+B,KAAKkiE,gBAGT,IAAK,IAAI7iC,EAAM,EAAGA,EAAMlrB,EAASlW,OAAQohC,IACrC,GAAIlrB,EAASkrB,GAAK98B,OAAO4Q,EAAOM,GAAS,CACrCwuD,EAAW,KACX,MAIR,IAAKA,EACDjiE,KAAKyhE,KAAKtuD,EAAOM,GAGzBwuD,EAAW,KAGf,OAAOA,GAGXC,cAAe,WACX,IAAIp4D,EAAO9J,KAAK8J,KACZqK,EAAWnU,KAAKmU,SAChBof,EAASvzB,KAAKuzB,OACdzyB,EAASgJ,EAAKhJ,SACdqhE,EAAYr4D,EAAKxB,MAAQ,EACzB85D,EAAat4D,EAAKzB,OAAS,EAC3Bg6D,EAAU9kC,EAEdppB,EAAShY,KACL,IAAIylE,GAAS,IAAI75D,EAAK+B,EAAK/N,EAAG+N,EAAKtN,EAAG2lE,EAAWC,IACjD,IAAIR,GAAS,IAAI75D,EAAKjH,EAAO/E,EAAG+N,EAAKtN,EAAG2lE,EAAWC,IACnD,IAAIR,GAAS,IAAI75D,EAAK+B,EAAK/N,EAAG+E,EAAOtE,EAAG2lE,EAAWC,IACnD,IAAIR,GAAS,IAAI75D,EAAKjH,EAAO/E,EAAG+E,EAAOtE,EAAG2lE,EAAWC,KAEzD,IAAK7kC,EAAWhK,EAAOt1B,OAAS,EAAGs/B,GAAY,EAAGA,IAC9C,IAAK8kC,EAAW,EAAGA,EAAWluD,EAASlW,OAAQokE,IAC3C,GAAIluD,EAASkuD,GAAU9/D,OAAOgxB,EAAOgK,GAAUpqB,MAAOogB,EAAOgK,GAAU9pB,QAAS,CAC5E8f,EAAO9xB,OAAO87B,EAAU,GACxB,QAMhB4sB,YAAa,SAASrgD,EAAMkgD,GACxB,IAAI3qB,EACJ,IAAIlrB,EAAWnU,KAAKmU,SACpB,IAAIlW,EAASkW,EAASlW,OACtB,IAAI2+B,EAAM,MAEV,GAAI58B,KAAKgiE,eAAel4D,GACpB,GAAI03D,GAAS56D,GAAGujD,YAAY9sD,KAAK2C,KAAM8J,EAAMkgD,GACzCptB,EAAM,UAEL,IAAKyC,EAAM,EAAGA,EAAMphC,EAAQohC,IACzB,GAAIlrB,EAASkrB,GAAK8qB,YAAYrgD,EAAMkgD,GAAU,CAC3CptB,EAAM,KACN,MAMf,OAAOA,KAIXmuB,GAAiBxnD,EAAMC,OAAO,CAC9B8+D,UAAW,IAEX7+D,KAAM,SAAS3I,GACX,IAAIynE,EAAsBl0C,EAAMruB,KAAKwiE,cAAexiE,MACpDlF,EAAQq6B,KAAKtF,EAAkB0yC,GAC/BznE,EAAQq6B,KAAKvF,GAAY2yC,GACzBviE,KAAKyiE,aAGTA,UAAW,WACPziE,KAAK0iE,QAAU,GACf1iE,KAAKiX,KAAO,IAAIuqD,IAGpB7+D,MAAO,WACH3C,KAAKyiE,aAGTD,cAAe,SAAS10D,GACpB,GAAIA,EAAE/N,KAAK2hE,UACP5zD,EAAE/N,KAAK2hE,UAAUrgE,OAAOyM,EAAE/N,MAE9BC,KAAKuC,OAAOuL,EAAE/N,OAGlBwC,OAAQ,SAAS4Q,GACb,IAAIM,EAASN,EAAMM,OAAOid,IAC1B,IAAIiyC,EAAW3iE,KAAKsiE,UACpB,IAAIM,EAAU5iE,KAAK6iE,WAAWpvD,GAC9B,IAAI1X,EAAI6mE,EAAQ,GAAG,GACnB,IAAIpmE,EAAIomE,EAAQ,GAAG,GAEnB,GAAI5iE,KAAK8iE,OAAOF,GACZ5iE,KAAKiX,KAAK1U,OAAO4Q,EAAOM,OACrB,CACH,IAAKzT,KAAK0iE,QAAQ3mE,GACdiE,KAAK0iE,QAAQ3mE,GAAK,GAGtB,IAAKiE,KAAK0iE,QAAQ3mE,GAAGS,GACjBwD,KAAK0iE,QAAQ3mE,GAAGS,GAAK,IAAIolE,GACrB,IAAI75D,EAAKhM,EAAI4mE,EAAUnmE,EAAImmE,EAAUA,EAAUA,IAIvD3iE,KAAK0iE,QAAQ3mE,GAAGS,GAAG+F,OAAO4Q,EAAOM,KAIzCpS,OAAQ,SAAS8R,GACb,GAAIA,EAAMuuD,UACNvuD,EAAMuuD,UAAUrgE,OAAO8R,IAI/B2vD,OAAQ,SAASF,GACb,OAAOA,EAAQ,GAAG3kE,OAAS,GAAK2kE,EAAQ,GAAG3kE,OAAS,GAGxD4kE,WAAY,SAAS/4D,GACjB,IAAI64D,EAAW3iE,KAAKsiE,UACpB,IAAI34D,EAAcG,EAAKH,cACvB,IAAIo5D,EAAUjkB,EAAKr/C,MAAMkK,EAAY5N,EAAI4mE,GACzC,IAAIK,EAAUlkB,EAAKr/C,MAAMkK,EAAYnN,EAAImmE,GACzC,IAAIC,EAAU,CAAC,GAAG,IAClB,IAAK,IAAI7mE,EAAI+iD,EAAKr/C,MAAMqK,EAAK/N,EAAI4mE,GAAW5mE,GAAKgnE,EAAShnE,IACtD6mE,EAAQ,GAAGzmE,KAAKJ,GAEpB,IAAK,IAAIS,EAAIsiD,EAAKr/C,MAAMqK,EAAKtN,EAAImmE,GAAWnmE,GAAKwmE,EAASxmE,IACtDomE,EAAQ,GAAGzmE,KAAKK,GAEpB,OAAOomE,GAGXzY,YAAa,SAASrgD,EAAMkgD,GACxB,IAAI4Y,EAAU5iE,KAAK6iE,WAAW/4D,GAC9B,IAAIm5D,EAAMC,EAAMnnE,EAAGS,EACnB,IAAIya,EAEJ,GAAIjX,KAAKiX,KAAKkzC,YAAYrgD,EAAMkgD,GAC5B,OAAO,KAGX,IAAKiZ,EAAO,EAAGA,EAAOL,EAAQ,GAAG3kE,OAAQglE,IAAQ,CAC7ClnE,EAAI6mE,EAAQ,GAAGK,GACf,IAAKC,EAAO,EAAGA,EAAON,EAAQ,GAAG3kE,OAAQilE,IAAQ,CAC7C1mE,EAAIomE,EAAQ,GAAGM,GACfjsD,GAAQjX,KAAK0iE,QAAQ3mE,IAAM,IAAIS,GAC/B,GAAIya,GAAQA,EAAKkzC,YAAYrgD,EAAMkgD,GAC/B,OAAO,MAKnB,OAAO,SAIf,SAASvF,GAAc/C,GACnB,IAAIv/C,EAASu/C,EACb,GAAIA,aAAoB/mD,MAAM+Y,KAAKyvD,MAAO,CACtChhE,EAASu/C,EAASe,SAClBtgD,EAAOu/C,EAASif,SAAWjf,EAAS0hB,WAExC,OAAOjhE,EAGX,SAAS6xD,GAAqBhsC,GAC1B,IAAI4Q,EAAc,GAClB,IAAIrF,EAAS,GACb,IAAI/wB,EAAS68B,EACb,IAAKA,EAAM,EAAGA,EAAMrX,EAAS/pB,OAAQohC,IAAO,CACxC78B,EAAUwlB,EAASqX,GACnB,GAAI78B,aAAmBy3B,EACnB1G,EAAOp3B,KAAKqG,QAEZo2B,EAAYz8B,KAAKqG,GAGzB,MAAO,CACH+wB,OAAQA,EACRqF,YAAaA,GAIrB,SAAS4zB,GAAYhB,EAAYvI,GAC7B,GAAIuI,EAAWiV,OAAOxd,MAClB,OAAO,IAAIuI,EAAWiV,OAAOxd,MAAMA,GAGvC,OAAO,IAAItoD,MAAM+Y,KAAK2vD,iBAAiBpgB,GAG3C,SAASiE,GAAWxkC,EAAOugC,GACvB,GAAI1hC,EAAQ0hC,EAAMvgC,IACdugC,EAAMnyC,IAAI4R,EAAO,MAIzB,SAAS6rC,GAAmB+U,EAAa9gD,EAAgBD,GACrD,IAAIG,EACJ,IAAK,IAAI2c,EAAM,EAAGA,EAAM9c,EAAOtkB,OAAQohC,IAAO,CAC1C3c,EAAQH,EAAO8c,GACf,GAAI7c,IAAmBjB,EAAQiB,EAAeE,IAC1CF,EAAeE,GAAS4gD,EAAY5gD,IAKhD,SAASqjC,GAAkBriC,GACvB,IAAIqgC,EAAOrgC,EAAOqB,mBAAmByH,YAAY,MACjD,GAAIu3B,EAAKr+C,OAAO3J,IAAM,GAAKgoD,EAAKr+C,OAAOlJ,IAAM,EACzCknB,EAAOjhB,UAAUshD,EAAKr+C,OAAO3J,GAAIgoD,EAAKr+C,OAAOlJ,GAIrD,SAASq0D,GAAe/iD,GACpBA,EAAE+iD,iBAGN91D,EAAQmL,GAAGq9D,OAAOhZ,IAElBvvD,EAAWF,EAAS,CAChBm/B,MAAOA,EACP+C,WAAYA,GACZ0lB,UAAWA,GACXoJ,eAAgBA,GAChB8V,SAAUA,GACVJ,SAAUA,GACVzW,eAAgBA,GAChByC,YAAaA,OAnpKzB,CAupKoB,mBAAVhzD,QAAwBA,OAAO2L,IAAM3L,OAAS,SAAS4L,EAAIC,EAAIC,IAAMA,GAAMD,OAErF,SAAa7L,QACTA,OAAO,wBAAwB,CAC3B,eAAgB,sBAAuB,qBAAsB,0BAC7D,kBAED,0BACA,yBACA,wBACA,6BACA,2BACA,yBAEJ,WAEC,IAAIgpE,EAAW,CACX7xD,GAAI,kBACJtT,KAAM,UACNolE,SAAU,UACVC,YAAa,6BACbC,QAAS,CAAE,OAAQ,aAAc,kBAAmB,cAAe,UAAW,eAAgB,iBAAkB,WAChHC,SAAU,CAAC,CACPjyD,GAAI,6BACJtT,KAAM,aACNqlE,YAAa,wBACbC,QAAS,CAAE,QACb,CACEhyD,GAAI,0BACJtT,KAAM,UACNqlE,YAAa,4BACbC,QAAS,CAAE,WAAY,SAAU,mBAIzC,OAAOjpE,OAAOC,QAjClB,CAmCoB,mBAAVH,QAAwBA,OAAO2L,IAAM3L,OAAS,SAAS4L,EAAIC,EAAIC,IAAMA,GAAMD"}