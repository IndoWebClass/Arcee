{"version":3,"file":"kendo.taskboard.min.js","sources":["kendo.taskboard.js"],"sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function(f, define){\n    define('taskboard/toolbar',[\"../kendo.toolbar\"], f);\n})(function(){\n\n(function($, undefined) {\n    var kendo = window.kendo,\n        extend = $.extend,\n        proxy = $.proxy,\n        ToolBar = kendo.ui.ToolBar,\n        Item = kendo.toolbar.Item,\n\n        CLICK = \"click\",\n        TOGGLE = \"toggle\",\n        CLOSE = \"close\",\n        ACTION = \"action\",\n        CHANGE = \"change\",\n        NS = \".taskBoardToolbar\";\n\n    var TaskBoardToolbarStyles = {\n        searchbox: \"k-searchbox k-textbox k-input k-input-md k-rounded-md k-input-solid\",\n        searchIcon: \"k-input-icon k-icon k-i-search\",\n        searchInput: \"k-input-inner\"\n    };\n\n    var TaskBoardToolBar = ToolBar.extend({\n        init: function(element, options) {\n            var that = this;\n\n            that._extendOptions(options);\n\n            ToolBar.fn.init.call(that, element, options);\n\n            that._attachEvents();\n        },\n\n        events: ToolBar.fn.events.concat([\n            ACTION\n        ]),\n\n        defaultTools: {\n            addColumn: { type: \"button\", text: \"Add Column\", name: \"addColumn\", command: \"AddColumnCommand\", icon: \"plus\", rules: \"isEditable\" },\n            spacer: { type: \"spacer\" },\n            search: { type: \"TaskBoardSearch\", text: \"Search\", name: \"search\", command: \"SearchCommand\", icon: \"search\", overflow: \"never\", rules: \"isSearchable\" }\n        },\n\n        _attachEvents: function() {\n            var that = this;\n\n            that.bind(TOGGLE, proxy(that._click, that));\n            that.bind(CLOSE, proxy(that._click, that));\n            that.bind(CLICK, proxy(that._click, that));\n            that.bind(CHANGE, proxy(that._change, that));\n        },\n\n        _extendOptions: function(options) {\n            var that = this,\n                tools = options.items ? options.items : Object.keys(that.defaultTools);\n\n            that.options = options;\n\n            that.options.items = that._extendToolsOptions(tools);\n        },\n\n        _extendToolsOptions: function(tools) {\n            var that = this,\n                messages = that.options.messages;\n\n            if (!tools.length) {\n                return;\n            }\n\n            return tools.map(function (tool) {\n                var isBuiltInTool =  $.isPlainObject(tool) && Object.keys(tool).length === 1 && tool.name,\n                    attr = {},\n                    toolOptions;\n\n\n                tool = isBuiltInTool ? tool.name : tool;\n                toolOptions = $.isPlainObject(tool) ? tool : extend({}, that.defaultTools[tool] || { name: tool, command: tool + \"Command\", type: \"button\" });\n\n                if(!that._validateRules(toolOptions)) {\n                    return { hidden: true };\n                }\n\n                attr[kendo.attr(\"command\")] = toolOptions.command;\n                attr[kendo.attr(\"options\")] = toolOptions.options;\n\n                kendo.deepExtend(toolOptions, {\n                    id: toolOptions.id || toolOptions.name + \"-\" + kendo.guid(),\n                    name: toolOptions.name,\n                    text: messages[toolOptions.name] || toolOptions.name,\n                    attributes: extend({\n                        \"aria-label\": messages[toolOptions.name] || toolOptions.name,\n                        \"title\": messages[toolOptions.name]\n                    }, attr),\n                    overflow: toolOptions.overflow\n                });\n\n                if(toolOptions.type === \"buttonGroup\") {\n                    toolOptions.buttons = toolOptions.buttons.map(proxy(that._mapButtonGroups, that));\n                }\n\n                if(toolOptions.type === \"splitButton\") {\n                    toolOptions.menuButtons = toolOptions.menuButtons.map(proxy(that._mapMenuButtons, that));\n                }\n\n                return toolOptions;\n            }, that);\n        },\n\n        _mapButtonGroups: function(button) {\n            var that = this,\n                messages = that.options.messages,\n                attr = {};\n\n            attr[kendo.attr(\"command\")]= button.command;\n            attr[kendo.attr(\"options\")]= button.options;\n\n            return kendo.deepExtend(button, {\n                attributes: extend({}, button.attributes, {\n                    \"aria-label\": messages[button.name],\n                    \"title\": messages[button.name]\n                }, attr)\n            });\n        },\n\n        _mapMenuButtons: function(button) {\n            var that = this,\n                messages = that.options.messages,\n                attr = {};\n\n            attr[kendo.attr(\"command\")]= button.command;\n            attr[kendo.attr(\"options\")]= button.options;\n\n            return kendo.deepExtend(button,{\n                text: messages[button.name],\n                attributes: extend({}, button.attributes, {\n                    \"aria-label\": messages[button.name],\n                    \"title\": messages[button.name]\n                }, attr)\n            });\n        },\n\n        _validateRules: function (tool) {\n            var that = this,\n                states = that.options.states,\n                rules = tool.rules ? tool.rules.split(\";\") : [];\n\n            if(!rules.length) {\n                return true;\n            }\n\n            for (var i = 0; i < rules.length; i++) {\n                if(!states[rules[i]]){\n                    return false;\n                }\n            }\n\n            return true;\n        },\n\n        _click: function(ev) {\n            var command = $(ev.target).attr(kendo.attr(\"command\")),\n                options = $(ev.target).attr(kendo.attr(\"options\"));\n\n            if (!command) {\n                return;\n            }\n\n            this.action({\n                command: command,\n                options: options\n            });\n        },\n\n        _change: function (ev) {\n            var command = $(ev.target).attr(kendo.attr(\"command\")),\n                options = $(ev.target).attr(kendo.attr(\"options\"));\n\n            options = extend({}, options, { value: $(ev.target).val() });\n\n            if (!command) {\n                return;\n            }\n\n            this.action({\n                command: command,\n                options: options\n            });\n        },\n\n        isToolEnabled: function(toolName) {\n            var that = this,\n                options = that.options,\n                found = false;\n\n            for(var i = 0; i < options.items.length; i++) {\n                if (options.items[i].name == toolName) {\n                    found = true;\n                    break;\n                }\n            }\n\n            return options.items[toolName] || found;\n        },\n\n        action: function (args) {\n            this.trigger(ACTION, args);\n        },\n\n        destroy: function () {\n            if(this.search) {\n                this.search.destroy();\n            }\n\n            ToolBar.fn.destroy.call(this);\n        }\n    });\n\n    var SearchTool = Item.extend({\n        init: function(options, toolbar) {\n            var that = this,\n                styles = TaskBoardToolBar.styles,\n                element = $(\"<span class='\" + styles.searchbox  + \"'></span>\"),\n                icon = $(\"<span class='\" + styles.searchInputIcon + \"'></span>\"),\n                input = $(\"<input class='\" + styles.searchInput + \"' autocomplete='off' />\");\n\n            that.element = element;\n            that.input = input;\n            that.icon = icon;\n            that.options = options;\n            that.options.type = \"taskBoardSearch\";\n            that.toolbar = toolbar;\n\n            that.attributes();\n            that.renderIcon();\n            that.addUidAttr();\n            that.addIdAttr();\n            that.addOverflowAttr();\n\n            that.input.attr({\n                placeholder: that.options.text,\n                title: that.options.text\n            });\n\n            that.element.append(icon).append(that.input);\n\n            that._bindEvents();\n            that.toolbar.search = that;\n        },\n        attributes: function () {\n            if (this.options.attributes) {\n                this.input.attr(this.options.attributes);\n            }\n        },\n        renderIcon: function() {\n            if (this.options.icon) {\n                this.icon.addClass(TaskBoardToolBar.styles.searchIcon);\n            }\n        },\n        _bindEvents: function(){\n            this._inputHandler = proxy(this._input, this);\n            this.input.on(\"input\" + NS, this._inputHandler);\n        },\n        _input: function (ev) {\n            this.toolbar.trigger(CHANGE, {target: ev.target});\n        },\n        destroy: function(){\n            this.element.off(NS);\n        }\n    });\n\n    kendo.toolbar.registerComponent(\"TaskBoardSearch\", SearchTool);\n\n\n    extend(kendo.ui, {\n        taskboard: {\n            ToolBar: TaskBoardToolBar\n        }\n    });\n\n    extend(true, kendo.ui.taskboard.ToolBar, { styles: TaskBoardToolbarStyles });\n\n})(window.kendo.jQuery);\n\nreturn window.kendo;\n\n}, typeof define == 'function' && define.amd ? define : function(a1, a2, a3){ (a3 || a2)(); });\n(function(f, define){\n    define('taskboard/column',[\"../kendo.sortable\"], f);\n})(function(){\n\n(function($, undefined) {\n    var kendo = window.kendo,\n        ui = kendo.ui,\n        Observable = kendo.Observable,\n        extend = $.extend,\n        proxy = $.proxy,\n\n        DOT = \".\",\n        NS = DOT + \"kendoTaskBoardColumn\",\n\n        CLICK = \"click\",\n        BLUR = \"blur\",\n\n        MOVE = \"move\",\n        MOVE_START = \"moveStart\",\n        MOVE_END = \"moveEnd\",\n        CHANGE = \"change\",\n        ACTION = \"action\";\n\n    var TaskBoardColumnStyles = {\n        element: \"k-taskboard-column\",\n        header: \"k-taskboard-column-header\",\n        headerText: \"k-taskboard-column-header-text\",\n        ellipsis: \"k-text-ellipsis\",\n        spacer: \"k-spacer\",\n        actions: \"k-taskboard-column-header-actions\",\n        cardsContainer: \"k-taskboard-column-cards-container\",\n        columnCards: \"k-taskboard-column-cards\",\n        actionButton: \"k-taskboard-column-action-button\",\n        button: \"k-button k-icon-button k-button-md k-rounded-md k-button-flat k-button-flat-base\",\n        card: \"k-taskboard-card\",\n        cardTitle: \"k-card-title\",\n        sortableSuffix: \"-kendosortable\",\n        textbox: \"k-textbox k-input k-input-md k-rounded-md k-input-solid\",\n        input: \"k-input-inner\",\n        newColumn: \"k-taskboard-column-new\",\n        editColumn: \"k-taskboard-column-edit\",\n        disabled: \"k-state-disabled\",\n        dragPlaceholder: \"k-taskboard-drag-placeholder\",\n        dragHint: \"k-taskboard-drag-hint\",\n        ignoreDrag: \"k-taskboard-drag-ignore\",\n        grabbingCursor: \"k-cursor-grabbing\"\n    };\n\n    function preventDefault(ev) { ev.preventDefault(); }\n\n    var TaskBoardColumn = Observable.extend({\n        init: function (options, dataItem) {\n            var that = this;\n\n            that._dataItem = dataItem;\n            that.options = extend(true, {}, options);\n\n            that.sortableUniqueClass = that.options.sortableIdentifier + TaskBoardColumn.styles.sortableSuffix;\n            that._render();\n            that._attachEvents();\n\n            if(options.states.isReorderable) {\n                that._initSortable();\n            }\n\n            Observable.fn.init.call(that);\n        },\n\n        empty: function () {\n            var that = this;\n            that.container.empty();\n        },\n\n        addCard: function (cardHtml) {\n            var that = this;\n            that.container.append(cardHtml);\n        },\n\n        edit: function () {\n            var that = this,\n                styles = TaskBoardColumn.styles;\n\n            that.element.addClass(styles.editColumn);\n            that._renderEditHeader();\n        },\n\n        getDataItem: function () {\n            return this._dataItem;\n        },\n\n        cards: function () {\n            var that = this;\n\n            return that.container.children();\n        },\n\n        template: '<div class=\"#: styles.headerText # #: styles.ellipsis #\">{0}</div>' +\n                  '<span class=\"#: styles.spacer #\"></span>' +\n                  '#=buttons#',\n\n        editTemplate: '<div class=\"#: styles.headerText # #: styles.ellipsis #\">' +\n                        '<span class=\"#: styles.textbox #\">' +\n                            '<input class=\"#: styles.input #\" placeholder=\"#: {0} ? messages.editColumn : messages.newColumn #\" #:kendo.attr(\"command\")#=\"SaveColumnCommand\" value=\"#:{0}#\" />' +\n                        '</span>' +\n                        '</div>' +\n                        '<span class=\"#: styles.spacer #\"></span>' +\n                        '#=buttons#',\n\n        actionButton: '<button class=\"#: styles.actionButton # #: styles.button #\" title=\"#:text#\" #:kendo.attr(\"command\")#=\"#:command#\" #if(options){##:kendo.attr(\"options\")#=\"#:options#\"#}#>' +\n                        '<i class=\"k-button-icon #:icon# #:spriteCssClass#\"></i>' +\n                      '</button>',\n\n        builtinButtons: {\n            \"editColumn\": { name: \"editColumn\", icon: \"edit\", text: \"Edit Column\", command: \"EditColumnCommand\", rules: \"isEditable\" },\n            \"addCard\": { name: \"addCard\", icon: \"add\", text: \"Add Card\", command: \"AddCardCommand\", rules: \"isEditable\" },\n            \"deleteColumn\": { name: \"deleteColumn\", icon: \"close\", text: \"Delete Column\", command: \"DeleteColumnCommand\", rules: \"isEditable\" }\n        },\n\n        defaultButtons: [ \"editColumn\", \"addCard\", \"deleteColumn\" ],\n\n        _render: function () {\n            var that = this,\n                styles = TaskBoardColumn.styles,\n                headerLabelId = kendo.guid(),\n                element = $(\"<div class='\" + styles.element + \"'></div>\")\n                    .attr(kendo.attr(\"uid\"), that._dataItem.uid)\n                    .css({\n                        width: that.options.width\n                    })\n                    .attr(\"role\", \"list\").attr(\"aria-labelledby\", headerLabelId),\n                header = $(\"<div class='\" + styles.header + \"'></div>\"),\n                cardsContainer = $(\"<div class='\" + styles.cardsContainer + \"'></div>\"),\n                columnCards = $(\"<div class='\" + styles.columnCards + \"'></div>\");\n\n            that.header = header.appendTo(element).attr(\"id\", headerLabelId);\n\n            that._renderHeader();\n\n            cardsContainer.appendTo(element);\n            that.container = columnCards\n                                .appendTo(cardsContainer)\n                                .addClass(that.sortableUniqueClass);\n\n            that.element = element;\n        },\n\n        _renderHeader: function () {\n            var that = this,\n                styles = TaskBoardColumn.styles,\n                options = that.options,\n                template = options.template ? options.template : kendo.format(that.template, \"#:\" + options.dataTextField + \"#\");\n\n            that.header.append(kendo.template(template)(extend(true, {}, {\n                styles: styles,\n                buttons: that._buildActionsHtml()\n            }, that._dataItem)));\n        },\n\n        _renderEditHeader: function () {\n            var that = this,\n                styles = TaskBoardColumn.styles,\n                options = that.options,\n                template = options.editTemplate ? options.editTemplate : kendo.format(that.editTemplate, options.dataTextField);\n\n            that.header.html(\"\");\n\n            that.header.append(kendo.template(template)(extend(true, {}, {\n                styles: styles,\n                messages: options.messages,\n                buttons: that._buildActionsHtml()\n            }, that._dataItem)));\n\n            setTimeout(function () {\n                that.header.find(\"input\").trigger(\"focus\");\n            }, 0);\n\n            that.header.find(DOT + styles.actions).addClass(styles.disabled);\n        },\n\n        _buildActionsHtml: function () {\n            var that = this,\n                options = that.options,\n                messages = options.messages,\n                buttons = options.buttons || that.defaultButtons,\n                styles = TaskBoardColumn.styles,\n                html = \"<div class='\" + styles.actions + \"'>\";\n\n            for (var i = 0; i < buttons.length; i++) {\n                var button = buttons[i];\n                button = ($.isPlainObject(button) && Object.keys(button).length === 1 && button.name) ? button.name : button;\n\n                if(typeof button === \"string\") {\n                    button = extend(true, {},\n                        that.builtinButtons[button] || { spriteCssClass: button, command: button + \"Command\" },\n                        { text: messages[button] || button }\n                    );\n                } else if ($.isPlainObject(button) && button.name) {\n                    button = extend(true, button,\n                        { text: messages[button.name] }\n                    );\n                }\n\n                if (!that._validateRules(button)) {\n                    continue;\n                }\n\n                var icon = button.icon ? \"k-icon k-i-\" + button.icon : \"\";\n\n                button.icon = icon;\n                button.spriteCssClass = button.spriteCssClass || \"\";\n\n                html += kendo.template(that.actionButton)(extend(true, {}, {\n                    styles: styles,\n                    options: false\n                }, button));\n            }\n\n            html += \"</div>\";\n\n            return html;\n        },\n\n        _validateRules: function (tool) {\n            var that = this,\n                states = that.options.states,\n                rules = tool.rules ? tool.rules.split(\";\") : [];\n\n            if(!rules.length) {\n                return true;\n            }\n\n            for (var i = 0; i < rules.length; i++) {\n                if(!states[rules[i]]){\n                    return false;\n                }\n            }\n\n            return true;\n        },\n\n        _actionClick: function (ev) {\n            var that = this,\n                target = $(ev.target).closest(\"[\" + kendo.attr(\"command\") + \"]\"),\n                command = target.attr(kendo.attr(\"command\")),\n                options = target.attr(kendo.attr(\"options\"));\n\n            options = typeof(options) === \"string\" ? { value: options } : options;\n\n            if (!command) {\n                return;\n            }\n\n            that.trigger(ACTION, {\n                command: command,\n                options: extend({ target: target }, options)\n            });\n        },\n\n        _textboxBlur: function (ev) {\n            var that = this,\n                target = $(ev.target).closest(\"[\" + kendo.attr(\"command\") + \"]\"),\n                command = target.attr(kendo.attr(\"command\")),\n                options = target.attr(kendo.attr(\"options\"));\n\n            options = typeof(options) === \"string\" ? { value: options } : options;\n\n            if (!command) {\n                return;\n            }\n\n            that.trigger(ACTION, {\n                command: command,\n                options: extend({ target: target }, options)\n            });\n        },\n\n        _attachEvents: function () {\n            var that = this;\n\n            that.header.on(CLICK + NS,\n                DOT + TaskBoardColumn.styles.actionButton,\n                proxy(that._actionClick, that));\n\n            that.header.on(BLUR + NS,\n                DOT + TaskBoardColumn.styles.input,\n                proxy(that._textboxBlur, that));\n\n            that.header.on(\"keyup\" + NS,\n                DOT + TaskBoardColumn.styles.input,\n                function (ev) {\n                    if (ev.keyCode === kendo.keys.ENTER) {\n                        that._textboxBlur(ev);\n                    }\n                }\n            );\n\n            if (that.container) {\n                that.container.on(CLICK + NS,\n                    DOT + TaskBoardColumn.styles.card + \" [\" + kendo.attr(\"command\") + \"]\",\n                    proxy(that._actionClick, that));\n\n                that.container.on(CLICK + NS,\n                    DOT + TaskBoardColumn.styles.card + \" a.\" + TaskBoardColumn.styles.cardTitle,\n                    preventDefault);\n\n            }\n        },\n\n        _initSortable: function () {\n            var that = this,\n                isRtl = that.options.states.isRtl,\n                dirClass = isRtl ? \" k-rtl\" : \"\",\n                container = that.container;\n\n            if (!that.container) {\n                return;\n            }\n\n            that.sortable = new ui.Sortable(container, {\n                ignore: DOT + TaskBoardColumn.styles.ignoreDrag + \" *\",\n                connectWith: DOT + that.sortableUniqueClass,\n                filter: DOT + TaskBoardColumn.styles.card,\n                hint: function(element) {\n                    return element.clone()\n                        .addClass(TaskBoardColumn.styles.dragHint + \" \" + TaskBoardColumn.styles.grabbingCursor + dirClass)\n                        .css({\n                        width: element[0].offsetWidth,\n                        height: element[0].offsetHeight\n                    });\n                },\n                placeholder: function(element) {\n                    return $(\"<div></div>\")\n                        .addClass(TaskBoardColumn.styles.dragPlaceholder)\n                        .css({\n                            height: element[0].offsetHeight\n                        });\n                },\n                move: proxy(that._move, that),\n                start: proxy(that._start, that),\n                end: proxy(that._end, that),\n                change: proxy(that._change, that)\n            });\n\n            that.sortable.draggable.userEvents.unbind(\"select\");\n            that.sortable.draggable.userEvents.bind(\"select\", proxy(that._select, that));\n        },\n\n        _select: function (ev) {\n            var ignoreDragSelectors = TaskBoardColumn.ignoreDragSelectors;\n            var target = $(ev.event.target);\n\n            for (var i = 0; i < ignoreDragSelectors.length; i++) {\n                if (target.is(ignoreDragSelectors[i])) {\n                    ev.preventDefault();\n                    break;\n                }\n            }\n        },\n\n        _move: function (ev) {\n            extend(ev, {\n                columnElement: ev.sender.element.parents(DOT + TaskBoardColumn.styles.element)\n            });\n            this.trigger(MOVE, ev);\n        },\n\n        _start: function (ev) {\n            extend(ev, {\n                columnElement: ev.sender.element.parents(DOT + TaskBoardColumn.styles.element)\n            });\n            this.trigger(MOVE_START, ev);\n        },\n\n        _end: function (ev) {\n            extend(ev, {\n                columnElement: ev.sender.element.parents(DOT + TaskBoardColumn.styles.element)\n            });\n            this.trigger(MOVE_END, ev);\n        },\n\n        _change: function (ev) {\n            var that = this;\n\n            extend(ev, {\n                columnElement: ev.sender.element.parents(DOT + TaskBoardColumn.styles.element)\n            });\n\n            that.trigger(CHANGE, ev);\n\n            if ((ev.action === \"receive\" && ev.newIndex >= 0) || (ev.action === \"sort\" && ev.newIndex !== ev.oldIndex)) {\n                that.trigger(ACTION, {\n                    command: \"MoveCardCommand\",\n                    options: ev\n                });\n            }\n        },\n\n        destroy: function () {\n            var that = this;\n\n            that.header.off(NS);\n            that.container.off(NS);\n\n            if (that.sortable) {\n                that.sortable.destroy();\n            }\n        }\n    });\n\n    var TaskBoardNewColumn = TaskBoardColumn.extend({\n        _render: function () {\n            var that = this,\n                styles = TaskBoardColumn.styles,\n                element = $(\"<div class='\" + styles.element + \"'></div>\").addClass(styles.newColumn).attr(kendo.attr(\"uid\"), that._dataItem.uid),\n                header = $(\"<div class='\" + styles.header + \"'></div>\");\n\n            that.header = header.appendTo(element);\n\n            that._renderEditHeader();\n\n            that.element = element;\n        }\n    });\n\n    extend(kendo.ui.taskboard, {\n        Column: TaskBoardColumn,\n        NewColumn: TaskBoardNewColumn\n    });\n\n    extend(true, kendo.ui.taskboard.Column, {\n        styles: TaskBoardColumnStyles,\n        ignoreDragSelectors: [\"img\"]\n    });\n\n})(window.kendo.jQuery);\n\nreturn window.kendo;\n\n}, typeof define == 'function' && define.amd ? define : function(a1, a2, a3){ (a3 || a2)(); });\n(function(f, define){\n    define('taskboard/card',[\"../kendo.core\"], f);\n})(function(){\n\n(function($, undefined) {\n    var kendo = window.kendo,\n        Observable = kendo.Observable,\n        extend = $.extend;\n\n    var TaskBoardCardStyles = {\n        element: \"k-taskboard-card\",\n        card: \"k-card\",\n        header: \"k-card-header\",\n        hbox: \"k-hbox\",\n        title: \"k-card-title\",\n        link: \"k-link\",\n        spacer: \"k-spacer\",\n        button: \"k-button\",\n        cardMenuButton: \"k-taskboard-card-menu-button k-icon-button\",\n        flatButton: \"k-button-md k-rounded-md k-button-flat k-button-flat-base\",\n        body: \"k-card-body\",\n        actionsIcon: \"k-icon k-i-more-vertical\",\n        moveCursor: \"k-cursor-move\",\n        categoryBorder: \"k-taskboard-card-category\",\n        headerActions: \"k-card-header-actions\",\n        disabled: \"k-state-disabled\"\n    };\n\n    var TaskBoardCard = Observable.extend({\n        init: function (options, dataItem, resources) {\n            var that = this;\n\n            that._dataItem = dataItem;\n            that.resources = resources;\n\n            that.options = extend(true, {}, options);\n\n            that._render();\n\n            Observable.fn.init.call(that);\n        },\n\n        headerTemplate: '<div class=\"#:styles.header# #:styles.hbox#\">' +\n                            '<a class=\"#:styles.title# #:styles.link#\" href=\"\\\\#\" #if(selectable){##:kendo.attr(\"command\")#=\"SelectCardCommand\"#}#>#:{0}#</a>' +\n                            '<span class=\"#:styles.spacer#\"></span>' +\n                            '#=cardMenuButton#' +\n                        '</div>',\n        bodyTemplate: '<div class=\"#:styles.body#\"><p>#:{0}#</p></div>',\n        cardMenuButtonTemplate: '<div class=\"#:styles.headerActions#\"><button aria-label=\"menu\" class=\"#:styles.button# #:styles.flatButton# #:styles.cardMenuButton#\">' +\n                                    '<span class=\"k-button-icon #:styles.actionsIcon#\"></span>' +\n                                '</button></div>',\n\n        _render: function(){\n            var that = this,\n                options = that.options,\n                styles = TaskBoardCard.styles,\n                template = options.template || that._buildTemplate(),\n                element = $(\"<div class='\" + styles.element + \" \" + styles.card + \" \" + styles.moveCursor + \"'></div>\"),\n                cardMenuButtonTemplate = options.cardMenu ? that.cardMenuButtonTemplate : \"\",\n                resources = that._resources(that._dataItem),\n                borderDir = options.states.isRtl ? \"borderRightColor\" : \"borderLeftColor\",\n                categoryColor;\n\n            element\n                .attr(kendo.attr(\"uid\"), that._dataItem.uid)\n                .attr(\"aria-disabled\", !options.states.isDisabled)\n                .attr(\"role\", \"listitem\")\n                .toggleClass(styles.disabled, options.states.isDisabled);\n\n            categoryColor = (resources[options.dataCategoryField] && resources[options.dataCategoryField].color) ||\n                                that._dataItem.get(options.dataCategoryField);\n\n            if (categoryColor) {\n                element.addClass(styles.categoryBorder).css(borderDir, categoryColor);\n            }\n\n            element.append(kendo.template(template)(extend(true, {}, {\n                styles: styles,\n                cardMenuButton: kendo.template(cardMenuButtonTemplate)({ styles: styles }),\n                selectable: options.states.isSelectable,\n                resources: resources\n            }, that._dataItem)));\n\n            that.element = element;\n        },\n\n        _resources: function(card) {\n            var that = this,\n                resources = {};\n\n            if (!that.resources) {\n                return resources;\n            }\n\n            for (var key in that.resources) {\n                var resource = that.resources[key];\n                var field = resource.field;\n                var cardResources = kendo.getter(field)(card);\n\n                if (!cardResources) {\n                    continue;\n                }\n\n                if (!resource.multiple) {\n                    cardResources = [cardResources];\n                }\n\n                var data = resource.dataSource.view();\n\n                for (var resourceIndex = 0; resourceIndex < cardResources.length; resourceIndex++) {\n                    var cardResource = null;\n\n                    var value = cardResources[resourceIndex];\n\n                    if (!resource.valuePrimitive) {\n                        value = kendo.getter(resource.dataValueField)(value);\n                    }\n\n                    for (var dataIndex = 0; dataIndex < data.length; dataIndex++) {\n                        if (data[dataIndex].get(resource.dataValueField) == value) {\n                            cardResource = data[dataIndex];\n                            break;\n                        }\n                    }\n\n                    if (cardResource !== null) {\n                        var resourceColor = kendo.getter(resource.dataColorField)(cardResource);\n                        var result = {\n                            field: resource.field,\n                            title: resource.title,\n                            name: resource.name,\n                            text: kendo.getter(resource.dataTextField)(cardResource),\n                            value: value,\n                            color: resourceColor\n                        };\n\n                        if(resource.multiple){\n                            if(resources[resource.field]) {\n                                resources[resource.field].push(result);\n                            } else {\n                                resources[resource.field] = [result];\n                            }\n                        } else {\n                            resources[resource.field] = result;\n                        }\n                    }\n                }\n            }\n            return resources;\n        },\n\n        _buildTemplate: function () {\n            var that = this,\n                options = that.options,\n                headerTemplate = kendo.format(that.headerTemplate, options.dataTitleField),\n                bodyTemplate = kendo.format(that.bodyTemplate, options.dataDescriptionField);\n\n            return headerTemplate + bodyTemplate;\n        }\n    });\n\n    extend(kendo.ui.taskboard, {\n        Card: TaskBoardCard\n    });\n\n    extend(true, kendo.ui.taskboard.Card, { styles: TaskBoardCardStyles });\n\n})(window.kendo.jQuery);\n\nreturn window.kendo;\n\n}, typeof define == 'function' && define.amd ? define : function(a1, a2, a3){ (a3 || a2)(); });\n(function(f, define){\n    define('taskboard/cardmenu',[\"../kendo.menu\"], f);\n})(function(){\n\n(function($, undefined) {\n    var kendo = window.kendo,\n        extend = $.extend,\n        proxy = $.proxy,\n        template = kendo.template,\n        ContextMenu = kendo.ui.ContextMenu,\n\n        ACTION = \"action\";\n\n    var TaskBoardCardMenu = ContextMenu.extend({\n        init: function(element, options) {\n            var that = this;\n\n            ContextMenu.fn.init.call(that, element, options);\n\n            that._overrideTemplates();\n            that._extendItems();\n\n            that.bind(\"select\", proxy(that._onSelect, that));\n            that.bind(\"open\", proxy(that._onOpen, that));\n            that.bind(\"activate\", proxy(that._focus, that));\n        },\n\n        _overrideTemplates: function(){\n            this.templates.sprite = template(\"#if(spriteCssClass) {#<span class='#: spriteCssClass #'></span>#}#\");\n        },\n\n        defaultItems: {\n            \"editCard\": { name: \"editCard\", text: \"Edit card\", icon: \"edit\", command: \"EditCardCommand\", rules: \"isEditable\" },\n            \"deleteCard\": { name: \"deleteCard\", text: \"Delete card\", icon: \"delete\", command: \"DeleteCardCommand\", rules: \"isEditable\" }\n        },\n\n        events: ContextMenu.fn.events.concat([\n            ACTION\n        ]),\n\n        _extendItems: function(){\n            var that = this,\n                items = that.options.items,\n                item, isBuiltInTool;\n\n            if(items && items.length){\n                for (var i = 0; i < items.length; i++) {\n                    item = items[i];\n                    isBuiltInTool =  $.isPlainObject(item) && Object.keys(item).length === 1 && item.name;\n\n                    if (isBuiltInTool) {\n                        item = item.name;\n                    }\n\n                    if ($.isPlainObject(item)) {\n                        that._append(item);\n                    } else if (that.defaultItems[item]) {\n                        item = that.defaultItems[item];\n                        that._append(item);\n                    } else if (typeof(item) === \"string\") {\n                        item = { name: item, text: item, spriteCssClass: item, command: item + \"Command\" };\n                        that._append(item);\n                    }\n                }\n            } else {\n                for (var key in that.defaultItems) {\n                    item = that.defaultItems[key];\n                    that._append(item);\n                }\n            }\n        },\n\n        _append: function (item) {\n            var that = this;\n\n            that._extendItem(item);\n\n            if (that._validateRules(item)) {\n                that.append(item);\n            }\n        },\n\n        _extendItem: function(item) {\n            var that = this,\n                messages = that.options.messages,\n                icon = item.icon ? \"k-icon k-i-\" + item.icon : \"\",\n                attr = {};\n\n            attr[kendo.attr(\"command\")] = item.command;\n\n            if(item.options) {\n                attr[kendo.attr(\"options\")] = item.options;\n            }\n\n            extend(item, {\n                text: messages[item.name],\n                spriteCssClass: icon + \" \" + item.spriteCssClass || \"\",\n                attr: attr,\n                uid: kendo.guid()\n            });\n        },\n\n        _validateRules: function (tool) {\n            var that = this,\n                states = that.options.states,\n                rules = tool.rules ? tool.rules.split(\";\") : [];\n\n            if(!rules.length) {\n                return true;\n            }\n\n            for (var i = 0; i < rules.length; i++) {\n                if(!states[rules[i]]){\n                    return false;\n                }\n            }\n\n            return true;\n        },\n\n        _onSelect: function(ev) {\n            var command = $(ev.item).attr(kendo.attr(\"command\")),\n                options = $(ev.item).attr(kendo.attr(\"options\")),\n                target = $(ev.target);\n\n            options = typeof(options) === \"string\" ? { value: options } : options;\n\n            if (!command) {\n                return;\n            }\n\n            this.action({\n                command: command,\n                options: extend({ target: target }, options)\n            });\n        },\n\n        _onOpen: function(ev) {\n            var menu = ev.sender,\n                items = menu.options.items;\n\n            if (!items && $.isEmptyObject(this.defaultItems)) {\n                ev.preventDefault();\n            }\n        },\n\n        _focus: function (ev) {\n            if (ev.sender) {\n                ev.sender.element.trigger(\"focus\");\n            }\n        },\n\n        action: function (args) {\n            this.trigger(ACTION, args);\n        }\n    });\n\n    extend(kendo.ui.taskboard, {\n        CardMenu: TaskBoardCardMenu\n    });\n\n    })(window.kendo.jQuery);\n\n    return window.kendo;\n\n    }, typeof define == 'function' && define.amd ? define : function(a1, a2, a3){ (a3 || a2)(); });\n(function (f, define) {\n    define('taskboard/commands',[\"../kendo.dialog\"], f);\n})(function () {\n\n    (function ($, undefined) {\n        var kendo = window.kendo,\n            extend = $.extend,\n            isPlainObject = $.isPlainObject,\n            Class = kendo.Class;\n\n        var TaskBoardCommand = Class.extend({\n            init: function (options) {\n                this.options = options;\n                this.taskboard = options.taskboard;\n            },\n            _confirm: function (title, content, okText, cancel) {\n                var that = this,\n                    taskboard = that.taskboard,\n                    taskboardOptions = taskboard.options,\n                    confirm;\n\n                if (isPlainObject(taskboardOptions.editable) && taskboardOptions.editable.confirmation === false ) {\n                    var fakePromise = $.Deferred();\n                    fakePromise.resolve();\n                    return fakePromise;\n                }\n\n                confirm = $(\"<div></div>\").kendoConfirm(extend({}, {\n                    title: title,\n                    content: content,\n                    messages: {\n                        okText: okText,\n                        cancel: cancel\n                    },\n                    buttonLayout: \"normal\"\n                })).data(\"kendoConfirm\");\n\n                confirm.open();\n\n                setTimeout(function () {\n                    confirm.element.trigger(\"focus\");\n                });\n\n                return confirm.result;\n            }\n        });\n\n        // Column commands\n        var AddColumnCommand = TaskBoardCommand.extend({\n            exec: function () {\n                var that = this,\n                    taskboard = that.taskboard;\n\n                if (taskboard.trigger(\"editColumn\", { column: null })) {\n                    return;\n                }\n\n                taskboard.columns().each(function(index, column){\n                    taskboard.enableByColumn(column, false);\n                });\n                taskboard.addColumn();\n            }\n        });\n\n        var EditColumnCommand = TaskBoardCommand.extend({\n            exec: function () {\n                var that = this,\n                    options = that.options,\n                    taskboard = that.taskboard;\n\n                if (taskboard.trigger(\"editColumn\", { column: options.column })) {\n                    return;\n                }\n\n                taskboard.columns().each(function(index, column){\n                    taskboard.enableByColumn(column, false);\n                });\n                taskboard.editColumn(options.columnElement);\n            }\n        });\n\n        var DeleteColumnCommand = TaskBoardCommand.extend({\n            exec: function () {\n                var that = this,\n                    options = that.options,\n                    taskboard = that.taskboard,\n                    taskboardOptions = taskboard.options,\n                    messages = taskboardOptions.messages,\n                    columnDS = taskboard.columnsDataSource;\n\n                var result = that._confirm(messages.deleteColumn, messages.deleteColumnConfirm, messages[\"delete\"], messages.cancel);\n\n                result.done(function () {\n                    if (taskboard.trigger(\"deleteColumn\", { column: options.column })) {\n                        taskboard.dataSource.cancelChanges();\n                        return;\n                    }\n\n                    columnDS.remove(options.column);\n                    columnDS.sync();\n                });\n            }\n        });\n\n        var SaveColumnCommand = TaskBoardCommand.extend({\n            exec: function () {\n                var that = this,\n                    options = that.options,\n                    taskboard = that.taskboard,\n                    columnSettings = taskboard.options.columnSettings,\n                    columnDS = taskboard.columnsDataSource,\n                    column = options.column,\n                    text = options.target.val();\n\n                if (taskboard.trigger(\"saveColumn\", { column: options.column })) {\n                    taskboard.dataSource.cancelChanges();\n                    return;\n                }\n\n                column.set(columnSettings.dataTextField, text);\n                columnDS.sync();\n            }\n        });\n\n        var CancelEditColumnCommand = TaskBoardCommand.extend({\n            exec: function () {\n                var that = this,\n                    taskboard = that.taskboard,\n                    columnDS = taskboard.columnsDataSource;\n\n                columnDS.cancelChanges();\n            }\n        });\n\n        //Move focus command\n        var MoveFocusCommand = TaskBoardCommand.extend({\n            exec: function () {\n                var that = this,\n                    taskboard = that.taskboard,\n                    options = that.options,\n                    cardElement = options.cardElement,\n                    columnElement = options.columnElement,\n                    columns = taskboard.columns(),\n                    currentColumnIndex = columnElement.index(),\n                    direction = options.value,\n                    columnIndex, column;\n\n                switch (direction) {\n                    case \"left\":\n                        columnIndex = Math.max(0, currentColumnIndex - 1);\n                        break;\n                    case \"right\":\n                        columnIndex = Math.min(columns.length - 1,  currentColumnIndex + 1);\n                        break;\n                    default:\n                        columnIndex = currentColumnIndex;\n                        break;\n                }\n\n                that.columns = columns;\n                that.columnIndex = columnIndex;\n                that.column = column = taskboard._getColumnByElement(columns.eq(columnIndex));\n                that.cards = column.cards();\n\n                if (cardElement) {\n                    that._moveFromCardFocus(direction, cardElement);\n                } else if (columnElement && direction === \"down\") {\n                    that.cards.eq(0).trigger(\"focus\");\n                } else {\n                    columns.eq(columnIndex).trigger(\"focus\");\n                }\n            },\n            _moveFromCardFocus: function (direction, cardElement) {\n                var that = this,\n                    currentIndex = cardElement.index(),\n                    focusCard, index, seekFocusableCard = false;\n\n                switch (direction) {\n                    case \"up\":\n                        index = currentIndex - 1;\n                        break;\n                    case \"down\":\n                        index = currentIndex + 1;\n                        break;\n                    default:\n                        seekFocusableCard = true;\n                        index = currentIndex;\n                        break;\n                }\n\n                focusCard = that.cards.eq(index);\n\n                if (!focusCard.length && seekFocusableCard) {\n                    focusCard = that._getFocusableCard(index, direction);\n                }\n\n                if (index >= 0) {\n                    focusCard.trigger(\"focus\");\n                } else {\n                    that.options.columnElement.focus();\n                }\n            },\n            _getFocusableCard: function (index, direction) {\n                var that = this,\n                    lastIndex = that.cards.length - 1,\n                    focusable = that.cards.eq(Math.min(index, lastIndex));\n\n                if(focusable.length) {\n                    return focusable;\n                }\n\n                if(that.columnIndex <= 0 || that.columnIndex >= that.columns.length - 1) {\n                    return;\n                }\n\n                switch (direction) {\n                    case \"left\":\n                        that.columnIndex = Math.max(0, that.columnIndex - 1);\n                        break;\n                    case \"right\":\n                        that.columnIndex = Math.min(that.columns.length - 1,  that.columnIndex + 1);\n                        break;\n                }\n\n                that.column = that.taskboard._getColumnByElement(that.columns.eq(that.columnIndex));\n                that.cards = that.column.cards();\n\n                return that._getFocusableCard(index, direction);\n\n            }\n        });\n\n        // Card commands\n        var TaskBoardBaseCardCommand = TaskBoardCommand.extend({\n            _updateOrder: function (column, currentIndex) {\n                var that = this,\n                    taskboard = that.taskboard,\n                    taskBoardOptions = taskboard.options,\n                    dataOrderField = taskBoardOptions.dataOrderField,\n                    options = that.options,\n                    currentCard = options.card,\n                    cardIndex = options.cardElement ? options.cardElement.index() : column.cards().length,\n                    newIndex = currentIndex,\n                    cards = column.cards().map(function (idx, card) {\n                        return taskboard.dataItem(card);\n                    }),\n                    prevCard = cards[cardIndex - 1],\n                    nextCard;\n\n                    currentCard.set(dataOrderField, newIndex);\n\n                    if (prevCard && prevCard.get(dataOrderField) >= currentCard.get(dataOrderField)) {\n                        currentCard.set(dataOrderField, prevCard.get(dataOrderField) + 1);\n                    }\n\n                    for (var i = newIndex + 1; i < cards.length; i++) {\n                        nextCard = cards[i];\n\n                        if (nextCard.get(dataOrderField) <= currentCard.get(dataOrderField)) {\n                            nextCard.set(dataOrderField, currentCard.get(dataOrderField) + 1);\n                            currentCard = nextCard;\n                        } else {\n                            break;\n                        }\n                    }\n            }\n        });\n\n        var SelectCardCommand = TaskBoardCommand.extend({\n            exec: function () {\n                var that = this,\n                    taskboard = that.taskboard,\n                    options = that.options,\n                    cardElement = options.cardElement;\n\n                taskboard._select(cardElement, true);\n                cardElement.focus();\n            }\n        });\n\n        var SaveChangesCommand = TaskBoardBaseCardCommand.extend({\n            exec: function () {\n                var that = this,\n                    taskboard = that.taskboard,\n                    taskBoardOptions = taskboard.options,\n                    options = that.options,\n                    receivedStatus = options.card.get(taskBoardOptions.dataStatusField),\n                    targetColumn = taskboard._getColumn(receivedStatus),\n                    activeElm = $(document.activeElement);\n\n                if (activeElm.length) {\n                    activeElm.trigger(\"change\");\n                }\n\n                if(taskboard.pane && taskboard.pane.form && !taskboard.pane.form.validate()) {\n                    return;\n                }\n\n                if (taskboard.trigger(\"saveCard\", { card: options.card })) {\n                    taskboard.dataSource.cancelChanges();\n                    return;\n                }\n\n                if (targetColumn && taskBoardOptions.dataOrderField) {\n                    that._updateOrder(targetColumn, options.card.get(taskBoardOptions.dataOrderField));\n                }\n\n                taskboard.dataSource.sync().then(function () {\n                    taskboard.columns().eq(0).trigger(\"focus\");\n                });\n            }\n        });\n\n        var DeleteCardCommand = TaskBoardCommand.extend({\n            exec: function () {\n                var that = this,\n                    taskboard = that.taskboard,\n                    messages = taskboard.options.messages,\n                    options = that.options;\n\n                var result = that._confirm(messages.deleteCard, messages.deleteCardConfirm, messages[\"delete\"], messages.cancel);\n\n                result\n                    .done(function () {\n                        if (taskboard.trigger(\"deleteCard\", { card: options.card })) {\n                            taskboard.dataSource.cancelChanges();\n                            return;\n                        }\n\n                        taskboard.dataSource.remove(options.card);\n                        taskboard.dataSource.sync().then(function () {\n                            taskboard.columns().eq(0).trigger(\"focus\");\n                        });\n                    })\n                    .fail(function () {\n                        options.cardElement.trigger(\"focus\");\n                    });\n            }\n        });\n\n        var MoveCardCommand = TaskBoardBaseCardCommand.extend({\n            exec: function () {\n                var that = this,\n                    taskboard = that.taskboard,\n                    taskBoardOptions = taskboard.options,\n                    columnSettings = taskBoardOptions.columnSettings,\n                    options = that.options,\n                    receivedStatus = options.column.get(columnSettings.dataStatusField);\n\n                options.card.set(taskBoardOptions.dataStatusField, receivedStatus);\n\n                if (taskBoardOptions.dataOrderField) {\n                    that._updateOrder(taskboard._getColumn(receivedStatus), options.newIndex);\n                }\n\n                taskboard.dataSource.sync();\n            }\n        });\n\n        var EditCardCommand = TaskBoardCommand.extend({\n            exec: function () {\n                var that = this,\n                    taskboard = that.taskboard,\n                    options = that.options;\n\n                if (taskboard.trigger(\"editCard\", { card: options.card })) {\n                    return;\n                }\n\n                taskboard._openPane(extend({\n                    pane: \"Edit\"\n                }, options));\n            }\n        });\n\n        var AddCardCommand = TaskBoardCommand.extend({\n            exec: function () {\n                var that = this,\n                    taskboard = that.taskboard,\n                    options = that.options;\n\n                if (taskboard.trigger(\"editCard\", { card: null })) {\n                    return;\n                }\n                taskboard.dataSource.cancelChanges();\n                taskboard._openPane(extend({\n                    pane: \"Create\"\n                }, options));\n            }\n        });\n\n        // Pane commands\n        var OpenPaneCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    options = that.options,\n                    taskboard = that.taskboard;\n\n                taskboard._openPane({\n                    pane: options.value,\n                    card: options.card,\n                    cardElement: options.cardElement,\n                    column: options.column,\n                    columnElement: options.columnElement\n                });\n            }\n        });\n\n        var ClosePaneCommand = TaskBoardCommand.extend({\n            exec: function() {\n                var that = this,\n                    taskboard = that.taskboard;\n\n                taskboard._closePane();\n                taskboard.dataSource.cancelChanges();\n            }\n        });\n\n        // Search command\n\n        var SearchCommand = TaskBoardCommand.extend({\n            exec: function () {\n                var that = this,\n                    value = that.options.value,\n                    taskboard = that.taskboard,\n                    taskboardOptions = taskboard.options,\n                    searchOptions = taskboardOptions.search,\n                    operator = searchOptions.operator,\n                    fields = (searchOptions && searchOptions.fields) || [ taskboardOptions.dataTitleField, taskboardOptions.dataDescriptionField ],\n                    filters;\n\n                filters = that._buildFilters(fields, operator, value);\n\n                taskboard.dataSource.filter(filters);\n            },\n            _buildFilters: function (fields, operator, value) {\n                var filters = fields.map(function (field) {\n                    return { field: field, operator: operator, value: value };\n                });\n\n                return  { logic: \"or\", filters: filters };\n            }\n        });\n\n        extend(kendo.ui.taskboard, {\n            Command: TaskBoardCommand,\n            commands: {\n                AddColumnCommand: AddColumnCommand,\n                EditColumnCommand: EditColumnCommand,\n                DeleteColumnCommand: DeleteColumnCommand,\n                SaveColumnCommand: SaveColumnCommand,\n                CancelEditColumnCommand: CancelEditColumnCommand,\n                OpenPaneCommand: OpenPaneCommand,\n                ClosePaneCommand: ClosePaneCommand,\n                SelectCardCommand: SelectCardCommand,\n                MoveFocusCommand: MoveFocusCommand,\n                SaveChangesCommand: SaveChangesCommand,\n                DeleteCardCommand: DeleteCardCommand,\n                MoveCardCommand: MoveCardCommand,\n                EditCardCommand: EditCardCommand,\n                AddCardCommand: AddCardCommand,\n                SearchCommand: SearchCommand\n            }\n        });\n\n    })(window.kendo.jQuery);\n\n    return window.kendo;\n\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) { (a3 || a2)(); });\n(function(f, define){\n    define('taskboard/pane',[\"../kendo.form\"], f);\n})(function(){\n\n(function($, undefined) {\n    var kendo = window.kendo,\n        extend = $.extend,\n        Observable = kendo.Observable,\n        proxy = $.proxy,\n\n        Form = kendo.ui.Form,\n\n        DOT = \".\",\n        NS = DOT + \"kendoTaskBoardPane\",\n\n        ACTION = \"action\",\n        CLICK = \"click\";\n\n    var TaskBoardPaneStyles = {\n        element: \"k-taskboard-pane\",\n        edit: \"k-taskboard-edit-pane\",\n        preview: \"k-taskboard-preview-pane\",\n        header: \"k-taskboard-pane-header\",\n        headerText: \"k-taskboard-pane-header-text\",\n        spacer: \"k-spacer\",\n        headerActions: \"k-taskboard-pane-header-actions\",\n        flatButton: \"k-button k-icon-button k-button-md k-rounded-md k-button-flat k-button-flat-base\",\n        content: \"k-taskboard-pane-content\",\n        footerActions: \"k-taskboard-pane-actions\",\n        footerActionButtons: \"k-actions k-hstack k-justify-content-end\",\n        footerButton: \"k-button k-button-md k-rounded-md k-button-solid\",\n        baseButton: \"k-button-solid-base\",\n        primaryButton: \"k-button-solid-primary\"\n    };\n\n    var TaskBoardPane = Observable.extend({\n        init: function(taskboard, options, dataItem, resources){\n            var that = this;\n\n            that.taskboard = taskboard;\n            that._dataItem = dataItem;\n            that.resources = resources;\n            that.options = extend(true, {}, options);\n\n            that._render();\n\n            that.element.on(CLICK + NS,\n                \"[\"+kendo.attr(\"command\")+\"]\",\n                proxy(that._commandClick, that));\n\n            Observable.fn.init.call(that);\n        },\n        headerTemplate: '<div class=\"#:styles.headerText#\">{0}</div>' +\n                        '<span class=\"#:styles.spacer#\"></span>' +\n                        '<div class=\"#:styles.headerActions#\">' +\n                            '<button class=\"#:styles.flatButton#\" title=\"#:messages.close#\" #:kendo.attr(\"command\")#=\"ClosePaneCommand\">' +\n                                '<span class=\"k-button-icon k-icon k-i-close\"></span>' +\n                            '</button>' +\n                        '</div>',\n        buttonTemplate: '<button class=\"#:styles.footerButton##if(primary){# #:styles.primaryButton# # } else { # #:styles.baseButton# # } #\" title=\"#:text#\" #:kendo.attr(\"command\")#=\"#:command#\" #:kendo.attr(\"options\")#=\"#:options#\">' +\n                            '<span class=\"k-button-icon #:icon# #:spriteCssClass#\"></span>' +\n                            '<span class=\"k-button-text\">#:text#</span>' +\n                        '</button>',\n        contentTemplate: '',\n        builtinButtons: {\n            \"edit\": { name: \"edit\", icon: \"edit\", text: \"Edit\", primary: true, command: \"EditCardCommand\", rules: \"isEditable\" },\n            \"delete\": { name: \"delete\", icon: \"delete\", text: \"Delete\", command: \"DeleteCardCommand\", rules: \"isEditable\" },\n            \"cancel\": { name: \"cancel\", text: \"Cancel\", command: \"ClosePaneCommand\" },\n            \"saveChanges\": { name: \"saveChanges\", text: \"Save\", command: \"SaveChangesCommand\", primary: true, rules: \"isEditable\" },\n            \"create\": { name: \"create\", text: \"Create\", command: \"SaveChangesCommand\", primary: true, rules: \"isEditable\" }\n        },\n        defaultButtons: [],\n        _render: function () {\n            var that = this,\n                styles = TaskBoardPane.styles,\n                element = $(\"<div class='\" + styles.element + \"'></div>\"),\n                header = $(\"<div class='\" + styles.header + \"'></div>\"),\n                content = $(\"<div class='\" + styles.content + \"'></div>\"),\n                buttonsContainer = $(\"<div class='\" + styles.footerActions + \" \" + styles.footerActionButtons + \"'></div>\");\n\n            that.header = header.appendTo(element);\n            that._renderHeader();\n            that.content = content.appendTo(element);\n            that._renderContent();\n            that.buttonsContainer = buttonsContainer.appendTo(element);\n            that.buttonsContainer.append(that._buildButtonsHtml());\n            that.element = element;\n        },\n        _renderHeader: function () {\n            var that = this,\n                styles = TaskBoardPane.styles,\n                options = that.options,\n                messages = options.messages,\n                headerTemplate = options.headerTemplate ? options.headerTemplate : that._buildHeaderTemplate(),\n                resources = that._resources(that._dataItem);\n\n            that.header.append(kendo.template(headerTemplate)(extend(true, {}, {\n                styles: styles,\n                messages: messages,\n                resources: resources\n            }, that._dataItem)));\n        },\n        _buildHeaderTemplate: function () {\n            var that = this;\n            return kendo.format(that.headerTemplate, \"#:\" + that.options.dataTitleField + \"#\");\n        },\n        _renderContent: function(){\n            var that = this,\n                styles = TaskBoardPane.styles,\n                options = that.options,\n                messages = options.messages,\n                contentTemplate = options.template || that.contentTemplate,\n                resources = that._resources(that._dataItem);\n\n            that.content.append(kendo.template(contentTemplate)(extend(true, {}, {\n                styles: styles,\n                messages: messages,\n                resources: resources\n            }, that._dataItem)));\n        },\n        _resources: function(card) {\n            var that = this,\n                resources = {};\n\n            if (!that.resources) {\n                return resources;\n            }\n\n            for (var key in that.resources) {\n                var resource = that.resources[key];\n                var field = resource.field;\n                var cardResources = kendo.getter(field)(card);\n\n                if (!cardResources) {\n                    continue;\n                }\n\n                if (!resource.multiple) {\n                    cardResources = [cardResources];\n                }\n\n                var data = resource.dataSource.view();\n\n                for (var resourceIndex = 0; resourceIndex < cardResources.length; resourceIndex++) {\n                    var cardResource = null;\n\n                    var value = cardResources[resourceIndex];\n\n                    if (!resource.valuePrimitive) {\n                        value = kendo.getter(resource.dataValueField)(value);\n                    }\n\n                    for (var dataIndex = 0; dataIndex < data.length; dataIndex++) {\n                        if (data[dataIndex].get(resource.dataValueField) == value) {\n                            cardResource = data[dataIndex];\n                            break;\n                        }\n                    }\n\n                    if (cardResource !== null) {\n                        var resourceColor = kendo.getter(resource.dataColorField)(cardResource);\n                        var result = {\n                            field: resource.field,\n                            title: resource.title,\n                            name: resource.name,\n                            text: kendo.getter(resource.dataTextField)(cardResource),\n                            value: value,\n                            color: resourceColor\n                        };\n\n                        if(resource.multiple){\n                            if(resources[resource.field]) {\n                                resources[resource.field].push(result);\n                            } else {\n                                resources[resource.field] = [result];\n                            }\n                        } else {\n                            resources[resource.field] = result;\n                        }\n                    }\n                }\n            }\n            return resources;\n        },\n        _buildButtonsHtml: function () {\n            var that = this,\n                options = that.options,\n                messages = options.messages,\n                buttons = options.buttons || that.defaultButtons,\n                styles = TaskBoardPane.styles,\n                html = \"\";\n\n            for (var i = 0; i < buttons.length; i++) {\n                var button = buttons[i];\n                button = ($.isPlainObject(button) && Object.keys(button).length === 1 && button.name) ? button.name : button;\n\n                if (typeof button === \"string\") {\n                    button = extend(true, {},\n                        that.builtinButtons[button] || { spriteCssClass: button, command: button + \"Command\" },\n                        { text: messages[button] || button }\n                    );\n                } else if ($.isPlainObject(button) && button.name) {\n                    button = extend(true, button,\n                        { text: messages[button.name] }\n                    );\n                }\n\n                if (!that._validateRules(button)) {\n                    continue;\n                }\n\n                var icon = button.icon ? \"k-icon k-i-\" + button.icon : \"\";\n\n                button.icon = icon;\n                button.spriteCssClass = button.spriteCssClass || \"\";\n\n                html += kendo.template(that.buttonTemplate)(extend(true, {}, {\n                    styles: styles,\n                    messages: messages,\n                    primary: false,\n                    options: null\n                }, button));\n            }\n\n            return html;\n        },\n        _commandClick: function (ev) {\n            var that = this,\n                target = $(ev.target).closest(\"[\" + kendo.attr(\"command\") + \"]\"),\n                command = target.attr(kendo.attr(\"command\")),\n                options = target.attr(kendo.attr(\"options\")),\n                card = that._dataItem;\n\n            options = typeof(options) === \"string\" ? { value: options } : options;\n\n            if (!command) {\n                return;\n            }\n\n            that.trigger(ACTION, {\n                command: command,\n                options: extend({ card: card }, options)\n            });\n        },\n        _validateRules: function (tool) {\n            var that = this,\n                states = that.options.states,\n                rules = tool.rules ? tool.rules.split(\";\") : [];\n\n            if(!rules.length) {\n                return true;\n            }\n\n            for (var i = 0; i < rules.length; i++) {\n                if(!states[rules[i]]){\n                    return false;\n                }\n            }\n\n            return true;\n        },\n        destroy: function(){\n            var that = this;\n\n            that.element.off(NS);\n            that.element.remove();\n        }\n    });\n\n    var TaskBoardPreviewPane = TaskBoardPane.extend({\n        init: function (taskboard, options, dataItem, resources) {\n            var that = this;\n\n            options = extend({}, options.previewPane, {\n                dataTitleField: options.dataTitleField,\n                dataDescriptionField: options.dataDescriptionField,\n                messages: options.messages,\n                states: options.states\n            });\n\n            that.contentTemplate = kendo.format(that._contentTemplate, options.dataDescriptionField);\n\n            TaskBoardPane.fn.init.call(that, taskboard, options, dataItem, resources);\n\n            that.element.addClass(TaskBoardPane.styles.preview);\n        },\n        _contentTemplate: \"<p>#:{0}#</p>\",\n        defaultButtons: [ \"delete\",  \"edit\" ]\n    });\n\n    var TaskBoardEditPane = TaskBoardPane.extend({\n        init: function (taskboard, options, dataItem) {\n            var that = this;\n\n            options = extend({}, options.editable, {\n                dataTitleField: options.dataTitleField,\n                dataDescriptionField: options.dataDescriptionField,\n                messages: options.messages,\n                states: options.states\n            });\n\n            that.formSettings = extend(that.formSettings, {\n                items: [\n                    { field: options.dataTitleField, label: options.messages[options.dataTitleField] },\n                    { field: options.dataDescriptionField, label: options.messages[options.dataDescriptionField] }\n                ]\n            }, options.form);\n\n            TaskBoardPane.fn.init.call(that, taskboard, options, dataItem);\n\n            that.element.addClass(TaskBoardPane.styles.edit);\n        },\n        defaultButtons: [ \"cancel\",  \"saveChanges\" ],\n        formSettings: {\n            buttonsTemplate: \"\"\n        },\n        _buildHeaderTemplate: function () {\n            var that = this;\n            return kendo.format(that.headerTemplate, that.options.messages.edit + \" #:\" + that.options.dataTitleField + \"#\");\n        },\n        _renderContent: function(){\n            var that = this,\n                options = that.options,\n                styles = TaskBoardPane.styles,\n                formSettings = options.form || that.formSettings,\n                formLabelId = kendo.guid(),\n                element = $(\"<div></div>\")\n                    .attr(\"role\", \"form\")\n                    .attr(\"aria-labelledby\", formLabelId);\n\n            that.header.find(DOT + styles.headerText).attr(\"id\", formLabelId);\n\n            that.content.append(element);\n\n            that.form = new Form(element, extend({}, formSettings, {\n                formData: that._dataItem\n            }));\n\n            that.form.element.find(\"input\").trigger(\"focus\");\n        }\n    });\n\n    var TaskBoardCreatePane = TaskBoardEditPane.extend({\n        init: function (taskboard, options, dataItem, resources, column) {\n            var that = this,\n                columnStatusField = options.columnSettings.dataStatusField,\n                firstColumn = taskboard.columnsDataSource.view().at(0),\n                status = column ? column[columnStatusField] : firstColumn[columnStatusField],\n                clone = extend({}, dataItem);\n\n            dataItem = taskboard.dataSource.add();\n            dataItem.set(options.dataStatusField, status);\n\n            for (var key in clone) {\n                dataItem.set(key, clone[key]);\n            }\n\n            TaskBoardEditPane.fn.init.call(that, taskboard, options, dataItem, resources);\n        },\n        _buildHeaderTemplate: function () {\n            var that = this;\n            return kendo.format(that.headerTemplate, that.options.messages.createNewCard);\n        },\n        defaultButtons: [ \"cancel\",  \"create\" ]\n    });\n\n    extend(kendo.ui.taskboard, {\n        Pane: TaskBoardPane,\n        panes: {\n            Preview: TaskBoardPreviewPane,\n            Edit: TaskBoardEditPane,\n            Create: TaskBoardCreatePane\n        }\n    });\n\n    extend(true, kendo.ui.taskboard.Pane, { styles: TaskBoardPaneStyles });\n\n})(window.kendo.jQuery);\n\nreturn window.kendo;\n\n}, typeof define == 'function' && define.amd ? define : function(a1, a2, a3){ (a3 || a2)(); });\n(function(f, define){\n    define('taskboard/keyboard',[\"../kendo.core\"], f);\n})(function(){\n\n(function($, undefined) {\n    var kendo = window.kendo,\n        Observable = kendo.Observable,\n\n        proxy = $.proxy,\n        extend = $.extend,\n\n        DOT = \".\",\n        NS = DOT + \"kendoKeboardManager\",\n        KEYDOWN = \"keydown\",\n        ACTION = \"action\";\n\n\n    var Keyboard = Observable.extend({\n        init: function (element) {\n            var that = this;\n\n            that.register = {};\n            that.element = element;\n\n            that._attachEvents();\n\n            Observable.fn.init.call(that);\n        },\n\n        registerShortcut: function (selector, shortcut, options) {\n            var that = this;\n\n            if (!that.register[selector]) {\n                that.register[selector] = [];\n            }\n\n            if (shortcut.keyCode && isNaN(shortcut.keyCode) && shortcut.keyCode.toUpperCase) {\n                shortcut.keyCode = shortcut.keyCode.toUpperCase().charCodeAt(0);\n            }\n\n            that.register[selector].push({\n                shortcut: extend({\n                    keyCode: null,\n                    ctrlKey: false,\n                    shiftKey: false,\n                    altKey: false\n                }, shortcut),\n                options: options\n            });\n\n        },\n\n        _attachEvents: function () {\n            var that = this,\n                handler = proxy(that._handler, that);\n\n            that.element.on(KEYDOWN + NS, handler);\n        },\n\n        _handler: function (ev) {\n            var that = this,\n                target = $(ev.target),\n                shortcuts, action;\n\n            for (var selector in that.register) {\n                if (target.is(selector)) {\n                    shortcuts = that.register[selector];\n                    action = that._getAction(shortcuts, ev);\n\n                    if (action) {\n                        that._trigger(action, ev);\n                        break;\n                    }\n                }\n            }\n        },\n\n        _trigger: function (action, ev) {\n            var that = this,\n                target = $(ev.target);\n\n            if (action.command) {\n                that.trigger(ACTION, extend({}, ev, {\n                    command: action.command,\n                    options: extend({}, {\n                        target: target\n                    }, action.options)\n                }));\n            }\n\n            if (action.handler) {\n                action.handler(ev);\n            }\n        },\n\n        _getAction: function (shortcuts, ev) {\n            var that = this;\n\n            for (var i = 0; i < shortcuts.length; i++) {\n                if (that._compareShortcut(shortcuts[i].shortcut, ev)) {\n                    return shortcuts[i].options;\n                }\n            }\n        },\n\n        _compareShortcut: function (shortcut, ev) {\n            var that = this;\n\n            for (var key in shortcut) {\n                var result = false;\n\n                switch (key) {\n                    case \"ctrlKey\":\n                        result = shortcut[key] !== that._getShortcutModifier(ev);\n                        break;\n                    default:\n                        result = shortcut[key] !== ev[key];\n                        break;\n                }\n\n                if(result) {\n                    return false;\n                }\n            }\n\n            return true;\n        },\n\n        _getShortcutModifier: function (ev) {\n            var mac = navigator.platform.toUpperCase().indexOf('MAC') >= 0;\n            return mac ? ev.metaKey : ev.ctrlKey;\n        },\n\n        destroy: function(){\n            var that = this;\n\n            that.element.off(NS);\n        }\n    });\n\n    extend(kendo.ui.taskboard, {\n        KeyboardManager: Keyboard\n    });\n\n})(window.kendo.jQuery);\n\nreturn window.kendo;\n\n}, typeof define == 'function' && define.amd ? define : function(a1, a2, a3){ (a3 || a2)(); });\n(function (f, define) {\n    define('kendo.taskboard',[\n        \"./taskboard/toolbar\",\n        \"./taskboard/column\",\n        \"./taskboard/card\",\n        \"./taskboard/cardmenu\",\n        \"./taskboard/commands\",\n        \"./taskboard/pane\",\n        \"./taskboard/keyboard\",\n\n        \"./kendo.data\"\n    ], f);\n})(function () {\n\n    var __meta__ = { // jshint ignore:line\n        id: \"taskboard\",\n        name: \"TaskBoard\",\n        category: \"web\",\n        description: \"The TaskBoard widget displays cards.\",\n        depends: [\"data\", \"sortable\", \"dialog\", \"form\", \"menu\", \"toolbar\"]\n    };\n\n    var TaskBoardStyles = {\n        wrapper: \"k-taskboard\",\n        header: \"k-taskboard-header\",\n        content: \"k-taskboard-content\",\n        toolbar: \"k-taskboard-toolbar k-toolbar-flat\",\n        columnsContainer: \"k-taskboard-columns-container\",\n        card: \"k-taskboard-card\",\n        column: \"k-taskboard-column\",\n        selected: \"k-state-selected\",\n        disabled: \"k-state-disabled\",\n        ignoreDrag: \"k-taskboard-drag-ignore\"\n    };\n\n    var preventDefault = function (ev) { ev.preventDefault(); };\n\n    (function ($, undefined) {\n        var kendo = window.kendo,\n            Widget = kendo.ui.Widget,\n            DataSource = kendo.data.DataSource,\n            extend = $.extend,\n            ui = kendo.ui,\n            proxy = $.proxy,\n            isArray = Array.isArray,\n            isPlainObject = $.isPlainObject,\n\n            GENERIC = \"_generic\",\n\n            DOT = \".\",\n\n            MOVE = \"move\",\n            MOVE_START = \"moveStart\",\n            MOVE_END = \"moveEnd\",\n            SELECT = \"select\",\n            EXECUTE = \"execute\",\n            ACTION = \"action\",\n            CHANGE = \"change\",\n            ERROR = \"change\",\n            DATABINDING = \"dataBinding\",\n            DATABOUND = \"dataBound\",\n            EDIT_CARD = \"editCard\",\n            SAVE_CARD = \"saveCard\",\n            DELETE_CARD = \"deleteCard\",\n            EDIT_COLUMN = \"editColumn\",\n            SAVE_COLUMN = \"saveColumn\",\n            DELETE_COLUMN = \"deleteColumn\",\n\n            COLUMNSDATABINDING = \"columnsDataBinding\",\n            COLUMNSDATABOUND = \"columnsDataBound\";\n\n        var TaskBoard = Widget.extend({\n            init: function (element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                element = that.wrapper = that.element;\n\n                that._sortableIdentifier = that.element.attr(\"id\") || kendo.guid();\n\n                that._wrapper();\n                that._columnsDataSource();\n                that._initResources();\n                that._dataSource();\n                that._initToolbar();\n                that._initCardMenu();\n                that._initKeyboard();\n\n                if (that.options.autoBind) {\n                    that.load();\n                }\n\n                kendo.notify(that);\n            },\n\n            events: [\n                MOVE,\n                MOVE_START,\n                MOVE_END,\n                CHANGE,\n                EXECUTE,\n                SELECT,\n                DATABINDING,\n                DATABOUND,\n                COLUMNSDATABINDING,\n                COLUMNSDATABOUND,\n                EDIT_CARD,\n                SAVE_CARD,\n                DELETE_CARD,\n                EDIT_COLUMN,\n                SAVE_COLUMN,\n                DELETE_COLUMN\n            ],\n\n            options: {\n                name: \"TaskBoard\",\n                autoBind: true,\n                height: 600,\n                width: \"100%\",\n                toolbar: true,\n                dataStatusField: \"status\",\n                dataTitleField: \"title\",\n                dataDescriptionField: \"description\",\n                dataCategoryField: \"category\",\n                dataOrderField: null,\n                cardMenu: true,\n                editable: true,\n                selectable: true,\n                reorderable: true,\n                previewPane: true,\n                search: {\n                    operator: \"contains\"\n                },\n                dataSource: [],\n                columns: [],\n                columnSettings: {\n                    dataStatusField: \"status\",\n                    dataTextField: \"text\",\n                    dataOrderField: null\n                },\n                resources: [],\n                messages: {\n                    edit: \"Edit\",\n                    createNewCard: \"Create new card\",\n                    create: \"Create\",\n                    search: \"Search\",\n                    previewCard: \"Preview card\",\n                    addCard: \"Add card\",\n                    editCard: \"Edit card\",\n                    deleteCard: \"Delete Card\",\n                    addColumn: \"Add column\",\n                    editColumn: \"Edit column\",\n                    deleteColumn: \"Delete column\",\n                    close: \"Close\",\n                    cancel: \"Cancel\",\n                    \"delete\": \"Delete\",\n                    saveChanges: \"Save changes\",\n                    title: \"Title:\",\n                    description: \"Description:\",\n                    newColumn: \"New column\",\n                    deleteColumnConfirm: \"Are you sure you want to delete this column?\",\n                    deleteCardConfirm: \"Are you sure you want to delete this card?\"\n                }\n            },\n\n            items: function () {\n                var that = this,\n                    result = $([]);\n\n                for (var key in that._columns) {\n                    $.merge(result, that._columns[key].cards());\n                }\n\n                return result;\n            },\n\n            itemsByStatus: function (status) {\n                var that = this,\n                    result = that._getColumn(status).cards();\n\n                return result;\n            },\n\n            itemsByColumn: function (columnElm) {\n                var that = this,\n                    column = that._getColumnByElement(columnElm);\n\n                if (column) {\n                    return column.cards();\n                }\n            },\n\n            load: function () {\n                var that = this,\n                    fetchPromises = [];\n\n                that._progress(true);\n\n                fetchPromises.push(that.columnsDataSource.fetch());\n\n                for (var key in that.resources) {\n                    fetchPromises.push(that.resources[key].dataSource.fetch());\n                }\n\n                $.when.apply(null, fetchPromises)\n                    .then(proxy(that.dataSource.read, that.dataSource));\n            },\n\n            dataItem: function (cardElm) {\n                var that = this,\n                    dataSource = that.dataSource,\n                    uid;\n\n                cardElm = $(cardElm);\n                uid = cardElm.attr(kendo.attr(\"uid\"));\n\n                return dataSource.getByUid(uid);\n            },\n\n            columnDataItem: function (columnElm) {\n                var that = this,\n                    columnsDataSource = that.columnsDataSource,\n                    uid;\n\n                columnElm = $(columnElm);\n                uid = columnElm.attr(kendo.attr(\"uid\"));\n\n                return columnsDataSource.getByUid(uid);\n            },\n\n            columns: function () {\n                var that = this,\n                    result = $([]);\n\n                for (var key in that._columns) {\n                    $.merge(result, that._columns[key].element);\n                }\n\n                return result;\n            },\n\n            columnByStatus: function (status) {\n                return this._getColumn(status).element;\n            },\n\n            select: function (card, toggle) {\n                var that = this;\n\n                if(!card) {\n                    return that.element\n                        .find(DOT + TaskBoard.styles.card + DOT + TaskBoard.styles.selected).eq(0);\n                }\n\n                card = $(card);\n                toggle = toggle !== false;\n\n                if (toggle) {\n                    that.element\n                        .find(DOT + TaskBoard.styles.card + DOT + TaskBoard.styles.selected)\n                        .removeClass(TaskBoard.styles.selected);\n                }\n\n                card.toggleClass(TaskBoard.styles.selected, toggle);\n            },\n\n            previewCard: function (cardElement) {\n                var that = this,\n                    options = that.options,\n                    args = that._extendExecArgs({ target: cardElement });\n\n                if (options.previewPane) {\n                    that._openPane(extend({\n                        pane: \"Preview\"\n                    }, args));\n                }\n            },\n\n            editCard: function (cardElement) {\n                var that = this,\n                    options = that.options,\n                    args;\n\n                cardElement = $(cardElement);\n                args = that._extendExecArgs({ target: cardElement });\n\n                if (options.editable) {\n                    that._openPane(extend({\n                        pane: \"Edit\"\n                    }, args));\n                }\n            },\n\n            saveCard: function () {\n                var that = this;\n\n                that.dataSource.sync();\n            },\n\n            deleteCard: function (cardElement) {\n                var that = this,\n                    card = that.dataItem(cardElement);\n\n                that.dataSource.remove(card);\n                that.dataSource.sync();\n            },\n\n            addCard: function (dataItem) {\n                var that = this,\n                    options = that.options,\n                    args = { card: dataItem };\n\n                if (options.editable) {\n                    that._openPane(extend({\n                        pane: \"Create\"\n                    }, args));\n                }\n            },\n\n            addColumn: function (index, data) {\n                var that = this,\n                    columnSettings = extend(true, {}, that.options.columnSettings, {\n                        messages: that.options.messages,\n                        states: that._buildStates(),\n                        sortableIdentifier: that._sortableIdentifier\n                    }),\n                    newColumn, model, column;\n\n                if(isNaN(index) && !data) {\n                    data = index;\n                    index = null;\n                }\n\n                model = that.columnsDataSource._createNewModel(data);\n                index = isNaN(index) || index === null ? that.columnsDataSource.data().length : index;\n                column = that.columns().eq(index);\n                that.columnsDataSource.insert(index, model);\n\n                newColumn = new ui.taskboard.NewColumn(columnSettings, model);\n\n                if (isNaN(index) || !column.length) {\n                    that.columnsContainer.append(newColumn.element);\n                } else {\n                    column.before(newColumn.element);\n                }\n\n                newColumn.bind(ACTION, that.executeCommand.bind(that));\n            },\n\n            editColumn: function (columnElement) {\n                var that = this;\n\n                columnElement = $(columnElement);\n\n                that._getColumnByElement(columnElement).edit();\n            },\n\n            saveColumn: function () {\n                var that = this;\n\n                that.columnsDataSource.sync();\n            },\n\n            deleteColumn: function (columnElement) {\n                var that = this,\n                    column = that.columnDataItem(columnElement);\n\n                that.columnsDataSource.remove(column);\n                that.columnsDataSource.sync();\n            },\n\n            registerShortcut: function (selector, shortcut, options) {\n                var that = this;\n\n                that.keyboardManager.registerShortcut(selector, shortcut, options);\n            },\n\n            enable: function (cardElement, toggle) {\n                cardElement = $(cardElement);\n\n                cardElement.toggleClass(TaskBoard.styles.disabled, toggle === false);\n                cardElement.attr(\"aria-disabled\", toggle === false);\n            },\n\n            enableByColumn: function (columnElement, toggle) {\n                var that = this;\n\n                columnElement = $(columnElement);\n\n                that.itemsByColumn(columnElement).each(function(index, card){\n                    that.enable(card, toggle);\n                });\n            },\n\n            readOnly: function (cardElement, toggle) {\n                cardElement = $(cardElement);\n\n                toggle = toggle !== false;\n\n                cardElement.find(\"[\" + kendo.attr(\"command\") + \"]\").toggleClass(TaskBoard.styles.disabled, toggle);\n                cardElement.find(\"a,button\").toggleClass(TaskBoard.styles.disabled, toggle);\n\n                cardElement.toggleClass(TaskBoard.styles.ignoreDrag, toggle);\n                cardElement.attr(\"aria-readonly\", toggle);\n            },\n\n            readOnlyByColumn: function (columnElement, toggle) {\n                var that = this;\n\n                columnElement = $(columnElement);\n\n                that.itemsByColumn(columnElement).each(function(index, card){\n                    that.readOnly(card, toggle);\n                });\n            },\n\n            setDataSource: function (dataSource) {\n                var that = this;\n\n                that.options.dataSource = dataSource;\n                that._dataSource();\n\n                if (that.options.autoBind) {\n                    that.dataSource.read();\n                }\n            },\n\n            setColumnsDataSource: function (dataSource) {\n                var that = this;\n\n                that.options.columns = dataSource;\n                that._columnsDataSource();\n\n                if (that.options.autoBind) {\n                    that.columnsDataSource.fetch(function(){\n                        that._renderCards(that.dataSource.view());\n                    });\n                }\n            },\n\n            _getColumn: function (status) {\n                return this._columns[status];\n            },\n\n            _getColumnByElement: function (columnElement) {\n                var that = this;\n\n                columnElement = $(columnElement);\n\n                for (var key in that._columns) {\n                    if (that._columns[key].element[0] === columnElement[0]) {\n                        return that._columns[key];\n                    }\n                }\n            },\n\n            _openPane: function (options) {\n                var that = this,\n                    pane = new ui.taskboard.panes[options.pane](that, extend({}, that.options, {\n                        states: that._buildStates()\n                    }), options.card, that.resources, options.column),\n                    focusableElement, keyboardManager;\n\n                if (that.pane) {\n                    that._closePane();\n                }\n\n                that.pane = pane;\n                that.content.after(that.pane.element);\n                that.content.css(\"margin-right\",\n                    that.pane.element.outerWidth() -\n                    parseInt(that.content.css(\"paddingRight\"), 10));\n\n                that.pane.bind(ACTION, that.executeCommand.bind(that));\n\n                that.pane.keyboardManager = keyboardManager = new ui.taskboard.KeyboardManager(that.pane.element);\n\n                keyboardManager.bind(ACTION, that.executeCommand.bind(that));\n\n                keyboardManager.registerShortcut(\"*\", {\n                    keyCode: kendo.keys.ESC\n                }, { command: \"ClosePaneCommand\" });\n\n                keyboardManager.registerShortcut(\"*\", {\n                    keyCode: kendo.keys.ENTER\n                }, { command: \"SaveChangesCommand\", options: {\n                    card: that.pane._dataItem\n                } });\n\n                focusableElement = that.pane.element.find(\"input\");\n\n                if (!focusableElement.length) {\n                    focusableElement = that.pane.element.find(\"button\");\n                }\n\n                setTimeout(function () {\n                    focusableElement.eq(0).trigger(\"focus\");\n                }, 0);\n            },\n\n            _closePane: function () {\n                var that = this;\n\n                if (that.pane) {\n                    that.pane.keyboardManager.destroy();\n                    that.pane.unbind(ACTION);\n                    that.pane.destroy();\n                    delete that.pane;\n\n                    that.content.css(\"margin-right\", \"\");\n                }\n            },\n\n            _wrapper: function () {\n                var that = this,\n                    options = that.options,\n                    styles = TaskBoard.styles,\n                    headerElm = \"<div class='\" + styles.header + \"'></div>\",\n                    contentElm = \"<div class='\" + styles.content + \"'></div>\",\n                    colsContainer = \"<div class='\" + styles.columnsContainer + \"'></div>\";\n\n                that.element.addClass(styles.wrapper)\n                    .width(options.width)\n                    .height(options.height)\n                    .attr(\"role\", \"application\");\n                that.header = $(headerElm).appendTo(that.element);\n                that.content = $(contentElm).appendTo(that.element);\n                that.columnsContainer = $(colsContainer).appendTo(that.content);\n            },\n\n            _initToolbar: function () {\n                var that = this,\n                    styles = TaskBoard.styles,\n                    options = that.options,\n                    toolbarElm = $(\"<div class='\" + styles.toolbar + \"'></div>\"),\n                    toolbarOptions = isArray(options.toolbar) ? { items: options.toolbar } : options.toolbar;\n\n                if (options.toolbar === false) {\n                    return;\n                }\n\n                toolbarOptions = extend({}, toolbarOptions, {\n                    taskboard: this,\n                    messages: options.messages,\n                    action: that.executeCommand.bind(that),\n                    states: that._buildStates()\n                });\n\n                that.header.append(toolbarElm);\n                that.toolbar = new ui.taskboard.ToolBar(toolbarElm, toolbarOptions);\n            },\n\n            _buildStates: function () {\n                var that = this;\n\n                return {\n                    isEditable: that._isEditable(),\n                    isReorderable: that._isReorderable(),\n                    isSelectable: that._isSelectable(),\n                    isReadOnly: !that._isReorderable() && !that._isEditable(),\n                    isDisabled: !that._isReorderable() && !that._isEditable() && !that._isSelectable(),\n                    isSearchable: that._isSearchable(),\n                    notLocalColumns: !(that.columnsDataSource.transport instanceof kendo.data.LocalTransport),\n                    isRtl: kendo.support.isRtl(that.wrapper)\n                };\n            },\n\n            _isSearchable: function () {\n                return !!this.options.search;\n            },\n\n            _isEditable: function () {\n                return !!this.options.editable;\n            },\n\n            _isReorderable: function () {\n                return !!this.options.reorderable;\n            },\n\n            _isSelectable: function () {\n                return !!this.options.selectable;\n            },\n\n            executeCommand: function(args) {\n                var that = this,\n                    commandName = args.command,\n                    commandOptions = extend({ taskboard: this }, isPlainObject(args.options) ? that._extendExecArgs(args.options) : { value: args.options }),\n                    command = ui.taskboard.commands[commandName] && new ui.taskboard.commands[commandName](commandOptions);\n\n\n                if(!that.trigger(EXECUTE, args)) {\n                    if (command) {\n                        command.exec();\n                    } else {\n                        window.console.warn(kendo.format(\"Trying to use {0} command, but such is not available in the kendo.ui.taskboard.commands namespace!\", commandName));\n                    }\n                }\n            },\n\n            _extendExecArgs: function (args) {\n                var that = this,\n                    target = args.draggableEvent ? args.item : args.target,\n                    columnElm, cardElm, columnDataItem, cardDataItem;\n\n                if (args.card) {\n                    target = that.items().filter(function (idx, elm) {\n                        return $(elm).attr(kendo.attr(\"uid\")) === args.card.get(\"uid\");\n                    });\n                }\n\n                if(!target || !(target && target.length)) {\n                    return args;\n                }\n\n                columnElm = args.columnElement || (target.is(DOT + TaskBoard.styles.column) ? target : target.parents(DOT + TaskBoard.styles.column));\n                columnDataItem = that.columnsDataSource.getByUid(columnElm.data(kendo.ns + \"uid\"));\n                cardElm = target.is(DOT + TaskBoard.styles.card) ? target : target.closest(DOT + TaskBoard.styles.card);\n                cardDataItem = that.dataSource.getByUid(cardElm.data(kendo.ns + \"uid\"));\n\n                return extend(args, {\n                    card: cardDataItem,\n                    cardElement: cardElm.length ? cardElm : undefined,\n                    column: columnDataItem,\n                    columnElement: columnElm.length ? columnElm : undefined\n                });\n            },\n\n\n            _select: function (card, toggle) {\n                var that = this;\n\n                if (toggle === null) {\n                    toggle = true;\n                }\n\n                if(!that.trigger(SELECT, { card: card })) {\n                    that.select(card, toggle);\n                    that.previewCard(card);\n                }\n            },\n\n            _columnsDataSource: function () {\n                var that = this,\n                    options = that.options,\n                    columnSettings = options.columnSettings,\n                    columnsDataSource = options.columns;\n\n                columnsDataSource = isArray(columnsDataSource) ? { data: columnsDataSource } : columnsDataSource;\n\n                if (columnSettings.dataOrderField && !columnsDataSource.sort) {\n                    columnsDataSource.sort = { field: columnSettings.dataOrderField, dir: \"asc\" };\n                }\n\n                if (!columnsDataSource.schema) {\n                    var fields = {};\n\n                    fields[columnSettings.dataStatusField] = { type: \"string\", defaultValue: function () { return kendo.guid().split(\"-\")[0]; } };\n                    fields[columnSettings.dataTextField] = { type: \"string\" };\n\n                    if (columnSettings.dataOrderField) {\n                        fields[columnSettings.dataOrderField] = { type: \"number\" };\n                    }\n\n                    columnsDataSource.schema = {\n                        model: {\n                            fields: fields\n                        }\n                    };\n                }\n\n                if (that.columnsDataSource && that._columnsChangeHandler) {\n                    that.columnsDataSource.unbind(CHANGE, that._columnsChangeHandler);\n                    that.columnsDataSource.unbind(CHANGE, that._columnsErrorHandler);\n                } else {\n                    that._columnsChangeHandler = proxy(that._columnsDataSourceChange, that);\n                    that._columnsErrorHandler = proxy(that._error, that);\n                }\n\n                that.columnsDataSource = DataSource.create(columnsDataSource)\n                                .bind(CHANGE, that._columnsChangeHandler)\n                                .bind(ERROR, that._columnsErrorHandler);\n            },\n\n            _columnsDataSourceChange: function (ev) {\n                var that = this,\n                    view = that.columnsDataSource.view(),\n                    columnSettings = extend(true, {}, that.options.columnSettings, {\n                        messages: that.options.messages,\n                        states: that._buildStates(),\n                        sortableIdentifier: that._sortableIdentifier\n                     }),\n                    statusField = columnSettings.dataStatusField;\n\n                if (ev.action && ev.action !== \"sync\") {\n                    return;\n                }\n\n                if (that.trigger(COLUMNSDATABINDING, ev)) {\n                    return;\n                }\n\n                that._progress(true);\n\n                that._columns = {};\n                that.columnsContainer.html(\"\");\n\n                for (var i = 0; i < view.length; i++) {\n                    var data = view[i];\n                    var status = data[statusField] || GENERIC;\n                    var column;\n\n                    column = that._columns[status] = new ui.taskboard.Column(columnSettings, data);\n                    that.columnsContainer.append(column.element);\n                    column.bind(ACTION, that.executeCommand.bind(that));\n                    column.bind(MOVE, proxy(that._move, that));\n                    column.bind(MOVE_END, proxy(that._moveEnd, that));\n                    column.bind(MOVE_START, proxy(that._moveStart, that));\n                    column.bind(CHANGE, proxy(that._changeOrder, that));\n                    that._tabindex(column.element);\n                }\n\n                if (ev.action === \"sync\" || ev.action === undefined) {\n                    that._renderCards(that.dataSource.view());\n                }\n\n                that._progress(false);\n                that.trigger(COLUMNSDATABOUND, ev);\n            },\n\n            _move: function (ev) {\n                this.trigger(MOVE, this._extendExecArgs(ev));\n            },\n\n            _moveEnd: function (ev) {\n                this.trigger(MOVE_END, this._extendExecArgs(ev));\n            },\n\n            _moveStart: function (ev) {\n                this.trigger(MOVE_START, this._extendExecArgs(ev));\n            },\n\n            _changeOrder: function (ev) {\n                this.trigger(CHANGE, this._extendExecArgs(ev));\n            },\n\n            _dataSource: function () {\n                var that = this,\n                    options = that.options,\n                    dataSource = options.dataSource;\n\n                    dataSource = isArray(dataSource) ? { data: dataSource } : dataSource;\n\n                if (options.dataOrderField && !dataSource.sort) {\n                    dataSource.sort = { field: options.dataOrderField, dir: \"asc\" };\n                }\n\n                if (!dataSource.schema) {\n                    var fields = {};\n\n                    fields[options.dataStatusField] = { type: \"string\" };\n                    fields[options.dataTitleField] = { type: \"string\" };\n                    fields[options.dataDescriptionField] = { type: \"string\" };\n                    fields[options.dataCategoryField] = { type: \"string\" };\n\n                    if (options.dataOrderField) {\n                        fields[options.dataOrderField] = { type: \"number\" };\n                    }\n\n                    dataSource.schema = {\n                        model: {\n                            fields: fields\n                        }\n                    };\n                }\n\n                if (that.dataSource && that._changeHandler) {\n                    that.dataSource.unbind(CHANGE, that._changeHandler);\n                    that.dataSource.unbind(ERROR, that._errorHandler);\n                } else {\n                    that._changeHandler = proxy(that._change, that);\n                    that._errorHandler = proxy(that._error, that);\n                }\n\n                that.dataSource = DataSource.create(dataSource)\n                                .bind(CHANGE, that._changeHandler);\n            },\n\n            _change: function (ev) {\n                var that = this;\n\n                if (ev.action && ev.action !== \"sync\") {\n                    return;\n                }\n\n                if (that.trigger(DATABINDING, ev)) {\n                    return;\n                }\n\n                that._progress(true);\n\n                that._clearColumns();\n                that._renderCards(that.dataSource.view());\n                that._closePane();\n\n                that.trigger(DATABOUND, ev);\n                that._progress(false);\n            },\n\n            _error: function () {\n                this._progress(false);\n            },\n\n            _renderCards: function (data) {\n                var that = this;\n\n                for (var i = 0; i < data.length; i++) {\n                    that._renderCard(data[i]);\n                }\n            },\n\n            _renderCard: function (card) {\n                var that = this,\n                    options = extend({}, that.options, { states: that._buildStates() }),\n                    statusField = options.dataStatusField,\n                    status = card[statusField] || GENERIC;\n\n                if (status && that._columns[status]) {\n                    card = new ui.taskboard.Card(options, card, that.resources);\n                    that._columns[status].addCard(card.element);\n                    that._tabindex(card.element);\n                }\n            },\n\n            _clearColumns: function () {\n                var that = this;\n\n                for (var key in that._columns) {\n                    that._columns[key].empty();\n                }\n            },\n\n            _initCardMenu: function(){\n                var that = this,\n                    options = that.options,\n                    cardMenuOptions = isArray(options.cardMenu) ? { items: options.cardMenu } : options.cardMenu;\n\n                cardMenuOptions = extend({}, {\n                    messages: options.messages,\n                    target: that.columnsContainer,\n                    filter: \".k-taskboard-card-menu-button\",\n                    action: that.executeCommand.bind(that),\n                    showOn: \"click\",\n                    alignToAnchor: true,\n                    states: that._buildStates()\n                }, cardMenuOptions);\n\n                if(options.cardMenu === false) {\n                    return;\n                }\n\n                that.cardMenu = new ui.taskboard.CardMenu(\"<ul></ul>\", cardMenuOptions);\n            },\n\n            _initResources: function () {\n                var that = this,\n                    resources = that.options.resources;\n\n                for (var i = 0; i < resources.length; i++) {\n                    that._addResource(resources[i]);\n                }\n            },\n\n            _addResource: function (resource) {\n                var that = this;\n\n                if (!that.resources) {\n                    that.resources = {};\n                }\n\n                that.resources[resource.field] = {\n                    field: resource.field,\n                    name: resource.name,\n                    title: resource.title || resource.field,\n                    dataTextField: resource.dataTextField || \"text\",\n                    dataValueField: resource.dataValueField || \"value\",\n                    dataColorField: resource.dataColorField || \"color\",\n                    valuePrimitive: resource.valuePrimitive === false ? false : true,\n                    multiple: resource.multiple || false,\n                    dataSource: that._resourceDataSource(resource.dataSource)\n                };\n            },\n\n            _resourceDataSource: function (resourceDS) {\n                var dataSource = isArray(resourceDS) ? { data: resourceDS } : resourceDS,\n                    dataSourceInstance = kendo.data.DataSource.create(dataSource);\n\n                return dataSourceInstance;\n            },\n\n            _progress: function (toggle) {\n                var that = this;\n\n                kendo.ui.progress(that.element, toggle);\n            },\n\n            _initKeyboard: function () {\n                var that = this;\n\n                that.keyboardManager = new ui.taskboard.KeyboardManager(that.element);\n\n                that.keyboardManager.bind(ACTION, that.executeCommand.bind(that));\n                that._registerShortcuts();\n            },\n\n            _registerShortcuts: function () {\n                var that = this,\n                    states = that._buildStates();\n\n                if (states.isEditable) {\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, {\n                        keyCode: kendo.keys.DELETE\n                    }, { command: \"DeleteColumnCommand\" });\n\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, {\n                        keyCode: \"e\",\n                        ctrlKey: true\n                    }, { command: \"EditColumnCommand\", handler: preventDefault });\n\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, {\n                        keyCode: \"a\",\n                        ctrlKey: true\n                    }, { command: \"AddCardCommand\", handler: preventDefault });\n\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column + \" *\", {\n                        keyCode: kendo.keys.ESC\n                    }, { command: \"CancelEditColumnCommand\" });\n\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                        keyCode: kendo.keys.DELETE\n                    }, { command: \"DeleteCardCommand\" });\n\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                        keyCode: \"e\",\n                        ctrlKey: true\n                    }, { command: \"EditCardCommand\", handler: preventDefault });\n                }\n\n                if (states.isSelectable) {\n                    that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                        keyCode: kendo.keys.ENTER\n                    }, { command: \"SelectCardCommand\", handler: preventDefault });\n                }\n\n                that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                    keyCode: kendo.keys.UP\n                }, { command: \"MoveFocusCommand\", options: {value: \"up\"}, handler: preventDefault });\n\n                that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                    keyCode: kendo.keys.DOWN\n                }, { command: \"MoveFocusCommand\", options: {value: \"down\"}, handler: preventDefault });\n\n                that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                    keyCode: kendo.keys.LEFT\n                }, { command: \"MoveFocusCommand\", options: {value: \"left\"}, handler: preventDefault });\n\n                that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.card, {\n                    keyCode: kendo.keys.RIGHT\n                }, { command: \"MoveFocusCommand\", options: {value: \"right\"}, handler: preventDefault });\n\n                that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, {\n                    keyCode: kendo.keys.LEFT\n                }, { command: \"MoveFocusCommand\", options: {value: \"left\"}, handler: preventDefault });\n\n                that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, {\n                    keyCode: kendo.keys.RIGHT\n                }, { command: \"MoveFocusCommand\", options: {value: \"right\"}, handler: preventDefault });\n\n                that.keyboardManager.registerShortcut(DOT + TaskBoard.styles.column, {\n                    keyCode: kendo.keys.DOWN\n                }, { command: \"MoveFocusCommand\", options: {value: \"down\"}, handler: preventDefault });\n            },\n\n            destroy: function() {\n                var that = this;\n\n                if (that._columnsChangeHandler) {\n                    that.columnsDataSource.unbind(CHANGE, that._columnsChangeHandler);\n                    that.columnsDataSource.unbind(CHANGE, that._columnsErrorHandler);\n                }\n\n                if (that._changeHandler) {\n                    that.dataSource.unbind(CHANGE, that._changeHandler);\n                    that.dataSource.unbind(ERROR, that._errorHandler);\n                }\n\n                for (var key in that._columns) {\n                    that._columns[key].destroy();\n                }\n\n                if (that.toolbar) {\n                    that.toolbar.destroy();\n                }\n\n                if (that.cardMenu) {\n                    that.cardMenu.destroy();\n                }\n\n                if (that.keyboardManager) {\n                    that.keyboardManager.destroy();\n                }\n\n                if (that.pane) {\n                    that.closePane();\n                }\n\n                Widget.fn.destroy.call(that);\n            }\n        });\n\n        kendo.ui.plugin(TaskBoard);\n\n        extend(true, TaskBoard, { styles: TaskBoardStyles });\n\n    })(window.kendo.jQuery);\n\n    return window.kendo;\n\n}, typeof define == 'function' && define.amd ? define : function(a1, a2, a3){ (a3 || a2)(); });\n\n"],"names":["define","$","window","kendo","jQuery","undefined","extend","proxy","ToolBar","ui","Item","toolbar","CLICK","TOGGLE","CLOSE","ACTION","CHANGE","NS","TaskBoardToolbarStyles","searchbox","searchIcon","searchInput","TaskBoardToolBar","init","element","options","that","this","_extendOptions","fn","call","_attachEvents","events","concat","defaultTools","addColumn","type","text","name","command","icon","rules","spacer","search","overflow","bind","_click","_change","tools","items","Object","keys","_extendToolsOptions","messages","length","map","tool","isBuiltInTool","isPlainObject","attr","toolOptions","_validateRules","hidden","deepExtend","id","guid","attributes","aria-label","title","buttons","_mapButtonGroups","menuButtons","_mapMenuButtons","button","states","split","i","ev","target","action","value","val","isToolEnabled","toolName","found","args","trigger","destroy","SearchTool","styles","searchInputIcon","input","renderIcon","addUidAttr","addIdAttr","addOverflowAttr","placeholder","append","_bindEvents","addClass","_inputHandler","_input","on","off","registerComponent","taskboard","amd","a1","a2","a3","Observable","DOT","BLUR","MOVE","MOVE_START","MOVE_END","TaskBoardColumnStyles","header","headerText","ellipsis","actions","cardsContainer","columnCards","actionButton","card","cardTitle","sortableSuffix","textbox","newColumn","editColumn","disabled","dragPlaceholder","dragHint","ignoreDrag","grabbingCursor","preventDefault","TaskBoardColumn","dataItem","_dataItem","sortableUniqueClass","sortableIdentifier","_render","isReorderable","_initSortable","empty","container","addCard","cardHtml","edit","_renderEditHeader","getDataItem","cards","children","template","editTemplate","builtinButtons","deleteColumn","defaultButtons","headerLabelId","uid","css","width","appendTo","_renderHeader","format","dataTextField","_buildActionsHtml","html","setTimeout","find","spriteCssClass","_actionClick","closest","_textboxBlur","keyCode","ENTER","isRtl","dirClass","sortable","Sortable","ignore","connectWith","filter","hint","clone","offsetWidth","height","offsetHeight","move","_move","start","_start","end","_end","change","draggable","userEvents","unbind","_select","ignoreDragSelectors","event","is","columnElement","sender","parents","newIndex","oldIndex","TaskBoardNewColumn","Column","NewColumn","TaskBoardCardStyles","hbox","link","cardMenuButton","flatButton","body","actionsIcon","moveCursor","categoryBorder","headerActions","TaskBoardCard","resources","headerTemplate","bodyTemplate","cardMenuButtonTemplate","_buildTemplate","cardMenu","_resources","borderDir","categoryColor","isDisabled","toggleClass","dataCategoryField","color","get","selectable","isSelectable","key","resource","field","cardResources","getter","multiple","data","dataSource","view","resourceIndex","cardResource","valuePrimitive","dataValueField","dataIndex","resourceColor","dataColorField","result","push","dataTitleField","dataDescriptionField","Card","ContextMenu","TaskBoardCardMenu","_overrideTemplates","_extendItems","_onSelect","_onOpen","_focus","templates","sprite","defaultItems","editCard","deleteCard","item","_append","_extendItem","menu","isEmptyObject","CardMenu","Class","TaskBoardCommand","_confirm","content","okText","cancel","taskboardOptions","confirm","editable","confirmation","fakePromise","Deferred","resolve","kendoConfirm","buttonLayout","open","AddColumnCommand","exec","column","columns","each","index","enableByColumn","EditColumnCommand","DeleteColumnCommand","columnDS","columnsDataSource","deleteColumnConfirm","done","cancelChanges","remove","sync","SaveColumnCommand","columnSettings","set","CancelEditColumnCommand","MoveFocusCommand","cardElement","currentColumnIndex","direction","columnIndex","Math","max","min","_getColumnByElement","eq","_moveFromCardFocus","currentIndex","focusCard","seekFocusableCard","_getFocusableCard","focus","lastIndex","focusable","TaskBoardBaseCardCommand","_updateOrder","taskBoardOptions","dataOrderField","currentCard","cardIndex","idx","prevCard","nextCard","SelectCardCommand","SaveChangesCommand","receivedStatus","dataStatusField","targetColumn","_getColumn","activeElm","document","activeElement","pane","form","validate","then","DeleteCardCommand","deleteCardConfirm","fail","MoveCardCommand","EditCardCommand","_openPane","AddCardCommand","OpenPaneCommand","ClosePaneCommand","_closePane","SearchCommand","searchOptions","operator","fields","filters","_buildFilters","logic","Command","commands","Form","TaskBoardPaneStyles","preview","footerActions","footerActionButtons","footerButton","baseButton","primaryButton","TaskBoardPane","_commandClick","buttonTemplate","contentTemplate","primary","delete","saveChanges","create","buttonsContainer","_renderContent","_buildButtonsHtml","_buildHeaderTemplate","TaskBoardPreviewPane","previewPane","_contentTemplate","TaskBoardEditPane","formSettings","label","buttonsTemplate","formLabelId","formData","TaskBoardCreatePane","columnStatusField","firstColumn","at","status","add","createNewCard","Pane","panes","Preview","Edit","Create","KEYDOWN","Keyboard","register","registerShortcut","selector","shortcut","isNaN","toUpperCase","charCodeAt","ctrlKey","shiftKey","altKey","handler","_handler","shortcuts","_getAction","_trigger","_compareShortcut","_getShortcutModifier","mac","navigator","platform","indexOf","metaKey","KeyboardManager","__meta__","category","description","depends","TaskBoardStyles","wrapper","columnsContainer","selected","Widget","DataSource","isArray","Array","GENERIC","SELECT","EXECUTE","ERROR","DATABINDING","DATABOUND","EDIT_CARD","SAVE_CARD","DELETE_CARD","EDIT_COLUMN","SAVE_COLUMN","DELETE_COLUMN","COLUMNSDATABINDING","COLUMNSDATABOUND","TaskBoard","_sortableIdentifier","_wrapper","_columnsDataSource","_initResources","_dataSource","_initToolbar","_initCardMenu","_initKeyboard","autoBind","load","notify","reorderable","previewCard","close","_columns","merge","itemsByStatus","itemsByColumn","columnElm","fetchPromises","_progress","fetch","when","apply","read","cardElm","getByUid","columnDataItem","columnByStatus","select","toggle","removeClass","_extendExecArgs","saveCard","_buildStates","model","_createNewModel","insert","before","executeCommand","saveColumn","keyboardManager","enable","readOnly","readOnlyByColumn","setDataSource","setColumnsDataSource","_renderCards","focusableElement","after","outerWidth","parseInt","ESC","headerElm","contentElm","colsContainer","toolbarElm","toolbarOptions","isEditable","_isEditable","_isReorderable","_isSelectable","isReadOnly","isSearchable","_isSearchable","notLocalColumns","transport","LocalTransport","support","commandName","commandOptions","console","warn","draggableEvent","cardDataItem","elm","ns","sort","dir","schema","defaultValue","_columnsChangeHandler","_columnsErrorHandler","_columnsDataSourceChange","_error","statusField","_moveEnd","_moveStart","_changeOrder","_tabindex","_changeHandler","_errorHandler","_clearColumns","_renderCard","cardMenuOptions","showOn","alignToAnchor","_addResource","_resourceDataSource","resourceDS","dataSourceInstance","progress","_registerShortcuts","DELETE","UP","DOWN","LEFT","RIGHT","closePane","plugin"],"mappings":"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"}