{"version":3,"file":"kendo.window.min.js","sources":["kendo.window.js"],"sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function(f, define){\n    define('kendo.window',[ \"./kendo.draganddrop\", \"./kendo.popup\"], f);\n})(function(){\n\n    var __meta__ = { // jshint ignore:line\n        id: \"window\",\n        name: \"Window\",\n        category: \"web\",\n        description: \"The Window widget displays content in a modal or non-modal HTML window.\",\n        depends: [ \"draganddrop\", \"popup\" ],\n        features: [ {\n            id: \"window-fx\",\n            name: \"Animation\",\n            description: \"Support for animation\",\n            depends: [ \"fx\" ]\n        } ]\n    };\n\n    (function($, undefined) {\n        var kendo = window.kendo,\n            Widget = kendo.ui.Widget,\n            TabKeyTrap = kendo.ui.Popup.TabKeyTrap,\n            Draggable = kendo.ui.Draggable,\n            isPlainObject = $.isPlainObject,\n            activeElement = kendo._activeElement,\n            outerWidth = kendo._outerWidth,\n            outerHeight = kendo._outerHeight,\n            proxy = $.proxy,\n            extend = $.extend,\n            each = $.each,\n            template = kendo.template,\n            BODY = \"body\",\n            templates,\n            NS = \".kendoWindow\",\n            MODAL_NS = \".kendoWindowModal\",\n            // classNames\n            KWINDOW = \".k-window\",\n            KWINDOWTITLE = \".k-window-title\",\n            KWINDOWTITLEBAR = KWINDOWTITLE + \"bar\",\n            KWINDOWCONTENT = \".k-window-content\",\n            KDIALOGCONTENT = \".k-dialog-content\",\n            KWINDOWRESIZEHANDLES = \".k-resize-handle\",\n            KOVERLAY = \".k-overlay\",\n            KCONTENTFRAME = \"k-content-frame\",\n            LOADING = \"k-i-loading\",\n            KHOVERSTATE = \"k-hover\",\n            KFOCUSEDSTATE = \"k-state-focused\",\n            MAXIMIZEDSTATE = \"k-window-maximized\",\n            INLINE_FLEX = \"k-display-inline-flex\",\n            // constants\n            VISIBLE = \":visible\",\n            HIDDEN = \"hidden\",\n            CURSOR = \"cursor\",\n            // events\n            OPEN = \"open\",\n            ACTIVATE = \"activate\",\n            DEACTIVATE = \"deactivate\",\n            CLOSE = \"close\",\n            REFRESH = \"refresh\",\n            MINIMIZE = \"minimize\",\n            MAXIMIZE = \"maximize\",\n            RESIZESTART = \"resizeStart\",\n            RESIZE = \"resize\",\n            RESIZEEND = \"resizeEnd\",\n            DRAGSTART = \"dragstart\",\n            DRAGEND = \"dragend\",\n            RESTORE = \"restore\",\n            KENDOKEYDOWN = \"kendoKeydown\",\n            ERROR = \"error\",\n            OVERFLOW = \"overflow\",\n            DATADOCOVERFLOWRULE = \"original-overflow-rule\",\n            ZINDEX = \"zIndex\",\n            MINIMIZE_MAXIMIZE = \".k-window-actions .k-i-window-minimize,.k-window-actions .k-i-window-maximize\",\n            KPIN = \".k-i-pin\",\n            KUNPIN = \".k-i-unpin\",\n            PIN_UNPIN = KPIN + \",\" + KUNPIN,\n            TITLEBAR_BUTTONS = \".k-window-titlebar .k-window-action\",\n            REFRESHICON = \".k-window-titlebar .k-i-refresh\",\n            WINDOWEVENTSHANDLED = \"WindowEventsHandled\",\n            zero = /^0[a-z]*$/i,\n            isLocalUrl = kendo.isLocalUrl,\n            SIZE = {\n                small: \"k-window-sm\",\n                medium: \"k-window-md\",\n                large: \"k-window-lg\"\n            };\n\n        function defined(x) {\n            return (typeof x != \"undefined\");\n        }\n\n        function toInt(element, property) {\n            return parseInt(element.css(property), 10) || 0;\n        }\n\n        function constrain(value, low, high) {\n            var normalizedValue;\n\n            if (value && isNaN(value) && value.toString().indexOf(\"px\") < 0) {\n                normalizedValue = value;\n            } else {\n                normalizedValue = Math.max(\n                    Math.min(parseInt(value, 10), high === Infinity ? high : parseInt(high, 10)),\n                    low === -Infinity ? low : parseInt(low, 10)\n                );\n            }\n\n            return normalizedValue;\n        }\n\n        function executableScript() {\n            return !this.type || this.type.toLowerCase().indexOf(\"script\") >= 0;\n        }\n\n\n        function getPosition(elem) {\n            var result = { top: elem.offsetTop, left: elem.offsetLeft },\n                parent = elem.offsetParent;\n\n            while (parent) {\n                result.top += parent.offsetTop;\n                result.left += parent.offsetLeft;\n\n                var parentOverflowX = $(parent).css(\"overflowX\");\n                var parentOverflowY = $(parent).css(\"overflowY\");\n\n                if (parentOverflowY === \"auto\" || parentOverflowY === \"scroll\") {\n                    result.top -= parent.scrollTop;\n                }\n\n                if (parentOverflowX === \"auto\" || parentOverflowX === \"scroll\") {\n                    result.left -= parent.scrollLeft;\n                }\n\n                parent = parent.offsetParent;\n            }\n\n            return result;\n        }\n\n        var Window = Widget.extend({\n            init: function(element, options) {\n                var that = this,\n                    wrapper,\n                    offset = {},\n                    visibility, display, position,\n                    isVisible = false,\n                    content,\n                    windowContent,\n                    windowFrame,\n                    globalWindow,\n                    suppressActions = options && options.actions && !options.actions.length,\n                    id;\n\n                Widget.fn.init.call(that, element, options);\n                options = that.options;\n                position = options.position;\n                element = that.element;\n                content = options.content;\n                globalWindow = $(window);\n\n                if (suppressActions) {\n                    options.actions = [];\n                }\n\n                that.appendTo = $(options.appendTo);\n\n                that.containment = options.draggable.containment ? $(options.draggable.containment).first() : null;\n\n                if (content && !isPlainObject(content)) {\n                    content = options.content = { url: content };\n                }\n\n                // remove script blocks to prevent double-execution\n                element.find(\"script\").filter(executableScript).remove();\n\n                if (!element.parent().is(that.appendTo) && !that.containment && (position.top === undefined || position.left === undefined)) {\n                    if (element.is(VISIBLE)) {\n                        offset = element.offset();\n                        isVisible = true;\n                    } else {\n                        visibility = element.css(\"visibility\");\n                        display = element.css(\"display\");\n\n                        element.css({ visibility: HIDDEN, display: \"\" });\n\n                        if (document.body.contains(element[0])) {\n                            offset = element.offset();\n                        } else {\n                            offset = { top: 0, left: 0 };\n                        }\n\n                        element.css({ visibility: visibility, display: display });\n                    }\n\n                    if (position.top === undefined) {\n                        position.top = offset.top;\n                    }\n                    if (position.left === undefined) {\n                        position.left = offset.left;\n                    }\n                }\n\n                if (!defined(options.visible) || options.visible === null) {\n                    options.visible = element.is(VISIBLE);\n                }\n\n                wrapper = that.wrapper = element.closest(KWINDOW);\n\n                if (!element.is(\".k-window-content\") || !wrapper[0]) {\n                    element.addClass(\"k-window-content\");\n                    that._createWindow(element, options);\n                    wrapper = that.wrapper = element.closest(KWINDOW);\n\n                    that.title(that.options.title);\n                    that._dimensions();\n                }\n\n                that.minTop = that.minLeft = -Infinity;\n                that.maxTop = that.maxLeft = Infinity;\n                that._position();\n\n                if (content) {\n                    that.refresh(content);\n                }\n\n                if (options.visible) {\n                    that.toFront(null, !options.modal);\n                }\n\n                windowContent = wrapper.children(KWINDOWCONTENT);\n\n                if (options.visible && options.modal) {\n                    that._overlay(wrapper.is(VISIBLE)).css({ opacity: 0.5 });\n                }\n\n                wrapper\n                    .on(\"mouseenter\" + NS, TITLEBAR_BUTTONS, proxy(that._buttonEnter, that))\n                    .on(\"mouseleave\" + NS, TITLEBAR_BUTTONS, proxy(that._buttonLeave, that))\n                    .on(\"click\" + NS, \"> \" + TITLEBAR_BUTTONS, proxy(that._windowActionHandler, that))\n                    .on(\"keydown\" + NS, that, proxy(that._keydown, that))\n                    .on(\"focus\" + NS, proxy(that._focus, that))\n                    .on(\"blur\" + NS, proxy(that._blur, that));\n\n                windowContent\n                    .on(\"keydown\" + NS, that, proxy(that._keydownContent, that));\n\n                windowFrame = windowContent.find(\".\" + KCONTENTFRAME)[0];\n\n                if(windowFrame && !globalWindow.data(WINDOWEVENTSHANDLED)){\n\n                    globalWindow.on(\"blur\" + NS, function(){\n                        var element = $(document.activeElement).parent(KWINDOWCONTENT);\n                        if (element.length) {\n                            var windowInstance = kendo.widgetInstance(element);\n                            windowInstance._focus();\n                        }\n                    });\n\n                    globalWindow.on(\"focus\" + NS, function(){\n                        $(KWINDOWCONTENT).not(KDIALOGCONTENT).each(function(i, element){\n                            kendo.widgetInstance($(element))._blur();\n                        });\n                    });\n\n                    globalWindow.data(WINDOWEVENTSHANDLED, true);\n                }\n\n                this._resizable();\n\n                this._draggable();\n\n                if (options.pinned && this.wrapper.is(\":visible\")) {\n                    that.pin();\n                }\n\n                id = element.attr(\"id\");\n                if (id) {\n                    id = id + \"_wnd_title\";\n                    wrapper.attr({\n                            \"role\": \"dialog\",\n                            \"aria-labelledby\": id\n                        }).children(KWINDOWTITLEBAR)\n                        .children(KWINDOWTITLE)\n                        .attr(\"id\", id);\n                }\n\n                wrapper.add(wrapper.children(\".k-resize-handle,\" + KWINDOWTITLEBAR))\n                    .on(kendo.support.mousedown + NS, proxy(that.toFront, that));\n\n                that.touchScroller = kendo.touchScroller(element);\n\n                that._resizeHandler = proxy(that._onDocumentResize, that);\n\n                that._marker = kendo.guid().substring(0, 8);\n\n                $(window).on(\"resize\" + NS + that._marker, that._resizeHandler);\n\n                if (options.visible) {\n                    that.trigger(OPEN);\n                    that.trigger(ACTIVATE);\n                }\n\n                kendo.notify(that);\n\n                if(this.options.modal) {\n                    this._tabKeyTrap = new TabKeyTrap(wrapper);\n                    this._tabKeyTrap.trap();\n                    this._tabKeyTrap.shouldTrap = function () {\n                        return wrapper.data(\"isFront\");\n                    };\n                }\n            },\n\n            _buttonEnter: function(e) {\n                $(e.currentTarget).addClass(KHOVERSTATE);\n            },\n\n            _buttonLeave: function(e) {\n                $(e.currentTarget).removeClass(KHOVERSTATE);\n            },\n\n            _focus: function() {\n                this.wrapper.addClass(KFOCUSEDSTATE);\n            },\n\n            _blur: function() {\n                this.wrapper.removeClass(KFOCUSEDSTATE);\n            },\n\n            _dimensions: function() {\n                var wrapper = this.wrapper;\n                var options = this.options;\n                var width = options.width;\n                var height = options.height;\n                var maxHeight = options.maxHeight;\n                var sizeClass = options.size;\n                var dimensions = [\"minWidth\",\"minHeight\",\"maxWidth\",\"maxHeight\"];\n                var contentBoxSizing = wrapper.css(\"box-sizing\") == \"content-box\";\n\n                var lrBorderWidth = contentBoxSizing ? toInt(wrapper, \"border-left-width\") + toInt(wrapper, \"border-right-width\") : 0;\n                var tbBorderWidth = contentBoxSizing ? toInt(wrapper, \"border-top-width\") + toInt(wrapper, \"border-bottom-width\") : 0;\n                var paddingTop = contentBoxSizing ? toInt(wrapper, \"padding-top\") : 0;\n\n                if (this.containment && !this._isPinned) {\n                    this._updateBoundaries();\n                    options.maxHeight = Math.min(this.containment.height - (tbBorderWidth + paddingTop), maxHeight);\n                    options.maxWidth = Math.min(this.containment.width - lrBorderWidth, options.maxWidth);\n                }\n\n                for (var i = 0; i < dimensions.length; i++) {\n                    var value = options[dimensions[i]] || \"\";\n                    if (value != Infinity) {\n                        wrapper.css(dimensions[i], value);\n                    }\n                }\n\n                if (maxHeight != Infinity) {\n                    this.element.css(\"maxHeight\", maxHeight);\n                }\n\n                if (width) {\n                    wrapper.outerWidth(constrain(width, options.minWidth, options.maxWidth));\n                }\n                else {\n                    wrapper.outerWidth(\"\");\n                }\n\n                if (height) {\n                    wrapper.outerHeight(constrain(height, options.minHeight, options.maxHeight));\n                }\n                else {\n                    wrapper.outerHeight(\"\");\n                }\n\n                if (!options.visible) {\n                    wrapper.removeClass(INLINE_FLEX).hide();\n                }\n\n                if (sizeClass && SIZE[sizeClass]) {\n                    wrapper.addClass(SIZE[sizeClass]);\n                }\n            },\n\n            _position: function() {\n                var wrapper = this.wrapper,\n                    position = this.options.position,\n                    containmentTop, containmentLeft;\n\n                this._updateBoundaries();\n\n                if (this.containment) {\n                    position.top = position.top || 0;\n                    position.left = position.left || 0;\n\n                    containmentTop = position.top.toString().indexOf(\"%\") > 0 ?\n                        parseInt(this.containment.height * (parseFloat(position.top) / 100), 10) :\n                        position.top;\n\n                    containmentLeft = position.left.toString().indexOf(\"%\") > 0 ?\n                        parseInt(this.containment.width * (parseFloat(position.left) / 100), 10) :\n                        position.left;\n\n                    position.top = constrain(containmentTop, this.minTop, this.maxTop);\n                    position.left = constrain(containmentLeft, this.minLeft, this.maxLeft);\n                }\n\n                if (position.top && position.top.toString().indexOf(\"px\") > 0) {\n                    position.top = Number(position.top.replace(\"px\", \"\"));\n                }\n\n                if (position.left && position.left.toString().indexOf(\"px\") > 0) {\n                    position.left = Number(position.left.replace(\"px\", \"\"));\n                }\n\n                if (position.top === 0) {\n                    position.top = position.top.toString();\n                }\n\n                if (position.left === 0) {\n                    position.left = position.left.toString();\n                }\n\n                wrapper.css({\n                    top: position.top || \"\",\n                    left: position.left || \"\"\n                });\n            },\n\n            _updateBoundaries: function() {\n                var containment = this.containment;\n\n                if (!containment) {\n                    return null;\n                }\n\n                containment.width = containment.innerWidth();\n                containment.height = containment.innerHeight();\n\n                if (parseInt(containment.width, 10) > containment[0].clientWidth) {\n                    containment.width -= kendo.support.scrollbar();\n                }\n\n                if (parseInt(containment.height, 10) > containment[0].clientHeight) {\n                    containment.height -= kendo.support.scrollbar();\n                }\n\n                containment.position = getPosition(containment[0]);\n\n                if (this._isPinned) {\n                    this.minTop = this.minLeft = -Infinity;\n                    this.maxTop = this.maxLeft = Infinity;\n                } else {\n                    this.minTop = containment.scrollTop();\n                    this.minLeft = containment.scrollLeft();\n                    this.maxLeft = this.minLeft + containment.width - outerWidth(this.wrapper, true);\n                    this.maxTop = this.minTop + containment.height - outerHeight(this.wrapper, true);\n                }\n            },\n\n            _animationOptions: function(id) {\n                var animation = this.options.animation;\n                var basicAnimation = {\n                    open: { effects: {} },\n                    close: { hide: true, effects: {} }\n                };\n\n                return animation && animation[id] || basicAnimation[id];\n            },\n\n            _resize: function() {\n                kendo.resize(this.element.children());\n            },\n\n            _resizable: function() {\n                var resizable = this.options.resizable;\n                var wrapper = this.wrapper;\n\n                if (this.resizing) {\n                    wrapper\n                        .off(\"dblclick\" + NS)\n                        .children(KWINDOWRESIZEHANDLES).remove();\n\n                    this.resizing.destroy();\n                    this.resizing = null;\n                }\n\n                if (resizable) {\n                    wrapper.on(\"dblclick\" + NS, KWINDOWTITLEBAR, proxy(function(e) {\n                        if (!$(e.target).closest(\".k-window-action\").length) {\n                            this.toggleMaximization();\n                        }\n                    }, this));\n\n                    each(\"n e s w se sw ne nw\".split(\" \"), function(index, handler) {\n                        wrapper.append(templates.resizeHandle(handler));\n                    });\n\n                    this.resizing = new WindowResizing(this);\n                }\n\n                wrapper = null;\n            },\n\n            _draggable: function() {\n                var draggable = this.options.draggable;\n\n                if (this.dragging) {\n                    this.dragging.destroy();\n                    this.dragging = null;\n                }\n                if (draggable) {\n                    this.dragging = new WindowDragging(this, draggable.dragHandle || KWINDOWTITLEBAR);\n                }\n            },\n\n            _actions: function() {\n                var options = this.options;\n                var actions = options.actions;\n                var pinned = options.pinned;\n                var titlebar = this.wrapper.children(KWINDOWTITLEBAR);\n                var container = titlebar.find(\".k-window-actions\");\n                var windowSpecificCommands = [ \"maximize\", \"minimize\" ];\n\n                actions = $.map(actions, function(action) {\n                    action = pinned && action.toLowerCase() === \"pin\" ? \"unpin\" : action;\n                    return { name: (windowSpecificCommands.indexOf(action.toLowerCase()) > - 1) ? \"window-\" + action : action };\n                });\n\n                container.html(kendo.render(templates.action, actions));\n            },\n\n            setOptions: function(options) {\n                var that = this;\n                var sizeClass = that.options.size;\n                var doc = this.containment && !that._isPinned ? this.containment : $(document);\n                // make a deep extend over options.position telerik/kendo-ui-core#844\n                var cachedOptions = JSON.parse(JSON.stringify(options));\n                extend(options.position, that.options.position);\n                extend(options.position, cachedOptions.position);\n\n                that._containerScrollTop = doc.scrollTop();\n                that._containerScrollLeft = doc.scrollLeft();\n\n                Widget.fn.setOptions.call(that, options);\n                var scrollable = that.options.scrollable !== false;\n\n                that.restore();\n\n                if (typeof options.title !== \"undefined\") {\n                    that.title(options.title);\n                }\n\n                that.wrapper.removeClass(SIZE[sizeClass]);\n                that._dimensions();\n\n                that._position();\n                that._resizable();\n                that._draggable();\n                that._actions();\n                if (typeof options.modal !== \"undefined\") {\n                    var visible = that.options.visible !== false;\n                    that._enableDocumentScrolling();\n                    that._overlay(options.modal && visible);\n                }\n\n                that.element.css(OVERFLOW, scrollable ? \"\" : \"hidden\");\n            },\n\n            events:[\n                OPEN,\n                ACTIVATE,\n                DEACTIVATE,\n                CLOSE,\n                MINIMIZE,\n                MAXIMIZE,\n                REFRESH,\n                RESTORE,\n                RESIZESTART,\n                RESIZE,\n                RESIZEEND,\n                DRAGSTART,\n                DRAGEND,\n                KENDOKEYDOWN,\n                ERROR\n            ],\n\n            options: {\n                name: \"Window\",\n                animation: {\n                    open: {\n                        effects: { zoom: { direction: \"in\" }, fade: { direction: \"in\" } },\n                        duration: 350\n                    },\n                    close: {\n                        effects: { zoom: { direction: \"out\", properties: { scale: 0.7 } }, fade: { direction: \"out\" } },\n                        duration: 350,\n                        hide: true\n                    }\n                },\n                title: \"\",\n                actions: [\"Close\"],\n                autoFocus: true,\n                modal: false,\n                size: \"auto\",\n                resizable: true,\n                draggable: true,\n                minWidth: 90,\n                minHeight: 50,\n                maxWidth: Infinity,\n                maxHeight: Infinity,\n                pinned: false,\n                scrollable: true,\n                position: {},\n                content: null,\n                visible: null,\n                height: null,\n                width: null,\n                appendTo: \"body\",\n                isMaximized: false,\n                isMinimized: false\n            },\n\n            _closable: function() {\n                return $.inArray(\"close\", $.map(this.options.actions, function(x) { return x.toLowerCase(); })) > -1;\n            },\n\n            _keydownContent: function(e) {\n                var that = this,\n                    keys = kendo.keys,\n                    keyCode = e.keyCode;\n\n                if (keyCode == keys.ESC && that._closable()) {\n                    e.stopPropagation();\n                    that._close(false);\n                }\n            },\n\n            _keydown: function(e) {\n                var that = this,\n                    options = that.options,\n                    keys = kendo.keys,\n                    keyCode = e.keyCode,\n                    wrapper = that.wrapper,\n                    offset, handled,\n                    distance = 10,\n                    isMaximized = options.isMaximized,\n                    isMinimized = options.isMinimized,\n                    newWidth, newHeight, w, h;\n\n                if (keyCode == keys.ESC && that._closable()) {\n                    e.stopPropagation();\n                    that._close(false);\n                }\n\n                if (e.target != e.currentTarget || that._closing) {\n                    return;\n                }\n\n                 // Refresh\n                if (e.altKey && keyCode == 82) {// Alt + R\n                    that.refresh();\n                }\n\n                // Pin/Unpin\n                if (e.altKey && keyCode == 80) {// Alt + P\n                    if(that.options.pinned){\n                        that.unpin();\n                    } else {\n                        that.pin();\n                    }\n                }\n\n                // Maximize/Restore/Miminimize\n                if(e.altKey && keyCode == keys.UP){\n                    if (isMinimized) {\n                        that.restore();\n                        that.wrapper.trigger(\"focus\");\n                    } else if (!isMaximized) {\n                        that.maximize();\n                        that.wrapper.trigger(\"focus\");\n                    }\n\n                } else if (e.altKey && keyCode == keys.DOWN){\n                    if (!isMinimized && !isMaximized) {\n                        that.minimize();\n                        that.wrapper.trigger(\"focus\");\n                    } else if (isMaximized) {\n                        that.restore();\n                    }\n\n                }\n\n                offset = kendo.getOffset(wrapper);\n\n                if (that.containment && !that._isPinned) {\n                    offset = that.options.position;\n                }\n\n                if (options.draggable && !e.ctrlKey && !e.altKey && !isMaximized) {\n                    that._updateBoundaries();\n                    if (keyCode == keys.UP) {\n                        offset.top = constrain(offset.top - distance, that.minTop, that.maxTop);\n                        handled = wrapper.css(\"top\", offset.top);\n                    } else if (keyCode == keys.DOWN) {\n                        offset.top = constrain(offset.top + distance, that.minTop, that.maxTop);\n                        handled = wrapper.css(\"top\", offset.top);\n                    } else if (keyCode == keys.LEFT) {\n                        offset.left = constrain(offset.left - distance, that.minLeft, that.maxLeft);\n                        handled = wrapper.css(\"left\", offset.left);\n                    } else if (keyCode == keys.RIGHT) {\n                        offset.left = constrain(offset.left + distance, that.minLeft, that.maxLeft);\n                        handled = wrapper.css(\"left\", offset.left);\n                    }\n                }\n\n                if (options.resizable && e.ctrlKey && !isMaximized && !isMinimized) {\n                    if (keyCode == keys.UP) {\n                        handled = true;\n                        newHeight = wrapper.outerHeight() - distance;\n                    } else if (keyCode == keys.DOWN) {\n                        handled = true;\n                        if (that.containment && !that._isPinned) {\n                            newHeight = Math.min(wrapper.outerHeight() + distance,\n                                that.containment.height - offset.top - toInt(wrapper, \"padding-top\") -\n                                toInt(wrapper, \"borderBottomWidth\") - toInt(wrapper, \"borderTopWidth\"));\n                        } else {\n                            newHeight = wrapper.outerHeight() + distance;\n                        }\n                    } if (keyCode == keys.LEFT) {\n                        handled = true;\n                        newWidth = wrapper.outerWidth() - distance;\n                    } else if (keyCode == keys.RIGHT) {\n                        handled = true;\n                        if (that.containment && !that._isPinned) {\n                            newWidth = Math.min(wrapper.outerWidth() + distance,\n                                                that.containment.width - offset.left -\n                                                toInt(wrapper, \"borderLeftWidth\") - toInt(wrapper, \"borderRightWidth\"));\n                        } else {\n                            newWidth = wrapper.outerWidth() + distance;\n                        }\n                    }\n\n                    if (handled) {\n                        w = constrain(newWidth, options.minWidth, options.maxWidth);\n                        h = constrain(newHeight, options.minHeight, options.maxHeight);\n\n                        if (!isNaN(w)) {\n                            wrapper.outerWidth(w);\n                            that.options.width = w + \"px\";\n                        }\n                        if (!isNaN(h)) {\n                            wrapper.outerHeight(h);\n                            that.options.height = h + \"px\";\n                        }\n\n                        that.resize();\n                    }\n                }\n\n                if (handled) {\n                    e.preventDefault();\n                }\n            },\n\n            _overlay: function (visible) {\n                var overlay = this.containment ? this.containment.children(KOVERLAY) : this.appendTo.children(KOVERLAY),\n                    wrapper = this.wrapper,\n                    display = visible ? \"block\" : \"none\",\n                    zIndex = parseInt(wrapper.css(ZINDEX), 10) - 1;\n\n                if (!overlay.length) {\n                    overlay = $(\"<div class='k-overlay' />\");\n                }\n\n                overlay\n                    .insertBefore(wrapper[0])\n                    .css({\n                        zIndex: zIndex,\n                        display: display\n                    });\n\n                if (this.options.modal.preventScroll && !this.containment) {\n                    this._stopDocumentScrolling();\n                }\n\n                return overlay;\n            },\n\n            _actionForIcon: function(icon) {\n                var iconClass = /\\bk-i(-\\w+)+\\b/.exec(icon[0].className)[0];\n                return {\n                    \"k-i-close\": \"_close\",\n                    \"k-i-window-maximize\": \"maximize\",\n                    \"k-i-window-minimize\": \"minimize\",\n                    \"k-i-window-restore\": \"restore\",\n                    \"k-i-refresh\": \"refresh\",\n                    \"k-i-pin\": \"pin\",\n                    \"k-i-unpin\": \"unpin\"\n                }[iconClass];\n            },\n\n            _windowActionHandler: function (e) {\n                if (this._closing) {\n                    return;\n                }\n                var icon = $(e.target).closest(\".k-window-action\").find(\".k-icon\");\n                var action = this._actionForIcon(icon);\n\n                if (action) {\n                    e.preventDefault();\n                    this[action]();\n                    return false;\n                }\n            },\n\n            _modals: function() {\n                var that = this,\n                    windowElements = $(KWINDOW + VISIBLE),\n                    windowInstance,\n                    modals = [];\n\n                for (var i = 0; i < windowElements.length; i += 1) {\n                    windowInstance = that._object($(windowElements[i]));\n\n                    if (windowInstance &&\n                        windowInstance.options &&\n                        windowInstance.options.modal &&\n                        windowInstance.options.visible &&\n                        windowInstance.options.appendTo === that.options.appendTo &&\n                        (!windowInstance.containment || (that.containment && windowInstance.containment[0] === that.containment[0]))) {\n                            modals.push(windowInstance.wrapper[0]);\n                    }\n                }\n\n                modals.sort(function(a, b) {\n                    return a.style.zIndex - b.style.zIndex;\n                });\n\n                that = null;\n\n                return $(modals);\n            },\n\n            _object: function(element) {\n                var content = element.children(KWINDOWCONTENT);\n                var widget = kendo.widgetInstance(content);\n\n                if (widget) {\n                    return widget;\n                }\n\n                return undefined;\n            },\n\n            center: function () {\n                var that = this,\n                    position = that.options.position,\n                    wrapper = that.wrapper,\n                    documentWindow = $(window),\n                    scrollTop = 0,\n                    scrollLeft = 0,\n                    newTop, newLeft;\n\n                if (that.options.isMaximized) {\n                    return that;\n                }\n\n                if(that.options.pinned && !that._isPinned) {\n                    that.pin();\n                }\n\n                if (!that.options.pinned) {\n                    scrollTop = documentWindow.scrollTop();\n                    scrollLeft = documentWindow.scrollLeft();\n                }\n\n                if (this.containment && !that.options.pinned) {\n                    newTop = this.minTop + (this.maxTop - this.minTop) / 2;\n                    newLeft = this.minLeft + (this.maxLeft - this.minLeft) / 2;\n                } else {\n                    that._scrollIsAppended = true;\n                    newLeft = scrollLeft + Math.max(0, (documentWindow.width() - wrapper.outerWidth()) / 2);\n                    newTop = scrollTop + Math.max(0, (documentWindow.height() - wrapper.outerHeight() - toInt(wrapper, \"paddingTop\")) / 2);\n                }\n\n                wrapper.css({\n                    left: newLeft,\n                    top: newTop\n                });\n\n                position.top = newTop;\n                position.left = newLeft;\n\n                return that;\n            },\n\n            title: function (title) {\n                var that = this,\n                    value,\n                    encoded = true,\n                    wrapper = that.wrapper,\n                    titleBar = wrapper.children(KWINDOWTITLEBAR),\n                    titleElement = titleBar.children(KWINDOWTITLE);\n\n                if (!arguments.length) {\n                    return titleElement.html();\n                }\n\n                if ($.isPlainObject(title)) {\n                    value = typeof title.text !== \"undefined\" ? title.text :  \"\";\n                    encoded = title.encoded !== false;\n                } else {\n                    value = title;\n                }\n\n                if (value === false) {\n                    wrapper.addClass(\"k-window-titleless\");\n                    wrapper.css(\"padding-top\", 0);\n                    titleBar.remove();\n                } else {\n                    if (!titleBar.length) {\n                        wrapper.prepend(templates.titlebar({\n                            title: encoded ? kendo.htmlEncode(value) : value\n                        }));\n                        that._actions();\n                        titleBar = wrapper.children(KWINDOWTITLEBAR);\n                    } else {\n                        titleElement.html(encoded ? kendo.htmlEncode(value) : value);\n                    }\n                }\n\n                that.options.title = value;\n\n                return that;\n            },\n\n            content: function (html, data) {\n                var content = this.wrapper.children(KWINDOWCONTENT),\n                    scrollContainer = content.children(\".km-scroll-container\");\n\n                content = scrollContainer[0] ? scrollContainer : content;\n\n                if (!defined(html)) {\n                    return content.html();\n                }\n\n                this.angular(\"cleanup\", function(){\n                    return { elements: content.children() };\n                });\n\n                kendo.destroy(this.element.children());\n\n                content.empty().html(html);\n\n                this.angular(\"compile\", function(){\n                    var a = [];\n                    for (var i = content.length; --i >= 0;) {\n                        a.push({ dataItem: data });\n                    }\n                    return {\n                        elements: content.children(),\n                        data: a\n                    };\n                });\n\n                return this;\n            },\n\n            open: function () {\n                var that = this,\n                    wrapper = that.wrapper,\n                    options = that.options,\n                    showOptions = this._animationOptions(\"open\"),\n                    contentElement = wrapper.children(KWINDOWCONTENT),\n                    overlay, otherModalsVisible,\n                    containmentContext = this.containment && !that._isPinned,\n                    doc = containmentContext ? this.containment : $(document);\n\n                if (!that.trigger(OPEN)) {\n                    if (that._closing) {\n                        wrapper.kendoStop(true, true);\n                    }\n\n                    that._closing = false;\n\n                    that.toFront();\n\n                    if (options.autoFocus) {\n                        that.wrapper.trigger(\"focus\");\n                    }\n\n                    options.visible = true;\n\n                    if (options.modal) {\n                        otherModalsVisible = !!that._modals().length;\n                        overlay = that._overlay(otherModalsVisible);\n\n                        overlay.kendoStop(true, true);\n\n                        if (showOptions.duration && kendo.effects.Fade && !otherModalsVisible) {\n                            var overlayFx = kendo.fx(overlay).fadeIn();\n                            overlayFx.duration(showOptions.duration || 0);\n                            overlayFx.endValue(0.5);\n                            overlayFx.play();\n                        } else {\n                            overlay.css(\"opacity\", 0.5);\n                        }\n\n                        overlay.show();\n\n                        $(window).on(\"focus\" + MODAL_NS, function() {\n                            if (wrapper.data(\"isFront\") && !$(document.activeElement).closest(wrapper).length) {\n                               that.wrapper.trigger(\"focus\");\n                            }\n                        });\n                    }\n\n                    if (!wrapper.is(VISIBLE)) {\n                        contentElement.css(OVERFLOW, HIDDEN);\n\n                        that.wrapper.find(TITLEBAR_BUTTONS).addClass(\"k-button-flat\");\n\n                        wrapper.addClass(INLINE_FLEX).kendoStop().kendoAnimate({\n                            effects: showOptions.effects,\n                            duration: showOptions.duration,\n                            complete: proxy(this._activate, this)\n                        });\n                    }\n                }\n\n                if (options.isMaximized) {\n                    that._containerScrollTop = doc.scrollTop();\n                    that._containerScrollLeft = doc.scrollLeft();\n                    that._stopDocumentScrolling();\n                }\n\n                if(this.options.pinned && !this._isPinned){\n                    this.pin();\n                }\n\n                return that;\n            },\n\n            _activate: function() {\n                var scrollable = this.options.scrollable !== false;\n\n                if (this.options.autoFocus) {\n                    this.wrapper.trigger(\"focus\");\n                }\n\n                this.element.css(OVERFLOW, scrollable ? \"\" : \"hidden\");\n                kendo.resize(this.element.children());\n\n                this.trigger(ACTIVATE);\n            },\n\n            _removeOverlay: function(suppressAnimation) {\n                var modals = this._modals();\n                var options = this.options;\n                var hideOverlay = options.modal && !modals.length;\n                var hideOptions  = this._animationOptions(\"close\");\n\n                if (hideOverlay) {\n                    if (!suppressAnimation && hideOptions.duration && kendo.effects.Fade) {\n                        var overlayFx = kendo.fx(options.modal ? this._overlay(true) : $(undefined)).fadeOut();\n                        overlayFx.duration(hideOptions.duration || 0);\n                        overlayFx.startValue(0.5);\n                        overlayFx.play();\n                    } else {\n                        this._overlay(false).remove();\n                    }\n                    if (options.modal.preventScroll) {\n                        this._enableDocumentScrolling();\n                    }\n                } else if (modals.length) {\n                    this._object(modals.last())._overlay(true);\n\n                    if (options.modal.preventScroll) {\n                        this._stopDocumentScrolling();\n                    }\n                }\n            },\n\n            _close: function(systemTriggered) {\n                var that = this,\n                    wrapper = that.wrapper,\n                    options = that.options,\n                    showOptions = this._animationOptions(\"open\"),\n                    hideOptions  = this._animationOptions(\"close\"),\n                    containmentContext = this.containment && !that._isPinned,\n                    doc = containmentContext ? this.containment : $(document),\n                    defaultPrevented;\n\n                if (that._closing) {\n                    return;\n                }\n\n                defaultPrevented = that.trigger(CLOSE, { userTriggered: !systemTriggered });\n                that._closing = !defaultPrevented;\n\n                if (wrapper.is(VISIBLE) && !defaultPrevented) {\n                    options.visible = false;\n\n                    $(KWINDOW).each(function(i, element) {\n                        var contentElement = $(element).children(KWINDOWCONTENT);\n\n                        // Remove overlay set by toFront\n                        if (element != wrapper && contentElement.find(\"> .\" + KCONTENTFRAME).length > 0) {\n                            contentElement.children(KOVERLAY).remove();\n                        }\n                    });\n\n                    this._removeOverlay();\n\n                    // Prevent close animation from stopping\n                    that.wrapper.find(TITLEBAR_BUTTONS).removeClass(\"k-button-flat\");\n\n                    wrapper.kendoStop().kendoAnimate({\n                        effects: hideOptions.effects || showOptions.effects,\n                        reverse: hideOptions.reverse === true,\n                        duration: hideOptions.duration,\n                        complete: proxy(this._deactivate, this)\n                    });\n                    $(window).off(MODAL_NS);\n                }\n\n                if (that.options.isMaximized) {\n                    that._enableDocumentScrolling();\n                    if (that._containerScrollTop && that._containerScrollTop > 0) {\n                        doc.scrollTop(that._containerScrollTop);\n                    }\n                    if (that._containerScrollLeft && that._containerScrollLeft > 0) {\n                        doc.scrollLeft(that._containerScrollLeft);\n                    }\n                }\n\n                if (that.options.iframe) {\n                    that.wrapper.trigger(\"blur\");\n                }\n            },\n\n            _deactivate: function () {\n                var that = this;\n\n                that.wrapper\n                    .removeClass(INLINE_FLEX)\n                    .hide()\n                    .css(\"opacity\", \"\");\n\n                that.trigger(DEACTIVATE);\n\n                if (that.options.modal) {\n                    var lastModal = that._object(that._modals().last());\n                    if (lastModal) {\n                        lastModal.toFront();\n                    }\n                }\n            },\n\n            close: function () {\n                this._close(true);\n                return this;\n            },\n\n            _actionable: function(element) {\n                return $(element).is(TITLEBAR_BUTTONS + \",\" + TITLEBAR_BUTTONS + \" .k-icon, :input, a, .k-input, .k-icon, [role='gridcell']\");\n            },\n\n            _shouldFocus: function(target) {\n                var active = activeElement(),\n                    element = this.wrapper;\n\n                return this.options.autoFocus &&\n                    !$(active).is(element) &&\n                    !this._actionable(target) &&\n                    (!element.find(active).length || !element.find(target).length);\n            },\n\n            toFront: function (e, avoidFocus) {\n                var that = this,\n                    wrapper = that.wrapper,\n                    currentWindow = wrapper[0],\n                    containmentContext = that.containment && !that._isPinned,\n                    openAnimation = this._animationOptions(\"open\"),\n                    zIndex = +wrapper.css(ZINDEX),\n                    originalZIndex = zIndex,\n                    target = (e && e.target) || null;\n\n                $(KWINDOW).each(function(i, element) {\n                    var windowObject = $(element),\n                        zIndexNew = windowObject.css(ZINDEX),\n                        contentElement = windowObject.children(KWINDOWCONTENT);\n\n                    if (!isNaN(zIndexNew)) {\n                        zIndex = Math.max(+zIndexNew, zIndex);\n                    }\n\n                    wrapper.data(\"isFront\", element == currentWindow);\n                    // Add overlay to windows with iframes and lower z-index to prevent\n                    // trapping of events when resizing / dragging\n\n                    if (element != currentWindow &&\n                        contentElement.find(\".\" + KCONTENTFRAME).length &&\n                        !contentElement.find(KOVERLAY).length) {\n                        contentElement.append(templates.overlay);\n                    }\n                });\n\n                if (!wrapper[0].style.zIndex || originalZIndex < zIndex) {\n                    wrapper.css(ZINDEX, zIndex + 2);\n                }\n                that.element.find(\"> .k-overlay\").remove();\n\n                if (that._shouldFocus(target)) {\n                    if(!avoidFocus) {\n                        setTimeout(function() {\n                            that.wrapper.focus();\n                        }, openAnimation ? openAnimation.duration : 0);\n                    }\n\n                    var scrollTop = containmentContext ? that.containment.scrollTop() : $(window).scrollTop(),\n                        windowTop = parseInt(wrapper.position().top, 10);\n\n                    if (!that.options.pinned && windowTop > 0 && windowTop < scrollTop) {\n                        if (scrollTop > 0) {\n                            $(window).scrollTop(windowTop);\n                        } else {\n                            wrapper.css(\"top\", scrollTop);\n                        }\n                    }\n                }\n\n                wrapper = null;\n\n                return that;\n            },\n\n            toggleMaximization: function () {\n                if (this._closing) {\n                    return this;\n                }\n\n                return this[this.options.isMaximized ? \"restore\" : \"maximize\"]();\n            },\n\n            restore: function () {\n                var that = this;\n                var options = that.options;\n                var minHeight = options.minHeight;\n                var restoreOptions = that.restoreOptions;\n                var shouldRestrictTop;\n                var container = that.containment && !that._isPinned ? that.containment : $(document);\n\n                if (!options.isMaximized && !options.isMinimized) {\n                    return that;\n                }\n\n                if (minHeight && minHeight != Infinity) {\n                    that.wrapper.css(\"min-height\", minHeight);\n                }\n\n                if (restoreOptions && !options.isMaximized) {\n                    restoreOptions.height = constrain(restoreOptions.height, that.options.minHeight, that.options.maxHeight);\n\n                    shouldRestrictTop = options.position.top + parseInt(restoreOptions.height, 10) > that.maxTop;\n\n                    if (shouldRestrictTop) {\n                        options.position.top = constrain(options.position.top, that.minTop, that.maxTop - parseInt(restoreOptions.height, 10));\n\n                        extend(restoreOptions, {\n                            left: options.position.left,\n                            top: options.position.top\n                        });\n                    }\n                }\n\n                that.wrapper\n                    .css({\n                        position: options.pinned ? \"fixed\" : \"absolute\",\n                        left: restoreOptions.left,\n                        top: restoreOptions.top,\n                        width: restoreOptions.width,\n                        height: restoreOptions.height\n                    })\n                    .removeClass(MAXIMIZEDSTATE)\n                    .find(\".k-window-content,.k-resize-handle\").show().end()\n                    .find(\".k-window-titlebar .k-i-window-restore\").parent().remove().end().end()\n                    .find(MINIMIZE_MAXIMIZE).parent().show().end().end()\n                    .find(PIN_UNPIN).parent().show();\n\n                if (options.isMaximized) {\n                    that.wrapper.find(\".k-i-window-maximize\").parent().trigger(\"focus\");\n                } else if (options.isMinimized) {\n                    that.wrapper.find(\".k-i-window-minimize\").parent().trigger(\"focus\");\n                }\n\n                that.options.width = restoreOptions.width;\n                that.options.height = restoreOptions.height;\n\n                if (!that.options.modal.preventScroll) {\n                    that._enableDocumentScrolling();\n                }\n\n                if (that._containerScrollTop && that._containerScrollTop > 0) {\n                    container.scrollTop(that._containerScrollTop);\n                }\n                if (that._containerScrollLeft && that._containerScrollLeft > 0) {\n                    container.scrollLeft(that._containerScrollLeft);\n                }\n\n                options.isMaximized = options.isMinimized = false;\n\n                that.wrapper.removeAttr(\"aria-labelled-by\");\n\n                that.resize();\n\n                that.trigger(RESTORE);\n\n                return that;\n            },\n\n            _sizingAction: function(actionId, callback) {\n                var that = this,\n                    wrapper = that.wrapper,\n                    style = wrapper[0].style,\n                    options = that.options;\n\n                if (options.isMaximized || options.isMinimized) {\n                    return that;\n                }\n\n                that.restoreOptions = {\n                    width: style.width,\n                    height: style.height\n                };\n\n                wrapper\n                    .children(KWINDOWRESIZEHANDLES).hide().end()\n                    .children(KWINDOWTITLEBAR).find(MINIMIZE_MAXIMIZE).parent().hide()\n                    .eq(0).before(templates.action({ name: \"window-restore\" }));\n\n                callback.call(that);\n\n                that.wrapper.children(KWINDOWTITLEBAR).find(PIN_UNPIN).parent().toggle(actionId !== \"maximize\");\n\n                that.trigger(actionId);\n\n                wrapper.find(\".k-i-window-restore\").parent().trigger(\"focus\");\n\n                return that;\n            },\n\n            maximize: function() {\n                this._sizingAction(\"maximize\", function() {\n                    var that = this,\n                        wrapper = that.wrapper,\n                        containmentContext = this.containment && !that._isPinned,\n                        position = wrapper.position(),\n                        doc = $(document);\n\n                    extend(that.restoreOptions, {\n                        left: position.left + (containmentContext ? this.containment.scrollLeft() : 0),\n                        top: position.top + (containmentContext ? this.containment.scrollTop() : 0)\n                    });\n\n                    this._containerScrollTop = containmentContext ? this.containment.scrollTop() : doc.scrollTop();\n                    this._containerScrollLeft = containmentContext ? this.containment.scrollLeft() : doc.scrollLeft();\n\n                    that._stopDocumentScrolling();\n\n                    wrapper\n                        .css({\n                            top: containmentContext ? this.containment.scrollTop() : 0,\n                            left: containmentContext ? this.containment.scrollLeft() : 0,\n                            position: containmentContext ? \"absolute\" : \"fixed\"\n                        })\n                        .addClass(MAXIMIZEDSTATE);\n\n                    that.options.isMaximized = true;\n\n                    that._onDocumentResize();\n                });\n\n                return this;\n            },\n\n            _stopDocumentScrolling: function(){\n                var that = this;\n                var containment = that.containment;\n\n                if (containment && !that._isPinned) {\n                    that._storeOverflowRule(containment);\n                    containment.css(OVERFLOW, HIDDEN);\n                    that.wrapper.css({\n                        maxWidth: containment.innerWidth(),\n                        maxHeight: containment.innerHeight()\n                    });\n                    return;\n                }\n\n                var $body = $(\"body\");\n                that._storeOverflowRule($body);\n                $body.css(OVERFLOW, HIDDEN);\n\n                var $html = $(\"html\");\n                that._storeOverflowRule($html);\n                $html.css(OVERFLOW, HIDDEN);\n            },\n\n            _enableDocumentScrolling: function(){\n                var that = this;\n                var containment = that.containment;\n\n                if (containment && !that._isPinned) {\n                    that._restoreOverflowRule(containment);\n                    that.wrapper.css({\n                        maxWidth: containment.width,\n                        maxHeight: containment.height\n                    });\n                    return;\n                }\n\n                that._restoreOverflowRule($(document.body));\n                that._restoreOverflowRule($(\"html\"));\n            },\n\n            _storeOverflowRule: function($element){\n                if(this._isOverflowStored($element)){\n                    return;\n                }\n\n                var overflowRule = $element.get(0).style.overflow;\n\n                if(typeof overflowRule === \"string\"){\n                    $element.data(DATADOCOVERFLOWRULE, overflowRule);\n                }\n            },\n\n            _isOverflowStored: function ($element){\n                return typeof $element.data(DATADOCOVERFLOWRULE) === \"string\";\n            },\n\n            _restoreOverflowRule: function($element){\n                var overflowRule = $element.data(DATADOCOVERFLOWRULE);\n\n                if(overflowRule !== null && overflowRule !== undefined){\n                    $element.css(OVERFLOW, overflowRule);\n                    $element.removeData(DATADOCOVERFLOWRULE);\n                } else {\n                    $element.css(OVERFLOW, \"\");\n                }\n            },\n\n            isMaximized: function() {\n                return this.options.isMaximized;\n            },\n\n            minimize: function() {\n                this._sizingAction(\"minimize\", function() {\n                    var that = this;\n\n                    that.wrapper.css({\n                        height: \"\",\n                        minHeight: \"\"\n                    });\n\n                    that.element.hide();\n\n                    that.options.isMinimized = true;\n                });\n\n                this.wrapper.attr(\"aria-labelled-by\", this.element.attr(\"aria-labelled-by\"));\n\n                this._updateBoundaries();\n\n                return this;\n            },\n\n            isMinimized: function() {\n                return this.options.isMinimized;\n            },\n\n            pin: function() {\n                var that = this,\n                    win = $(window),\n                    wrapper = that.wrapper,\n                    options = that.options,\n                    position = options.position,\n                    top = this.containment ? getPosition(wrapper[0]).top + toInt(this.containment, \"borderTopWidth\") : toInt(wrapper, \"top\"),\n                    left = this.containment ? getPosition(wrapper[0]).left + toInt(this.containment, \"borderLeftWidth\") : toInt(wrapper, \"left\");\n\n                if (!that.options.isMaximized) {\n                    position.top = top;\n                    position.left = left;\n\n                    if (that._scrollIsAppended && (!this.containment || this.containment.css(\"position\") !== \"fixed\")) {\n\n                        position.top -= win.scrollTop();\n                        position.left -= win.scrollLeft();\n                        that._scrollIsAppended = false;\n                    }\n\n                    wrapper.css(extend(position, {position: \"fixed\"}));\n                    wrapper.children(KWINDOWTITLEBAR).find(KPIN).addClass(\"k-i-unpin\").removeClass(\"k-i-pin\");\n\n                    that._isPinned = true;\n                    that.options.pinned = true;\n\n                    if (this.containment) {\n                        options.maxWidth = options.maxHeight = Infinity;\n                        wrapper.css({\n                            maxWidth: \"\",\n                            maxHeight: \"\"\n                        });\n                    }\n                }\n            },\n\n            unpin: function() {\n                var that = this,\n                    win = $(window),\n                    wrapper = that.wrapper,\n                    options = that.options,\n                    position = that.options.position,\n                    containment = that.containment,\n                    top = parseInt(wrapper.css(\"top\"), 10) + win.scrollTop(),\n                    left = parseInt(wrapper.css(\"left\"), 10) + win.scrollLeft();\n\n                if (!that.options.isMaximized) {\n                    that._isPinned = false;\n                    that._scrollIsAppended = true;\n                    that.options.pinned = false;\n\n                    if (containment) {\n                        that._updateBoundaries();\n\n                        options.maxWidth = Math.min(containment.width, options.maxWidth);\n                        options.maxHeight = Math.min(containment.height - toInt(wrapper, \"padding-top\"), options.maxHeight);\n\n                        wrapper.css({\n                            maxWidth: options.maxWidth,\n                            maxHeight: options.maxHeight\n                        });\n\n                        if (top < containment.position.top) {\n                            top = that.minTop;\n                        } else if (top > containment.position.top + containment.height) {\n                            top = that.maxTop;\n                        } else {\n                            top = top + containment.scrollTop() - (containment.position.top + toInt(containment, \"border-top-width\"));\n                        }\n\n                        if (left < containment.position.left) {\n                            left = that.minLeft;\n                        } else if (left > containment.position.left + containment.width) {\n                            left = that.maxLeft;\n                        } else {\n                            left = left + containment.scrollLeft() - (containment.position.left + toInt(containment, \"border-left-width\"));\n                        }\n\n                    }\n\n                    position.top = constrain(top, that.minTop, that.maxTop);\n                    position.left = constrain(left, that.minLeft, that.maxLeft);\n\n                    wrapper.css(extend(position, {position: \"\"}));\n                    wrapper.children(KWINDOWTITLEBAR).find(KUNPIN).addClass(\"k-i-pin\").removeClass(\"k-i-unpin\");\n                }\n            },\n\n            _onDocumentResize: function () {\n                var that = this,\n                    wrapper = that.wrapper,\n                    wnd = $(window),\n                    zoomLevel = kendo.support.zoomLevel(),\n                    contentBoxSizing = wrapper.css(\"box-sizing\") == \"content-box\",\n                    w, h;\n\n                if (!that.options.isMaximized) {\n                    return;\n                }\n\n                var lrBorderWidth = contentBoxSizing ? toInt(wrapper, \"border-left-width\") + toInt(wrapper, \"border-right-width\") : 0;\n                var tbBorderWidth = contentBoxSizing ? toInt(wrapper, \"border-top-width\") + toInt(wrapper, \"border-bottom-width\") : 0;\n                var paddingTop = contentBoxSizing ? toInt(wrapper, \"padding-top\") : 0;\n\n                if (that.containment && !that._isPinned) {\n                    w = that.containment.innerWidth() - lrBorderWidth;\n                    h = that.containment.innerHeight() - (tbBorderWidth + paddingTop);\n                } else {\n                    w = wnd.width() / zoomLevel - lrBorderWidth;\n                    h = wnd.height() / zoomLevel - (tbBorderWidth + paddingTop);\n                }\n\n                wrapper.css({\n                    width: w,\n                    height: h\n                });\n                that.options.width = w;\n                that.options.height = h;\n\n                that.resize();\n            },\n\n            refresh: function (options) {\n                var that = this,\n                    initOptions = that.options,\n                    element = $(that.element),\n                    iframe,\n                    showIframe,\n                    url;\n\n                if (!isPlainObject(options)) {\n                    options = { url: options };\n                }\n\n                options = extend(initOptions.content, options);\n\n                showIframe = defined(initOptions.iframe) ? initOptions.iframe : options.iframe;\n\n                url = options.url;\n\n                if (url) {\n                    if (!defined(showIframe)) {\n                        showIframe = !isLocalUrl(url);\n                    }\n\n                    if (!showIframe) {\n                        // perform AJAX request\n                        that._ajaxRequest(options);\n                    } else {\n                        iframe = element.find(\".\" + KCONTENTFRAME)[0];\n\n                        if (iframe) {\n                            // refresh existing iframe\n                            iframe.src = url || iframe.src;\n                        } else {\n                            // render new iframe\n                            element.html(templates.contentFrame(extend({}, initOptions, { content: options })));\n                        }\n\n                        element.find(\".\" + KCONTENTFRAME)\n                            .off(\"load\" + NS)\n                            .on(\"load\" + NS, proxy(this._triggerRefresh, this));\n                    }\n                } else {\n                    if (options.template) {\n                        // refresh template\n                        that.content(template(options.template)({}));\n                    }\n\n                    that.trigger(REFRESH);\n                }\n\n                element.toggleClass(\"k-window-iframecontent\", !!showIframe);\n\n                return that;\n            },\n\n            _triggerRefresh: function() {\n                this.trigger(REFRESH);\n            },\n\n            _ajaxComplete: function() {\n                clearTimeout(this._loadingIconTimeout);\n                this.wrapper.find(REFRESHICON).removeClass(LOADING);\n            },\n\n            _ajaxError: function (xhr, status) {\n                this.trigger(ERROR, { status: status, xhr: xhr });\n            },\n\n            _ajaxSuccess: function (contentTemplate) {\n                return function (data) {\n                    var html = data;\n                    if (contentTemplate) {\n                        html = template(contentTemplate)(data || {});\n                    }\n\n                    this.content(html, data);\n                    this.element.prop(\"scrollTop\", 0);\n\n                    this.trigger(REFRESH);\n                };\n            },\n\n            _showLoading: function() {\n                this.wrapper.find(REFRESHICON).addClass(LOADING);\n            },\n\n            _ajaxRequest: function (options) {\n                this._loadingIconTimeout = setTimeout(proxy(this._showLoading, this), 100);\n\n                $.ajax(extend({\n                    type: \"GET\",\n                    dataType: \"html\",\n                    cache: false,\n                    error: proxy(this._ajaxError, this),\n                    complete: proxy(this._ajaxComplete, this),\n                    success: proxy(this._ajaxSuccess(options.template), this)\n                }, options));\n            },\n\n            _destroy: function() {\n                if (this.resizing) {\n                    this.resizing.destroy();\n                }\n\n                if (this.dragging) {\n                    this.dragging.destroy();\n                }\n\n                this.wrapper.off(NS)\n                    .children(KWINDOWCONTENT).off(NS).end()\n                    .find(\".k-resize-handle,.k-window-titlebar\").off(NS);\n\n                $(window).off(\"resize\" + NS + this._marker);\n                $(window).off(MODAL_NS);\n                $(window).off(NS);\n\n                clearTimeout(this._loadingIconTimeout);\n\n                Widget.fn.destroy.call(this);\n\n                this.unbind(undefined);\n\n                kendo.destroy(this.wrapper);\n            },\n\n            destroy: function() {\n                this._destroy();\n\n                if (this.options.modal) {\n                    this._removeOverlay(true);\n                }\n\n                this.wrapper.empty().remove();\n\n                this.wrapper = this.appendTo = this.element = $();\n            },\n\n            _createWindow: function() {\n                var contentHtml = this.element,\n                    options = this.options,\n                    iframeSrcAttributes,\n                    wrapper,\n                    isRtl = kendo.support.isRtl(contentHtml);\n\n                if (options.scrollable === false) {\n                    contentHtml.css(\"overflow\", \"hidden\");\n                }\n\n                wrapper = $(templates.wrapper(options));\n\n                // Collect the src attributes of all iframes and then set them to empty string.\n                // This seems to fix this IE9 \"feature\": http://msdn.microsoft.com/en-us/library/gg622929%28v=VS.85%29.aspx?ppud=4\n                iframeSrcAttributes = contentHtml.find(\"iframe:not(.k-content-frame)\").map(function() {\n                    var src = this.getAttribute(\"src\");\n                    this.src = \"\";\n                    return src;\n                });\n\n                // Make sure the wrapper is appended to the body only once. IE9+ will throw exceptions if you move iframes in DOM\n                wrapper\n                    .toggleClass(\"k-rtl\", isRtl)\n                    .attr(\"tabindex\", 0)\n                    .append(contentHtml)\n                    .find(\"iframe:not(.k-content-frame)\").each(function(index) {\n                    // Restore the src attribute of the iframes when they are part of the live DOM tree\n                    this.src = iframeSrcAttributes[index];\n                });\n\n                if (this.containment) {\n                    this.containment.prepend(wrapper);\n                } else if (this.appendTo) {\n                    wrapper.appendTo(this.appendTo);\n                }\n\n                wrapper.find(\".k-window-title\")\n                    .css(isRtl ? \"left\" : \"right\", outerWidth(wrapper.find(\".k-window-actions\")) + 10);\n\n                contentHtml.css(\"visibility\", \"\").show();\n\n                contentHtml.find(\"[data-role=editor]\").each(function() {\n                    var editor = $(this).data(\"kendoEditor\");\n\n                    if (editor) {\n                        editor.refresh();\n                    }\n                });\n\n                wrapper = contentHtml = null;\n            }\n        });\n\n        templates = {\n            wrapper: template(\"<div class='k-widget k-window'></div>\"),\n            action: template(\n                \"<a role='button' href='\\\\#' class='k-button k-button-md k-rounded-md k-button-flat k-button-flat-base k-icon-button k-window-action' aria-label='#= name #'>\" +\n                    \"<span class='k-button-icon k-icon k-i-#= name.toLowerCase() #'></span>\" +\n                \"</a>\"\n            ),\n            titlebar: template(\n                \"<div class='k-window-titlebar k-hstack'>\" +\n                    \"<span class='k-window-title'>#= title #</span>\" +\n                    \"<div class='k-window-actions k-hstack'></div>\" +\n                \"</div>\"\n            ),\n            overlay: \"<div class='k-overlay'></div>\",\n            contentFrame: template(\n                \"<iframe frameborder='0' title='#= title #' class='\" + KCONTENTFRAME + \"' \" +\n                \"src='#= content.url #'>\" +\n                \"This page requires frames in order to show content\" +\n                \"</iframe>\"\n            ),\n            resizeHandle: template(\"<div class='k-resize-handle k-resize-#= data #'></div>\")\n        };\n\n\n        function WindowResizing(wnd) {\n            var that = this;\n            that.owner = wnd;\n            that._preventDragging = false;\n            that._draggable = new Draggable(wnd.wrapper, {\n                filter: \">\" + KWINDOWRESIZEHANDLES,\n                group: wnd.wrapper.id + \"-resizing\",\n                dragstart: proxy(that.dragstart, that),\n                drag: proxy(that.drag, that),\n                dragend: proxy(that.dragend, that)\n            });\n\n            that._draggable.userEvents.bind(\"press\", proxy(that.addOverlay, that));\n            that._draggable.userEvents.bind(\"release\", proxy(that.removeOverlay, that));\n        }\n\n        WindowResizing.prototype = {\n            addOverlay: function () {\n                this.owner.wrapper.append(templates.overlay);\n            },\n            removeOverlay: function () {\n                this.owner.wrapper.find(KOVERLAY).remove();\n            },\n            dragstart: function (e) {\n                var that = this;\n                var wnd = that.owner;\n                var wrapper = wnd.wrapper;\n\n                that._preventDragging = wnd.trigger(RESIZESTART);\n                if (that._preventDragging) {\n                    return;\n                }\n\n                that.elementPadding = parseInt(wrapper.css(\"padding-top\"), 10);\n                that.initialPosition = kendo.getOffset(wrapper, \"position\");\n\n                that.resizeDirection = e.currentTarget.prop(\"className\").replace(\"k-resize-handle k-resize-\", \"\");\n\n                that.initialSize = {\n                    width: wrapper.outerWidth(),\n                    height: wrapper.outerHeight()\n                };\n\n                wnd._updateBoundaries();\n\n                that.containerOffset = wnd.containment ? wnd.containment.position : kendo.getOffset(wnd.appendTo);\n\n                var offsetParent = wrapper.offsetParent();\n\n                if (offsetParent.is(\"html\")) {\n                    that.containerOffset.top = that.containerOffset.left = 0;\n                } else {\n                    var marginTop = offsetParent.css(\"margin-top\");\n                    var marginLeft = offsetParent.css(\"margin-left\");\n                    var hasMargin = !zero.test(marginTop) || !zero.test(marginLeft);\n                    if (hasMargin) {\n                        var wrapperPosition = getPosition(wrapper[0]);\n                        var relativeElMarginLeft = wrapperPosition.left - that.containerOffset.left - that.initialPosition.left;\n                        var relativeElMarginTop = wrapperPosition.top - that.containerOffset.top - that.initialPosition.top;\n\n                        that._relativeElMarginLeft = relativeElMarginLeft > 1 ? relativeElMarginLeft : 0;\n                        that._relativeElMarginTop = relativeElMarginTop > 1 ? relativeElMarginTop : 0;\n\n                        that.initialPosition.left += that._relativeElMarginLeft;\n                        that.initialPosition.top += that._relativeElMarginTop;\n                    }\n                }\n\n                wrapper\n                    .children(KWINDOWRESIZEHANDLES).not(e.currentTarget).hide();\n\n                $(BODY).css(CURSOR, e.currentTarget.css(CURSOR));\n            },\n            drag: function (e) {\n                if (this._preventDragging) {\n                    return;\n                }\n                var that = this,\n                    wnd = that.owner,\n                    wrapper = wnd.wrapper,\n                    options = wnd.options,\n                    position = options.position,\n                    direction = that.resizeDirection,\n                    containerOffset = that.containerOffset,\n                    initialPosition = that.initialPosition,\n                    initialSize = that.initialSize,\n                    containmentContext = wnd.containment && !wnd._isPinned,\n                    rtl = kendo.support.isRtl(wnd.containment),\n                    leftRtlOffset = containmentContext && rtl && wnd.containment.innerWidth() > wnd.containment.width ? kendo.support.scrollbar() : 0,\n                    scrollOffset = containmentContext ? { top: wnd.containment.scrollTop(), left: wnd.containment.scrollLeft()} : { top: 0, left: 0},\n                    newWidth, newHeight,\n                    windowBottom, windowRight,\n                    x = Math.max(e.x.location, 0),\n                    y = Math.max(e.y.location, 0);\n\n                    if (direction.indexOf(\"e\") >= 0) {\n\n                        if (wnd.containment && x - initialSize.width >= wnd.maxLeft - scrollOffset.left + containerOffset.left + leftRtlOffset) {\n                            newWidth = wnd.maxLeft + leftRtlOffset - initialPosition.left + initialSize.width - scrollOffset.left;\n                        } else {\n                            newWidth = x - initialPosition.left - containerOffset.left;\n                        }\n\n                        wrapper.outerWidth(constrain(newWidth, options.minWidth, options.maxWidth));\n                    } else if (direction.indexOf(\"w\") >= 0) {\n                        windowRight = initialPosition.left + initialSize.width + containerOffset.left;\n                        newWidth = constrain(windowRight - x, options.minWidth, options.maxWidth);\n                        position.left = windowRight - newWidth - containerOffset.left - leftRtlOffset - (that._relativeElMarginLeft || 0) + scrollOffset.left;\n\n                        if (wnd.containment && position.left <= wnd.minLeft) {\n                            position.left = wnd.minLeft;\n                            newWidth = constrain(windowRight - leftRtlOffset - position.left - containerOffset.left + scrollOffset.left, options.minWidth, options.maxWidth);\n                        }\n\n                        wrapper.css({\n                            left: position.left,\n                            width: newWidth\n                        });\n                    }\n\n                    var newWindowTop = y;\n                    if (wnd.options.pinned) {\n                        newWindowTop -= $(window).scrollTop();\n                    }\n                    if (direction.indexOf(\"s\") >= 0) {\n                        newHeight = newWindowTop - initialPosition.top - that.elementPadding - containerOffset.top;\n\n                        if (newWindowTop - initialSize.height - that.elementPadding >= wnd.maxTop + containerOffset.top - scrollOffset.top) {\n                            newHeight = wnd.maxTop - initialPosition.top + initialSize.height - scrollOffset.top;\n                        }\n\n                        wrapper.outerHeight(constrain(newHeight, options.minHeight, options.maxHeight));\n                    } else if (direction.indexOf(\"n\") >= 0) {\n                        windowBottom = initialPosition.top + initialSize.height + containerOffset.top;\n                        newHeight = constrain(windowBottom - newWindowTop, options.minHeight, options.maxHeight);\n                        position.top = windowBottom - newHeight - containerOffset.top - (that._relativeElMarginTop || 0) + scrollOffset.top;\n\n                        if (position.top <= wnd.minTop && wnd.containment) {\n                            position.top = wnd.minTop;\n                            newHeight = constrain(windowBottom - position.top - containerOffset.top + scrollOffset.top, options.minHeight, options.maxHeight);\n                        }\n\n                        wrapper.css({\n                            top: position.top,\n                            height: newHeight\n                        });\n                    }\n\n                    if (newWidth) {\n                        wnd.options.width = newWidth + \"px\";\n                    }\n                    if (newHeight) {\n                        wnd.options.height = newHeight + \"px\";\n                    }\n\n                    wnd.resize();\n            },\n            dragend: function (e) {\n                if (this._preventDragging) {\n                    return;\n                }\n\n                var that = this,\n                    wnd = that.owner,\n                    wrapper = wnd.wrapper;\n\n                wrapper\n                    .children(KWINDOWRESIZEHANDLES).not(e.currentTarget).show();\n\n                $(BODY).css(CURSOR, \"\");\n\n                if (wnd.touchScroller) {\n                    wnd.touchScroller.reset();\n                }\n\n                if (e.keyCode == 27) {\n                    wrapper.css(that.initialPosition)\n                        .css(that.initialSize);\n                }\n\n                wnd.trigger(RESIZEEND);\n\n                return false;\n            },\n            destroy: function() {\n                if (this._draggable) {\n                    this._draggable.destroy();\n                }\n\n                this._draggable = this.owner = null;\n            }\n        };\n\n        function WindowDragging(wnd, dragHandle) {\n            var that = this;\n            that.owner = wnd;\n            that._preventDragging = false;\n            that._draggable = new Draggable(wnd.wrapper, {\n                filter: dragHandle,\n                group: wnd.wrapper.id + \"-moving\",\n                dragstart: proxy(that.dragstart, that),\n                drag: proxy(that.drag, that),\n                dragend: proxy(that.dragend, that),\n                dragcancel: proxy(that.dragcancel, that)\n            });\n\n            that._draggable.userEvents.stopPropagation = false;\n        }\n\n        WindowDragging.prototype = {\n            dragstart: function (e) {\n                var wnd = this.owner,\n                    draggable = wnd.options.draggable,\n                    element = wnd.element,\n                    actions = element.find(\".k-window-actions\"),\n                    containerOffset = kendo.getOffset(wnd.appendTo);\n\n                this._preventDragging = wnd.trigger(DRAGSTART) || !draggable;\n                if (this._preventDragging || wnd.isMaximized()) {\n                    return;\n                }\n\n                wnd.initialWindowPosition = kendo.getOffset(wnd.wrapper, \"position\");\n\n                wnd.initialPointerPosition = {\n                    left: wnd.options.position.left,\n                    top: wnd.options.position.top\n                };\n\n                wnd.startPosition = {\n                    left: e.x.client - wnd.initialWindowPosition.left,\n                    top: e.y.client - wnd.initialWindowPosition.top\n                };\n\n                wnd._updateBoundaries();\n                if (!wnd.containment) {\n                    if (actions.length > 0) {\n                        wnd.minLeft = outerWidth(actions) + parseInt(actions.css(\"right\"), 10) - outerWidth(element);\n                    } else {\n                        wnd.minLeft =  20 - outerWidth(element); // at least 20px remain visible\n                    }\n\n                    wnd.minLeft -= containerOffset.left;\n                    wnd.minTop = -containerOffset.top;\n                }\n\n                $(templates.overlay).appendTo(wnd.wrapper).css({ opacity: 0 });\n\n                wnd.wrapper.children(KWINDOWRESIZEHANDLES).hide();\n\n                $(BODY).css(CURSOR, e.currentTarget.css(CURSOR));\n            },\n\n            drag: function (e) {\n                var wnd = this.owner;\n                var position = wnd.options.position;\n                var axis = wnd.options.draggable.axis;\n                var left;\n                var top;\n\n                if (this._preventDragging || wnd.isMaximized()) {\n                    return;\n                }\n\n                if (!axis || axis.toLowerCase() === \"x\") {\n                    left = e.x.client - wnd.startPosition.left;\n\n                    if (wnd.containment && !wnd._isPinned) {\n                        left += wnd.containment.scrollLeft();\n                    }\n\n                    position.left = constrain(left, wnd.minLeft, wnd.maxLeft);\n                }\n\n                if (!axis || axis.toLowerCase() === \"y\") {\n                    top = e.y.client - wnd.startPosition.top;\n\n                    if (wnd.containment && !wnd._isPinned) {\n                        top += wnd.containment.scrollTop();\n                    }\n\n                    position.top = constrain(top, wnd.minTop, wnd.maxTop);\n                }\n\n                if (kendo.support.transforms) {\n                    $(wnd.wrapper).css(\n                        \"transform\", \"translate(\" +\n                        (position.left - wnd.initialPointerPosition.left) + \"px, \" +\n                        (position.top - wnd.initialPointerPosition.top) + \"px)\"\n                    );\n                } else {\n                    $(wnd.wrapper).css(position);\n                }\n\n            },\n\n            _finishDrag: function() {\n                var wnd = this.owner;\n\n                wnd.wrapper\n                    .children(KWINDOWRESIZEHANDLES).toggle(!wnd.options.isMinimized).end()\n                    .find(KOVERLAY).remove();\n\n                $(BODY).css(CURSOR, \"\");\n            },\n\n            dragcancel: function (e) {\n                if (this._preventDragging) {\n                    return;\n                }\n                this._finishDrag();\n\n                e.currentTarget.closest(KWINDOW).css(this.owner.initialWindowPosition);\n            },\n\n            dragend: function () {\n                var wnd = this.owner;\n\n                if (this._preventDragging || wnd.isMaximized()) {\n                    return;\n                }\n\n                $(wnd.wrapper)\n                    .css(wnd.options.position)\n                    .css(\"transform\", \"\");\n\n                this._finishDrag();\n\n                wnd.trigger(DRAGEND);\n\n                return false;\n            },\n            destroy: function() {\n                if (this._draggable) {\n                    this._draggable.destroy();\n                }\n\n                this._draggable = this.owner = null;\n            }\n        };\n\n        kendo.ui.plugin(Window);\n\n    })(window.kendo.jQuery);\n\n    return window.kendo;\n\n}, typeof define == 'function' && define.amd ? define : function(a1, a2, a3){ (a3 || a2)(); });\n\n"],"names":["define","__meta__","id","name","category","description","depends","features","$","window","kendo","jQuery","undefined","Widget","ui","TabKeyTrap","Popup","Draggable","isPlainObject","activeElement","_activeElement","outerWidth","_outerWidth","outerHeight","_outerHeight","proxy","extend","each","template","BODY","templates","NS","MODAL_NS","KWINDOW","KWINDOWTITLE","KWINDOWTITLEBAR","KWINDOWCONTENT","KDIALOGCONTENT","KWINDOWRESIZEHANDLES","KOVERLAY","KCONTENTFRAME","LOADING","KHOVERSTATE","KFOCUSEDSTATE","MAXIMIZEDSTATE","INLINE_FLEX","VISIBLE","HIDDEN","CURSOR","OPEN","ACTIVATE","DEACTIVATE","CLOSE","REFRESH","MINIMIZE","MAXIMIZE","RESIZESTART","RESIZE","RESIZEEND","DRAGSTART","DRAGEND","RESTORE","KENDOKEYDOWN","ERROR","OVERFLOW","DATADOCOVERFLOWRULE","ZINDEX","MINIMIZE_MAXIMIZE","KPIN","KUNPIN","PIN_UNPIN","TITLEBAR_BUTTONS","REFRESHICON","WINDOWEVENTSHANDLED","zero","isLocalUrl","SIZE","small","medium","large","defined","x","toInt","element","property","parseInt","css","constrain","value","low","high","normalizedValue","isNaN","toString","indexOf","Math","max","min","Infinity","executableScript","this","type","toLowerCase","getPosition","elem","result","top","offsetTop","left","offsetLeft","parent","offsetParent","parentOverflowX","parentOverflowY","scrollTop","scrollLeft","Window","init","options","that","wrapper","offset","visibility","display","position","isVisible","content","windowContent","windowFrame","globalWindow","suppressActions","actions","length","fn","call","appendTo","containment","draggable","first","url","find","filter","remove","is","document","body","contains","visible","closest","addClass","_createWindow","title","_dimensions","minTop","minLeft","maxTop","maxLeft","_position","refresh","toFront","modal","children","_overlay","opacity","on","_buttonEnter","_buttonLeave","_windowActionHandler","_keydown","_focus","_blur","_keydownContent","data","windowInstance","widgetInstance","not","i","_resizable","_draggable","pinned","pin","attr","role","aria-labelledby","add","support","mousedown","touchScroller","_resizeHandler","_onDocumentResize","_marker","guid","substring","trigger","notify","_tabKeyTrap","trap","shouldTrap","e","currentTarget","removeClass","width","height","maxHeight","sizeClass","size","dimensions","contentBoxSizing","lrBorderWidth","tbBorderWidth","paddingTop","_isPinned","_updateBoundaries","maxWidth","minWidth","minHeight","hide","containmentTop","containmentLeft","parseFloat","Number","replace","innerWidth","innerHeight","clientWidth","scrollbar","clientHeight","_animationOptions","animation","basicAnimation","open","effects","close","_resize","resize","resizable","resizing","off","destroy","target","toggleMaximization","split","index","handler","append","resizeHandle","WindowResizing","dragging","WindowDragging","dragHandle","_actions","titlebar","container","windowSpecificCommands","map","action","html","render","setOptions","doc","cachedOptions","JSON","parse","stringify","_containerScrollTop","_containerScrollLeft","scrollable","restore","_enableDocumentScrolling","events","zoom","direction","fade","duration","properties","scale","autoFocus","isMaximized","isMinimized","_closable","inArray","keys","keyCode","ESC","stopPropagation","_close","handled","distance","newWidth","newHeight","w","h","_closing","altKey","unpin","UP","maximize","DOWN","minimize","getOffset","ctrlKey","LEFT","RIGHT","preventDefault","overlay","zIndex","insertBefore","preventScroll","_stopDocumentScrolling","_actionForIcon","icon","iconClass","exec","className","k-i-close","k-i-window-maximize","k-i-window-minimize","k-i-window-restore","k-i-refresh","k-i-pin","k-i-unpin","_modals","windowElements","modals","_object","push","sort","a","b","style","widget","center","documentWindow","newTop","newLeft","_scrollIsAppended","encoded","titleBar","titleElement","arguments","text","prepend","htmlEncode","scrollContainer","angular","elements","empty","dataItem","showOptions","contentElement","otherModalsVisible","containmentContext","kendoStop","Fade","overlayFx","fx","fadeIn","endValue","play","show","kendoAnimate","complete","_activate","_removeOverlay","suppressAnimation","hideOverlay","hideOptions","fadeOut","startValue","last","systemTriggered","defaultPrevented","userTriggered","reverse","_deactivate","iframe","lastModal","_actionable","_shouldFocus","active","avoidFocus","currentWindow","openAnimation","originalZIndex","windowObject","zIndexNew","setTimeout","focus","windowTop","restoreOptions","shouldRestrictTop","end","removeAttr","_sizingAction","actionId","callback","eq","before","toggle","_storeOverflowRule","$body","$html","_restoreOverflowRule","$element","_isOverflowStored","overflowRule","get","overflow","removeData","win","wnd","zoomLevel","initOptions","showIframe","_ajaxRequest","src","contentFrame","_triggerRefresh","toggleClass","_ajaxComplete","clearTimeout","_loadingIconTimeout","_ajaxError","xhr","status","_ajaxSuccess","contentTemplate","prop","_showLoading","ajax","dataType","cache","error","success","_destroy","unbind","contentHtml","iframeSrcAttributes","isRtl","getAttribute","editor","owner","_preventDragging","group","dragstart","drag","dragend","userEvents","bind","addOverlay","removeOverlay","dragcancel","prototype","elementPadding","initialPosition","resizeDirection","initialSize","containerOffset","marginTop","marginLeft","hasMargin","test","wrapperPosition","relativeElMarginLeft","relativeElMarginTop","_relativeElMarginLeft","_relativeElMarginTop","rtl","leftRtlOffset","scrollOffset","windowBottom","windowRight","location","y","newWindowTop","reset","initialWindowPosition","initialPointerPosition","startPosition","client","axis","transforms","_finishDrag","plugin","amd","a1","a2","a3"],"mappings":"CAwBA,SAAaA,QACTA,OAAO,eAAe,CAAE,sBAAuB,iBAChD,WAEC,IAAIC,EAAW,CACXC,GAAI,SACJC,KAAM,SACNC,SAAU,MACVC,YAAa,0EACbC,QAAS,CAAE,cAAe,SAC1BC,SAAU,CAAE,CACRL,GAAI,YACJC,KAAM,YACNE,YAAa,wBACbC,QAAS,CAAE,SAITE,EAimEPC,OAAOC,MAAMC,OAjmEHC,OAAb,EACQF,EAAQD,OAAOC,MACfG,EAASH,EAAMI,GAAGD,OAClBE,EAAaL,EAAMI,GAAGE,MAAMD,WAC5BE,EAAYP,EAAMI,GAAGG,UACrBC,EAAgBV,EAAEU,cAClBC,EAAgBT,EAAMU,eACtBC,EAAaX,EAAMY,YACnBC,EAAcb,EAAMc,aACpBC,EAAQjB,EAAEiB,MACVC,EAASlB,EAAEkB,OACXC,EAAOnB,EAAEmB,KACTC,EAAWlB,EAAMkB,SACjBC,EAAO,OACPC,EACAC,EAAK,eACLC,EAAW,oBAEXC,EAAU,YACVC,EAAe,kBACfC,EAAkBD,EAAe,MACjCE,EAAiB,oBACjBC,EAAiB,oBACjBC,EAAuB,mBACvBC,EAAW,aACXC,EAAgB,kBAChBC,EAAU,cACVC,EAAc,UACdC,EAAgB,kBAChBC,EAAiB,qBACjBC,EAAc,wBAEdC,EAAU,WACVC,EAAS,SACTC,EAAS,SAETC,EAAO,OACPC,EAAW,WACXC,EAAa,aACbC,EAAQ,QACRC,EAAU,UACVC,EACAC,EACAC,EAAc,cACdC,EACAC,EAAY,YACZC,EAAY,YACZC,EAAU,UACVC,EAAU,UACVC,EACAC,EAAQ,QACRC,EAAW,WACXC,EAAsB,yBACtBC,GAAS,SACTC,GAAoB,gFACpBC,GAAO,WACPC,GAAS,aACTC,GAAYF,GAAO,IAAMC,GACzBE,GAAmB,sCACnBC,GAAc,kCACdC,GAAsB,sBACtBC,GAAO,aACPC,GAAajE,EAAMiE,WACnBC,GAAO,CACHC,MAAO,cACPC,OAAQ,cACRC,MAAO,eAGf,SAASC,GAAQC,GACb,cAAeA,GAAK,YAGxB,SAASC,EAAMC,EAASC,GACpB,OAAOC,SAASF,EAAQG,IAAIF,GAAW,KAAO,EAGlD,SAASG,EAAUC,EAAOC,EAAKC,GAC3B,IAAIC,EAEJ,GAAIH,GAASI,MAAMJ,IAAUA,EAAMK,WAAWC,QAAQ,MAAQ,EAC1DH,EAAkBH,OAElBG,EAAkBI,KAAKC,IACnBD,KAAKE,IAAIZ,SAASG,EAAO,IAAKE,IAASQ,SAAWR,EAAOL,SAASK,EAAM,KACxED,KAASS,SAAWT,EAAMJ,SAASI,EAAK,KAIhD,OAAOE,EAGX,SAASQ,KACL,OAAQC,KAAKC,MAAQD,KAAKC,KAAKC,cAAcR,QAAQ,WAAa,EAItE,SAASS,GAAYC,GACjB,IAAIC,EAAS,CAAEC,IAAKF,EAAKG,UAAWC,KAAMJ,EAAKK,YAC3CC,EAASN,EAAKO,aAElB,MAAOD,EAAQ,CACXL,EAAOC,KAAOI,EAAOH,UACrBF,EAAOG,MAAQE,EAAOD,WAEtB,IAAIG,EAAkBxG,EAAEsG,GAAQxB,IAAI,aACpC,IAAI2B,EAAkBzG,EAAEsG,GAAQxB,IAAI,aAEpC,GAAI2B,IAAoB,QAAUA,IAAoB,SAClDR,EAAOC,KAAOI,EAAOI,UAGzB,GAAIF,IAAoB,QAAUA,IAAoB,SAClDP,EAAOG,MAAQE,EAAOK,WAG1BL,EAASA,EAAOC,aAGpB,OAAON,EAGX,IAAIW,GAASvG,EAAOa,OAAO,CACvB2F,KAAM,SAASlC,EAASmC,GACpB,IAAIC,EAAOnB,KACPoB,EACAC,EAAS,GACTC,EAAYC,EAASC,EACrBC,EAAY,MACZC,EACAC,EACAC,EACAC,EACAC,EAAkBZ,GAAWA,EAAQa,UAAYb,EAAQa,QAAQC,OACjElI,EAEJW,EAAOwH,GAAGhB,KAAKiB,KAAKf,EAAMpC,EAASmC,GACnCA,EAAUC,EAAKD,QACfM,EAAWN,EAAQM,SACnBzC,EAAUoC,EAAKpC,QACf2C,EAAUR,EAAQQ,QAClBG,EAAezH,EAAEC,QAEjB,GAAIyH,EACAZ,EAAQa,QAAU,GAGtBZ,EAAKgB,SAAW/H,EAAE8G,EAAQiB,UAE1BhB,EAAKiB,YAAclB,EAAQmB,UAAUD,YAAchI,EAAE8G,EAAQmB,UAAUD,aAAaE,QAAU,KAE9F,GAAIZ,IAAY5G,EAAc4G,GAC1BA,EAAUR,EAAQQ,QAAU,CAAEa,IAAKb,GAIvC3C,EAAQyD,KAAK,UAAUC,OAAO1C,IAAkB2C,SAEhD,IAAK3D,EAAQ2B,SAASiC,GAAGxB,EAAKgB,YAAchB,EAAKiB,cAAgBZ,EAASlB,MAAQ9F,GAAagH,EAAShB,OAAShG,GAAY,CACzH,GAAIuE,EAAQ4D,GAAGjG,GAAU,CACrB2E,EAAStC,EAAQsC,SACjBI,EAAY,SACT,CACHH,EAAavC,EAAQG,IAAI,cACzBqC,EAAUxC,EAAQG,IAAI,WAEtBH,EAAQG,IAAI,CAAEoC,WAAY3E,EAAQ4E,QAAS,KAE3C,GAAIqB,SAASC,KAAKC,SAAS/D,EAAQ,IAC/BsC,EAAStC,EAAQsC,cAEjBA,EAAS,CAAEf,IAAK,EAAGE,KAAM,GAG7BzB,EAAQG,IAAI,CAAEoC,WAAYA,EAAYC,QAASA,IAGnD,GAAIC,EAASlB,MAAQ9F,EACjBgH,EAASlB,IAAMe,EAAOf,IAE1B,GAAIkB,EAAShB,OAAShG,EAClBgH,EAAShB,KAAOa,EAAOb,KAI/B,IAAK5B,GAAQsC,EAAQ6B,UAAY7B,EAAQ6B,UAAY,KACjD7B,EAAQ6B,QAAUhE,EAAQ4D,GAAGjG,GAGjC0E,EAAUD,EAAKC,QAAUrC,EAAQiE,QAAQnH,GAEzC,IAAKkD,EAAQ4D,GAAG,uBAAyBvB,EAAQ,GAAI,CACjDrC,EAAQkE,SAAS,oBACjB9B,EAAK+B,cAAcnE,EAASmC,GAC5BE,EAAUD,EAAKC,QAAUrC,EAAQiE,QAAQnH,GAEzCsF,EAAKgC,MAAMhC,EAAKD,QAAQiC,OACxBhC,EAAKiC,cAGTjC,EAAKkC,OAASlC,EAAKmC,SAAWxD,SAC9BqB,EAAKoC,OAASpC,EAAKqC,QAAU1D,SAC7BqB,EAAKsC,YAEL,GAAI/B,EACAP,EAAKuC,QAAQhC,GAGjB,GAAIR,EAAQ6B,QACR5B,EAAKwC,QAAQ,MAAOzC,EAAQ0C,OAGhCjC,EAAgBP,EAAQyC,SAAS7H,GAEjC,GAAIkF,EAAQ6B,SAAW7B,EAAQ0C,MAC3BzC,EAAK2C,SAAS1C,EAAQuB,GAAGjG,IAAUwC,IAAI,CAAE6E,QAAS,KAGtD3C,EACK4C,GAAG,aAAerI,EAAIwC,GAAkB9C,EAAM8F,EAAK8C,aAAc9C,IACjE6C,GAAG,aAAerI,EAAIwC,GAAkB9C,EAAM8F,EAAK+C,aAAc/C,IACjE6C,GAAG,QAAUrI,EAAI,KAAOwC,GAAkB9C,EAAM8F,EAAKgD,qBAAsBhD,IAC3E6C,GAAG,UAAYrI,EAAIwF,EAAM9F,EAAM8F,EAAKiD,SAAUjD,IAC9C6C,GAAG,QAAUrI,EAAIN,EAAM8F,EAAKkD,OAAQlD,IACpC6C,GAAG,OAASrI,EAAIN,EAAM8F,EAAKmD,MAAOnD,IAEvCQ,EACKqC,GAAG,UAAYrI,EAAIwF,EAAM9F,EAAM8F,EAAKoD,gBAAiBpD,IAE1DS,EAAcD,EAAca,KAAK,IAAMpG,GAAe,GAEtD,GAAGwF,IAAgBC,EAAa2C,KAAKnG,IAAqB,CAEtDwD,EAAamC,GAAG,OAASrI,EAAI,WACzB,IAAIoD,EAAU3E,EAAEwI,SAAS7H,eAAe2F,OAAO1E,GAC/C,GAAI+C,EAAQiD,OAAQ,CAChB,IAAIyC,EAAiBnK,EAAMoK,eAAe3F,GAC1C0F,EAAeJ,YAIvBxC,EAAamC,GAAG,QAAUrI,EAAI,WAC1BvB,EAAE4B,GAAgB2I,IAAI1I,GAAgBV,KAAK,SAASqJ,EAAG7F,GACnDzE,EAAMoK,eAAetK,EAAE2E,IAAUuF,YAIzCzC,EAAa2C,KAAKnG,GAAqB,MAG3C2B,KAAK6E,aAEL7E,KAAK8E,aAEL,GAAI5D,EAAQ6D,QAAU/E,KAAKoB,QAAQuB,GAAG,YAClCxB,EAAK6D,MAGTlL,EAAKiF,EAAQkG,KAAK,MAClB,GAAInL,EAAI,CACJA,EAAKA,EAAK,aACVsH,EAAQ6D,KAAK,CACLC,KAAQ,SACRC,kBAAmBrL,IACpB+J,SAAS9H,GACX8H,SAAS/H,GACTmJ,KAAK,KAAMnL,GAGpBsH,EAAQgE,IAAIhE,EAAQyC,SAAS,oBAAsB9H,IAC9CiI,GAAG1J,EAAM+K,QAAQC,UAAY3J,EAAIN,EAAM8F,EAAKwC,QAASxC,IAE1DA,EAAKoE,cAAgBjL,EAAMiL,cAAcxG,GAEzCoC,EAAKqE,eAAiBnK,EAAM8F,EAAKsE,kBAAmBtE,GAEpDA,EAAKuE,QAAUpL,EAAMqL,OAAOC,UAAU,EAAG,GAEzCxL,EAAEC,QAAQ2J,GAAG,SAAWrI,EAAKwF,EAAKuE,QAASvE,EAAKqE,gBAEhD,GAAItE,EAAQ6B,QAAS,CACjB5B,EAAK0E,QAAQhJ,GACbsE,EAAK0E,QAAQ/I,GAGjBxC,EAAMwL,OAAO3E,GAEb,GAAGnB,KAAKkB,QAAQ0C,MAAO,CACnB5D,KAAK+F,YAAc,IAAIpL,EAAWyG,GAClCpB,KAAK+F,YAAYC,OACjBhG,KAAK+F,YAAYE,WAAa,WAC1B,OAAO7E,EAAQoD,KAAK,cAKhCP,aAAc,SAASiC,GACnB9L,EAAE8L,EAAEC,eAAelD,SAAS3G,IAGhC4H,aAAc,SAASgC,GACnB9L,EAAE8L,EAAEC,eAAeC,YAAY9J,IAGnC+H,OAAQ,WACJrE,KAAKoB,QAAQ6B,SAAS1G,IAG1B+H,MAAO,WACHtE,KAAKoB,QAAQgF,YAAY7J,IAG7B6G,YAAa,WACT,IAAIhC,EAAUpB,KAAKoB,QACnB,IAAIF,EAAUlB,KAAKkB,QACnB,IAAImF,EAAQnF,EAAQmF,MACpB,IAAIC,EAASpF,EAAQoF,OACrB,IAAIC,EAAYrF,EAAQqF,UACxB,IAAIC,EAAYtF,EAAQuF,KACxB,IAAIC,EAAa,CAAC,WAAW,YAAY,WAAW,aACpD,IAAIC,EAAmBvF,EAAQlC,IAAI,eAAiB,cAEpD,IAAI0H,EAAgBD,EAAmB7H,EAAMsC,EAAS,qBAAuBtC,EAAMsC,EAAS,sBAAwB,EACpH,IAAIyF,EAAgBF,EAAmB7H,EAAMsC,EAAS,oBAAsBtC,EAAMsC,EAAS,uBAAyB,EACpH,IAAI0F,EAAaH,EAAmB7H,EAAMsC,EAAS,eAAiB,EAEpE,GAAIpB,KAAKoC,cAAgBpC,KAAK+G,UAAW,CACrC/G,KAAKgH,oBACL9F,EAAQqF,UAAY5G,KAAKE,IAAIG,KAAKoC,YAAYkE,QAAUO,EAAgBC,GAAaP,GACrFrF,EAAQ+F,SAAWtH,KAAKE,IAAIG,KAAKoC,YAAYiE,MAAQO,EAAe1F,EAAQ+F,UAGhF,IAAK,IAAIrC,EAAI,EAAGA,EAAI8B,EAAW1E,OAAQ4C,IAAK,CACxC,IAAIxF,EAAQ8B,EAAQwF,EAAW9B,KAAO,GACtC,GAAIxF,GAASU,SACTsB,EAAQlC,IAAIwH,EAAW9B,GAAIxF,GAInC,GAAImH,GAAazG,SACbE,KAAKjB,QAAQG,IAAI,YAAaqH,GAGlC,GAAIF,EACAjF,EAAQnG,WAAWkE,EAAUkH,EAAOnF,EAAQgG,SAAUhG,EAAQ+F,gBAG9D7F,EAAQnG,WAAW,IAGvB,GAAIqL,EACAlF,EAAQjG,YAAYgE,EAAUmH,EAAQpF,EAAQiG,UAAWjG,EAAQqF,iBAGjEnF,EAAQjG,YAAY,IAGxB,IAAK+F,EAAQ6B,QACT3B,EAAQgF,YAAY3J,GAAa2K,OAGrC,GAAIZ,GAAahI,GAAKgI,GAClBpF,EAAQ6B,SAASzE,GAAKgI,KAI9B/C,UAAW,WACP,IAAIrC,EAAUpB,KAAKoB,QACfI,EAAWxB,KAAKkB,QAAQM,SACxB6F,EAAgBC,EAEpBtH,KAAKgH,oBAEL,GAAIhH,KAAKoC,YAAa,CAClBZ,EAASlB,IAAMkB,EAASlB,KAAO,EAC/BkB,EAAShB,KAAOgB,EAAShB,MAAQ,EAEjC6G,EAAiB7F,EAASlB,IAAIb,WAAWC,QAAQ,KAAO,EACpDT,SAASe,KAAKoC,YAAYkE,QAAUiB,WAAW/F,EAASlB,KAAO,KAAM,IACrEkB,EAASlB,IAEbgH,EAAkB9F,EAAShB,KAAKf,WAAWC,QAAQ,KAAO,EACtDT,SAASe,KAAKoC,YAAYiE,OAASkB,WAAW/F,EAAShB,MAAQ,KAAM,IACrEgB,EAAShB,KAEbgB,EAASlB,IAAMnB,EAAUkI,EAAgBrH,KAAKqD,OAAQrD,KAAKuD,QAC3D/B,EAAShB,KAAOrB,EAAUmI,EAAiBtH,KAAKsD,QAAStD,KAAKwD,SAGlE,GAAIhC,EAASlB,KAAOkB,EAASlB,IAAIb,WAAWC,QAAQ,MAAQ,EACxD8B,EAASlB,IAAMkH,OAAOhG,EAASlB,IAAImH,QAAQ,KAAM,KAGrD,GAAIjG,EAAShB,MAAQgB,EAAShB,KAAKf,WAAWC,QAAQ,MAAQ,EAC1D8B,EAAShB,KAAOgH,OAAOhG,EAAShB,KAAKiH,QAAQ,KAAM,KAGvD,GAAIjG,EAASlB,MAAQ,EACjBkB,EAASlB,IAAMkB,EAASlB,IAAIb,WAGhC,GAAI+B,EAAShB,OAAS,EAClBgB,EAAShB,KAAOgB,EAAShB,KAAKf,WAGlC2B,EAAQlC,IAAI,CACRoB,IAAKkB,EAASlB,KAAO,GACrBE,KAAMgB,EAAShB,MAAQ,MAI/BwG,kBAAmB,WACf,IAAI5E,EAAcpC,KAAKoC,YAEvB,IAAKA,EACD,OAAO,KAGXA,EAAYiE,MAAQjE,EAAYsF,aAChCtF,EAAYkE,OAASlE,EAAYuF,cAEjC,GAAI1I,SAASmD,EAAYiE,MAAO,IAAMjE,EAAY,GAAGwF,YACjDxF,EAAYiE,OAAS/L,EAAM+K,QAAQwC,YAGvC,GAAI5I,SAASmD,EAAYkE,OAAQ,IAAMlE,EAAY,GAAG0F,aAClD1F,EAAYkE,QAAUhM,EAAM+K,QAAQwC,YAGxCzF,EAAYZ,SAAWrB,GAAYiC,EAAY,IAE/C,GAAIpC,KAAK+G,UAAW,CAChB/G,KAAKqD,OAASrD,KAAKsD,SAAWxD,SAC9BE,KAAKuD,OAASvD,KAAKwD,QAAU1D,aAC1B,CACHE,KAAKqD,OAASjB,EAAYtB,YAC1Bd,KAAKsD,QAAUlB,EAAYrB,aAC3Bf,KAAKwD,QAAUxD,KAAKsD,QAAUlB,EAAYiE,MAAQpL,EAAW+E,KAAKoB,QAAS,MAC3EpB,KAAKuD,OAASvD,KAAKqD,OAASjB,EAAYkE,OAASnL,EAAY6E,KAAKoB,QAAS,QAInF2G,kBAAmB,SAASjO,GACxB,IAAIkO,EAAYhI,KAAKkB,QAAQ8G,UAC7B,IAAIC,EAAiB,CACjBC,KAAM,CAAEC,QAAS,IACjBC,MAAO,CAAEhB,KAAM,KAAMe,QAAS,KAGlC,OAAOH,GAAaA,EAAUlO,IAAOmO,EAAenO,IAGxDuO,QAAS,WACL/N,EAAMgO,OAAOtI,KAAKjB,QAAQ8E,aAG9BgB,WAAY,WACR,IAAI0D,EAAYvI,KAAKkB,QAAQqH,UAC7B,IAAInH,EAAUpB,KAAKoB,QAEnB,GAAIpB,KAAKwI,SAAU,CACfpH,EACKqH,IAAI,WAAa9M,GACjBkI,SAAS3H,GAAsBwG,SAEpC1C,KAAKwI,SAASE,UACd1I,KAAKwI,SAAW,KAGpB,GAAID,EAAW,CACXnH,EAAQ4C,GAAG,WAAarI,EAAII,EAAiBV,EAAM,SAAS6K,GACxD,IAAK9L,EAAE8L,EAAEyC,QAAQ3F,QAAQ,oBAAoBhB,OACzChC,KAAK4I,sBAEV5I,OAEHzE,EAAK,sBAAsBsN,MAAM,KAAM,SAASC,EAAOC,GACnD3H,EAAQ4H,OAAOtN,EAAUuN,aAAaF,MAG1C/I,KAAKwI,SAAW,IAAIU,GAAelJ,MAGvCoB,EAAU,MAGd0D,WAAY,WACR,IAAIzC,EAAYrC,KAAKkB,QAAQmB,UAE7B,GAAIrC,KAAKmJ,SAAU,CACfnJ,KAAKmJ,SAAST,UACd1I,KAAKmJ,SAAW,KAEpB,GAAI9G,EACArC,KAAKmJ,SAAW,IAAIC,GAAepJ,KAAMqC,EAAUgH,YAActN,IAIzEuN,SAAU,WACN,IAAIpI,EAAUlB,KAAKkB,QACnB,IAAIa,EAAUb,EAAQa,QACtB,IAAIgD,EAAS7D,EAAQ6D,OACrB,IAAIwE,EAAWvJ,KAAKoB,QAAQyC,SAAS9H,GACrC,IAAIyN,EAAYD,EAAS/G,KAAK,qBAC9B,IAAIiH,EAAyB,CAAE,WAAY,YAE3C1H,EAAU3H,EAAEsP,IAAI3H,EAAS,SAAS4H,GAC9BA,EAAS5E,GAAU4E,EAAOzJ,gBAAkB,MAAQ,QAAUyJ,EAC9D,MAAO,CAAE5P,KAAO0P,EAAuB/J,QAAQiK,EAAOzJ,gBAAmB,EAAK,UAAYyJ,EAASA,KAGvGH,EAAUI,KAAKtP,EAAMuP,OAAOnO,EAAUiO,OAAQ5H,KAGlD+H,WAAY,SAAS5I,GACjB,IAAIC,EAAOnB,KACX,IAAIwG,EAAYrF,EAAKD,QAAQuF,KAC7B,IAAIsD,EAAM/J,KAAKoC,cAAgBjB,EAAK4F,UAAY/G,KAAKoC,YAAchI,EAAEwI,UAErE,IAAIoH,EAAgBC,KAAKC,MAAMD,KAAKE,UAAUjJ,IAC9C5F,EAAO4F,EAAQM,SAAUL,EAAKD,QAAQM,UACtClG,EAAO4F,EAAQM,SAAUwI,EAAcxI,UAEvCL,EAAKiJ,oBAAsBL,EAAIjJ,YAC/BK,EAAKkJ,qBAAuBN,EAAIhJ,aAEhCtG,EAAOwH,GAAG6H,WAAW5H,KAAKf,EAAMD,GAChC,IAAIoJ,EAAanJ,EAAKD,QAAQoJ,aAAe,MAE7CnJ,EAAKoJ,UAEL,UAAWrJ,EAAQiC,QAAU,YACzBhC,EAAKgC,MAAMjC,EAAQiC,OAGvBhC,EAAKC,QAAQgF,YAAY5H,GAAKgI,IAC9BrF,EAAKiC,cAELjC,EAAKsC,YACLtC,EAAK0D,aACL1D,EAAK2D,aACL3D,EAAKmI,WACL,UAAWpI,EAAQ0C,QAAU,YAAa,CACtC,IAAIb,EAAU5B,EAAKD,QAAQ6B,UAAY,MACvC5B,EAAKqJ,2BACLrJ,EAAK2C,SAAS5C,EAAQ0C,OAASb,GAGnC5B,EAAKpC,QAAQG,IAAItB,EAAU0M,EAAa,GAAK,WAGjDG,OAAO,CACH5N,EACAC,EACAC,EACAC,EAlgBO,WACA,WAogBPC,EACAQ,EACAL,EApgBK,SAsgBLE,EACAC,EACAC,EAngBW,eAqgBXG,GAGJuD,QAAS,CACLnH,KAAM,SACNiO,UAAW,CACPE,KAAM,CACFC,QAAS,CAAEuC,KAAM,CAAEC,UAAW,MAAQC,KAAM,CAAED,UAAW,OACzDE,SAAU,KAEdzC,MAAO,CACHD,QAAS,CAAEuC,KAAM,CAAEC,UAAW,MAAOG,WAAY,CAAEC,MAAO,KAASH,KAAM,CAAED,UAAW,QACtFE,SAAU,IACVzD,KAAM,OAGdjE,MAAO,GACPpB,QAAS,CAAC,SACViJ,UAAW,KACXpH,MAAO,MACP6C,KAAM,OACN8B,UAAW,KACXlG,UAAW,KACX6E,SAAU,GACVC,UAAW,GACXF,SAAUnH,SACVyG,UAAWzG,SACXiF,OAAQ,MACRuF,WAAY,KACZ9I,SAAU,GACVE,QAAS,KACTqB,QAAS,KACTuD,OAAQ,KACRD,MAAO,KACPlE,SAAU,OACV8I,YAAa,MACbC,YAAa,OAGjBC,UAAW,WACP,OAAO/Q,EAAEgR,QAAQ,QAAShR,EAAEsP,IAAI1J,KAAKkB,QAAQa,QAAS,SAASlD,GAAK,OAAOA,EAAEqB,kBAAsB,GAGvGqE,gBAAiB,SAAS2B,GACtB,IAAI/E,EAAOnB,KACPqL,EAAO/Q,EAAM+Q,KACbC,EAAUpF,EAAEoF,QAEhB,GAAIA,GAAWD,EAAKE,KAAOpK,EAAKgK,YAAa,CACzCjF,EAAEsF,kBACFrK,EAAKsK,OAAO,SAIpBrH,SAAU,SAAS8B,GACf,IAAI/E,EAAOnB,KACPkB,EAAUC,EAAKD,QACfmK,EAAO/Q,EAAM+Q,KACbC,EAAUpF,EAAEoF,QACZlK,EAAUD,EAAKC,QACfC,EAAQqK,EACRC,EAAW,GACXV,EAAc/J,EAAQ+J,YACtBC,EAAchK,EAAQgK,YACtBU,EAAUC,EAAWC,EAAGC,EAE5B,GAAIT,GAAWD,EAAKE,KAAOpK,EAAKgK,YAAa,CACzCjF,EAAEsF,kBACFrK,EAAKsK,OAAO,OAGhB,GAAIvF,EAAEyC,QAAUzC,EAAEC,eAAiBhF,EAAK6K,SACpC,OAIJ,GAAI9F,EAAE+F,QAAUX,GAAW,GACvBnK,EAAKuC,UAIT,GAAIwC,EAAE+F,QAAUX,GAAW,GACvB,GAAGnK,EAAKD,QAAQ6D,OACZ5D,EAAK+K,aAEL/K,EAAK6D,MAKb,GAAGkB,EAAE+F,QAAUX,GAAWD,EAAKc,IAC3B,GAAIjB,EAAa,CACb/J,EAAKoJ,UACLpJ,EAAKC,QAAQyE,QAAQ,cAClB,IAAKoF,EAAa,CACrB9J,EAAKiL,WACLjL,EAAKC,QAAQyE,QAAQ,eAGtB,GAAIK,EAAE+F,QAAUX,GAAWD,EAAKgB,KACnC,IAAKnB,IAAgBD,EAAa,CAC9B9J,EAAKmL,WACLnL,EAAKC,QAAQyE,QAAQ,cAClB,GAAIoF,EACP9J,EAAKoJ,UAKblJ,EAAS/G,EAAMiS,UAAUnL,GAEzB,GAAID,EAAKiB,cAAgBjB,EAAK4F,UAC1B1F,EAASF,EAAKD,QAAQM,SAG1B,GAAIN,EAAQmB,YAAc6D,EAAEsG,UAAYtG,EAAE+F,SAAWhB,EAAa,CAC9D9J,EAAK6F,oBACL,GAAIsE,GAAWD,EAAKc,GAAI,CACpB9K,EAAOf,IAAMnB,EAAUkC,EAAOf,IAAMqL,EAAUxK,EAAKkC,OAAQlC,EAAKoC,QAChEmI,EAAUtK,EAAQlC,IAAI,MAAOmC,EAAOf,UACjC,GAAIgL,GAAWD,EAAKgB,KAAM,CAC7BhL,EAAOf,IAAMnB,EAAUkC,EAAOf,IAAMqL,EAAUxK,EAAKkC,OAAQlC,EAAKoC,QAChEmI,EAAUtK,EAAQlC,IAAI,MAAOmC,EAAOf,UACjC,GAAIgL,GAAWD,EAAKoB,KAAM,CAC7BpL,EAAOb,KAAOrB,EAAUkC,EAAOb,KAAOmL,EAAUxK,EAAKmC,QAASnC,EAAKqC,SACnEkI,EAAUtK,EAAQlC,IAAI,OAAQmC,EAAOb,WAClC,GAAI8K,GAAWD,EAAKqB,MAAO,CAC9BrL,EAAOb,KAAOrB,EAAUkC,EAAOb,KAAOmL,EAAUxK,EAAKmC,QAASnC,EAAKqC,SACnEkI,EAAUtK,EAAQlC,IAAI,OAAQmC,EAAOb,OAI7C,GAAIU,EAAQqH,WAAarC,EAAEsG,UAAYvB,IAAgBC,EAAa,CAChE,GAAII,GAAWD,EAAKc,GAAI,CACpBT,EAAU,KACVG,EAAYzK,EAAQjG,cAAgBwQ,OACjC,GAAIL,GAAWD,EAAKgB,KAAM,CAC7BX,EAAU,KACV,GAAIvK,EAAKiB,cAAgBjB,EAAK4F,UAC1B8E,EAAYlM,KAAKE,IAAIuB,EAAQjG,cAAgBwQ,EACzCxK,EAAKiB,YAAYkE,OAASjF,EAAOf,IAAMxB,EAAMsC,EAAS,eACtDtC,EAAMsC,EAAS,qBAAuBtC,EAAMsC,EAAS,wBAEzDyK,EAAYzK,EAAQjG,cAAgBwQ,EAE1C,GAAIL,GAAWD,EAAKoB,KAAM,CACxBf,EAAU,KACVE,EAAWxK,EAAQnG,aAAe0Q,OAC/B,GAAIL,GAAWD,EAAKqB,MAAO,CAC9BhB,EAAU,KACV,GAAIvK,EAAKiB,cAAgBjB,EAAK4F,UAC1B6E,EAAWjM,KAAKE,IAAIuB,EAAQnG,aAAe0Q,EACvBxK,EAAKiB,YAAYiE,MAAQhF,EAAOb,KAChC1B,EAAMsC,EAAS,mBAAqBtC,EAAMsC,EAAS,0BAEvEwK,EAAWxK,EAAQnG,aAAe0Q,EAI1C,GAAID,EAAS,CACTI,EAAI3M,EAAUyM,EAAU1K,EAAQgG,SAAUhG,EAAQ+F,UAClD8E,EAAI5M,EAAU0M,EAAW3K,EAAQiG,UAAWjG,EAAQqF,WAEpD,IAAK/G,MAAMsM,GAAI,CACX1K,EAAQnG,WAAW6Q,GACnB3K,EAAKD,QAAQmF,MAAQyF,EAAI,KAE7B,IAAKtM,MAAMuM,GAAI,CACX3K,EAAQjG,YAAY4Q,GACpB5K,EAAKD,QAAQoF,OAASyF,EAAI,KAG9B5K,EAAKmH,UAIb,GAAIoD,EACAxF,EAAEyG,kBAIV7I,SAAU,SAAUf,GAChB,IAAI6J,EAAU5M,KAAKoC,YAAcpC,KAAKoC,YAAYyB,SAAS1H,GAAY6D,KAAKmC,SAAS0B,SAAS1H,GAC1FiF,EAAUpB,KAAKoB,QACfG,EAAUwB,EAAU,QAAU,OAC9B8J,EAAS5N,SAASmC,EAAQlC,IAAIpB,IAAS,IAAM,EAEjD,IAAK8O,EAAQ5K,OACT4K,EAAUxS,EAAE,6BAGhBwS,EACKE,aAAa1L,EAAQ,IACrBlC,IAAI,CACD2N,OAAQA,EACRtL,QAASA,IAGjB,GAAIvB,KAAKkB,QAAQ0C,MAAMmJ,gBAAkB/M,KAAKoC,YAC1CpC,KAAKgN,yBAGT,OAAOJ,GAGXK,eAAgB,SAASC,GACrB,IAAIC,EAAY,iBAAiBC,KAAKF,EAAK,GAAGG,WAAW,GACzD,MAAO,CACHC,YAAa,SACbC,sBAAuB,WACvBC,sBAAuB,WACvBC,qBAAsB,UACtBC,cAAe,UACfC,UAAW,MACXC,YAAa,SACfT,IAGNhJ,qBAAsB,SAAU+B,GAC5B,GAAIlG,KAAKgM,SACL,OAEJ,IAAIkB,EAAO9S,EAAE8L,EAAEyC,QAAQ3F,QAAQ,oBAAoBR,KAAK,WACxD,IAAImH,EAAS3J,KAAKiN,eAAeC,GAEjC,GAAIvD,EAAQ,CACRzD,EAAEyG,iBACF3M,KAAK2J,KACL,OAAO,QAIfkE,QAAS,WACL,IAAI1M,EAAOnB,KACP8N,EAAiB1T,EAAEyB,EAAUa,GAC7B+H,EACAsJ,EAAS,GAEb,IAAK,IAAInJ,EAAI,EAAGA,EAAIkJ,EAAe9L,OAAQ4C,GAAK,EAAG,CAC/CH,EAAiBtD,EAAK6M,QAAQ5T,EAAE0T,EAAelJ,KAE/C,GAAIH,GACAA,EAAevD,SACfuD,EAAevD,QAAQ0C,OACvBa,EAAevD,QAAQ6B,SACvB0B,EAAevD,QAAQiB,WAAahB,EAAKD,QAAQiB,YAC/CsC,EAAerC,aAAgBjB,EAAKiB,aAAeqC,EAAerC,YAAY,KAAOjB,EAAKiB,YAAY,IACpG2L,EAAOE,KAAKxJ,EAAerD,QAAQ,IAI/C2M,EAAOG,KAAK,SAASC,EAAGC,GACpB,OAAOD,EAAEE,MAAMxB,OAASuB,EAAEC,MAAMxB,SAGpC1L,EAAO,KAEP,OAAO/G,EAAE2T,IAGbC,QAAS,SAASjP,GACd,IAAI2C,EAAU3C,EAAQ8E,SAAS7H,GAC/B,IAAIsS,EAAShU,EAAMoK,eAAehD,GAElC,GAAI4M,EACA,OAAOA,EAGX,OAAO9T,GAGX+T,OAAQ,WACJ,IAAIpN,EAAOnB,KACPwB,EAAWL,EAAKD,QAAQM,SACxBJ,EAAUD,EAAKC,QACfoN,EAAiBpU,EAAEC,QACnByG,EAAY,EACZC,EAAa,EACb0N,EAAQC,EAEZ,GAAIvN,EAAKD,QAAQ+J,YACb,OAAO9J,EAGX,GAAGA,EAAKD,QAAQ6D,SAAW5D,EAAK4F,UAC5B5F,EAAK6D,MAGT,IAAK7D,EAAKD,QAAQ6D,OAAQ,CACtBjE,EAAY0N,EAAe1N,YAC3BC,EAAayN,EAAezN,aAGhC,GAAIf,KAAKoC,cAAgBjB,EAAKD,QAAQ6D,OAAQ,CAC1C0J,EAASzO,KAAKqD,QAAUrD,KAAKuD,OAASvD,KAAKqD,QAAU,EACrDqL,EAAU1O,KAAKsD,SAAWtD,KAAKwD,QAAUxD,KAAKsD,SAAW,MACtD,CACHnC,EAAKwN,kBAAoB,KACzBD,EAAU3N,EAAapB,KAAKC,IAAI,GAAI4O,EAAenI,QAAUjF,EAAQnG,cAAgB,GACrFwT,EAAS3N,EAAYnB,KAAKC,IAAI,GAAI4O,EAAelI,SAAWlF,EAAQjG,cAAgB2D,EAAMsC,EAAS,eAAiB,GAGxHA,EAAQlC,IAAI,CACRsB,KAAMkO,EACNpO,IAAKmO,IAGTjN,EAASlB,IAAMmO,EACfjN,EAAShB,KAAOkO,EAEhB,OAAOvN,GAGXgC,MAAO,SAAUA,GACb,IAAIhC,EAAOnB,KACPZ,EACAwP,EAAU,KACVxN,EAAUD,EAAKC,QACfyN,EAAWzN,EAAQyC,SAAS9H,GAC5B+S,EAAeD,EAAShL,SAAS/H,GAErC,IAAKiT,UAAU/M,OACX,OAAO8M,EAAalF,OAGxB,GAAIxP,EAAEU,cAAcqI,GAAQ,CACxB/D,SAAe+D,EAAM6L,OAAS,YAAc7L,EAAM6L,KAAQ,GAC1DJ,EAAUzL,EAAMyL,UAAY,WAE5BxP,EAAQ+D,EAGZ,GAAI/D,IAAU,MAAO,CACjBgC,EAAQ6B,SAAS,sBACjB7B,EAAQlC,IAAI,cAAe,GAC3B2P,EAASnM,cAET,IAAKmM,EAAS7M,OAAQ,CAClBZ,EAAQ6N,QAAQvT,EAAU6N,SAAS,CAC/BpG,MAAOyL,EAAUtU,EAAM4U,WAAW9P,GAASA,KAE/C+B,EAAKmI,WACLuF,EAAWzN,EAAQyC,SAAS9H,QAE5B+S,EAAalF,KAAKgF,EAAUtU,EAAM4U,WAAW9P,GAASA,GAI9D+B,EAAKD,QAAQiC,MAAQ/D,EAErB,OAAO+B,GAGXO,QAAS,SAAUkI,EAAMpF,GACrB,IAAI9C,EAAU1B,KAAKoB,QAAQyC,SAAS7H,GAChCmT,EAAkBzN,EAAQmC,SAAS,wBAEvCnC,EAAUyN,EAAgB,GAAKA,EAAkBzN,EAEjD,IAAK9C,GAAQgL,GACT,OAAOlI,EAAQkI,OAGnB5J,KAAKoP,QAAQ,UAAW,WACpB,MAAO,CAAEC,SAAU3N,EAAQmC,cAG/BvJ,EAAMoO,QAAQ1I,KAAKjB,QAAQ8E,YAE3BnC,EAAQ4N,QAAQ1F,KAAKA,GAErB5J,KAAKoP,QAAQ,UAAW,WACpB,IAAIjB,EAAI,GACR,IAAK,IAAIvJ,EAAIlD,EAAQM,SAAU4C,GAAK,GAChCuJ,EAAEF,KAAK,CAAEsB,SAAU/K,IAEvB,MAAO,CACH6K,SAAU3N,EAAQmC,WAClBW,KAAM2J,KAId,OAAOnO,MAGXkI,KAAM,WACF,IAAI/G,EAAOnB,KACPoB,EAAUD,EAAKC,QACfF,EAAUC,EAAKD,QACfsO,EAAcxP,KAAK+H,kBAAkB,QACrC0H,EAAiBrO,EAAQyC,SAAS7H,GAClC4Q,EAAS8C,EACTC,EAAqB3P,KAAKoC,cAAgBjB,EAAK4F,UAC/CgD,EAAM4F,EAAqB3P,KAAKoC,YAAchI,EAAEwI,UAEpD,IAAKzB,EAAK0E,QAAQhJ,GAAO,CACrB,GAAIsE,EAAK6K,SACL5K,EAAQwO,UAAU,KAAM,MAG5BzO,EAAK6K,SAAW,MAEhB7K,EAAKwC,UAEL,GAAIzC,EAAQ8J,UACR7J,EAAKC,QAAQyE,QAAQ,SAGzB3E,EAAQ6B,QAAU,KAElB,GAAI7B,EAAQ0C,MAAO,CACf8L,IAAuBvO,EAAK0M,UAAU7L,OACtC4K,EAAUzL,EAAK2C,SAAS4L,GAExB9C,EAAQgD,UAAU,KAAM,MAExB,GAAIJ,EAAY3E,UAAYvQ,EAAM6N,QAAQ0H,OAASH,EAAoB,CACnE,IAAII,EAAYxV,EAAMyV,GAAGnD,GAASoD,SAClCF,EAAUjF,SAAS2E,EAAY3E,UAAY,GAC3CiF,EAAUG,SAAS,IACnBH,EAAUI,YAEVtD,EAAQ1N,IAAI,UAAW,IAG3B0N,EAAQuD,OAER/V,EAAEC,QAAQ2J,GAAG,QAAUpI,EAAU,WAC7B,GAAIwF,EAAQoD,KAAK,aAAepK,EAAEwI,SAAS7H,eAAeiI,QAAQ5B,GAASY,OACxEb,EAAKC,QAAQyE,QAAQ,WAKhC,IAAKzE,EAAQuB,GAAGjG,GAAU,CACtB+S,EAAevQ,IAAItB,EAAUjB,GAE7BwE,EAAKC,QAAQoB,KAAKrE,IAAkB8E,SAAS,iBAE7C7B,EAAQ6B,SAASxG,GAAamT,YAAYQ,aAAa,CACnDjI,QAASqH,EAAYrH,QACrB0C,SAAU2E,EAAY3E,SACtBwF,SAAUhV,EAAM2E,KAAKsQ,UAAWtQ,SAK5C,GAAIkB,EAAQ+J,YAAa,CACrB9J,EAAKiJ,oBAAsBL,EAAIjJ,YAC/BK,EAAKkJ,qBAAuBN,EAAIhJ,aAChCI,EAAK6L,yBAGT,GAAGhN,KAAKkB,QAAQ6D,SAAW/E,KAAK+G,UAC5B/G,KAAKgF,MAGT,OAAO7D,GAGXmP,UAAW,WACP,IAAIhG,EAAatK,KAAKkB,QAAQoJ,aAAe,MAE7C,GAAItK,KAAKkB,QAAQ8J,UACbhL,KAAKoB,QAAQyE,QAAQ,SAGzB7F,KAAKjB,QAAQG,IAAItB,EAAU0M,EAAa,GAAK,UAC7ChQ,EAAMgO,OAAOtI,KAAKjB,QAAQ8E,YAE1B7D,KAAK6F,QAAQ/I,IAGjByT,eAAgB,SAASC,GACrB,IAAIzC,EAAS/N,KAAK6N,UAClB,IAAI3M,EAAUlB,KAAKkB,QACnB,IAAIuP,EAAcvP,EAAQ0C,QAAUmK,EAAO/L,OAC3C,IAAI0O,EAAe1Q,KAAK+H,kBAAkB,SAE1C,GAAI0I,EAAa,CACb,IAAKD,GAAqBE,EAAY7F,UAAYvQ,EAAM6N,QAAQ0H,KAAM,CAClE,IAAIC,EAAYxV,EAAMyV,GAAG7O,EAAQ0C,MAAQ5D,KAAK8D,SAAS,MAAQ1J,EAAEI,IAAYmW,UAC7Eb,EAAUjF,SAAS6F,EAAY7F,UAAY,GAC3CiF,EAAUc,WAAW,IACrBd,EAAUI,YAEVlQ,KAAK8D,SAAS,OAAOpB,SAEzB,GAAIxB,EAAQ0C,MAAMmJ,cACd/M,KAAKwK,gCAEN,GAAIuD,EAAO/L,OAAQ,CACtBhC,KAAKgO,QAAQD,EAAO8C,QAAQ/M,SAAS,MAErC,GAAI5C,EAAQ0C,MAAMmJ,cACd/M,KAAKgN,2BAKjBvB,OAAQ,SAASqF,GACb,IAAI3P,EAAOnB,KACPoB,EAAUD,EAAKC,QACfF,EAAUC,EAAKD,QACfsO,EAAcxP,KAAK+H,kBAAkB,QACrC2I,EAAe1Q,KAAK+H,kBAAkB,SACtC4H,EAAqB3P,KAAKoC,cAAgBjB,EAAK4F,UAC/CgD,EAAM4F,EAAqB3P,KAAKoC,YAAchI,EAAEwI,UAChDmO,EAEJ,GAAI5P,EAAK6K,SACL,OAGJ+E,EAAmB5P,EAAK0E,QAAQ7I,EAAO,CAAEgU,eAAgBF,IACzD3P,EAAK6K,UAAY+E,EAEjB,GAAI3P,EAAQuB,GAAGjG,KAAaqU,EAAkB,CAC1C7P,EAAQ6B,QAAU,MAElB3I,EAAEyB,GAASN,KAAK,SAASqJ,EAAG7F,GACxB,IAAI0Q,EAAiBrV,EAAE2E,GAAS8E,SAAS7H,GAGzC,GAAI+C,GAAWqC,GAAWqO,EAAejN,KAAK,MAAQpG,GAAe4F,OAAS,EAC1EyN,EAAe5L,SAAS1H,GAAUuG,WAI1C1C,KAAKuQ,iBAGLpP,EAAKC,QAAQoB,KAAKrE,IAAkBiI,YAAY,iBAEhDhF,EAAQwO,YAAYQ,aAAa,CAC7BjI,QAASuI,EAAYvI,SAAWqH,EAAYrH,QAC5C8I,QAASP,EAAYO,UAAY,KACjCpG,SAAU6F,EAAY7F,SACtBwF,SAAUhV,EAAM2E,KAAKkR,YAAalR,QAEtC5F,EAAEC,QAAQoO,IAAI7M,GAGlB,GAAIuF,EAAKD,QAAQ+J,YAAa,CAC1B9J,EAAKqJ,2BACL,GAAIrJ,EAAKiJ,qBAAuBjJ,EAAKiJ,oBAAsB,EACvDL,EAAIjJ,UAAUK,EAAKiJ,qBAEvB,GAAIjJ,EAAKkJ,sBAAwBlJ,EAAKkJ,qBAAuB,EACzDN,EAAIhJ,WAAWI,EAAKkJ,sBAI5B,GAAIlJ,EAAKD,QAAQiQ,OACbhQ,EAAKC,QAAQyE,QAAQ,SAI7BqL,YAAa,WACT,IAAI/P,EAAOnB,KAEXmB,EAAKC,QACAgF,YAAY3J,GACZ2K,OACAlI,IAAI,UAAW,IAEpBiC,EAAK0E,QAAQ9I,GAEb,GAAIoE,EAAKD,QAAQ0C,MAAO,CACpB,IAAIwN,EAAYjQ,EAAK6M,QAAQ7M,EAAK0M,UAAUgD,QAC5C,GAAIO,EACAA,EAAUzN,YAKtByE,MAAO,WACHpI,KAAKyL,OAAO,MACZ,OAAOzL,MAGXqR,YAAa,SAAStS,GAClB,OAAO3E,EAAE2E,GAAS4D,GAAGxE,GAAmB,IAAMA,GAAmB,8DAGrEmT,aAAc,SAAS3I,GACnB,IAAI4I,EAASxW,IACTgE,EAAUiB,KAAKoB,QAEnB,OAAOpB,KAAKkB,QAAQ8J,YACf5Q,EAAEmX,GAAQ5O,GAAG5D,KACbiB,KAAKqR,YAAY1I,MAChB5J,EAAQyD,KAAK+O,GAAQvP,SAAWjD,EAAQyD,KAAKmG,GAAQ3G,SAG/D2B,QAAS,SAAUuC,EAAGsL,GAClB,IAAIrQ,EAAOnB,KACPoB,EAAUD,EAAKC,QACfqQ,EAAgBrQ,EAAQ,GACxBuO,EAAqBxO,EAAKiB,cAAgBjB,EAAK4F,UAC/C2K,EAAgB1R,KAAK+H,kBAAkB,QACvC8E,GAAUzL,EAAQlC,IAAIpB,IACtB6T,EAAiB9E,EACjBlE,EAAUzC,GAAKA,EAAEyC,QAAW,KAEhCvO,EAAEyB,GAASN,KAAK,SAASqJ,EAAG7F,GACxB,IAAI6S,EAAexX,EAAE2E,GACjB8S,EAAYD,EAAa1S,IAAIpB,IAC7B2R,EAAiBmC,EAAa/N,SAAS7H,GAE3C,IAAKwD,MAAMqS,GACPhF,EAASlN,KAAKC,KAAKiS,EAAWhF,GAGlCzL,EAAQoD,KAAK,UAAWzF,GAAW0S,GAInC,GAAI1S,GAAW0S,GACXhC,EAAejN,KAAK,IAAMpG,GAAe4F,SACxCyN,EAAejN,KAAKrG,GAAU6F,OAC/ByN,EAAezG,OAAOtN,EAAUkR,WAIxC,IAAKxL,EAAQ,GAAGiN,MAAMxB,QAAU8E,EAAiB9E,EAC7CzL,EAAQlC,IAAIpB,GAAQ+O,EAAS,GAEjC1L,EAAKpC,QAAQyD,KAAK,gBAAgBE,SAElC,GAAIvB,EAAKmQ,aAAa3I,GAAS,CAC3B,IAAI6I,EACAM,WAAW,WACP3Q,EAAKC,QAAQ2Q,SACdL,EAAgBA,EAAc7G,SAAW,GAGhD,IAAI/J,EAAY6O,EAAqBxO,EAAKiB,YAAYtB,YAAc1G,EAAEC,QAAQyG,YAC1EkR,EAAY/S,SAASmC,EAAQI,WAAWlB,IAAK,IAEjD,IAAKa,EAAKD,QAAQ6D,QAAUiN,EAAY,GAAKA,EAAYlR,EACrD,GAAIA,EAAY,EACZ1G,EAAEC,QAAQyG,UAAUkR,QAEpB5Q,EAAQlC,IAAI,MAAO4B,GAK/BM,EAAU,KAEV,OAAOD,GAGXyH,mBAAoB,WAChB,GAAI5I,KAAKgM,SACL,OAAOhM,KAGX,OAAOA,KAAKA,KAAKkB,QAAQ+J,YAAc,UAAY,eAGvDV,QAAS,WACL,IAAIpJ,EAAOnB,KACX,IAAIkB,EAAUC,EAAKD,QACnB,IAAIiG,EAAYjG,EAAQiG,UACxB,IAAI8K,EAAiB9Q,EAAK8Q,eAC1B,IAAIC,EACJ,IAAI1I,EAAYrI,EAAKiB,cAAgBjB,EAAK4F,UAAY5F,EAAKiB,YAAchI,EAAEwI,UAE3E,IAAK1B,EAAQ+J,cAAgB/J,EAAQgK,YACjC,OAAO/J,EAGX,GAAIgG,GAAaA,GAAarH,SAC1BqB,EAAKC,QAAQlC,IAAI,aAAciI,GAGnC,GAAI8K,IAAmB/Q,EAAQ+J,YAAa,CACxCgH,EAAe3L,OAASnH,EAAU8S,EAAe3L,OAAQnF,EAAKD,QAAQiG,UAAWhG,EAAKD,QAAQqF,WAE9F2L,EAAoBhR,EAAQM,SAASlB,IAAMrB,SAASgT,EAAe3L,OAAQ,IAAMnF,EAAKoC,OAEtF,GAAI2O,EAAmB,CACnBhR,EAAQM,SAASlB,IAAMnB,EAAU+B,EAAQM,SAASlB,IAAKa,EAAKkC,OAAQlC,EAAKoC,OAAStE,SAASgT,EAAe3L,OAAQ,KAElHhL,EAAO2W,EAAgB,CACnBzR,KAAMU,EAAQM,SAAShB,KACvBF,IAAKY,EAAQM,SAASlB,OAKlCa,EAAKC,QACAlC,IAAI,CACDsC,SAAUN,EAAQ6D,OAAS,QAAU,WACrCvE,KAAMyR,EAAezR,KACrBF,IAAK2R,EAAe3R,IACpB+F,MAAO4L,EAAe5L,MACtBC,OAAQ2L,EAAe3L,SAE1BF,YAAY5J,GACZgG,KAAK,sCAAsC2N,OAAOgC,MAClD3P,KAAK,0CAA0C9B,SAASgC,SAASyP,MAAMA,MACvE3P,KAAKzE,IAAmB2C,SAASyP,OAAOgC,MAAMA,MAC9C3P,KAAKtE,IAAWwC,SAASyP,OAE9B,GAAIjP,EAAQ+J,YACR9J,EAAKC,QAAQoB,KAAK,wBAAwB9B,SAASmF,QAAQ,cACxD,GAAI3E,EAAQgK,YACf/J,EAAKC,QAAQoB,KAAK,wBAAwB9B,SAASmF,QAAQ,SAG/D1E,EAAKD,QAAQmF,MAAQ4L,EAAe5L,MACpClF,EAAKD,QAAQoF,OAAS2L,EAAe3L,OAErC,IAAKnF,EAAKD,QAAQ0C,MAAMmJ,cACpB5L,EAAKqJ,2BAGT,GAAIrJ,EAAKiJ,qBAAuBjJ,EAAKiJ,oBAAsB,EACvDZ,EAAU1I,UAAUK,EAAKiJ,qBAE7B,GAAIjJ,EAAKkJ,sBAAwBlJ,EAAKkJ,qBAAuB,EACzDb,EAAUzI,WAAWI,EAAKkJ,sBAG9BnJ,EAAQ+J,YAAc/J,EAAQgK,YAAc,MAE5C/J,EAAKC,QAAQgR,WAAW,oBAExBjR,EAAKmH,SAELnH,EAAK0E,QAAQpI,GAEb,OAAO0D,GAGXkR,cAAe,SAASC,EAAUC,GAC9B,IAAIpR,EAAOnB,KACPoB,EAAUD,EAAKC,QACfiN,EAAQjN,EAAQ,GAAGiN,MACnBnN,EAAUC,EAAKD,QAEnB,GAAIA,EAAQ+J,aAAe/J,EAAQgK,YAC/B,OAAO/J,EAGXA,EAAK8Q,eAAiB,CAClB5L,MAAOgI,EAAMhI,MACbC,OAAQ+H,EAAM/H,QAGlBlF,EACKyC,SAAS3H,GAAsBkL,OAAO+K,MACtCtO,SAAS9H,GAAiByG,KAAKzE,IAAmB2C,SAAS0G,OAC3DoL,GAAG,GAAGC,OAAO/W,EAAUiO,OAAO,CAAE5P,KAAM,oBAE3CwY,EAASrQ,KAAKf,GAEdA,EAAKC,QAAQyC,SAAS9H,GAAiByG,KAAKtE,IAAWwC,SAASgS,OAAOJ,IAAa,YAEpFnR,EAAK0E,QAAQyM,GAEblR,EAAQoB,KAAK,uBAAuB9B,SAASmF,QAAQ,SAErD,OAAO1E,GAGXiL,SAAU,WACNpM,KAAKqS,cAAc,WAAY,WAC3B,IAAIlR,EAAOnB,KACPoB,EAAUD,EAAKC,QACfuO,EAAqB3P,KAAKoC,cAAgBjB,EAAK4F,UAC/CvF,EAAWJ,EAAQI,WACnBuI,EAAM3P,EAAEwI,UAEZtH,EAAO6F,EAAK8Q,eAAgB,CACxBzR,KAAMgB,EAAShB,MAAQmP,EAAqB3P,KAAKoC,YAAYrB,aAAe,GAC5ET,IAAKkB,EAASlB,KAAOqP,EAAqB3P,KAAKoC,YAAYtB,YAAc,KAG7Ed,KAAKoK,oBAAsBuF,EAAqB3P,KAAKoC,YAAYtB,YAAciJ,EAAIjJ,YACnFd,KAAKqK,qBAAuBsF,EAAqB3P,KAAKoC,YAAYrB,aAAegJ,EAAIhJ,aAErFI,EAAK6L,yBAEL5L,EACKlC,IAAI,CACDoB,IAAKqP,EAAqB3P,KAAKoC,YAAYtB,YAAc,EACzDN,KAAMmP,EAAqB3P,KAAKoC,YAAYrB,aAAe,EAC3DS,SAAUmO,EAAqB,WAAa,UAE/C1M,SAASzG,GAEd2E,EAAKD,QAAQ+J,YAAc,KAE3B9J,EAAKsE,sBAGT,OAAOzF,MAGXgN,uBAAwB,WACpB,IAAI7L,EAAOnB,KACX,IAAIoC,EAAcjB,EAAKiB,YAEvB,GAAIA,IAAgBjB,EAAK4F,UAAW,CAChC5F,EAAKwR,mBAAmBvQ,GACxBA,EAAYlD,IAAItB,EAAUjB,GAC1BwE,EAAKC,QAAQlC,IAAI,CACb+H,SAAU7E,EAAYsF,aACtBnB,UAAWnE,EAAYuF,gBAE3B,OAGJ,IAAIiL,EAAQxY,EAAE,QACd+G,EAAKwR,mBAAmBC,GACxBA,EAAM1T,IAAItB,EAAUjB,GAEpB,IAAIkW,EAAQzY,EAAE,QACd+G,EAAKwR,mBAAmBE,GACxBA,EAAM3T,IAAItB,EAAUjB,IAGxB6N,yBAA0B,WACtB,IAAIrJ,EAAOnB,KACX,IAAIoC,EAAcjB,EAAKiB,YAEvB,GAAIA,IAAgBjB,EAAK4F,UAAW,CAChC5F,EAAK2R,qBAAqB1Q,GAC1BjB,EAAKC,QAAQlC,IAAI,CACb+H,SAAU7E,EAAYiE,MACtBE,UAAWnE,EAAYkE,SAE3B,OAGJnF,EAAK2R,qBAAqB1Y,EAAEwI,SAASC,OACrC1B,EAAK2R,qBAAqB1Y,EAAE,UAGhCuY,mBAAoB,SAASI,GACzB,GAAG/S,KAAKgT,kBAAkBD,GACtB,OAGJ,IAAIE,EAAeF,EAASG,IAAI,GAAG7E,MAAM8E,SAEzC,UAAUF,IAAiB,SACvBF,EAASvO,KAAK3G,EAAqBoV,IAI3CD,kBAAmB,SAAUD,GACzB,cAAcA,EAASvO,KAAK3G,KAAyB,UAGzDiV,qBAAsB,SAASC,GAC3B,IAAIE,EAAeF,EAASvO,KAAK3G,GAEjC,GAAGoV,IAAiB,MAAQA,IAAiBzY,EAAU,CACnDuY,EAAS7T,IAAItB,EAAUqV,GACvBF,EAASK,WAAWvV,QAEpBkV,EAAS7T,IAAItB,EAAU,KAI/BqN,YAAa,WACT,OAAOjL,KAAKkB,QAAQ+J,aAGxBqB,SAAU,WACNtM,KAAKqS,cAAc,WAAY,WAC3B,IAAIlR,EAAOnB,KAEXmB,EAAKC,QAAQlC,IAAI,CACboH,OAAQ,GACRa,UAAW,KAGfhG,EAAKpC,QAAQqI,OAEbjG,EAAKD,QAAQgK,YAAc,OAG/BlL,KAAKoB,QAAQ6D,KAAK,mBAAoBjF,KAAKjB,QAAQkG,KAAK,qBAExDjF,KAAKgH,oBAEL,OAAOhH,MAGXkL,YAAa,WACT,OAAOlL,KAAKkB,QAAQgK,aAGxBlG,IAAK,WACD,IAAI7D,EAAOnB,KACPqT,EAAMjZ,EAAEC,QACR+G,EAAUD,EAAKC,QACfF,EAAUC,EAAKD,QACfM,EAAWN,EAAQM,SACnBlB,EAAMN,KAAKoC,YAAcjC,GAAYiB,EAAQ,IAAId,IAAMxB,EAAMkB,KAAKoC,YAAa,kBAAoBtD,EAAMsC,EAAS,OAClHZ,EAAOR,KAAKoC,YAAcjC,GAAYiB,EAAQ,IAAIZ,KAAO1B,EAAMkB,KAAKoC,YAAa,mBAAqBtD,EAAMsC,EAAS,QAEzH,IAAKD,EAAKD,QAAQ+J,YAAa,CAC3BzJ,EAASlB,IAAMA,EACfkB,EAAShB,KAAOA,EAEhB,GAAIW,EAAKwN,qBAAuB3O,KAAKoC,aAAepC,KAAKoC,YAAYlD,IAAI,cAAgB,SAAU,CAE/FsC,EAASlB,KAAO+S,EAAIvS,YACpBU,EAAShB,MAAQ6S,EAAItS,aACrBI,EAAKwN,kBAAoB,MAG7BvN,EAAQlC,IAAI5D,EAAOkG,EAAU,CAACA,SAAU,WACxCJ,EAAQyC,SAAS9H,GAAiByG,KAAKxE,IAAMiF,SAAS,aAAamD,YAAY,WAE/EjF,EAAK4F,UAAY,KACjB5F,EAAKD,QAAQ6D,OAAS,KAEtB,GAAI/E,KAAKoC,YAAa,CAClBlB,EAAQ+F,SAAW/F,EAAQqF,UAAYzG,SACvCsB,EAAQlC,IAAI,CACR+H,SAAU,GACVV,UAAW,QAM3B2F,MAAO,WACH,IAAI/K,EAAOnB,KACPqT,EAAMjZ,EAAEC,QACR+G,EAAUD,EAAKC,QACfF,EAAUC,EAAKD,QACfM,EAAWL,EAAKD,QAAQM,SACxBY,EAAcjB,EAAKiB,YACnB9B,EAAMrB,SAASmC,EAAQlC,IAAI,OAAQ,IAAMmU,EAAIvS,YAC7CN,EAAOvB,SAASmC,EAAQlC,IAAI,QAAS,IAAMmU,EAAItS,aAEnD,IAAKI,EAAKD,QAAQ+J,YAAa,CAC3B9J,EAAK4F,UAAY,MACjB5F,EAAKwN,kBAAoB,KACzBxN,EAAKD,QAAQ6D,OAAS,MAEtB,GAAI3C,EAAa,CACbjB,EAAK6F,oBAEL9F,EAAQ+F,SAAWtH,KAAKE,IAAIuC,EAAYiE,MAAOnF,EAAQ+F,UACvD/F,EAAQqF,UAAY5G,KAAKE,IAAIuC,EAAYkE,OAASxH,EAAMsC,EAAS,eAAgBF,EAAQqF,WAEzFnF,EAAQlC,IAAI,CACR+H,SAAU/F,EAAQ+F,SAClBV,UAAWrF,EAAQqF,YAGvB,GAAIjG,EAAM8B,EAAYZ,SAASlB,IAC3BA,EAAMa,EAAKkC,YACR,GAAI/C,EAAM8B,EAAYZ,SAASlB,IAAM8B,EAAYkE,OACpDhG,EAAMa,EAAKoC,YAEXjD,EAAMA,EAAM8B,EAAYtB,aAAesB,EAAYZ,SAASlB,IAAMxB,EAAMsD,EAAa,qBAGzF,GAAI5B,EAAO4B,EAAYZ,SAAShB,KAC5BA,EAAOW,EAAKmC,aACT,GAAI9C,EAAO4B,EAAYZ,SAAShB,KAAO4B,EAAYiE,MACtD7F,EAAOW,EAAKqC,aAEZhD,EAAOA,EAAO4B,EAAYrB,cAAgBqB,EAAYZ,SAAShB,KAAO1B,EAAMsD,EAAa,sBAKjGZ,EAASlB,IAAMnB,EAAUmB,EAAKa,EAAKkC,OAAQlC,EAAKoC,QAChD/B,EAAShB,KAAOrB,EAAUqB,EAAMW,EAAKmC,QAASnC,EAAKqC,SAEnDpC,EAAQlC,IAAI5D,EAAOkG,EAAU,CAACA,SAAU,MACxCJ,EAAQyC,SAAS9H,GAAiByG,KAAKvE,IAAQgF,SAAS,WAAWmD,YAAY,eAIvFX,kBAAmB,WACf,IAAItE,EAAOnB,KACPoB,EAAUD,EAAKC,QACfkS,EAAMlZ,EAAEC,QACRkZ,EAAYjZ,EAAM+K,QAAQkO,YAC1B5M,EAAmBvF,EAAQlC,IAAI,eAAiB,cAChD4M,EAAGC,EAEP,IAAK5K,EAAKD,QAAQ+J,YACd,OAGJ,IAAIrE,EAAgBD,EAAmB7H,EAAMsC,EAAS,qBAAuBtC,EAAMsC,EAAS,sBAAwB,EACpH,IAAIyF,EAAgBF,EAAmB7H,EAAMsC,EAAS,oBAAsBtC,EAAMsC,EAAS,uBAAyB,EACpH,IAAI0F,EAAaH,EAAmB7H,EAAMsC,EAAS,eAAiB,EAEpE,GAAID,EAAKiB,cAAgBjB,EAAK4F,UAAW,CACrC+E,EAAI3K,EAAKiB,YAAYsF,aAAed,EACpCmF,EAAI5K,EAAKiB,YAAYuF,eAAiBd,EAAgBC,OACnD,CACHgF,EAAIwH,EAAIjN,QAAUkN,EAAY3M,EAC9BmF,EAAIuH,EAAIhN,SAAWiN,GAAa1M,EAAgBC,GAGpD1F,EAAQlC,IAAI,CACRmH,MAAOyF,EACPxF,OAAQyF,IAEZ5K,EAAKD,QAAQmF,MAAQyF,EACrB3K,EAAKD,QAAQoF,OAASyF,EAEtB5K,EAAKmH,UAGT5E,QAAS,SAAUxC,GACf,IAAIC,EAAOnB,KACPwT,EAAcrS,EAAKD,QACnBnC,EAAU3E,EAAE+G,EAAKpC,SACjBoS,EACAsC,EACAlR,EAEJ,IAAKzH,EAAcoG,GACfA,EAAU,CAAEqB,IAAKrB,GAGrBA,EAAU5F,EAAOkY,EAAY9R,QAASR,GAEtCuS,EAAa7U,GAAQ4U,EAAYrC,QAAUqC,EAAYrC,OAASjQ,EAAQiQ,OAExE5O,EAAMrB,EAAQqB,IAEd,GAAIA,EAAK,CACL,IAAK3D,GAAQ6U,GACTA,GAAclV,GAAWgE,GAG7B,IAAKkR,EAEDtS,EAAKuS,aAAaxS,OACf,CACHiQ,EAASpS,EAAQyD,KAAK,IAAMpG,GAAe,GAE3C,GAAI+U,EAEAA,EAAOwC,IAAMpR,GAAO4O,EAAOwC,SAG3B5U,EAAQ6K,KAAKlO,EAAUkY,aAAatY,EAAO,GAAIkY,EAAa,CAAE9R,QAASR,MAG3EnC,EAAQyD,KAAK,IAAMpG,GACdqM,IAAI,OAAS9M,GACbqI,GAAG,OAASrI,EAAIN,EAAM2E,KAAK6T,gBAAiB7T,YAElD,CACH,GAAIkB,EAAQ1F,SAER2F,EAAKO,QAAQlG,EAAS0F,EAAQ1F,SAAjBA,CAA2B,KAG5C2F,EAAK0E,QAAQ5I,GAGjB8B,EAAQ+U,YAAY,2BAA4BL,GAEhD,OAAOtS,GAGX0S,gBAAiB,WACb7T,KAAK6F,QAAQ5I,IAGjB8W,cAAe,WACXC,aAAahU,KAAKiU,qBAClBjU,KAAKoB,QAAQoB,KAAKpE,IAAagI,YAAY/J,IAG/C6X,WAAY,SAAUC,EAAKC,GACvBpU,KAAK6F,QAAQlI,EAAO,CAAEyW,OAAQA,EAAQD,IAAKA,KAG/CE,aAAc,SAAUC,GACpB,OAAO,SAAU9P,GACb,IAAIoF,EAAOpF,EACX,GAAI8P,EACA1K,EAAOpO,EAAS8Y,EAAT9Y,CAA0BgJ,GAAQ,IAG7CxE,KAAK0B,QAAQkI,EAAMpF,GACnBxE,KAAKjB,QAAQwV,KAAK,YAAa,GAE/BvU,KAAK6F,QAAQ5I,KAIrBuX,aAAc,WACVxU,KAAKoB,QAAQoB,KAAKpE,IAAa6E,SAAS5G,IAG5CqX,aAAc,SAAUxS,GACpBlB,KAAKiU,oBAAsBnC,WAAWzW,EAAM2E,KAAKwU,aAAcxU,MAAO,KAEtE5F,EAAEqa,KAAKnZ,EAAO,CACV2E,KAAM,MACNyU,SAAU,OACVC,MAAO,MACPC,MAAOvZ,EAAM2E,KAAKkU,WAAYlU,MAC9BqQ,SAAUhV,EAAM2E,KAAK+T,cAAe/T,MACpC6U,QAASxZ,EAAM2E,KAAKqU,aAAanT,EAAQ1F,UAAWwE,OACrDkB,KAGP4T,SAAU,WACN,GAAI9U,KAAKwI,SACLxI,KAAKwI,SAASE,UAGlB,GAAI1I,KAAKmJ,SACLnJ,KAAKmJ,SAAST,UAGlB1I,KAAKoB,QAAQqH,IAAI9M,GACZkI,SAAS7H,GAAgByM,IAAI9M,GAAIwW,MACjC3P,KAAK,uCAAuCiG,IAAI9M,GAErDvB,EAAEC,QAAQoO,IAAI,SAAW9M,EAAKqE,KAAK0F,SACnCtL,EAAEC,QAAQoO,IAAI7M,GACdxB,EAAEC,QAAQoO,IAAI9M,GAEdqY,aAAahU,KAAKiU,qBAElBxZ,EAAOwH,GAAGyG,QAAQxG,KAAKlC,MAEvBA,KAAK+U,OAAOva,GAEZF,EAAMoO,QAAQ1I,KAAKoB,UAGvBsH,QAAS,WACL1I,KAAK8U,WAEL,GAAI9U,KAAKkB,QAAQ0C,MACb5D,KAAKuQ,eAAe,MAGxBvQ,KAAKoB,QAAQkO,QAAQ5M,SAErB1C,KAAKoB,QAAUpB,KAAKmC,SAAWnC,KAAKjB,QAAU3E,KAGlD8I,cAAe,WACX,IAAI8R,EAAchV,KAAKjB,QACnBmC,EAAUlB,KAAKkB,QACf+T,EACA7T,EACA8T,EAAQ5a,EAAM+K,QAAQ6P,MAAMF,GAEhC,GAAI9T,EAAQoJ,aAAe,MACvB0K,EAAY9V,IAAI,WAAY,UAGhCkC,EAAUhH,EAAEsB,EAAU0F,QAAQF,IAI9B+T,EAAsBD,EAAYxS,KAAK,gCAAgCkH,IAAI,WACvE,IAAIiK,EAAM3T,KAAKmV,aAAa,OAC5BnV,KAAK2T,IAAM,GACX,OAAOA,IAIXvS,EACK0S,YAAY,QAASoB,GACrBjQ,KAAK,WAAY,GACjB+D,OAAOgM,GACPxS,KAAK,gCAAgCjH,KAAK,SAASuN,GAEpD9I,KAAK2T,IAAMsB,EAAoBnM,KAGnC,GAAI9I,KAAKoC,YACLpC,KAAKoC,YAAY6M,QAAQ7N,QACtB,GAAIpB,KAAKmC,SACZf,EAAQe,SAASnC,KAAKmC,UAG1Bf,EAAQoB,KAAK,mBACRtD,IAAIgW,EAAQ,OAAS,QAASja,EAAWmG,EAAQoB,KAAK,sBAAwB,IAEnFwS,EAAY9V,IAAI,aAAc,IAAIiR,OAElC6E,EAAYxS,KAAK,sBAAsBjH,KAAK,WACxC,IAAI6Z,EAAShb,EAAE4F,MAAMwE,KAAK,eAE1B,GAAI4Q,EACAA,EAAO1R,YAIftC,EAAU4T,EAAc,QA4BhC,SAAS9L,GAAeoK,GACpB,IAAInS,EAAOnB,KACXmB,EAAKkU,MAAQ/B,EACbnS,EAAKmU,iBAAmB,MACxBnU,EAAK2D,WAAa,IAAIjK,EAAUyY,EAAIlS,QAAS,CACzCqB,OAAQ,IAAMvG,EACdqZ,MAAOjC,EAAIlS,QAAQtH,GAAK,YACxB0b,UAAWna,EAAM8F,EAAKqU,UAAWrU,GACjCsU,KAAMpa,EAAM8F,EAAKsU,KAAMtU,GACvBuU,QAASra,EAAM8F,EAAKuU,QAASvU,KAGjCA,EAAK2D,WAAW6Q,WAAWC,KAAK,QAASva,EAAM8F,EAAK0U,WAAY1U,IAChEA,EAAK2D,WAAW6Q,WAAWC,KAAK,UAAWva,EAAM8F,EAAK2U,cAAe3U,IAoLzE,SAASiI,GAAekK,EAAKjK,GACzB,IAAIlI,EAAOnB,KACXmB,EAAKkU,MAAQ/B,EACbnS,EAAKmU,iBAAmB,MACxBnU,EAAK2D,WAAa,IAAIjK,EAAUyY,EAAIlS,QAAS,CACzCqB,OAAQ4G,EACRkM,MAAOjC,EAAIlS,QAAQtH,GAAK,UACxB0b,UAAWna,EAAM8F,EAAKqU,UAAWrU,GACjCsU,KAAMpa,EAAM8F,EAAKsU,KAAMtU,GACvBuU,QAASra,EAAM8F,EAAKuU,QAASvU,GAC7B4U,WAAY1a,EAAM8F,EAAK4U,WAAY5U,KAGvCA,EAAK2D,WAAW6Q,WAAWnK,gBAAkB,MA2IrD,OAjXI9P,EAAY,CACR0F,QAAS5F,EAAS,yCAClBmO,OAAQnO,EACJ,+JACI,yEACJ,QAEJ+N,SAAU/N,EACN,2CACI,iDACA,gDACJ,UAEJoR,QAAS,gCACTgH,aAAcpY,EACV,qDAAuDY,EAAgB,KACvE,0BACA,qDACA,aAEJ6M,aAAczN,EAAS,2DAoB3B0N,GAAe8M,UAAY,CACvBH,WAAY,WACR7V,KAAKqV,MAAMjU,QAAQ4H,OAAOtN,EAAUkR,UAExCkJ,cAAe,WACX9V,KAAKqV,MAAMjU,QAAQoB,KAAKrG,GAAUuG,UAEtC8S,UAAW,SAAUtP,GACjB,IAAI/E,EAAOnB,KACX,IAAIsT,EAAMnS,EAAKkU,MACf,IAAIjU,EAAUkS,EAAIlS,QAElBD,EAAKmU,iBAAmBhC,EAAIzN,QAAQzI,GACpC,GAAI+D,EAAKmU,iBACL,OAGJnU,EAAK8U,eAAiBhX,SAASmC,EAAQlC,IAAI,eAAgB,IAC3DiC,EAAK+U,gBAAkB5b,EAAMiS,UAAUnL,EAAS,YAEhDD,EAAKgV,gBAAkBjQ,EAAEC,cAAcoO,KAAK,aAAa9M,QAAQ,4BAA6B,IAE9FtG,EAAKiV,YAAc,CACf/P,MAAOjF,EAAQnG,aACfqL,OAAQlF,EAAQjG,eAGpBmY,EAAItM,oBAEJ7F,EAAKkV,gBAAkB/C,EAAIlR,YAAckR,EAAIlR,YAAYZ,SAAWlH,EAAMiS,UAAU+G,EAAInR,UAExF,IAAIxB,EAAeS,EAAQT,eAE3B,GAAIA,EAAagC,GAAG,QAChBxB,EAAKkV,gBAAgB/V,IAAMa,EAAKkV,gBAAgB7V,KAAO,MACpD,CACH,IAAI8V,EAAY3V,EAAazB,IAAI,cACjC,IAAIqX,EAAa5V,EAAazB,IAAI,eAClC,IAAIsX,GAAalY,GAAKmY,KAAKH,KAAehY,GAAKmY,KAAKF,GACpD,GAAIC,EAAW,CACX,IAAIE,EAAkBvW,GAAYiB,EAAQ,IAC1C,IAAIuV,EAAuBD,EAAgBlW,KAAOW,EAAKkV,gBAAgB7V,KAAOW,EAAK+U,gBAAgB1V,KACnG,IAAIoW,EAAsBF,EAAgBpW,IAAMa,EAAKkV,gBAAgB/V,IAAMa,EAAK+U,gBAAgB5V,IAEhGa,EAAK0V,sBAAwBF,EAAuB,EAAIA,EAAuB,EAC/ExV,EAAK2V,qBAAuBF,EAAsB,EAAIA,EAAsB,EAE5EzV,EAAK+U,gBAAgB1V,MAAQW,EAAK0V,sBAClC1V,EAAK+U,gBAAgB5V,KAAOa,EAAK2V,sBAIzC1V,EACKyC,SAAS3H,GAAsByI,IAAIuB,EAAEC,eAAeiB,OAEzDhN,EAAEqB,GAAMyD,IAAItC,EAAQsJ,EAAEC,cAAcjH,IAAItC,KAE5C6Y,KAAM,SAAUvP,GACZ,GAAIlG,KAAKsV,iBACL,OAEJ,IAAInU,EAAOnB,KACPsT,EAAMnS,EAAKkU,MACXjU,EAAUkS,EAAIlS,QACdF,EAAUoS,EAAIpS,QACdM,EAAWN,EAAQM,SACnBmJ,EAAYxJ,EAAKgV,gBACjBE,EAAkBlV,EAAKkV,gBACvBH,EAAkB/U,EAAK+U,gBACvBE,EAAcjV,EAAKiV,YACnBzG,EAAqB2D,EAAIlR,cAAgBkR,EAAIvM,UAC7CgQ,EAAMzc,EAAM+K,QAAQ6P,MAAM5B,EAAIlR,aAC9B4U,EAAgBrH,GAAsBoH,GAAOzD,EAAIlR,YAAYsF,aAAe4L,EAAIlR,YAAYiE,MAAQ/L,EAAM+K,QAAQwC,YAAc,EAChIoP,EAAetH,EAAqB,CAAErP,IAAKgT,EAAIlR,YAAYtB,YAAaN,KAAM8S,EAAIlR,YAAYrB,cAAgB,CAAET,IAAK,EAAGE,KAAM,GAC9HoL,EAAUC,EACVqL,EAAcC,EACdtY,EAAIc,KAAKC,IAAIsG,EAAErH,EAAEuY,SAAU,GAC3BC,EAAI1X,KAAKC,IAAIsG,EAAEmR,EAAED,SAAU,GAE3B,GAAIzM,EAAUjL,QAAQ,MAAQ,EAAG,CAE7B,GAAI4T,EAAIlR,aAAevD,EAAIuX,EAAY/P,OAASiN,EAAI9P,QAAUyT,EAAazW,KAAO6V,EAAgB7V,KAAOwW,EACrGpL,EAAW0H,EAAI9P,QAAUwT,EAAgBd,EAAgB1V,KAAO4V,EAAY/P,MAAQ4Q,EAAazW,UAEjGoL,EAAW/M,EAAIqX,EAAgB1V,KAAO6V,EAAgB7V,KAG1DY,EAAQnG,WAAWkE,EAAUyM,EAAU1K,EAAQgG,SAAUhG,EAAQ+F,gBAC9D,GAAI0D,EAAUjL,QAAQ,MAAQ,EAAG,CACpCyX,EAAcjB,EAAgB1V,KAAO4V,EAAY/P,MAAQgQ,EAAgB7V,KACzEoL,EAAWzM,EAAUgY,EAActY,EAAGqC,EAAQgG,SAAUhG,EAAQ+F,UAChEzF,EAAShB,KAAO2W,EAAcvL,EAAWyK,EAAgB7V,KAAOwW,GAAiB7V,EAAK0V,uBAAyB,GAAKI,EAAazW,KAEjI,GAAI8S,EAAIlR,aAAeZ,EAAShB,MAAQ8S,EAAIhQ,QAAS,CACjD9B,EAAShB,KAAO8S,EAAIhQ,QACpBsI,EAAWzM,EAAUgY,EAAcH,EAAgBxV,EAAShB,KAAO6V,EAAgB7V,KAAOyW,EAAazW,KAAMU,EAAQgG,SAAUhG,EAAQ+F,UAG3I7F,EAAQlC,IAAI,CACRsB,KAAMgB,EAAShB,KACf6F,MAAOuF,IAIf,IAAI0L,EAAeD,EACnB,GAAI/D,EAAIpS,QAAQ6D,OACZuS,GAAgBld,EAAEC,QAAQyG,YAE9B,GAAI6J,EAAUjL,QAAQ,MAAQ,EAAG,CAC7BmM,EAAYyL,EAAepB,EAAgB5V,IAAMa,EAAK8U,eAAiBI,EAAgB/V,IAEvF,GAAIgX,EAAelB,EAAY9P,OAASnF,EAAK8U,gBAAkB3C,EAAI/P,OAAS8S,EAAgB/V,IAAM2W,EAAa3W,IAC3GuL,EAAYyH,EAAI/P,OAAS2S,EAAgB5V,IAAM8V,EAAY9P,OAAS2Q,EAAa3W,IAGrFc,EAAQjG,YAAYgE,EAAU0M,EAAW3K,EAAQiG,UAAWjG,EAAQqF,iBACjE,GAAIoE,EAAUjL,QAAQ,MAAQ,EAAG,CACpCwX,EAAehB,EAAgB5V,IAAM8V,EAAY9P,OAAS+P,EAAgB/V,IAC1EuL,EAAY1M,EAAU+X,EAAeI,EAAcpW,EAAQiG,UAAWjG,EAAQqF,WAC9E/E,EAASlB,IAAM4W,EAAerL,EAAYwK,EAAgB/V,KAAOa,EAAK2V,sBAAwB,GAAKG,EAAa3W,IAEhH,GAAIkB,EAASlB,KAAOgT,EAAIjQ,QAAUiQ,EAAIlR,YAAa,CAC/CZ,EAASlB,IAAMgT,EAAIjQ,OACnBwI,EAAY1M,EAAU+X,EAAe1V,EAASlB,IAAM+V,EAAgB/V,IAAM2W,EAAa3W,IAAKY,EAAQiG,UAAWjG,EAAQqF,WAG3HnF,EAAQlC,IAAI,CACRoB,IAAKkB,EAASlB,IACdgG,OAAQuF,IAIhB,GAAID,EACA0H,EAAIpS,QAAQmF,MAAQuF,EAAW,KAEnC,GAAIC,EACAyH,EAAIpS,QAAQoF,OAASuF,EAAY,KAGrCyH,EAAIhL,UAEZoN,QAAS,SAAUxP,GACf,GAAIlG,KAAKsV,iBACL,OAGJ,IAAInU,EAAOnB,KACPsT,EAAMnS,EAAKkU,MACXjU,EAAUkS,EAAIlS,QAElBA,EACKyC,SAAS3H,GAAsByI,IAAIuB,EAAEC,eAAegK,OAEzD/V,EAAEqB,GAAMyD,IAAItC,EAAQ,IAEpB,GAAI0W,EAAI/N,cACJ+N,EAAI/N,cAAcgS,QAGtB,GAAIrR,EAAEoF,SAAW,GACblK,EAAQlC,IAAIiC,EAAK+U,iBACZhX,IAAIiC,EAAKiV,aAGlB9C,EAAIzN,QAAQvI,GAEZ,OAAO,OAEXoL,QAAS,WACL,GAAI1I,KAAK8E,WACL9E,KAAK8E,WAAW4D,UAGpB1I,KAAK8E,WAAa9E,KAAKqV,MAAQ,OAoBvCjM,GAAe4M,UAAY,CACvBR,UAAW,SAAUtP,GACjB,IAAIoN,EAAMtT,KAAKqV,MACXhT,EAAYiR,EAAIpS,QAAQmB,UACxBtD,EAAUuU,EAAIvU,QACdgD,EAAUhD,EAAQyD,KAAK,qBACvB6T,EAAkB/b,EAAMiS,UAAU+G,EAAInR,UAE1CnC,KAAKsV,iBAAmBhC,EAAIzN,QAAQtI,KAAe8E,EACnD,GAAIrC,KAAKsV,kBAAoBhC,EAAIrI,cAC7B,OAGJqI,EAAIkE,sBAAwBld,EAAMiS,UAAU+G,EAAIlS,QAAS,YAEzDkS,EAAImE,uBAAyB,CACzBjX,KAAM8S,EAAIpS,QAAQM,SAAShB,KAC3BF,IAAKgT,EAAIpS,QAAQM,SAASlB,KAG9BgT,EAAIoE,cAAgB,CAChBlX,KAAM0F,EAAErH,EAAE8Y,OAASrE,EAAIkE,sBAAsBhX,KAC7CF,IAAK4F,EAAEmR,EAAEM,OAASrE,EAAIkE,sBAAsBlX,KAGhDgT,EAAItM,oBACJ,IAAKsM,EAAIlR,YAAa,CAClB,GAAIL,EAAQC,OAAS,EACjBsR,EAAIhQ,QAAUrI,EAAW8G,GAAW9C,SAAS8C,EAAQ7C,IAAI,SAAU,IAAMjE,EAAW8D,QAEpFuU,EAAIhQ,QAAW,GAAKrI,EAAW8D,GAGnCuU,EAAIhQ,SAAW+S,EAAgB7V,KAC/B8S,EAAIjQ,QAAUgT,EAAgB/V,IAGlClG,EAAEsB,EAAUkR,SAASzK,SAASmR,EAAIlS,SAASlC,IAAI,CAAE6E,QAAS,IAE1DuP,EAAIlS,QAAQyC,SAAS3H,GAAsBkL,OAE3ChN,EAAEqB,GAAMyD,IAAItC,EAAQsJ,EAAEC,cAAcjH,IAAItC,KAG5C6Y,KAAM,SAAUvP,GACZ,IAAIoN,EAAMtT,KAAKqV,MACf,IAAI7T,EAAW8R,EAAIpS,QAAQM,SAC3B,IAAIoW,EAAOtE,EAAIpS,QAAQmB,UAAUuV,KACjC,IAAIpX,EACJ,IAAIF,EAEJ,GAAIN,KAAKsV,kBAAoBhC,EAAIrI,cAC7B,OAGJ,IAAK2M,GAAQA,EAAK1X,gBAAkB,IAAK,CACrCM,EAAO0F,EAAErH,EAAE8Y,OAASrE,EAAIoE,cAAclX,KAEtC,GAAI8S,EAAIlR,cAAgBkR,EAAIvM,UACxBvG,GAAQ8S,EAAIlR,YAAYrB,aAG5BS,EAAShB,KAAOrB,EAAUqB,EAAM8S,EAAIhQ,QAASgQ,EAAI9P,SAGrD,IAAKoU,GAAQA,EAAK1X,gBAAkB,IAAK,CACrCI,EAAM4F,EAAEmR,EAAEM,OAASrE,EAAIoE,cAAcpX,IAErC,GAAIgT,EAAIlR,cAAgBkR,EAAIvM,UACxBzG,GAAOgT,EAAIlR,YAAYtB,YAG3BU,EAASlB,IAAMnB,EAAUmB,EAAKgT,EAAIjQ,OAAQiQ,EAAI/P,QAGlD,GAAIjJ,EAAM+K,QAAQwS,WACdzd,EAAEkZ,EAAIlS,SAASlC,IACX,YAAa,cACZsC,EAAShB,KAAO8S,EAAImE,uBAAuBjX,MAAQ,QACnDgB,EAASlB,IAAMgT,EAAImE,uBAAuBnX,KAAO,YAGtDlG,EAAEkZ,EAAIlS,SAASlC,IAAIsC,IAK3BsW,YAAa,WACT,IAAIxE,EAAMtT,KAAKqV,MAEf/B,EAAIlS,QACCyC,SAAS3H,GAAsBwW,QAAQY,EAAIpS,QAAQgK,aAAaiH,MAChE3P,KAAKrG,GAAUuG,SAEpBtI,EAAEqB,GAAMyD,IAAItC,EAAQ,KAGxBmZ,WAAY,SAAU7P,GAClB,GAAIlG,KAAKsV,iBACL,OAEJtV,KAAK8X,cAEL5R,EAAEC,cAAcnD,QAAQnH,GAASqD,IAAIc,KAAKqV,MAAMmC,wBAGpD9B,QAAS,WACL,IAAIpC,EAAMtT,KAAKqV,MAEf,GAAIrV,KAAKsV,kBAAoBhC,EAAIrI,cAC7B,OAGJ7Q,EAAEkZ,EAAIlS,SACDlC,IAAIoU,EAAIpS,QAAQM,UAChBtC,IAAI,YAAa,IAEtBc,KAAK8X,cAELxE,EAAIzN,QAAQrI,GAEZ,OAAO,OAEXkL,QAAS,WACL,GAAI1I,KAAK8E,WACL9E,KAAK8E,WAAW4D,UAGpB1I,KAAK8E,WAAa9E,KAAKqV,MAAQ,OAIvC/a,EAAMI,GAAGqd,OAAO/W,IAIb3G,OAAOC,QArnElB,CAunEoB,mBAAVV,QAAwBA,OAAOoe,IAAMpe,OAAS,SAASqe,EAAIC,EAAIC,IAAMA,GAAMD"}